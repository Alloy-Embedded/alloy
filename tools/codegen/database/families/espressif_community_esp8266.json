{
  "family": "esp8266",
  "architecture": "arm-cortex-m3",
  "vendor": "Unknown",
  "mcus": {
    "esp8266": {
      "flash": {
        "size_kb": 64,
        "base_address": "0x08000000",
        "page_size_kb": 1
      },
      "ram": {
        "size_kb": 20,
        "base_address": "0x20000000"
      },
      "peripherals": {
        "GPIO": {
          "instances": [
            {
              "name": "DPORT",
              "base": "0x3FF00000"
            },
            {
              "name": "GPIO",
              "base": "0x60000300"
            }
          ],
          "registers": {
            "EDGE_INT_ENABLE": {
              "offset": "0x04",
              "size": 32,
              "description": "EDGE_INT_ENABLE"
            },
            "DPORT_CTL": {
              "offset": "0x14",
              "size": 32,
              "description": "DPORT_CTL"
            }
          },
          "bits": {
            "EDGE_INT_ENABLE": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "wdt_edge_int_enable": {
                "bit": 0,
                "description": "Enable the watchdog timer edge interrupt"
              },
              "timer1_edge_int_enable": {
                "bit": 1,
                "description": "Enable the timer1 edge interrupt"
              }
            },
            "DPORT_CTL": {
              "DPORT_CTL_DOUBLE_CLK": {
                "bit": 0,
                "description": "DPORT_CTL_DOUBLE_CLK"
              }
            }
          }
        },
        "EFUSE": {
          "instances": [
            {
              "name": "EFUSE",
              "base": "0x3FF00050"
            }
          ],
          "registers": {
            "EFUSE_DATA0": {
              "offset": "0x00",
              "size": 32,
              "description": "EFUSE_DATA0"
            },
            "EFUSE_DATA1": {
              "offset": "0x04",
              "size": 32,
              "description": "EFUSE_DATA1"
            },
            "EFUSE_DATA2": {
              "offset": "0x08",
              "size": 32,
              "description": "EFUSE_DATA2"
            },
            "EFUSE_DATA3": {
              "offset": "0x0C",
              "size": 32,
              "description": "EFUSE_DATA3"
            }
          },
          "bits": {
            "EFUSE_DATA0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "EFUSE_DATA1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "EFUSE_DATA2": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "EFUSE_DATA3": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            }
          }
        },
        "I2S": {
          "instances": [
            {
              "name": "I2S",
              "base": "0x60000E00"
            }
          ],
          "registers": {
            "I2STXFIFO": {
              "offset": "0x00",
              "size": 32,
              "description": "I2STXFIFO"
            },
            "I2SRXFIFO": {
              "offset": "0x04",
              "size": 32,
              "description": "I2SRXFIFO"
            },
            "I2SCONF": {
              "offset": "0x08",
              "size": 32,
              "description": "I2SCONF"
            },
            "I2SINT_RAW": {
              "offset": "0x0C",
              "size": 32,
              "description": "I2SINT_RAW"
            },
            "I2SINT_ST": {
              "offset": "0x10",
              "size": 32,
              "description": "I2SINT_ST"
            },
            "I2SINT_ENA": {
              "offset": "0x14",
              "size": 32,
              "description": "I2SINT_ENA"
            },
            "I2SINT_CLR": {
              "offset": "0x18",
              "size": 32,
              "description": "I2SINT_CLR"
            },
            "I2STIMING": {
              "offset": "0x1C",
              "size": 32,
              "description": "I2STIMING"
            },
            "I2S_FIFO_CONF": {
              "offset": "0x20",
              "size": 32,
              "description": "I2S_FIFO_CONF"
            },
            "I2SRXEOF_NUM": {
              "offset": "0x24",
              "size": 32,
              "description": "I2SRXEOF_NUM"
            },
            "I2SCONF_SIGLE_DATA": {
              "offset": "0x28",
              "size": 32,
              "description": "I2SCONF_SIGLE_DATA"
            }
          },
          "bits": {
            "I2STXFIFO": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "I2SRXFIFO": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "I2SCONF": {
              "I2S_BCK_DIV_NUM": {
                "bit": 22,
                "description": "I2S_BCK_DIV_NUM",
                "width": 6
              },
              "I2S_CLKM_DIV_NUM": {
                "bit": 16,
                "description": "I2S_CLKM_DIV_NUM",
                "width": 6
              },
              "I2S_BITS_MOD": {
                "bit": 12,
                "description": "I2S_BITS_MOD",
                "width": 4
              },
              "I2S_RECE_MSB_SHIFT": {
                "bit": 11,
                "description": "I2S_RECE_MSB_SHIFT"
              },
              "I2S_TRANS_MSB_SHIFT": {
                "bit": 10,
                "description": "I2S_TRANS_MSB_SHIFT"
              },
              "I2S_I2S_RX_START": {
                "bit": 9,
                "description": "I2S_I2S_RX_START"
              },
              "I2S_I2S_TX_START": {
                "bit": 8,
                "description": "I2S_I2S_TX_START"
              },
              "I2S_MSB_RIGHT": {
                "bit": 7,
                "description": "I2S_MSB_RIGHT"
              },
              "I2S_RIGHT_FIRST": {
                "bit": 6,
                "description": "I2S_RIGHT_FIRST"
              },
              "I2S_RECE_SLAVE_MOD": {
                "bit": 5,
                "description": "I2S_RECE_SLAVE_MOD"
              },
              "I2S_TRANS_SLAVE_MOD": {
                "bit": 4,
                "description": "I2S_TRANS_SLAVE_MOD"
              },
              "I2S_I2S_RX_FIFO_RESET": {
                "bit": 3,
                "description": "I2S_I2S_RX_FIFO_RESET"
              },
              "I2S_I2S_TX_FIFO_RESET": {
                "bit": 2,
                "description": "I2S_I2S_TX_FIFO_RESET"
              },
              "I2S_I2S_RX_RESET": {
                "bit": 1,
                "description": "I2S_I2S_RX_RESET"
              },
              "I2S_I2S_TX_RESET": {
                "bit": 0,
                "description": "I2S_I2S_TX_RESET"
              }
            },
            "I2SINT_RAW": {
              "I2S_I2S_TX_REMPTY_INT_RAW": {
                "bit": 5,
                "description": "I2S_I2S_TX_REMPTY_INT_RAW"
              },
              "I2S_I2S_TX_WFULL_INT_RAW": {
                "bit": 4,
                "description": "I2S_I2S_TX_WFULL_INT_RAW"
              },
              "I2S_I2S_RX_REMPTY_INT_RAW": {
                "bit": 3,
                "description": "I2S_I2S_RX_REMPTY_INT_RAW"
              },
              "I2S_I2S_RX_WFULL_INT_RAW": {
                "bit": 2,
                "description": "I2S_I2S_RX_WFULL_INT_RAW"
              },
              "I2S_I2S_TX_PUT_DATA_INT_RAW": {
                "bit": 1,
                "description": "I2S_I2S_TX_PUT_DATA_INT_RAW"
              },
              "I2S_I2S_RX_TAKE_DATA_INT_RAW": {
                "bit": 0,
                "description": "I2S_I2S_RX_TAKE_DATA_INT_RAW"
              }
            },
            "I2SINT_ST": {
              "I2S_I2S_TX_REMPTY_INT_ST": {
                "bit": 5,
                "description": "I2S_I2S_TX_REMPTY_INT_ST"
              },
              "I2S_I2S_TX_WFULL_INT_ST": {
                "bit": 4,
                "description": "I2S_I2S_TX_WFULL_INT_ST"
              },
              "I2S_I2S_RX_REMPTY_INT_ST": {
                "bit": 3,
                "description": "I2S_I2S_RX_REMPTY_INT_ST"
              },
              "I2S_I2S_RX_WFULL_INT_ST": {
                "bit": 2,
                "description": "I2S_I2S_RX_WFULL_INT_ST"
              },
              "I2S_I2S_TX_PUT_DATA_INT_ST": {
                "bit": 1,
                "description": "I2S_I2S_TX_PUT_DATA_INT_ST"
              },
              "I2S_I2S_RX_TAKE_DATA_INT_ST": {
                "bit": 0,
                "description": "I2S_I2S_RX_TAKE_DATA_INT_ST"
              }
            },
            "I2SINT_ENA": {
              "I2S_I2S_TX_REMPTY_INT_ENA": {
                "bit": 5,
                "description": "I2S_I2S_TX_REMPTY_INT_ENA"
              },
              "I2S_I2S_TX_WFULL_INT_ENA": {
                "bit": 4,
                "description": "I2S_I2S_TX_WFULL_INT_ENA"
              },
              "I2S_I2S_RX_REMPTY_INT_ENA": {
                "bit": 3,
                "description": "I2S_I2S_RX_REMPTY_INT_ENA"
              },
              "I2S_I2S_RX_WFULL_INT_ENA": {
                "bit": 2,
                "description": "I2S_I2S_RX_WFULL_INT_ENA"
              },
              "I2S_I2S_TX_PUT_DATA_INT_ENA": {
                "bit": 1,
                "description": "I2S_I2S_TX_PUT_DATA_INT_ENA"
              },
              "I2S_I2S_RX_TAKE_DATA_INT_ENA": {
                "bit": 0,
                "description": "I2S_I2S_RX_TAKE_DATA_INT_ENA"
              }
            },
            "I2SINT_CLR": {
              "I2S_I2S_TX_REMPTY_INT_CLR": {
                "bit": 5,
                "description": "I2S_I2S_TX_REMPTY_INT_CLR"
              },
              "I2S_I2S_TX_WFULL_INT_CLR": {
                "bit": 4,
                "description": "I2S_I2S_TX_WFULL_INT_CLR"
              },
              "I2S_I2S_RX_REMPTY_INT_CLR": {
                "bit": 3,
                "description": "I2S_I2S_RX_REMPTY_INT_CLR"
              },
              "I2S_I2S_RX_WFULL_INT_CLR": {
                "bit": 2,
                "description": "I2S_I2S_RX_WFULL_INT_CLR"
              },
              "I2S_I2S_PUT_DATA_INT_CLR": {
                "bit": 1,
                "description": "I2S_I2S_PUT_DATA_INT_CLR"
              },
              "I2S_I2S_TAKE_DATA_INT_CLR": {
                "bit": 0,
                "description": "I2S_I2S_TAKE_DATA_INT_CLR"
              }
            },
            "I2STIMING": {
              "I2S_TRANS_BCK_IN_INV": {
                "bit": 22,
                "description": "I2S_TRANS_BCK_IN_INV"
              },
              "I2S_RECE_DSYNC_SW": {
                "bit": 21,
                "description": "I2S_RECE_DSYNC_SW"
              },
              "I2S_TRANS_DSYNC_SW": {
                "bit": 20,
                "description": "I2S_TRANS_DSYNC_SW"
              },
              "I2S_RECE_BCK_OUT_DELAY": {
                "bit": 18,
                "description": "I2S_RECE_BCK_OUT_DELAY",
                "width": 2
              },
              "I2S_RECE_WS_OUT_DELAY": {
                "bit": 16,
                "description": "I2S_RECE_WS_OUT_DELAY",
                "width": 2
              },
              "I2S_TRANS_SD_OUT_DELAY": {
                "bit": 14,
                "description": "I2S_TRANS_SD_OUT_DELAY",
                "width": 2
              },
              "I2S_TRANS_WS_OUT_DELAY": {
                "bit": 12,
                "description": "I2S_TRANS_WS_OUT_DELAY",
                "width": 2
              },
              "I2S_TRANS_BCK_OUT_DELAY": {
                "bit": 10,
                "description": "I2S_TRANS_BCK_OUT_DELAY",
                "width": 2
              },
              "I2S_RECE_SD_IN_DELAY": {
                "bit": 8,
                "description": "I2S_RECE_SD_IN_DELAY",
                "width": 2
              },
              "I2S_RECE_WS_IN_DELAY": {
                "bit": 6,
                "description": "I2S_RECE_WS_IN_DELAY",
                "width": 2
              },
              "I2S_RECE_BCK_IN_DELAY": {
                "bit": 4,
                "description": "I2S_RECE_BCK_IN_DELAY",
                "width": 2
              },
              "I2S_TRANS_WS_IN_DELAY": {
                "bit": 2,
                "description": "I2S_TRANS_WS_IN_DELAY",
                "width": 2
              },
              "I2S_TRANS_BCK_IN_DELAY": {
                "bit": 0,
                "description": "I2S_TRANS_BCK_IN_DELAY",
                "width": 2
              }
            },
            "I2S_FIFO_CONF": {
              "I2S_I2S_RX_FIFO_MOD": {
                "bit": 16,
                "description": "I2S_I2S_RX_FIFO_MOD",
                "width": 3
              },
              "I2S_I2S_TX_FIFO_MOD": {
                "bit": 13,
                "description": "I2S_I2S_TX_FIFO_MOD",
                "width": 3
              },
              "I2S_I2S_DSCR_EN": {
                "bit": 12,
                "description": "I2S_I2S_DSCR_EN"
              },
              "I2S_I2S_TX_DATA_NUM": {
                "bit": 6,
                "description": "I2S_I2S_TX_DATA_NUM",
                "width": 6
              },
              "I2S_I2S_RX_DATA_NUM": {
                "bit": 0,
                "description": "I2S_I2S_RX_DATA_NUM",
                "width": 6
              }
            },
            "I2SRXEOF_NUM": {
              "I2S_I2S_RX_EOF_NUM": {
                "bit": 0,
                "description": "I2S_I2S_RX_EOF_NUM",
                "width": 32
              }
            },
            "I2SCONF_SIGLE_DATA": {
              "I2S_I2S_SIGLE_DATA": {
                "bit": 0,
                "description": "I2S_I2S_SIGLE_DATA",
                "width": 32
              }
            }
          }
        },
        "IO": {
          "instances": [
            {
              "name": "IO_MUX",
              "base": "0x60000800"
            }
          ],
          "registers": {
            "IO_MUX_CONF": {
              "offset": "0x00",
              "size": 32,
              "description": "IO_MUX_CONF"
            },
            "IO_MUX_MTDI": {
              "offset": "0x04",
              "size": 32,
              "description": "IO_MUX_MTDI"
            },
            "IO_MUX_MTCK": {
              "offset": "0x08",
              "size": 32,
              "description": "IO_MUX_MTCK"
            },
            "IO_MUX_MTMS": {
              "offset": "0x0C",
              "size": 32,
              "description": "IO_MUX_MTMS"
            },
            "IO_MUX_MTDO": {
              "offset": "0x10",
              "size": 32,
              "description": "IO_MUX_MTDO"
            },
            "IO_MUX_U0RXD": {
              "offset": "0x14",
              "size": 32,
              "description": "IO_MUX_U0RXD"
            },
            "IO_MUX_U0TXD": {
              "offset": "0x18",
              "size": 32,
              "description": "IO_MUX_U0TXD"
            },
            "IO_MUX_SD_CLK": {
              "offset": "0x1C",
              "size": 32,
              "description": "IO_MUX_SD_CLK"
            },
            "IO_MUX_SD_DATA0": {
              "offset": "0x20",
              "size": 32,
              "description": "IO_MUX_SD_DATA0"
            },
            "IO_MUX_SD_DATA1": {
              "offset": "0x24",
              "size": 32,
              "description": "IO_MUX_SD_DATA1"
            },
            "IO_MUX_SD_DATA2": {
              "offset": "0x28",
              "size": 32,
              "description": "IO_MUX_SD_DATA2"
            },
            "IO_MUX_SD_DATA3": {
              "offset": "0x2C",
              "size": 32,
              "description": "IO_MUX_SD_DATA3"
            },
            "IO_MUX_SD_CMD": {
              "offset": "0x30",
              "size": 32,
              "description": "IO_MUX_SD_CMD"
            },
            "IO_MUX_GPIO0": {
              "offset": "0x34",
              "size": 32,
              "description": "IO_MUX_GPIO0"
            },
            "IO_MUX_GPIO2": {
              "offset": "0x38",
              "size": 32,
              "description": "IO_MUX_GPIO2"
            },
            "IO_MUX_GPIO4": {
              "offset": "0x3C",
              "size": 32,
              "description": "IO_MUX_GPIO4"
            },
            "IO_MUX_GPIO5": {
              "offset": "0x40",
              "size": 32,
              "description": "IO_MUX_GPIO5"
            }
          },
          "bits": {
            "IO_MUX_CONF": {
              "SPI0_CLK_EQU_SYS_CLK": {
                "bit": 8,
                "description": "SPI0_CLK_EQU_SYS_CLK"
              },
              "SPI1_CLK_EQU_SYS_CLK": {
                "bit": 9,
                "description": "SPI1_CLK_EQU_SYS_CLK"
              }
            },
            "IO_MUX_MTDI": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_MTCK": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_MTMS": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_MTDO": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_U0RXD": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_U0TXD": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_CLK": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_DATA0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_DATA1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_DATA2": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_DATA3": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_SD_CMD": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_GPIO0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_GPIO2": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_GPIO4": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            },
            "IO_MUX_GPIO5": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              },
              "FUNCTION_SELECT_LOW_BITS": {
                "bit": 4,
                "description": "configures IO_MUX function, bottom 2 bits",
                "width": 2
              },
              "FUNCTION_SELECT_HIGH_BIT": {
                "bit": 8,
                "description": "configures IO_MUX function, upper bit"
              },
              "PULLUP": {
                "bit": 7,
                "description": "configures pull up"
              },
              "SLEEP_PULLUP": {
                "bit": 3,
                "description": "configures pull up during sleep mode"
              },
              "SLEEP_ENABLE": {
                "bit": 0,
                "description": "configures output enable during sleep mode"
              }
            }
          }
        },
        "RTC": {
          "instances": [
            {
              "name": "RTC",
              "base": "0x60000700"
            }
          ],
          "registers": {
            "RTC_STORE0": {
              "offset": "0x30",
              "size": 32,
              "description": "RTC_STORE0"
            },
            "RTC_STATE1": {
              "offset": "0x14",
              "size": 32,
              "description": "RTC_STATE1"
            }
          },
          "bits": {
            "RTC_STORE0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "RTC_STATE1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            }
          }
        },
        "SLC": {
          "instances": [
            {
              "name": "SLC",
              "base": "0x60000B00"
            }
          ],
          "registers": {
            "SLC_CONF0": {
              "offset": "0x00",
              "size": 32,
              "description": "SLC_CONF0"
            },
            "SLC_INT_RAW": {
              "offset": "0x04",
              "size": 32,
              "description": "SLC_INT_RAW"
            },
            "SLC_INT_STATUS": {
              "offset": "0x08",
              "size": 32,
              "description": "SLC_INT_STATUS"
            },
            "SLC_INT_ENA": {
              "offset": "0x0C",
              "size": 32,
              "description": "SLC_INT_ENA"
            },
            "SLC_INT_CLR": {
              "offset": "0x10",
              "size": 32,
              "description": "SLC_INT_CLR"
            },
            "SLC_RX_STATUS": {
              "offset": "0x14",
              "size": 32,
              "description": "SLC_RX_STATUS"
            },
            "SLC_RX_FIFO_PUSH": {
              "offset": "0x18",
              "size": 32,
              "description": "SLC_RX_FIFO_PUSH"
            },
            "SLC_TX_STATUS": {
              "offset": "0x1C",
              "size": 32,
              "description": "SLC_TX_STATUS"
            },
            "SLC_TX_FIFO_POP": {
              "offset": "0x20",
              "size": 32,
              "description": "SLC_TX_FIFO_POP"
            },
            "SLC_RX_LINK": {
              "offset": "0x24",
              "size": 32,
              "description": "SLC_RX_LINK"
            },
            "SLC_TX_LINK": {
              "offset": "0x28",
              "size": 32,
              "description": "SLC_TX_LINK"
            },
            "SLC_INTVEC_TOHOST": {
              "offset": "0x2C",
              "size": 32,
              "description": "SLC_INTVEC_TOHOST"
            },
            "SLC_TOKEN0": {
              "offset": "0x30",
              "size": 32,
              "description": "SLC_TOKEN0"
            },
            "SLC_TOKEN1": {
              "offset": "0x34",
              "size": 32,
              "description": "SLC_TOKEN1"
            },
            "SLC_CONF1": {
              "offset": "0x38",
              "size": 32,
              "description": "SLC_CONF1"
            },
            "SLC_STATE0": {
              "offset": "0x3C",
              "size": 32,
              "description": "SLC_STATE0"
            },
            "SLC_STATE1": {
              "offset": "0x40",
              "size": 32,
              "description": "SLC_STATE1"
            },
            "SLC_BRIDGE_CONF": {
              "offset": "0x44",
              "size": 32,
              "description": "SLC_BRIDGE_CONF"
            },
            "SLC_RX_EOF_DES_ADDR": {
              "offset": "0x48",
              "size": 32,
              "description": "SLC_RX_EOF_DES_ADDR"
            },
            "SLC_TX_EOF_DES_ADDR": {
              "offset": "0x4C",
              "size": 32,
              "description": "SLC_TX_EOF_DES_ADDR"
            },
            "SLC_RX_EOF_BFR_DES_ADDR": {
              "offset": "0x50",
              "size": 32,
              "description": "SLC_RX_EOF_BFR_DES_ADDR"
            },
            "SLC_AHB_TEST": {
              "offset": "0x54",
              "size": 32,
              "description": "SLC_AHB_TEST"
            },
            "SLC_SDIO_ST": {
              "offset": "0x58",
              "size": 32,
              "description": "SLC_SDIO_ST"
            },
            "SLC_RX_DSCR_CONF": {
              "offset": "0x5C",
              "size": 32,
              "description": "SLC_RX_DSCR_CONF"
            },
            "SLC_TXLINK_DSCR": {
              "offset": "0x60",
              "size": 32,
              "description": "SLC_TXLINK_DSCR"
            },
            "SLC_TXLINK_DSCR_BF0": {
              "offset": "0x64",
              "size": 32,
              "description": "SLC_TXLINK_DSCR_BF0"
            },
            "SLC_TXLINK_DSCR_BF1": {
              "offset": "0x68",
              "size": 32,
              "description": "SLC_TXLINK_DSCR_BF1"
            },
            "SLC_RXLINK_DSCR": {
              "offset": "0x6C",
              "size": 32,
              "description": "SLC_RXLINK_DSCR"
            },
            "SLC_RXLINK_DSCR_BF0": {
              "offset": "0x70",
              "size": 32,
              "description": "SLC_RXLINK_DSCR_BF0"
            },
            "SLC_RXLINK_DSCR_BF1": {
              "offset": "0x74",
              "size": 32,
              "description": "SLC_RXLINK_DSCR_BF1"
            },
            "SLC_DATE": {
              "offset": "0x78",
              "size": 32,
              "description": "SLC_DATE"
            },
            "SLC_ID": {
              "offset": "0x7C",
              "size": 32,
              "description": "SLC_ID"
            }
          },
          "bits": {
            "SLC_CONF0": {
              "SLC_MODE": {
                "bit": 12,
                "description": "SLC_MODE",
                "width": 2
              },
              "SLC_DATA_BURST_EN": {
                "bit": 9,
                "description": "SLC_DATA_BURST_EN"
              },
              "SLC_DSCR_BURST_EN": {
                "bit": 8,
                "description": "SLC_DSCR_BURST_EN"
              },
              "SLC_RX_NO_RESTART_CLR": {
                "bit": 7,
                "description": "SLC_RX_NO_RESTART_CLR"
              },
              "SLC_RX_AUTO_WRBACK": {
                "bit": 6,
                "description": "SLC_RX_AUTO_WRBACK"
              },
              "SLC_RX_LOOP_TEST": {
                "bit": 5,
                "description": "SLC_RX_LOOP_TEST"
              },
              "SLC_TX_LOOP_TEST": {
                "bit": 4,
                "description": "SLC_TX_LOOP_TEST"
              },
              "SLC_AHBM_RST": {
                "bit": 3,
                "description": "SLC_AHBM_RST"
              },
              "SLC_AHBM_FIFO_RST": {
                "bit": 2,
                "description": "SLC_AHBM_FIFO_RST"
              },
              "SLC_RXLINK_RST": {
                "bit": 1,
                "description": "SLC_RXLINK_RST"
              },
              "SLC_TXLINK_RST": {
                "bit": 0,
                "description": "SLC_TXLINK_RST"
              }
            },
            "SLC_INT_RAW": {
              "SLC_TX_DSCR_EMPTY_INT_RAW": {
                "bit": 21,
                "description": "SLC_TX_DSCR_EMPTY_INT_RAW"
              },
              "SLC_RX_DSCR_ERR_INT_RAW": {
                "bit": 20,
                "description": "SLC_RX_DSCR_ERR_INT_RAW"
              },
              "SLC_TX_DSCR_ERR_INT_RAW": {
                "bit": 19,
                "description": "SLC_TX_DSCR_ERR_INT_RAW"
              },
              "SLC_TOHOST_INT_RAW": {
                "bit": 18,
                "description": "SLC_TOHOST_INT_RAW"
              },
              "SLC_RX_EOF_INT_RAW": {
                "bit": 17,
                "description": "SLC_RX_EOF_INT_RAW"
              },
              "SLC_RX_DONE_INT_RAW": {
                "bit": 16,
                "description": "SLC_RX_DONE_INT_RAW"
              },
              "SLC_TX_EOF_INT_RAW": {
                "bit": 15,
                "description": "SLC_TX_EOF_INT_RAW"
              },
              "SLC_TX_DONE_INT_RAW": {
                "bit": 14,
                "description": "SLC_TX_DONE_INT_RAW"
              },
              "SLC_TOKEN1_1TO0_INT_RAW": {
                "bit": 13,
                "description": "SLC_TOKEN1_1TO0_INT_RAW"
              },
              "SLC_TOKEN0_1TO0_INT_RAW": {
                "bit": 12,
                "description": "SLC_TOKEN0_1TO0_INT_RAW"
              },
              "SLC_TX_OVF_INT_RAW": {
                "bit": 11,
                "description": "SLC_TX_OVF_INT_RAW"
              },
              "SLC_RX_UDF_INT_RAW": {
                "bit": 10,
                "description": "SLC_RX_UDF_INT_RAW"
              },
              "SLC_TX_START_INT_RAW": {
                "bit": 9,
                "description": "SLC_TX_START_INT_RAW"
              },
              "SLC_RX_START_INT_RAW": {
                "bit": 8,
                "description": "SLC_RX_START_INT_RAW"
              },
              "SLC_FRHOST_BIT7_INT_RAW": {
                "bit": 7,
                "description": "SLC_FRHOST_BIT7_INT_RAW"
              },
              "SLC_FRHOST_BIT6_INT_RAW": {
                "bit": 6,
                "description": "SLC_FRHOST_BIT6_INT_RAW"
              },
              "SLC_FRHOST_BIT5_INT_RAW": {
                "bit": 5,
                "description": "SLC_FRHOST_BIT5_INT_RAW"
              },
              "SLC_FRHOST_BIT4_INT_RAW": {
                "bit": 4,
                "description": "SLC_FRHOST_BIT4_INT_RAW"
              },
              "SLC_FRHOST_BIT3_INT_RAW": {
                "bit": 3,
                "description": "SLC_FRHOST_BIT3_INT_RAW"
              },
              "SLC_FRHOST_BIT2_INT_RAW": {
                "bit": 2,
                "description": "SLC_FRHOST_BIT2_INT_RAW"
              },
              "SLC_FRHOST_BIT1_INT_RAW": {
                "bit": 1,
                "description": "SLC_FRHOST_BIT1_INT_RAW"
              },
              "SLC_FRHOST_BIT0_INT_RAW": {
                "bit": 0,
                "description": "SLC_FRHOST_BIT0_INT_RAW"
              }
            },
            "SLC_INT_STATUS": {
              "SLC_TX_DSCR_EMPTY_INT_ST": {
                "bit": 21,
                "description": "SLC_TX_DSCR_EMPTY_INT_ST"
              },
              "SLC_RX_DSCR_ERR_INT_ST": {
                "bit": 20,
                "description": "SLC_RX_DSCR_ERR_INT_ST"
              },
              "SLC_TX_DSCR_ERR_INT_ST": {
                "bit": 19,
                "description": "SLC_TX_DSCR_ERR_INT_ST"
              },
              "SLC_TOHOST_INT_ST": {
                "bit": 18,
                "description": "SLC_TOHOST_INT_ST"
              },
              "SLC_RX_EOF_INT_ST": {
                "bit": 17,
                "description": "SLC_RX_EOF_INT_ST"
              },
              "SLC_RX_DONE_INT_ST": {
                "bit": 16,
                "description": "SLC_RX_DONE_INT_ST"
              },
              "SLC_TX_EOF_INT_ST": {
                "bit": 15,
                "description": "SLC_TX_EOF_INT_ST"
              },
              "SLC_TX_DONE_INT_ST": {
                "bit": 14,
                "description": "SLC_TX_DONE_INT_ST"
              },
              "SLC_TOKEN1_1TO0_INT_ST": {
                "bit": 13,
                "description": "SLC_TOKEN1_1TO0_INT_ST"
              },
              "SLC_TOKEN0_1TO0_INT_ST": {
                "bit": 12,
                "description": "SLC_TOKEN0_1TO0_INT_ST"
              },
              "SLC_TX_OVF_INT_ST": {
                "bit": 11,
                "description": "SLC_TX_OVF_INT_ST"
              },
              "SLC_RX_UDF_INT_ST": {
                "bit": 10,
                "description": "SLC_RX_UDF_INT_ST"
              },
              "SLC_TX_START_INT_ST": {
                "bit": 9,
                "description": "SLC_TX_START_INT_ST"
              },
              "SLC_RX_START_INT_ST": {
                "bit": 8,
                "description": "SLC_RX_START_INT_ST"
              },
              "SLC_FRHOST_BIT7_INT_ST": {
                "bit": 7,
                "description": "SLC_FRHOST_BIT7_INT_ST"
              },
              "SLC_FRHOST_BIT6_INT_ST": {
                "bit": 6,
                "description": "SLC_FRHOST_BIT6_INT_ST"
              },
              "SLC_FRHOST_BIT5_INT_ST": {
                "bit": 5,
                "description": "SLC_FRHOST_BIT5_INT_ST"
              },
              "SLC_FRHOST_BIT4_INT_ST": {
                "bit": 4,
                "description": "SLC_FRHOST_BIT4_INT_ST"
              },
              "SLC_FRHOST_BIT3_INT_ST": {
                "bit": 3,
                "description": "SLC_FRHOST_BIT3_INT_ST"
              },
              "SLC_FRHOST_BIT2_INT_ST": {
                "bit": 2,
                "description": "SLC_FRHOST_BIT2_INT_ST"
              },
              "SLC_FRHOST_BIT1_INT_ST": {
                "bit": 1,
                "description": "SLC_FRHOST_BIT1_INT_ST"
              },
              "SLC_FRHOST_BIT0_INT_ST": {
                "bit": 0,
                "description": "SLC_FRHOST_BIT0_INT_ST"
              }
            },
            "SLC_INT_ENA": {
              "SLC_TX_DSCR_EMPTY_INT_ENA": {
                "bit": 21,
                "description": "SLC_TX_DSCR_EMPTY_INT_ENA"
              },
              "SLC_RX_DSCR_ERR_INT_ENA": {
                "bit": 20,
                "description": "SLC_RX_DSCR_ERR_INT_ENA"
              },
              "SLC_TX_DSCR_ERR_INT_ENA": {
                "bit": 19,
                "description": "SLC_TX_DSCR_ERR_INT_ENA"
              },
              "SLC_TOHOST_INT_ENA": {
                "bit": 18,
                "description": "SLC_TOHOST_INT_ENA"
              },
              "SLC_RX_EOF_INT_ENA": {
                "bit": 17,
                "description": "SLC_RX_EOF_INT_ENA"
              },
              "SLC_RX_DONE_INT_ENA": {
                "bit": 16,
                "description": "SLC_RX_DONE_INT_ENA"
              },
              "SLC_TX_EOF_INT_ENA": {
                "bit": 15,
                "description": "SLC_TX_EOF_INT_ENA"
              },
              "SLC_TX_DONE_INT_ENA": {
                "bit": 14,
                "description": "SLC_TX_DONE_INT_ENA"
              },
              "SLC_TOKEN1_1TO0_INT_ENA": {
                "bit": 13,
                "description": "SLC_TOKEN1_1TO0_INT_ENA"
              },
              "SLC_TOKEN0_1TO0_INT_ENA": {
                "bit": 12,
                "description": "SLC_TOKEN0_1TO0_INT_ENA"
              },
              "SLC_TX_OVF_INT_ENA": {
                "bit": 11,
                "description": "SLC_TX_OVF_INT_ENA"
              },
              "SLC_RX_UDF_INT_ENA": {
                "bit": 10,
                "description": "SLC_RX_UDF_INT_ENA"
              },
              "SLC_TX_START_INT_ENA": {
                "bit": 9,
                "description": "SLC_TX_START_INT_ENA"
              },
              "SLC_RX_START_INT_ENA": {
                "bit": 8,
                "description": "SLC_RX_START_INT_ENA"
              },
              "SLC_FRHOST_BIT7_INT_ENA": {
                "bit": 7,
                "description": "SLC_FRHOST_BIT7_INT_ENA"
              },
              "SLC_FRHOST_BIT6_INT_ENA": {
                "bit": 6,
                "description": "SLC_FRHOST_BIT6_INT_ENA"
              },
              "SLC_FRHOST_BIT5_INT_ENA": {
                "bit": 5,
                "description": "SLC_FRHOST_BIT5_INT_ENA"
              },
              "SLC_FRHOST_BIT4_INT_ENA": {
                "bit": 4,
                "description": "SLC_FRHOST_BIT4_INT_ENA"
              },
              "SLC_FRHOST_BIT3_INT_ENA": {
                "bit": 3,
                "description": "SLC_FRHOST_BIT3_INT_ENA"
              },
              "SLC_FRHOST_BIT2_INT_ENA": {
                "bit": 2,
                "description": "SLC_FRHOST_BIT2_INT_ENA"
              },
              "SLC_FRHOST_BIT1_INT_ENA": {
                "bit": 1,
                "description": "SLC_FRHOST_BIT1_INT_ENA"
              },
              "SLC_FRHOST_BIT0_INT_ENA": {
                "bit": 0,
                "description": "SLC_FRHOST_BIT0_INT_ENA"
              }
            },
            "SLC_INT_CLR": {
              "SLC_TX_DSCR_EMPTY_INT_CLR": {
                "bit": 21,
                "description": "SLC_TX_DSCR_EMPTY_INT_CLR"
              },
              "SLC_RX_DSCR_ERR_INT_CLR": {
                "bit": 20,
                "description": "SLC_RX_DSCR_ERR_INT_CLR"
              },
              "SLC_TX_DSCR_ERR_INT_CLR": {
                "bit": 19,
                "description": "SLC_TX_DSCR_ERR_INT_CLR"
              },
              "SLC_TOHOST_INT_CLR": {
                "bit": 18,
                "description": "SLC_TOHOST_INT_CLR"
              },
              "SLC_RX_EOF_INT_CLR": {
                "bit": 17,
                "description": "SLC_RX_EOF_INT_CLR"
              },
              "SLC_RX_DONE_INT_CLR": {
                "bit": 16,
                "description": "SLC_RX_DONE_INT_CLR"
              },
              "SLC_TX_EOF_INT_CLR": {
                "bit": 15,
                "description": "SLC_TX_EOF_INT_CLR"
              },
              "SLC_TX_DONE_INT_CLR": {
                "bit": 14,
                "description": "SLC_TX_DONE_INT_CLR"
              },
              "SLC_TOKEN1_1TO0_INT_CLR": {
                "bit": 13,
                "description": "SLC_TOKEN1_1TO0_INT_CLR"
              },
              "SLC_TOKEN0_1TO0_INT_CLR": {
                "bit": 12,
                "description": "SLC_TOKEN0_1TO0_INT_CLR"
              },
              "SLC_TX_OVF_INT_CLR": {
                "bit": 11,
                "description": "SLC_TX_OVF_INT_CLR"
              },
              "SLC_RX_UDF_INT_CLR": {
                "bit": 10,
                "description": "SLC_RX_UDF_INT_CLR"
              },
              "SLC_TX_START_INT_CLR": {
                "bit": 9,
                "description": "SLC_TX_START_INT_CLR"
              },
              "SLC_RX_START_INT_CLR": {
                "bit": 8,
                "description": "SLC_RX_START_INT_CLR"
              },
              "SLC_FRHOST_BIT7_INT_CLR": {
                "bit": 7,
                "description": "SLC_FRHOST_BIT7_INT_CLR"
              },
              "SLC_FRHOST_BIT6_INT_CLR": {
                "bit": 6,
                "description": "SLC_FRHOST_BIT6_INT_CLR"
              },
              "SLC_FRHOST_BIT5_INT_CLR": {
                "bit": 5,
                "description": "SLC_FRHOST_BIT5_INT_CLR"
              },
              "SLC_FRHOST_BIT4_INT_CLR": {
                "bit": 4,
                "description": "SLC_FRHOST_BIT4_INT_CLR"
              },
              "SLC_FRHOST_BIT3_INT_CLR": {
                "bit": 3,
                "description": "SLC_FRHOST_BIT3_INT_CLR"
              },
              "SLC_FRHOST_BIT2_INT_CLR": {
                "bit": 2,
                "description": "SLC_FRHOST_BIT2_INT_CLR"
              },
              "SLC_FRHOST_BIT1_INT_CLR": {
                "bit": 1,
                "description": "SLC_FRHOST_BIT1_INT_CLR"
              },
              "SLC_FRHOST_BIT0_INT_CLR": {
                "bit": 0,
                "description": "SLC_FRHOST_BIT0_INT_CLR"
              }
            },
            "SLC_RX_STATUS": {
              "SLC_RX_EMPTY": {
                "bit": 1,
                "description": "SLC_RX_EMPTY"
              },
              "SLC_RX_FULL": {
                "bit": 0,
                "description": "SLC_RX_FULL"
              }
            },
            "SLC_RX_FIFO_PUSH": {
              "SLC_RXFIFO_PUSH": {
                "bit": 16,
                "description": "SLC_RXFIFO_PUSH"
              },
              "SLC_RXFIFO_WDATA": {
                "bit": 0,
                "description": "SLC_RXFIFO_WDATA",
                "width": 9
              }
            },
            "SLC_TX_STATUS": {
              "SLC_TX_EMPTY": {
                "bit": 1,
                "description": "SLC_TX_EMPTY"
              },
              "SLC_TX_FULL": {
                "bit": 0,
                "description": "SLC_TX_FULL"
              }
            },
            "SLC_TX_FIFO_POP": {
              "SLC_TXFIFO_POP": {
                "bit": 16,
                "description": "SLC_TXFIFO_POP"
              },
              "SLC_TXFIFO_RDATA": {
                "bit": 0,
                "description": "SLC_TXFIFO_RDATA",
                "width": 11
              }
            },
            "SLC_RX_LINK": {
              "SLC_RXLINK_PARK": {
                "bit": 31,
                "description": "SLC_RXLINK_PARK"
              },
              "SLC_RXLINK_RESTART": {
                "bit": 30,
                "description": "SLC_RXLINK_RESTART"
              },
              "SLC_RXLINK_START": {
                "bit": 29,
                "description": "SLC_RXLINK_START"
              },
              "SLC_RXLINK_STOP": {
                "bit": 28,
                "description": "SLC_RXLINK_STOP"
              },
              "SLC_RXLINK_ADDR": {
                "bit": 0,
                "description": "SLC_RXLINK_ADDR",
                "width": 20
              }
            },
            "SLC_TX_LINK": {
              "SLC_TXLINK_PARK": {
                "bit": 31,
                "description": "SLC_TXLINK_PARK"
              },
              "SLC_TXLINK_RESTART": {
                "bit": 30,
                "description": "SLC_TXLINK_RESTART"
              },
              "SLC_TXLINK_START": {
                "bit": 29,
                "description": "SLC_TXLINK_START"
              },
              "SLC_TXLINK_STOP": {
                "bit": 28,
                "description": "SLC_TXLINK_STOP"
              },
              "SLC_TXLINK_ADDR": {
                "bit": 0,
                "description": "SLC_TXLINK_ADDR",
                "width": 20
              }
            },
            "SLC_INTVEC_TOHOST": {
              "SLC_TOHOST_INTVEC": {
                "bit": 0,
                "description": "SLC_TOHOST_INTVEC",
                "width": 8
              }
            },
            "SLC_TOKEN0": {
              "SLC_TOKEN0": {
                "bit": 16,
                "description": "SLC_TOKEN0",
                "width": 12
              },
              "SLC_TOKEN0_LOCAL_INC_MORE": {
                "bit": 14,
                "description": "SLC_TOKEN0_LOCAL_INC_MORE"
              },
              "SLC_TOKEN0_LOCAL_INC": {
                "bit": 13,
                "description": "SLC_TOKEN0_LOCAL_INC"
              },
              "SLC_TOKEN0_LOCAL_WR": {
                "bit": 12,
                "description": "SLC_TOKEN0_LOCAL_WR"
              },
              "SLC_TOKEN0_LOCAL_WDATA": {
                "bit": 0,
                "description": "SLC_TOKEN0_LOCAL_WDATA",
                "width": 12
              }
            },
            "SLC_TOKEN1": {
              "SLC_TOKEN1": {
                "bit": 16,
                "description": "SLC_TOKEN1",
                "width": 12
              },
              "SLC_TOKEN1_LOCAL_INC_MORE": {
                "bit": 14,
                "description": "SLC_TOKEN1_LOCAL_INC_MORE"
              },
              "SLC_TOKEN1_LOCAL_INC": {
                "bit": 13,
                "description": "SLC_TOKEN1_LOCAL_INC"
              },
              "SLC_TOKEN1_LOCAL_WR": {
                "bit": 12,
                "description": "SLC_TOKEN1_LOCAL_WR"
              },
              "SLC_TOKEN1_LOCAL_WDATA": {
                "bit": 0,
                "description": "SLC_TOKEN1_LOCAL_WDATA",
                "width": 12
              }
            },
            "SLC_CONF1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_STATE0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_STATE1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_BRIDGE_CONF": {
              "SLC_TX_PUSH_IDLE_NUM": {
                "bit": 16,
                "description": "SLC_TX_PUSH_IDLE_NUM",
                "width": 16
              },
              "SLC_TX_DUMMY_MODE": {
                "bit": 12,
                "description": "SLC_TX_DUMMY_MODE"
              },
              "SLC_FIFO_MAP_ENA": {
                "bit": 8,
                "description": "SLC_FIFO_MAP_ENA",
                "width": 4
              },
              "SLC_TXEOF_ENA": {
                "bit": 0,
                "description": "SLC_TXEOF_ENA",
                "width": 6
              }
            },
            "SLC_RX_EOF_DES_ADDR": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_TX_EOF_DES_ADDR": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_RX_EOF_BFR_DES_ADDR": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_AHB_TEST": {
              "SLC_AHB_TESTADDR": {
                "bit": 4,
                "description": "SLC_AHB_TESTADDR",
                "width": 2
              },
              "SLC_AHB_TESTMODE": {
                "bit": 0,
                "description": "SLC_AHB_TESTMODE",
                "width": 3
              }
            },
            "SLC_SDIO_ST": {
              "SLC_BUS_ST": {
                "bit": 12,
                "description": "SLC_BUS_ST",
                "width": 3
              },
              "SLC_SDIO_WAKEUP": {
                "bit": 8,
                "description": "SLC_SDIO_WAKEUP"
              },
              "SLC_FUNC_ST": {
                "bit": 4,
                "description": "SLC_FUNC_ST",
                "width": 4
              },
              "SLC_CMD_ST": {
                "bit": 0,
                "description": "SLC_CMD_ST",
                "width": 3
              }
            },
            "SLC_RX_DSCR_CONF": {
              "SLC_INFOR_NO_REPLACE": {
                "bit": 9,
                "description": "SLC_INFOR_NO_REPLACE"
              },
              "SLC_TOKEN_NO_REPLACE": {
                "bit": 8,
                "description": "SLC_TOKEN_NO_REPLACE"
              }
            },
            "SLC_TXLINK_DSCR": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_TXLINK_DSCR_BF0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_TXLINK_DSCR_BF1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_RXLINK_DSCR": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_RXLINK_DSCR_BF0": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_RXLINK_DSCR_BF1": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_DATE": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "SLC_ID": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            }
          }
        },
        "SPI": {
          "instances": [
            {
              "name": "SPI0",
              "base": "0x60000200"
            },
            {
              "name": "SPI1",
              "base": "0x60000100"
            }
          ],
          "registers": {
            "SPI_CMD": {
              "offset": "0x00",
              "size": 32,
              "description": "In the master mode, it is the start bit of a single operation. Self-clear by hardware"
            },
            "SPI_ADDR": {
              "offset": "0x04",
              "size": 32,
              "description": "In the master mode, it is the value of address in \"address\" phase."
            },
            "SPI_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "SPI_CTRL"
            },
            "SPI_RD_STATUS": {
              "offset": "0x10",
              "size": 32,
              "description": "In the slave mode, this register are the status register for the master to read out."
            },
            "SPI_CTRL2": {
              "offset": "0x14",
              "size": 32,
              "description": "spi_cs signal is delayed by 80MHz clock cycles"
            },
            "SPI_CLOCK": {
              "offset": "0x18",
              "size": 32,
              "description": "In the master mode, 1: spi_clk is eqaul to 80MHz, 0: spi_clk is divided from 80 MHz\n                        clock."
            },
            "SPI_USER": {
              "offset": "0x1C",
              "size": 32,
              "description": "This bit enable the \"command\" phase of an operation."
            },
            "SPI_USER1": {
              "offset": "0x20",
              "size": 32,
              "description": "The length in bits of \"address\" phase. The register value shall be (bit_num-1)"
            },
            "SPI_USER2": {
              "offset": "0x24",
              "size": 32,
              "description": "The length in bits of \"command\" phase. The register value shall be (bit_num-1)"
            },
            "SPI_WR_STATUS": {
              "offset": "0x28",
              "size": 32,
              "description": "In the slave mode, this register are the status register for the master to write\n                        into."
            },
            "SPI_PIN": {
              "offset": "0x2C",
              "size": 32,
              "description": "1: disable CS2; 0: spi_cs signal is from/to CS2 pin"
            },
            "SPI_SLAVE": {
              "offset": "0x30",
              "size": 32,
              "description": "It is the synchronous reset signal of the module. This bit is self-cleared by\n                        hardware."
            },
            "SPI_SLAVE1": {
              "offset": "0x34",
              "size": 32,
              "description": "In the slave mode, it is the length in bits for \"write-status\" and \"read-status\"\n                        operations. The register valueshall be (bit_num-1)"
            },
            "SPI_SLAVE2": {
              "offset": "0x38",
              "size": 32,
              "description": "In the slave mode, it is the length in spi_clk cycles \"dummy\" phase for \"write-buffer\"\n                        operations. The registervalue shall be (cycle_num-1)"
            },
            "SPI_SLAVE3": {
              "offset": "0x3C",
              "size": 32,
              "description": "In slave mode, it is the value of \"write-status\" command"
            },
            "SPI_EXT3": {
              "offset": "0xFC",
              "size": 32,
              "description": "This register is for two SPI masters to share the same cs, clock and data signals."
            },
            "SPI_W0": {
              "offset": "0x40",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 0"
            },
            "SPI_W1": {
              "offset": "0x60",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 1"
            },
            "SPI_W2": {
              "offset": "0x80",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 2"
            },
            "SPI_W3": {
              "offset": "0xA0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 3"
            },
            "SPI_W4": {
              "offset": "0xC0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 4"
            },
            "SPI_W5": {
              "offset": "0xE0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 5"
            },
            "SPI_W6": {
              "offset": "0x100",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 6"
            },
            "SPI_W7": {
              "offset": "0x120",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 7"
            },
            "SPI_W8": {
              "offset": "0x140",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 8"
            },
            "SPI_W9": {
              "offset": "0x160",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 9"
            },
            "SPI_W10": {
              "offset": "0x180",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 10"
            },
            "SPI_W11": {
              "offset": "0x1A0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 11"
            },
            "SPI_W12": {
              "offset": "0x1C0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 12"
            },
            "SPI_W13": {
              "offset": "0x1E0",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 13"
            },
            "SPI_W14": {
              "offset": "0x200",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 14"
            },
            "SPI_W15": {
              "offset": "0x220",
              "size": 32,
              "description": "the data inside the buffer of the SPI module, byte 15"
            },
            "SPI_CTRL1": {
              "offset": "0x0C",
              "size": 32,
              "description": "In the slave mode, it is the status for master to read out."
            }
          },
          "bits": {
            "SPI_CMD": {
              "spi_usr": {
                "bit": 18,
                "description": "In the master mode, it is the start bit of a single operation. Self-clear by\n                                hardware"
              },
              "spi_read": {
                "bit": 31,
                "description": "spi_read"
              },
              "spi_write_enable": {
                "bit": 30,
                "description": "spi_write_enable"
              },
              "spi_write_disable": {
                "bit": 29,
                "description": "spi_write_disable"
              },
              "spi_read_id": {
                "bit": 28,
                "description": "spi_read_id"
              },
              "spi_read_sr": {
                "bit": 27,
                "description": "spi_read_sr"
              },
              "spi_write_sr": {
                "bit": 26,
                "description": "spi_write_sr"
              },
              "spi_pp": {
                "bit": 25,
                "description": "spi_pp"
              },
              "spi_se": {
                "bit": 24,
                "description": "spi_se"
              },
              "spi_be": {
                "bit": 23,
                "description": "spi_be"
              },
              "spi_ce": {
                "bit": 22,
                "description": "spi_ce"
              },
              "spi_dp": {
                "bit": 21,
                "description": "spi_dp"
              },
              "spi_res": {
                "bit": 20,
                "description": "spi_res"
              },
              "spi_hpm": {
                "bit": 19,
                "description": "spi_hpm"
              }
            },
            "SPI_ADDR": {
              "iodata_start_addr": {
                "bit": 0,
                "description": "In the master mode, it is the value of address in \"address\" phase.",
                "width": 32
              },
              "address": {
                "bit": 0,
                "description": "address",
                "width": 24
              },
              "size": {
                "bit": 24,
                "description": "size",
                "width": 8
              }
            },
            "SPI_CTRL": {
              "spi_wr_bit_order": {
                "bit": 26,
                "description": "In \"command\", \"address\", \"write-data\" (MOSI) phases, 1: LSB first; 0: MSB\n                                first"
              },
              "spi_rd_bit_order": {
                "bit": 25,
                "description": "In \"read-data\" (MISO) phase, 1: LSB first; 0: MSB first"
              },
              "spi_qio_mode": {
                "bit": 24,
                "description": "In the read operations, \"address\" phase and \"read-data\" phase apply 4 signals"
              },
              "spi_dio_mode": {
                "bit": 23,
                "description": "In the read operations, \"address\" phase and \"read-data\" phase apply 2 signals"
              },
              "spi_qout_mode": {
                "bit": 20,
                "description": "In the read operations, \"read-data\" phase apply 4 signals"
              },
              "spi_dout_mode": {
                "bit": 14,
                "description": "In the read operations, \"read-data\" phase apply 2 signals"
              },
              "spi_fastrd_mode": {
                "bit": 13,
                "description": "this bit enable the bits: spi_qio_mode, spi_dio_mode, spi_qout_mode and\n                                spi_dout_mode"
              }
            },
            "SPI_RD_STATUS": {
              "slv_rd_status": {
                "bit": 0,
                "description": "In the slave mode, this register are the status register for the master to read\n                                out.",
                "width": 32
              }
            },
            "SPI_CTRL2": {
              "spi_cs_delay_num": {
                "bit": 28,
                "description": "spi_cs signal is delayed by 80MHz clock cycles",
                "width": 4
              },
              "spi_cs_delay_mode": {
                "bit": 26,
                "description": "spi_cs signal is delayed by spi_clk. 0: zero; 1: half cycle; 2: one cycle",
                "width": 2
              },
              "spi_mosi_delay_num": {
                "bit": 23,
                "description": "MOSI signals are delayed by 80MHz clock cycles",
                "width": 3
              },
              "spi_mosi_delay_mode": {
                "bit": 21,
                "description": "MOSI signals are delayed by spi_clk. 0: zero; 1: half cycle; 2: one cycle",
                "width": 2
              },
              "spi_miso_delay_num": {
                "bit": 18,
                "description": "MISO signals are delayed by 80MHz clock cycles",
                "width": 3
              },
              "spi_miso_delay_mode": {
                "bit": 16,
                "description": "MISO signals are delayed by spi_clk. 0: zero; 1: half cycle; 2: one cycle",
                "width": 2
              }
            },
            "SPI_CLOCK": {
              "spi_clk_equ_sysclk": {
                "bit": 31,
                "description": "In the master mode, 1: spi_clk is eqaul to 80MHz, 0: spi_clk is divided from 80\n                                MHz clock."
              },
              "spi_clkdiv_pre": {
                "bit": 18,
                "description": "In the master mode, it is pre-divider of spi_clk.",
                "width": 13
              },
              "spi_clkcnt_N": {
                "bit": 12,
                "description": "In the master mode, it is the divider of spi_clk. So spi_clk frequency is\n                                80MHz/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1)",
                "width": 6
              },
              "spi_clkcnt_H": {
                "bit": 6,
                "description": "In the master mode, it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode,\n                                it must be 0.",
                "width": 6
              },
              "spi_clkcnt_L": {
                "bit": 0,
                "description": "In the master mode, it must be eqaul to spi_clkcnt_N. In the slave mode, it\n                                must be 0.",
                "width": 6
              }
            },
            "SPI_USER": {
              "spi_usr_command": {
                "bit": 31,
                "description": "This bit enable the \"command\" phase of an operation."
              },
              "spi_usr_addr": {
                "bit": 30,
                "description": "This bit enable the \"address\" phase of an operation."
              },
              "spi_usr_dummy": {
                "bit": 29,
                "description": "This bit enable the \"dummy\" phase of an operation."
              },
              "spi_usr_miso": {
                "bit": 28,
                "description": "This bit enable the \"read-data\" phase of an operation."
              },
              "spi_usr_mosi": {
                "bit": 27,
                "description": "This bit enable the \"write-data\" phase of an operation."
              },
              "reg_usr_mosi_highpart": {
                "bit": 25,
                "description": "1: \"write-data\" phase only access to high-part of the buffer spi_w8~spi_w15"
              },
              "reg_usr_miso_highpart": {
                "bit": 24,
                "description": "1: \"read-data\" phase only access to high-part of the buffer spi_w8~spi_w15"
              },
              "spi_sio": {
                "bit": 16,
                "description": "1: mosi and miso signals share the same pin"
              },
              "spi_fwrite_qio": {
                "bit": 15,
                "description": "In the write operations, \"address\" phase and \"read-data\" phase apply 4\n                                signals"
              },
              "spi_fwrite_dio": {
                "bit": 14,
                "description": "In the write operations, \"address\" phase and \"read-data\" phase apply 2\n                                signals"
              },
              "spi_fwrite_quad": {
                "bit": 13,
                "description": "In the write operations, \"read-data\" phase apply 4 signals"
              },
              "spi_fwrite_dual": {
                "bit": 12,
                "description": "In the write operations, \"read-data\" phase apply 2 signals"
              },
              "spi_wr_byte_order": {
                "bit": 11,
                "description": "In \"command\", \"address\", \"write-data\" (MOSI) phases, 1: little-endian; 0:\n                                big_endian"
              },
              "spi_rd_byte_order": {
                "bit": 10,
                "description": "In \"read-data\" (MISO) phase, 1: little-endian; 0: big_endian"
              },
              "spi_ck_i_edge": {
                "bit": 6,
                "description": "In the slave mode, 1: rising-edge; 0: falling-edge"
              },
              "spi_ck_o_edge": {
                "bit": 7,
                "description": "In the master mode, 1: rising-edge; 0: falling-edge"
              },
              "spi_cs_setup": {
                "bit": 5,
                "description": "spi cs is enable when spi is in prepare phase. 1: enable 0: disable."
              },
              "spi_cs_hold": {
                "bit": 4,
                "description": "spi cs keep low when spi is in done phase. 1: enable 0: disable."
              },
              "spi_ahb_user_command": {
                "bit": 3,
                "description": "reserved"
              },
              "spi_flash_mode": {
                "bit": 2,
                "description": "spi_flash_mode"
              },
              "spi_ahb_user_command_4byte": {
                "bit": 1,
                "description": "reserved"
              },
              "spi_duplex": {
                "bit": 0,
                "description": "set spi in full duplex mode"
              }
            },
            "SPI_USER1": {
              "reg_usr_addr_bitlen": {
                "bit": 26,
                "description": "The length in bits of \"address\" phase. The register value shall be\n                                (bit_num-1)",
                "width": 6
              },
              "reg_usr_mosi_bitlen": {
                "bit": 17,
                "description": "The length in bits of \"write-data\" phase. The register value shall be\n                                (bit_num-1)",
                "width": 9
              },
              "reg_usr_miso_bitlen": {
                "bit": 8,
                "description": "The length in bits of \"read-data\" phase. The register value shall be\n                                (bit_num-1)",
                "width": 9
              },
              "reg_usr_dummy_cyclelen": {
                "bit": 0,
                "description": "The length in spi_clk cycles of \"dummy\" phase. The register value shall be\n                                (cycle_num-1)",
                "width": 8
              }
            },
            "SPI_USER2": {
              "reg_usr_command_bitlen": {
                "bit": 28,
                "description": "The length in bits of \"command\" phase. The register value shall be\n                                (bit_num-1)",
                "width": 4
              },
              "reg_usr_command_value": {
                "bit": 0,
                "description": "The value of \"command\" phase",
                "width": 16
              }
            },
            "SPI_WR_STATUS": {
              "slv_wr_status": {
                "bit": 0,
                "description": "In the slave mode, this register are the status register for the master to\n                                write into.",
                "width": 32
              }
            },
            "SPI_PIN": {
              "spi_cs2_dis": {
                "bit": 2,
                "description": "1: disable CS2; 0: spi_cs signal is from/to CS2 pin"
              },
              "spi_cs1_dis": {
                "bit": 1,
                "description": "1: disable CS1; 0: spi_cs signal is from/to CS1 pin"
              },
              "spi_cs0_dis": {
                "bit": 0,
                "description": "1: disable CS0; 0: spi_cs signal is from/to CS0 pin"
              },
              "spi_idle_edge": {
                "bit": 29,
                "description": "In the master mode, 1: high when idle; 0: low when idle"
              }
            },
            "SPI_SLAVE": {
              "spi_sync_reset": {
                "bit": 31,
                "description": "It is the synchronous reset signal of the module. This bit is self-cleared by\n                                hardware."
              },
              "spi_slave_mode": {
                "bit": 30,
                "description": "1: slave mode, 0: master mode."
              },
              "slv_cmd_define": {
                "bit": 27,
                "description": "1: slave mode commands are defined in SPI_SLAVE3. 0: slave mode commands are\n                                fixed as 1: \"write-status\"; 4: \"read-status\"; 2: \"write-buffer\" and 3: \"read-buffer\"."
              },
              "spi_trans_cnt": {
                "bit": 23,
                "description": "The operations counter in both the master mode and the slave mode.",
                "width": 4
              },
              "spi_int_en": {
                "bit": 5,
                "description": "Interrupt enable bits for the below 5 sources",
                "width": 5
              },
              "spi_trans_done": {
                "bit": 4,
                "description": "The interrupt raw bit for the completement of any operation in both the master\n                                mode and the slave mode."
              },
              "slv_wr_sta_done": {
                "bit": 3,
                "description": "The interrupt raw bit for the completement of \"write-status\" operation in the\n                                slave mode."
              },
              "slv_rd_sta_done": {
                "bit": 2,
                "description": "The interrupt raw bit for the completement of \"read-status\" operation in the\n                                slave mode."
              },
              "slv_wr_buf_done": {
                "bit": 1,
                "description": "The interrupt raw bit for the completement of \"write-buffer\" operation in the\n                                slave mode."
              },
              "slv_rd_buf_done": {
                "bit": 0,
                "description": "The interrupt raw bit for the completement of \"read-buffer\" operation in the\n                                slave mode."
              }
            },
            "SPI_SLAVE1": {
              "slv_status_bitlen": {
                "bit": 27,
                "description": "In the slave mode, it is the length in bits for \"write-status\" and\n                                \"read-status\" operations. The register valueshall be (bit_num-1)",
                "width": 5
              },
              "slv_buf_bitlen": {
                "bit": 16,
                "description": "In the slave mode, it is the length in bits for \"write-buffer\" and\n                                \"read-buffer\" operations. The register value shallbe (bit_num-1)",
                "width": 9
              },
              "slv_rd_addr_bitlen": {
                "bit": 10,
                "description": "In the slave mode, it is the address length in bits for \"read-buffer\"\n                                operation. The register value shall be(bit_num-1)",
                "width": 6
              },
              "slv_wr_addr_bitlen": {
                "bit": 4,
                "description": "In the slave mode, it is the address length in bits for \"write-buffer\"\n                                operation. The register value shall be(bit_num-1)",
                "width": 6
              },
              "slv_wrsta_dummy_en": {
                "bit": 3,
                "description": "In the slave mode, it is the enable bit of \"dummy\" phase for \"write-status\"\n                                operations."
              },
              "slv_rdsta_dummy_en": {
                "bit": 2,
                "description": "In the slave mode, it is the enable bit of \"dummy\" phase for \"read-status\"\n                                operations."
              },
              "slv_wrbuf_dummy_en": {
                "bit": 1,
                "description": "In the slave mode, it is the enable bit of \"dummy\" phase for \"write-buffer\"\n                                operations."
              },
              "slv_rdbuf_dummy_en": {
                "bit": 0,
                "description": "In the slave mode, it is the enable bit of \"dummy\" phase for \"read-buffer\"\n                                operations."
              }
            },
            "SPI_SLAVE2": {
              "slv_wrbuf_dummy_cyclelen": {
                "bit": 24,
                "description": "In the slave mode, it is the length in spi_clk cycles \"dummy\" phase for\n                                \"write-buffer\" operations. The registervalue shall be (cycle_num-1)",
                "width": 8
              },
              "slv_rdbuf_dummy_cyclelen": {
                "bit": 16,
                "description": "In the slave mode, it is the length in spi_clk cycles of \"dummy\" phase for\n                                \"read-buffer\" operations. The registervalue shall be (cycle_num-1)",
                "width": 8
              },
              "slv_wrsta_dummy_cyclelen": {
                "bit": 8,
                "description": "In the slave mode, it is the length in spi_clk cycles of \"dummy\" phase for\n                                \"write-status\" operations. Theregister value shall be (cycle_num-1)",
                "width": 8
              },
              "slv_rdsta_dummy_cyclelen": {
                "bit": 0,
                "description": "In the slave mode, it is the length in spi_clk cycles of \"dummy\" phase for\n                                \"read-status\" operations. Theregister value shall be (cycle_num-1)",
                "width": 8
              }
            },
            "SPI_SLAVE3": {
              "slv_wrsta_cmd_value": {
                "bit": 24,
                "description": "In slave mode, it is the value of \"write-status\" command",
                "width": 8
              },
              "slv_rdsta_cmd_value": {
                "bit": 16,
                "description": "In slave mode, it is the value of \"read-status\" command",
                "width": 8
              },
              "slv_wrbuf_cmd_value": {
                "bit": 8,
                "description": "In slave mode, it is the value of \"write-buffer\" command",
                "width": 8
              },
              "slv_rdbuf_cmd_value": {
                "bit": 0,
                "description": "In slave mode, it is the value of \"read-buffer\" command",
                "width": 8
              }
            },
            "SPI_EXT3": {
              "reg_int_hold_ena": {
                "bit": 0,
                "description": "This register is for two SPI masters to share the same cs, clock and data\n                                signals.",
                "width": 2
              }
            },
            "SPI_W0": {
              "spi_w0": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 0",
                "width": 32
              }
            },
            "SPI_W1": {
              "spi_w1": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 1",
                "width": 32
              }
            },
            "SPI_W2": {
              "spi_w2": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 2",
                "width": 32
              }
            },
            "SPI_W3": {
              "spi_w3": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 3",
                "width": 32
              }
            },
            "SPI_W4": {
              "spi_w4": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 4",
                "width": 32
              }
            },
            "SPI_W5": {
              "spi_w5": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 5",
                "width": 32
              }
            },
            "SPI_W6": {
              "spi_w6": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 6",
                "width": 32
              }
            },
            "SPI_W7": {
              "spi_w7": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 7",
                "width": 32
              }
            },
            "SPI_W8": {
              "spi_w8": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 8",
                "width": 32
              }
            },
            "SPI_W9": {
              "spi_w9": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 9",
                "width": 32
              }
            },
            "SPI_W10": {
              "spi_w10": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 10",
                "width": 32
              }
            },
            "SPI_W11": {
              "spi_w11": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 11",
                "width": 32
              }
            },
            "SPI_W12": {
              "spi_w12": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 12",
                "width": 32
              }
            },
            "SPI_W13": {
              "spi_w13": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 13",
                "width": 32
              }
            },
            "SPI_W14": {
              "spi_w14": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 14",
                "width": 32
              }
            },
            "SPI_W15": {
              "spi_w15": {
                "bit": 0,
                "description": "the data inside the buffer of the SPI module, byte 15",
                "width": 32
              }
            },
            "SPI_CTRL1": {
              "status": {
                "bit": 0,
                "description": "In the slave mode, it is the status for master to read out.",
                "width": 16
              },
              "wb_mode": {
                "bit": 16,
                "description": "Mode bits in the flash fast read mode, it is combined with spi_fastrd_mode bit.",
                "width": 8
              },
              "status_ext": {
                "bit": 24,
                "description": "In the slave mode,it is the status for master to read out.",
                "width": 8
              }
            }
          }
        },
        "TIM": {
          "instances": [
            {
              "name": "TIMER",
              "base": "0x60000600"
            }
          ],
          "registers": {
            "FRC1_LOAD": {
              "offset": "0x00",
              "size": 32,
              "description": "the load value into the counter"
            },
            "FRC1_COUNT": {
              "offset": "0x04",
              "size": 32,
              "description": "the current value of the counter. It is a decreasingcounter."
            },
            "FRC1_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "FRC1_CTRL"
            },
            "FRC1_INT": {
              "offset": "0x0C",
              "size": 32,
              "description": "FRC1_INT"
            },
            "FRC2_LOAD": {
              "offset": "0x20",
              "size": 32,
              "description": "the load value into the counter"
            },
            "FRC2_COUNT": {
              "offset": "0x24",
              "size": 32,
              "description": "the current value of the counter. It is a increasingcounter."
            },
            "FRC2_CTRL": {
              "offset": "0x28",
              "size": 32,
              "description": "FRC2_CTRL"
            },
            "FRC2_INT": {
              "offset": "0x2C",
              "size": 32,
              "description": "FRC2_INT"
            },
            "FRC2_ALARM": {
              "offset": "0x30",
              "size": 32,
              "description": "the alarm value for the counter"
            }
          },
          "bits": {
            "FRC1_LOAD": {
              "frc1_load_value": {
                "bit": 0,
                "description": "the load value into the counter",
                "width": 23
              }
            },
            "FRC1_COUNT": {
              "frc1_count": {
                "bit": 0,
                "description": "the current value of the counter. It is a decreasingcounter.",
                "width": 23
              }
            },
            "FRC1_CTRL": {
              "frc1_int": {
                "bit": 8,
                "description": "the status of the interrupt, when the count isdereased to zero"
              },
              "frc1_ctrl": {
                "bit": 0,
                "description": "bit[7]: timer enable, bit[6]: automatically reload, when the counter isequal to\n                                zero, bit[3:2]: prescale-divider, 0: divided by 1, 1: dividedby 16, 2 or 3: divided by\n                                256, bit[0]: interrupt type, 0:edge, 1:level",
                "width": 8
              },
              "timer_enable": {
                "bit": 7,
                "description": "Enable or disable the timer"
              },
              "rollover": {
                "bit": 6,
                "description": "Automatically reload when the counter hits zero"
              },
              "prescale_divider": {
                "bit": 2,
                "description": "Pre-scale divider for the timer",
                "width": 2
              },
              "interrupt_type": {
                "bit": 0,
                "description": "Configure the interrupt type"
              }
            },
            "FRC1_INT": {
              "frc1_int_clr_mask": {
                "bit": 0,
                "description": "write to clear the status of the interrupt, if theinterrupt type is \"level\""
              }
            },
            "FRC2_LOAD": {
              "frc2_load_value": {
                "bit": 0,
                "description": "the load value into the counter",
                "width": 32
              }
            },
            "FRC2_COUNT": {
              "frc2_count": {
                "bit": 0,
                "description": "the current value of the counter. It is a increasingcounter.",
                "width": 32
              }
            },
            "FRC2_CTRL": {
              "frc2_int": {
                "bit": 8,
                "description": "the status of the interrupt, when the count is equal tothe alarm value"
              },
              "frc2_ctrl": {
                "bit": 0,
                "description": "bit[7]: timer enable, bit[6]: automatically reload, when the counter isequal to\n                                zero, bit[3:2]: prescale-divider, 0: divided by 1, 1: dividedby 16, 2 or 3: divided by\n                                256, bit[0]: interrupt type, 0:edge, 1:level",
                "width": 8
              },
              "timer_enable": {
                "bit": 7,
                "description": "Enable or disable the timer"
              },
              "rollover": {
                "bit": 6,
                "description": "Automatically reload when the counter hits zero"
              },
              "prescale_divider": {
                "bit": 2,
                "description": "Pre-scale divider for the timer",
                "width": 2
              },
              "interrupt_type": {
                "bit": 0,
                "description": "Configure the interrupt type"
              }
            },
            "FRC2_INT": {
              "frc2_int_clr_mask": {
                "bit": 0,
                "description": "write to clear the status of the interrupt, if theinterrupt type is \"level\""
              }
            },
            "FRC2_ALARM": {
              "frc2_alarm": {
                "bit": 0,
                "description": "the alarm value for the counter",
                "width": 32
              }
            }
          }
        },
        "USART": {
          "instances": [
            {
              "name": "UART0",
              "base": "0x60000000"
            },
            {
              "name": "UART1",
              "base": "0x60000F00"
            }
          ],
          "registers": {
            "UART_FIFO": {
              "offset": "0x00",
              "size": 32,
              "description": "UART FIFO,length 128"
            },
            "UART_INT_RAW": {
              "offset": "0x04",
              "size": 32,
              "description": "UART INTERRUPT RAW STATE"
            },
            "UART_INT_ST": {
              "offset": "0x08",
              "size": 32,
              "description": "UART INTERRUPT STATEREGISTERUART_INT_RAW&UART_INT_ENA"
            },
            "UART_INT_ENA": {
              "offset": "0x0C",
              "size": 32,
              "description": "UART INTERRUPT ENABLE REGISTER"
            },
            "UART_INT_CLR": {
              "offset": "0x10",
              "size": 32,
              "description": "UART INTERRUPT CLEAR REGISTER"
            },
            "UART_CLKDIV": {
              "offset": "0x14",
              "size": 32,
              "description": "UART CLK DIV REGISTER"
            },
            "UART_AUTOBAUD": {
              "offset": "0x18",
              "size": 32,
              "description": "UART BAUDRATE DETECT REGISTER"
            },
            "UART_STATUS": {
              "offset": "0x1C",
              "size": 32,
              "description": "UART STATUS REGISTER"
            },
            "UART_CONF0": {
              "offset": "0x20",
              "size": 32,
              "description": "UART CONFIG0(UART0 and UART1)"
            },
            "UART_CONF1": {
              "offset": "0x24",
              "size": 32,
              "description": "Set this bit to enable rx time-out function"
            },
            "UART_LOWPULSE": {
              "offset": "0x28",
              "size": 32,
              "description": "UART_LOWPULSE"
            },
            "UART_HIGHPULSE": {
              "offset": "0x2C",
              "size": 32,
              "description": "UART_HIGHPULSE"
            },
            "UART_RXD_CNT": {
              "offset": "0x30",
              "size": 32,
              "description": "UART_RXD_CNT"
            },
            "UART_DATE": {
              "offset": "0x78",
              "size": 32,
              "description": "UART HW INFO"
            },
            "UART_ID": {
              "offset": "0x7C",
              "size": 32,
              "description": "UART_ID"
            }
          },
          "bits": {
            "UART_FIFO": {
              "rxfifo_rd_byte": {
                "bit": 0,
                "description": "R/W share the same address",
                "width": 8
              },
              "rxfifo_write_byte": {
                "bit": 0,
                "description": "R/W share the same address",
                "width": 8
              }
            },
            "UART_INT_RAW": {
              "rxfifo_tout_int_raw": {
                "bit": 8,
                "description": "The interrupt raw bit for Rx time-out interrupt(depands on\n                                theUART_RX_TOUT_THRHD)"
              },
              "brk_det_int_raw": {
                "bit": 7,
                "description": "The interrupt raw bit for Rx byte start error"
              },
              "cts_chg_int_raw": {
                "bit": 6,
                "description": "The interrupt raw bit for CTS changing level"
              },
              "dsr_chg_int_raw": {
                "bit": 5,
                "description": "The interrupt raw bit for DSR changing level"
              },
              "rxfifo_ovf_int_raw": {
                "bit": 4,
                "description": "The interrupt raw bit for rx fifo overflow"
              },
              "frm_err_int_raw": {
                "bit": 3,
                "description": "The interrupt raw bit for other rx error"
              },
              "parity_err_int_raw": {
                "bit": 2,
                "description": "The interrupt raw bit for parity check error"
              },
              "txfifo_empty_int_raw": {
                "bit": 1,
                "description": "The interrupt raw bit for tx fifo empty interrupt(depands\n                                onUART_TXFIFO_EMPTY_THRHD bits)"
              },
              "rxfifo_full_int_raw": {
                "bit": 0,
                "description": "The interrupt raw bit for rx fifo full interrupt(depands\n                                onUART_RXFIFO_FULL_THRHD bits)"
              }
            },
            "UART_INT_ST": {
              "rxfifo_tout_int_st": {
                "bit": 8,
                "description": "The interrupt state bit for Rx time-out event"
              },
              "brk_det_int_st": {
                "bit": 7,
                "description": "The interrupt state bit for rx byte start error"
              },
              "cts_chg_int_st": {
                "bit": 6,
                "description": "The interrupt state bit for CTS changing level"
              },
              "dsr_chg_int_st": {
                "bit": 5,
                "description": "The interrupt state bit for DSR changing level"
              },
              "rxfifo_ovf_int_st": {
                "bit": 4,
                "description": "The interrupt state bit for RX fifo overflow"
              },
              "frm_err_int_st": {
                "bit": 3,
                "description": "The interrupt state for other rx error"
              },
              "parity_err_int_st": {
                "bit": 2,
                "description": "The interrupt state bit for rx parity error"
              },
              "txfifo_empty_int_st": {
                "bit": 1,
                "description": "The interrupt state bit for TX fifo empty"
              },
              "rxfifo_full_int_st": {
                "bit": 0,
                "description": "The interrupt state bit for RX fifo full event"
              }
            },
            "UART_INT_ENA": {
              "rxfifo_tout_int_ena": {
                "bit": 8,
                "description": "The interrupt enable bit for rx time-out interrupt"
              },
              "brk_det_int_ena": {
                "bit": 7,
                "description": "The interrupt enable bit for rx byte start error"
              },
              "cts_chg_int_ena": {
                "bit": 6,
                "description": "The interrupt enable bit for CTS changing level"
              },
              "dsr_chg_int_ena": {
                "bit": 5,
                "description": "The interrupt enable bit for DSR changing level"
              },
              "rxfifo_ovf_int_ena": {
                "bit": 4,
                "description": "The interrupt enable bit for rx fifo overflow"
              },
              "frm_err_int_ena": {
                "bit": 3,
                "description": "The interrupt enable bit for other rx error"
              },
              "parity_err_int_ena": {
                "bit": 2,
                "description": "The interrupt enable bit for parity error"
              },
              "txfifo_empty_int_ena": {
                "bit": 1,
                "description": "The interrupt enable bit for tx fifo empty event"
              },
              "rxfifo_full_int_ena": {
                "bit": 0,
                "description": "The interrupt enable bit for rx fifo full event"
              }
            },
            "UART_INT_CLR": {
              "rxfifo_tout_int_clr": {
                "bit": 8,
                "description": "Set this bit to clear the rx time-out interrupt"
              },
              "brk_det_int_clr": {
                "bit": 7,
                "description": "Set this bit to clear the rx byte start interrupt"
              },
              "cts_chg_int_clr": {
                "bit": 6,
                "description": "Set this bit to clear the CTS changing interrupt"
              },
              "dsr_chg_int_clr": {
                "bit": 5,
                "description": "Set this bit to clear the DSR changing interrupt"
              },
              "rxfifo_ovf_int_clr": {
                "bit": 4,
                "description": "Set this bit to clear the rx fifo over-flow interrupt"
              },
              "frm_err_int_clr": {
                "bit": 3,
                "description": "Set this bit to clear other rx error interrupt"
              },
              "parity_err_int_clr": {
                "bit": 2,
                "description": "Set this bit to clear the parity error interrupt"
              },
              "txfifo_empty_int_clr": {
                "bit": 1,
                "description": "Set this bit to clear the tx fifo empty interrupt"
              },
              "rxfifo_full_int_clr": {
                "bit": 0,
                "description": "Set this bit to clear the rx fifo full interrupt"
              }
            },
            "UART_CLKDIV": {
              "uart_clkdiv": {
                "bit": 0,
                "description": "BAUDRATE = UART_CLK_FREQ / UART_CLKDIV",
                "width": 20
              }
            },
            "UART_AUTOBAUD": {
              "glitch_filt": {
                "bit": 8,
                "description": "glitch_filt",
                "width": 8
              },
              "autobaud_en": {
                "bit": 0,
                "description": "Set this bit to enable baudrate detect"
              }
            },
            "UART_STATUS": {
              "txd": {
                "bit": 31,
                "description": "The level of the uart txd pin"
              },
              "rtsn": {
                "bit": 30,
                "description": "The level of uart rts pin"
              },
              "dtrn": {
                "bit": 29,
                "description": "The level of uart dtr pin"
              },
              "txfifo_cnt": {
                "bit": 16,
                "description": "Number of data in UART TX fifo",
                "width": 8
              },
              "rxd": {
                "bit": 15,
                "description": "The level of uart rxd pin"
              },
              "ctsn": {
                "bit": 14,
                "description": "The level of uart cts pin"
              },
              "dsrn": {
                "bit": 13,
                "description": "The level of uart dsr pin"
              },
              "rxfifo_cnt": {
                "bit": 0,
                "description": "Number of data in uart rx fifo",
                "width": 8
              }
            },
            "UART_CONF0": {
              "uart_dtr_inv": {
                "bit": 24,
                "description": "Set this bit to inverse uart dtr level"
              },
              "uart_rts_inv": {
                "bit": 23,
                "description": "Set this bit to inverse uart rts level"
              },
              "uart_txd_inv": {
                "bit": 22,
                "description": "Set this bit to inverse uart txd level"
              },
              "uart_dsr_inv": {
                "bit": 21,
                "description": "Set this bit to inverse uart dsr level"
              },
              "uart_cts_inv": {
                "bit": 20,
                "description": "Set this bit to inverse uart cts level"
              },
              "uart_rxd_inv": {
                "bit": 19,
                "description": "Set this bit to inverse uart rxd level"
              },
              "txfifo_rst": {
                "bit": 18,
                "description": "Set this bit to reset uart tx fifo"
              },
              "rxfifo_rst": {
                "bit": 17,
                "description": "Set this bit to reset uart rx fifo"
              },
              "tx_flow_en": {
                "bit": 15,
                "description": "Set this bit to enable uart tx hardware flow control"
              },
              "uart_loopback": {
                "bit": 14,
                "description": "Set this bit to enable uart loopback test mode"
              },
              "txd_brk": {
                "bit": 8,
                "description": "RESERVED, DO NOT CHANGE THIS BIT"
              },
              "sw_dtr": {
                "bit": 7,
                "description": "sw dtr"
              },
              "sw_rts": {
                "bit": 6,
                "description": "sw rts"
              },
              "stop_bit_num": {
                "bit": 4,
                "description": "Set stop bit: 1:1bit 2:1.5bits 3:2bits",
                "width": 2
              },
              "bit_num": {
                "bit": 2,
                "description": "Set bit num: 0:5bits 1:6bits 2:7bits 3:8bits",
                "width": 2
              },
              "parity_en": {
                "bit": 1,
                "description": "Set this bit to enable uart parity check"
              },
              "parity": {
                "bit": 0,
                "description": "Set parity check: 0:even 1:odd, UART CONFIG1"
              }
            },
            "UART_CONF1": {
              "rx_tout_en": {
                "bit": 31,
                "description": "Set this bit to enable rx time-out function"
              },
              "rx_tout_thrhd": {
                "bit": 24,
                "description": "Config bits for rx time-out threshold,uint: byte,0-127",
                "width": 7
              },
              "rx_flow_en": {
                "bit": 23,
                "description": "Set this bit to enable rx hardware flow control"
              },
              "rx_flow_thrhd": {
                "bit": 16,
                "description": "The config bits for rx flow control threshold,0-127",
                "width": 7
              },
              "txfifo_empty_thrhd": {
                "bit": 8,
                "description": "The config bits for tx fifo empty threshold,0-127",
                "width": 7
              },
              "rxfifo_full_thrhd": {
                "bit": 0,
                "description": "The config bits for rx fifo full threshold,0-127",
                "width": 7
              }
            },
            "UART_LOWPULSE": {
              "lowpulse_min_cnt": {
                "bit": 0,
                "description": "used in baudrate detect",
                "width": 20
              }
            },
            "UART_HIGHPULSE": {
              "highpulse_min_cnt": {
                "bit": 0,
                "description": "used in baudrate detect",
                "width": 20
              }
            },
            "UART_RXD_CNT": {
              "rxd_edge_cnt": {
                "bit": 0,
                "description": "used in baudrate detect",
                "width": 10
              }
            },
            "UART_DATE": {
              "uart_date": {
                "bit": 0,
                "description": "UART HW INFO",
                "width": 32
              }
            },
            "UART_ID": {
              "uart_id": {
                "bit": 0,
                "description": "uart_id",
                "width": 32
              }
            }
          }
        },
        "WDG": {
          "instances": [
            {
              "name": "WDT",
              "base": "0x60000900"
            }
          ],
          "registers": {
            "WDT_CTL": {
              "offset": "0x00",
              "size": 32,
              "description": "WDT_CTL"
            },
            "WDT_OP": {
              "offset": "0x04",
              "size": 32,
              "description": "WDT_OP"
            },
            "WDT_OP_ND": {
              "offset": "0x08",
              "size": 32,
              "description": "WDT_OP_ND"
            },
            "WDT_RST": {
              "offset": "0x14",
              "size": 32,
              "description": "WDT_RST"
            }
          },
          "bits": {
            "WDT_CTL": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "WDT_OP": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "WDT_OP_ND": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            },
            "WDT_RST": {
              "Register": {
                "bit": 0,
                "description": "Register",
                "width": 32
              }
            }
          }
        },
        "RNG": {
          "instances": [
            {
              "name": "RNG",
              "base": "0x3FF20E44"
            }
          ],
          "registers": {
            "rng": {
              "offset": "0x00",
              "size": 32,
              "description": "RNG register"
            }
          }
        },
        "WATCHDOG": {
          "instances": [
            {
              "name": "WATCHDOG",
              "base": "0x60000900"
            }
          ],
          "registers": {
            "ctl": {
              "offset": "0x00",
              "size": 32,
              "description": "Enable the watchdog timer."
            },
            "reload_stage0": {
              "offset": "0x04",
              "size": 32,
              "description": "Reload value for stage 0"
            },
            "reload_stage1": {
              "offset": "0x08",
              "size": 32,
              "description": "Reload value for stage 1"
            },
            "count": {
              "offset": "0x0C",
              "size": 32,
              "description": "Watchdog clock cycle count"
            },
            "stage": {
              "offset": "0x10",
              "size": 32,
              "description": "The current watchdog stage"
            },
            "reset": {
              "offset": "0x14",
              "size": 32,
              "description": "Watchdog reset"
            },
            "reset_stage": {
              "offset": "0x18",
              "size": 32,
              "description": "Watchdog stage reset"
            }
          },
          "bits": {
            "ctl": {
              "enable": {
                "bit": 0,
                "description": "Enable the watchdog timer."
              },
              "stage_1_no_reset": {
                "bit": 1,
                "description": "When set to 1, and running in two-stage mode, it turns the watchdog into a single shot timer that doesn't reset the device."
              },
              "stage_1_disable": {
                "bit": 2,
                "description": "Set to 1 to disable the stage 1 of the watchdog timer"
              },
              "unknown_3": {
                "bit": 3,
                "description": "unknown_3"
              },
              "unknown_4": {
                "bit": 4,
                "description": "unknown_4"
              },
              "unknown_5": {
                "bit": 5,
                "description": "unknown_5"
              }
            }
          }
        }
      },
      "interrupts": {
        "count": 16,
        "vectors": [
          {
            "number": 0,
            "name": "Initial_SP"
          },
          {
            "number": 1,
            "name": "Reset_Handler"
          },
          {
            "number": 2,
            "name": "NMI_Handler"
          },
          {
            "number": 3,
            "name": "HardFault_Handler"
          },
          {
            "number": 4,
            "name": "MemManage_Handler"
          },
          {
            "number": 5,
            "name": "BusFault_Handler"
          },
          {
            "number": 6,
            "name": "UsageFault_Handler"
          },
          {
            "number": 11,
            "name": "SVC_Handler"
          },
          {
            "number": 12,
            "name": "DebugMon_Handler"
          },
          {
            "number": 14,
            "name": "PendSV_Handler"
          },
          {
            "number": 15,
            "name": "SysTick_Handler"
          }
        ]
      }
    }
  }
}