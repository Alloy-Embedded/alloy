{
  "family": "ESP32-H2",
  "architecture": "arm-cortex-m3",
  "vendor": "ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.",
  "mcus": {
    "ESP32-H2": {
      "flash": {
        "size_kb": 64,
        "base_address": "0x08000000",
        "page_size_kb": 1
      },
      "ram": {
        "size_kb": 20,
        "base_address": "0x20000000"
      },
      "peripherals": {
        "CRYPTO": {
          "instances": [
            {
              "name": "AES",
              "base": "0x60088000",
              "irq": 60
            },
            {
              "name": "HMAC",
              "base": "0x6008D000"
            },
            {
              "name": "RSA",
              "base": "0x6008A000",
              "irq": 62
            },
            {
              "name": "SHA",
              "base": "0x60089000",
              "irq": 61
            }
          ],
          "registers": {
            "KEY_0": {
              "offset": "0x00",
              "size": 32,
              "description": "Key material key_0 configure register"
            },
            "KEY_1": {
              "offset": "0x04",
              "size": 32,
              "description": "Key material key_1 configure register"
            },
            "KEY_2": {
              "offset": "0x08",
              "size": 32,
              "description": "Key material key_2 configure register"
            },
            "KEY_3": {
              "offset": "0x0C",
              "size": 32,
              "description": "Key material key_3 configure register"
            },
            "KEY_4": {
              "offset": "0x10",
              "size": 32,
              "description": "Key material key_4 configure register"
            },
            "KEY_5": {
              "offset": "0x14",
              "size": 32,
              "description": "Key material key_5 configure register"
            },
            "KEY_6": {
              "offset": "0x18",
              "size": 32,
              "description": "Key material key_6 configure register"
            },
            "KEY_7": {
              "offset": "0x1C",
              "size": 32,
              "description": "Key material key_7 configure register"
            },
            "TEXT_IN_0": {
              "offset": "0x20",
              "size": 32,
              "description": "source text material text_in_0 configure register"
            },
            "TEXT_IN_1": {
              "offset": "0x24",
              "size": 32,
              "description": "source text material text_in_1 configure register"
            },
            "TEXT_IN_2": {
              "offset": "0x28",
              "size": 32,
              "description": "source text material text_in_2 configure register"
            },
            "TEXT_IN_3": {
              "offset": "0x2C",
              "size": 32,
              "description": "source text material text_in_3 configure register"
            },
            "TEXT_OUT_0": {
              "offset": "0x30",
              "size": 32,
              "description": "result text material text_out_0 configure register"
            },
            "TEXT_OUT_1": {
              "offset": "0x34",
              "size": 32,
              "description": "result text material text_out_1 configure register"
            },
            "TEXT_OUT_2": {
              "offset": "0x38",
              "size": 32,
              "description": "result text material text_out_2 configure register"
            },
            "TEXT_OUT_3": {
              "offset": "0x3C",
              "size": 32,
              "description": "result text material text_out_3 configure register"
            },
            "MODE": {
              "offset": "0x40",
              "size": 32,
              "description": "AES Mode register"
            },
            "ENDIAN": {
              "offset": "0x44",
              "size": 32,
              "description": "AES Endian configure register"
            },
            "TRIGGER": {
              "offset": "0x48",
              "size": 32,
              "description": "AES trigger register"
            },
            "STATE": {
              "offset": "0x4C",
              "size": 32,
              "description": "AES state register"
            },
            "IV_MEM[%s]": {
              "offset": "0x50",
              "size": 8,
              "description": "The memory that stores initialization vector"
            },
            "H_MEM[%s]": {
              "offset": "0x60",
              "size": 8,
              "description": "The memory that stores GCM hash subkey"
            },
            "J0_MEM[%s]": {
              "offset": "0x70",
              "size": 8,
              "description": "The memory that stores J0"
            },
            "T0_MEM[%s]": {
              "offset": "0x80",
              "size": 8,
              "description": "The memory that stores T0"
            },
            "DMA_ENABLE": {
              "offset": "0x90",
              "size": 32,
              "description": "DMA-AES working mode register"
            },
            "BLOCK_MODE": {
              "offset": "0x94",
              "size": 32,
              "description": "AES cipher block mode register"
            },
            "BLOCK_NUM": {
              "offset": "0x98",
              "size": 32,
              "description": "AES block number register"
            },
            "INC_SEL": {
              "offset": "0x9C",
              "size": 32,
              "description": "Standard incrementing function configure register"
            },
            "AAD_BLOCK_NUM": {
              "offset": "0xA0",
              "size": 32,
              "description": "Additional Authential Data block number register"
            },
            "REMAINDER_BIT_NUM": {
              "offset": "0xA4",
              "size": 32,
              "description": "AES remainder bit number register"
            },
            "CONTINUE": {
              "offset": "0xA8",
              "size": 32,
              "description": "AES continue register"
            },
            "INT_CLEAR": {
              "offset": "0xAC",
              "size": 32,
              "description": "AES Interrupt clear register"
            },
            "INT_ENA": {
              "offset": "0xB0",
              "size": 32,
              "description": "AES Interrupt enable register"
            },
            "DATE": {
              "offset": "0xB4",
              "size": 32,
              "description": "AES version control register"
            },
            "DMA_EXIT": {
              "offset": "0xB8",
              "size": 32,
              "description": "AES-DMA exit config"
            }
          },
          "bits": {
            "KEY_0": {
              "KEY_0": {
                "bit": 0,
                "description": "This bits stores key_0 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_1": {
              "KEY_1": {
                "bit": 0,
                "description": "This bits stores key_1 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_2": {
              "KEY_2": {
                "bit": 0,
                "description": "This bits stores key_2 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_3": {
              "KEY_3": {
                "bit": 0,
                "description": "This bits stores key_3 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_4": {
              "KEY_4": {
                "bit": 0,
                "description": "This bits stores key_4 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_5": {
              "KEY_5": {
                "bit": 0,
                "description": "This bits stores key_5 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_6": {
              "KEY_6": {
                "bit": 0,
                "description": "This bits stores key_6 that is a part of key material.",
                "width": 32
              }
            },
            "KEY_7": {
              "KEY_7": {
                "bit": 0,
                "description": "This bits stores key_7 that is a part of key material.",
                "width": 32
              }
            },
            "TEXT_IN_0": {
              "TEXT_IN_0": {
                "bit": 0,
                "description": "This bits stores text_in_0 that is a part of source text material.",
                "width": 32
              }
            },
            "TEXT_IN_1": {
              "TEXT_IN_1": {
                "bit": 0,
                "description": "This bits stores text_in_1 that is a part of source text material.",
                "width": 32
              }
            },
            "TEXT_IN_2": {
              "TEXT_IN_2": {
                "bit": 0,
                "description": "This bits stores text_in_2 that is a part of source text material.",
                "width": 32
              }
            },
            "TEXT_IN_3": {
              "TEXT_IN_3": {
                "bit": 0,
                "description": "This bits stores text_in_3 that is a part of source text material.",
                "width": 32
              }
            },
            "TEXT_OUT_0": {
              "TEXT_OUT_0": {
                "bit": 0,
                "description": "This bits stores text_out_0 that is a part of result text material.",
                "width": 32
              }
            },
            "TEXT_OUT_1": {
              "TEXT_OUT_1": {
                "bit": 0,
                "description": "This bits stores text_out_1 that is a part of result text material.",
                "width": 32
              }
            },
            "TEXT_OUT_2": {
              "TEXT_OUT_2": {
                "bit": 0,
                "description": "This bits stores text_out_2 that is a part of result text material.",
                "width": 32
              }
            },
            "TEXT_OUT_3": {
              "TEXT_OUT_3": {
                "bit": 0,
                "description": "This bits stores text_out_3 that is a part of result text material.",
                "width": 32
              }
            },
            "MODE": {
              "MODE": {
                "bit": 0,
                "description": "This bits decides which one operation mode will be used. 3'd0: AES-EN-128, 3'd1: AES-EN-192, 3'd2: AES-EN-256, 3'd4: AES-DE-128, 3'd5: AES-DE-192, 3'd6: AES-DE-256.",
                "width": 3
              }
            },
            "ENDIAN": {
              "ENDIAN": {
                "bit": 0,
                "description": "endian. [1:0] key endian, [3:2] text_in endian or in_stream endian,  [5:4] text_out endian or out_stream endian",
                "width": 6
              }
            },
            "TRIGGER": {
              "TRIGGER": {
                "bit": 0,
                "description": "Set this bit to start AES calculation."
              }
            },
            "STATE": {
              "STATE": {
                "bit": 0,
                "description": "Those bits shows AES status. For typical AES, 0: idle, 1: busy. For DMA-AES, 0: idle, 1: busy, 2: calculation_done.",
                "width": 2
              }
            },
            "DMA_ENABLE": {
              "DMA_ENABLE": {
                "bit": 0,
                "description": "1'b0: typical AES working mode, 1'b1: DMA-AES working mode."
              }
            },
            "BLOCK_MODE": {
              "BLOCK_MODE": {
                "bit": 0,
                "description": "Those bits decides which block mode will be used. 0x0: ECB, 0x1: CBC, 0x2: OFB, 0x3: CTR, 0x4: CFB-8, 0x5: CFB-128, 0x6: GCM, 0x7: reserved.",
                "width": 3
              }
            },
            "BLOCK_NUM": {
              "BLOCK_NUM": {
                "bit": 0,
                "description": "Those bits stores the number of Plaintext/ciphertext block.",
                "width": 32
              }
            },
            "INC_SEL": {
              "INC_SEL": {
                "bit": 0,
                "description": "This bit decides the standard incrementing function. 0: INC32. 1: INC128."
              }
            },
            "AAD_BLOCK_NUM": {
              "AAD_BLOCK_NUM": {
                "bit": 0,
                "description": "Those bits stores the number of AAD block.",
                "width": 32
              }
            },
            "REMAINDER_BIT_NUM": {
              "REMAINDER_BIT_NUM": {
                "bit": 0,
                "description": "Those bits stores the number of remainder bit.",
                "width": 7
              }
            },
            "CONTINUE": {
              "CONTINUE": {
                "bit": 0,
                "description": "Set this bit to continue GCM operation."
              }
            },
            "INT_CLEAR": {
              "INT_CLEAR": {
                "bit": 0,
                "description": "Set this bit to clear the AES interrupt."
              }
            },
            "INT_ENA": {
              "INT_ENA": {
                "bit": 0,
                "description": "Set this bit to enable interrupt that occurs when DMA-AES calculation is done."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "This bits stores the version information of AES.",
                "width": 30
              }
            },
            "DMA_EXIT": {
              "DMA_EXIT": {
                "bit": 0,
                "description": "Set this register to leave calculation done stage. Recommend to use it after software finishes reading DMA's output buffer."
              }
            }
          }
        },
        "ADC": {
          "instances": [
            {
              "name": "APB_SARADC",
              "base": "0x6000E000",
              "irq": 48
            }
          ],
          "registers": {
            "CTRL": {
              "offset": "0x00",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "CTRL2": {
              "offset": "0x04",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "FILTER_CTRL1": {
              "offset": "0x08",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "FSM_WAIT": {
              "offset": "0x0C",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR1_STATUS": {
              "offset": "0x10",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR2_STATUS": {
              "offset": "0x14",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR_PATT_TAB1": {
              "offset": "0x18",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR_PATT_TAB2": {
              "offset": "0x1C",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "ONETIME_SAMPLE": {
              "offset": "0x20",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "ARB_CTRL": {
              "offset": "0x24",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "FILTER_CTRL0": {
              "offset": "0x28",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR1DATA_STATUS": {
              "offset": "0x2C",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "SAR2DATA_STATUS": {
              "offset": "0x30",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "THRES0_CTRL": {
              "offset": "0x34",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "THRES1_CTRL": {
              "offset": "0x38",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "THRES_CTRL": {
              "offset": "0x3C",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "INT_ENA": {
              "offset": "0x40",
              "size": 32,
              "description": "digital saradc int register"
            },
            "INT_RAW": {
              "offset": "0x44",
              "size": 32,
              "description": "digital saradc int register"
            },
            "INT_ST": {
              "offset": "0x48",
              "size": 32,
              "description": "digital saradc int register"
            },
            "INT_CLR": {
              "offset": "0x4C",
              "size": 32,
              "description": "digital saradc int register"
            },
            "DMA_CONF": {
              "offset": "0x50",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "CLKM_CONF": {
              "offset": "0x54",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "APB_TSENS_CTRL": {
              "offset": "0x58",
              "size": 32,
              "description": "digital tsens configure register"
            },
            "TSENS_CTRL2": {
              "offset": "0x5C",
              "size": 32,
              "description": "digital tsens configure register"
            },
            "CALI": {
              "offset": "0x60",
              "size": 32,
              "description": "digital saradc configure register"
            },
            "APB_TSENS_WAKE": {
              "offset": "0x64",
              "size": 32,
              "description": "digital tsens configure register"
            },
            "APB_TSENS_SAMPLE": {
              "offset": "0x68",
              "size": 32,
              "description": "digital tsens configure register"
            },
            "CTRL_DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "version"
            }
          },
          "bits": {
            "CTRL": {
              "SARADC_START_FORCE": {
                "bit": 0,
                "description": "select software enable saradc sample"
              },
              "SARADC_START": {
                "bit": 1,
                "description": "software enable saradc sample"
              },
              "SARADC_SAR_CLK_GATED": {
                "bit": 6,
                "description": "SAR clock gated"
              },
              "SARADC_SAR_CLK_DIV": {
                "bit": 7,
                "description": "SAR clock divider",
                "width": 8
              },
              "SARADC_SAR_PATT_LEN": {
                "bit": 15,
                "description": "0 ~ 15 means length 1 ~ 16",
                "width": 3
              },
              "SARADC_SAR_PATT_P_CLEAR": {
                "bit": 23,
                "description": "clear the pointer of pattern table for DIG ADC1 CTRL"
              },
              "SARADC_XPD_SAR_FORCE": {
                "bit": 27,
                "description": "force option to xpd sar blocks",
                "width": 2
              },
              "SARADC2_PWDET_DRV": {
                "bit": 29,
                "description": "enable saradc2 power detect driven func."
              },
              "SARADC_WAIT_ARB_CYCLE": {
                "bit": 30,
                "description": "wait arbit signal stable after sar_done",
                "width": 2
              }
            },
            "CTRL2": {
              "SARADC_MEAS_NUM_LIMIT": {
                "bit": 0,
                "description": "enable max meas num"
              },
              "SARADC_MAX_MEAS_NUM": {
                "bit": 1,
                "description": "max conversion number",
                "width": 8
              },
              "SARADC_SAR1_INV": {
                "bit": 9,
                "description": "1: data to DIG ADC1 CTRL is inverted, otherwise not"
              },
              "SARADC_SAR2_INV": {
                "bit": 10,
                "description": "1: data to DIG ADC2 CTRL is inverted, otherwise not"
              },
              "SARADC_TIMER_TARGET": {
                "bit": 12,
                "description": "to set saradc timer target",
                "width": 12
              },
              "SARADC_TIMER_EN": {
                "bit": 24,
                "description": "to enable saradc timer trigger"
              }
            },
            "FILTER_CTRL1": {
              "APB_SARADC_FILTER_FACTOR1": {
                "bit": 26,
                "description": "Factor of saradc filter1",
                "width": 3
              },
              "APB_SARADC_FILTER_FACTOR0": {
                "bit": 29,
                "description": "Factor of saradc filter0",
                "width": 3
              }
            },
            "FSM_WAIT": {
              "SARADC_XPD_WAIT": {
                "bit": 0,
                "description": "saradc_xpd_wait",
                "width": 8
              },
              "SARADC_RSTB_WAIT": {
                "bit": 8,
                "description": "saradc_rstb_wait",
                "width": 8
              },
              "SARADC_STANDBY_WAIT": {
                "bit": 16,
                "description": "saradc_standby_wait",
                "width": 8
              }
            },
            "SAR1_STATUS": {
              "SARADC_SAR1_STATUS": {
                "bit": 0,
                "description": "saradc1 status about data and channel",
                "width": 32
              }
            },
            "SAR2_STATUS": {
              "SARADC_SAR2_STATUS": {
                "bit": 0,
                "description": "saradc2 status about data and channel",
                "width": 32
              }
            },
            "SAR_PATT_TAB1": {
              "SARADC_SAR_PATT_TAB1": {
                "bit": 0,
                "description": "item 0 ~ 3 for pattern table 1 (each item one byte)",
                "width": 24
              }
            },
            "SAR_PATT_TAB2": {
              "SARADC_SAR_PATT_TAB2": {
                "bit": 0,
                "description": "Item 4 ~ 7 for pattern table 1 (each item one byte)",
                "width": 24
              }
            },
            "ONETIME_SAMPLE": {
              "SARADC_ONETIME_ATTEN": {
                "bit": 23,
                "description": "configure onetime atten",
                "width": 2
              },
              "SARADC_ONETIME_CHANNEL": {
                "bit": 25,
                "description": "configure onetime channel",
                "width": 4
              },
              "SARADC_ONETIME_START": {
                "bit": 29,
                "description": "trigger adc onetime sample"
              },
              "SARADC2_ONETIME_SAMPLE": {
                "bit": 30,
                "description": "enable adc2 onetime sample"
              },
              "SARADC1_ONETIME_SAMPLE": {
                "bit": 31,
                "description": "enable adc1 onetime sample"
              }
            },
            "ARB_CTRL": {
              "ADC_ARB_APB_FORCE": {
                "bit": 2,
                "description": "adc2 arbiter force to enableapb controller"
              },
              "ADC_ARB_RTC_FORCE": {
                "bit": 3,
                "description": "adc2 arbiter force to enable rtc controller"
              },
              "ADC_ARB_WIFI_FORCE": {
                "bit": 4,
                "description": "adc2 arbiter force to enable wifi controller"
              },
              "ADC_ARB_GRANT_FORCE": {
                "bit": 5,
                "description": "adc2 arbiter force grant"
              },
              "ADC_ARB_APB_PRIORITY": {
                "bit": 6,
                "description": "Set adc2 arbiterapb priority",
                "width": 2
              },
              "ADC_ARB_RTC_PRIORITY": {
                "bit": 8,
                "description": "Set adc2 arbiter rtc priority",
                "width": 2
              },
              "ADC_ARB_WIFI_PRIORITY": {
                "bit": 10,
                "description": "Set adc2 arbiter wifi priority",
                "width": 2
              },
              "ADC_ARB_FIX_PRIORITY": {
                "bit": 12,
                "description": "adc2 arbiter uses fixed priority"
              }
            },
            "FILTER_CTRL0": {
              "APB_SARADC_FILTER_CHANNEL1": {
                "bit": 18,
                "description": "configure filter1 to adc channel",
                "width": 4
              },
              "APB_SARADC_FILTER_CHANNEL0": {
                "bit": 22,
                "description": "configure filter0 to adc channel",
                "width": 4
              },
              "APB_SARADC_FILTER_RESET": {
                "bit": 31,
                "description": "enable apb_adc1_filter"
              }
            },
            "SAR1DATA_STATUS": {
              "APB_SARADC1_DATA": {
                "bit": 0,
                "description": "saradc1 data",
                "width": 17
              }
            },
            "SAR2DATA_STATUS": {
              "APB_SARADC2_DATA": {
                "bit": 0,
                "description": "saradc2 data",
                "width": 17
              }
            },
            "THRES0_CTRL": {
              "APB_SARADC_THRES0_CHANNEL": {
                "bit": 0,
                "description": "configure thres0 to adc channel",
                "width": 4
              },
              "APB_SARADC_THRES0_HIGH": {
                "bit": 5,
                "description": "saradc thres0 monitor thres",
                "width": 13
              },
              "APB_SARADC_THRES0_LOW": {
                "bit": 18,
                "description": "saradc thres0 monitor thres",
                "width": 13
              }
            },
            "THRES1_CTRL": {
              "APB_SARADC_THRES1_CHANNEL": {
                "bit": 0,
                "description": "configure thres1 to adc channel",
                "width": 4
              },
              "APB_SARADC_THRES1_HIGH": {
                "bit": 5,
                "description": "saradc thres1 monitor thres",
                "width": 13
              },
              "APB_SARADC_THRES1_LOW": {
                "bit": 18,
                "description": "saradc thres1 monitor thres",
                "width": 13
              }
            },
            "THRES_CTRL": {
              "APB_SARADC_THRES_ALL_EN": {
                "bit": 27,
                "description": "enable thres to all channel"
              },
              "APB_SARADC_THRES1_EN": {
                "bit": 30,
                "description": "enable thres1"
              },
              "APB_SARADC_THRES0_EN": {
                "bit": 31,
                "description": "enable thres0"
              }
            },
            "INT_ENA": {
              "APB_SARADC_TSENS_INT_ENA": {
                "bit": 25,
                "description": "tsens low  interrupt enable"
              },
              "APB_SARADC_THRES1_LOW_INT_ENA": {
                "bit": 26,
                "description": "saradc thres1 low  interrupt enable"
              },
              "APB_SARADC_THRES0_LOW_INT_ENA": {
                "bit": 27,
                "description": "saradc thres0 low interrupt enable"
              },
              "APB_SARADC_THRES1_HIGH_INT_ENA": {
                "bit": 28,
                "description": "saradc thres1 high interrupt enable"
              },
              "APB_SARADC_THRES0_HIGH_INT_ENA": {
                "bit": 29,
                "description": "saradc thres0 high interrupt enable"
              },
              "APB_SARADC2_DONE_INT_ENA": {
                "bit": 30,
                "description": "saradc2 done interrupt enable"
              },
              "APB_SARADC1_DONE_INT_ENA": {
                "bit": 31,
                "description": "saradc1 done interrupt enable"
              }
            },
            "INT_RAW": {
              "APB_SARADC_TSENS_INT_RAW": {
                "bit": 25,
                "description": "saradc tsens  interrupt raw"
              },
              "APB_SARADC_THRES1_LOW_INT_RAW": {
                "bit": 26,
                "description": "saradc thres1 low  interrupt raw"
              },
              "APB_SARADC_THRES0_LOW_INT_RAW": {
                "bit": 27,
                "description": "saradc thres0 low interrupt raw"
              },
              "APB_SARADC_THRES1_HIGH_INT_RAW": {
                "bit": 28,
                "description": "saradc thres1 high interrupt raw"
              },
              "APB_SARADC_THRES0_HIGH_INT_RAW": {
                "bit": 29,
                "description": "saradc thres0 high interrupt raw"
              },
              "APB_SARADC2_DONE_INT_RAW": {
                "bit": 30,
                "description": "saradc2 done interrupt raw"
              },
              "APB_SARADC1_DONE_INT_RAW": {
                "bit": 31,
                "description": "saradc1 done interrupt raw"
              }
            },
            "INT_ST": {
              "APB_SARADC_TSENS_INT_ST": {
                "bit": 25,
                "description": "saradc tsens  interrupt state"
              },
              "APB_SARADC_THRES1_LOW_INT_ST": {
                "bit": 26,
                "description": "saradc thres1 low  interrupt state"
              },
              "APB_SARADC_THRES0_LOW_INT_ST": {
                "bit": 27,
                "description": "saradc thres0 low interrupt state"
              },
              "APB_SARADC_THRES1_HIGH_INT_ST": {
                "bit": 28,
                "description": "saradc thres1 high interrupt state"
              },
              "APB_SARADC_THRES0_HIGH_INT_ST": {
                "bit": 29,
                "description": "saradc thres0 high interrupt state"
              },
              "APB_SARADC2_DONE_INT_ST": {
                "bit": 30,
                "description": "saradc2 done interrupt state"
              },
              "APB_SARADC1_DONE_INT_ST": {
                "bit": 31,
                "description": "saradc1 done interrupt state"
              }
            },
            "INT_CLR": {
              "APB_SARADC_TSENS_INT_CLR": {
                "bit": 25,
                "description": "saradc tsens  interrupt clear"
              },
              "APB_SARADC_THRES1_LOW_INT_CLR": {
                "bit": 26,
                "description": "saradc thres1 low  interrupt clear"
              },
              "APB_SARADC_THRES0_LOW_INT_CLR": {
                "bit": 27,
                "description": "saradc thres0 low interrupt clear"
              },
              "APB_SARADC_THRES1_HIGH_INT_CLR": {
                "bit": 28,
                "description": "saradc thres1 high interrupt clear"
              },
              "APB_SARADC_THRES0_HIGH_INT_CLR": {
                "bit": 29,
                "description": "saradc thres0 high interrupt clear"
              },
              "APB_SARADC2_DONE_INT_CLR": {
                "bit": 30,
                "description": "saradc2 done interrupt clear"
              },
              "APB_SARADC1_DONE_INT_CLR": {
                "bit": 31,
                "description": "saradc1 done interrupt clear"
              }
            },
            "DMA_CONF": {
              "APB_ADC_EOF_NUM": {
                "bit": 0,
                "description": "the dma_in_suc_eof gen when sample cnt = spi_eof_num",
                "width": 16
              },
              "APB_ADC_RESET_FSM": {
                "bit": 30,
                "description": "reset_apb_adc_state"
              },
              "APB_ADC_TRANS": {
                "bit": 31,
                "description": "enable apb_adc use spi_dma"
              }
            },
            "CLKM_CONF": {
              "CLKM_DIV_NUM": {
                "bit": 0,
                "description": "Integral I2S clock divider value",
                "width": 8
              },
              "CLKM_DIV_B": {
                "bit": 8,
                "description": "Fractional clock divider numerator value",
                "width": 6
              },
              "CLKM_DIV_A": {
                "bit": 14,
                "description": "Fractional clock divider denominator value",
                "width": 6
              },
              "CLK_EN": {
                "bit": 20,
                "description": "reg clk en"
              },
              "CLK_SEL": {
                "bit": 21,
                "description": "Set this bit to enable clk_apll",
                "width": 2
              }
            },
            "APB_TSENS_CTRL": {
              "TSENS_OUT": {
                "bit": 0,
                "description": "temperature sensor data out",
                "width": 8
              },
              "TSENS_IN_INV": {
                "bit": 13,
                "description": "invert temperature sensor data"
              },
              "TSENS_CLK_DIV": {
                "bit": 14,
                "description": "temperature sensor clock divider",
                "width": 8
              },
              "TSENS_PU": {
                "bit": 22,
                "description": "temperature sensor power up"
              }
            },
            "TSENS_CTRL2": {
              "TSENS_XPD_WAIT": {
                "bit": 0,
                "description": "the time that power up tsens need wait",
                "width": 12
              },
              "TSENS_XPD_FORCE": {
                "bit": 12,
                "description": "force power up tsens",
                "width": 2
              },
              "TSENS_CLK_INV": {
                "bit": 14,
                "description": "inv tsens clk"
              },
              "TSENS_CLK_SEL": {
                "bit": 15,
                "description": "tsens clk select"
              }
            },
            "CALI": {
              "APB_SARADC_CALI_CFG": {
                "bit": 0,
                "description": "saradc cali factor",
                "width": 17
              }
            },
            "APB_TSENS_WAKE": {
              "WAKEUP_TH_LOW": {
                "bit": 0,
                "description": "reg_wakeup_th_low",
                "width": 8
              },
              "WAKEUP_TH_HIGH": {
                "bit": 8,
                "description": "reg_wakeup_th_high",
                "width": 8
              },
              "WAKEUP_OVER_UPPER_TH": {
                "bit": 16,
                "description": "reg_wakeup_over_upper_th"
              },
              "WAKEUP_MODE": {
                "bit": 17,
                "description": "reg_wakeup_mode"
              },
              "WAKEUP_EN": {
                "bit": 18,
                "description": "reg_wakeup_en"
              }
            },
            "APB_TSENS_SAMPLE": {
              "TSENS_SAMPLE_RATE": {
                "bit": 0,
                "description": "HW sample rate",
                "width": 16
              },
              "TSENS_SAMPLE_EN": {
                "bit": 16,
                "description": "HW sample en"
              }
            },
            "CTRL_DATE": {
              "DATE": {
                "bit": 0,
                "description": "version",
                "width": 32
              }
            }
          }
        },
        "ASSIST": {
          "instances": [
            {
              "name": "ASSIST_DEBUG",
              "base": "0x600C2000",
              "irq": 11
            }
          ],
          "registers": {
            "CORE_0_MONTR_ENA": {
              "offset": "0x00",
              "size": 32,
              "description": "core0 monitor enable configuration register"
            },
            "CORE_0_INTR_RAW": {
              "offset": "0x04",
              "size": 32,
              "description": "core0 monitor interrupt status register"
            },
            "CORE_0_INTR_ENA": {
              "offset": "0x08",
              "size": 32,
              "description": "core0 monitor interrupt enable register"
            },
            "CORE_0_INTR_CLR": {
              "offset": "0x0C",
              "size": 32,
              "description": "core0 monitor interrupt clr register"
            },
            "CORE_0_AREA_DRAM0_0_MIN": {
              "offset": "0x10",
              "size": 32,
              "description": "core0 dram0 region0 addr configuration register"
            },
            "CORE_0_AREA_DRAM0_0_MAX": {
              "offset": "0x14",
              "size": 32,
              "description": "core0 dram0 region0 addr configuration register"
            },
            "CORE_0_AREA_DRAM0_1_MIN": {
              "offset": "0x18",
              "size": 32,
              "description": "core0 dram0 region1 addr configuration register"
            },
            "CORE_0_AREA_DRAM0_1_MAX": {
              "offset": "0x1C",
              "size": 32,
              "description": "core0 dram0 region1 addr configuration register"
            },
            "CORE_0_AREA_PIF_0_MIN": {
              "offset": "0x20",
              "size": 32,
              "description": "core0 PIF region0 addr configuration register"
            },
            "CORE_0_AREA_PIF_0_MAX": {
              "offset": "0x24",
              "size": 32,
              "description": "core0 PIF region0 addr configuration register"
            },
            "CORE_0_AREA_PIF_1_MIN": {
              "offset": "0x28",
              "size": 32,
              "description": "core0 PIF region1 addr configuration register"
            },
            "CORE_0_AREA_PIF_1_MAX": {
              "offset": "0x2C",
              "size": 32,
              "description": "core0 PIF region1 addr configuration register"
            },
            "CORE_0_AREA_PC": {
              "offset": "0x30",
              "size": 32,
              "description": "core0 area pc status register"
            },
            "CORE_0_AREA_SP": {
              "offset": "0x34",
              "size": 32,
              "description": "core0 area sp status register"
            },
            "CORE_0_SP_MIN": {
              "offset": "0x38",
              "size": 32,
              "description": "stack min value"
            },
            "CORE_0_SP_MAX": {
              "offset": "0x3C",
              "size": 32,
              "description": "stack max value"
            },
            "CORE_0_SP_PC": {
              "offset": "0x40",
              "size": 32,
              "description": "stack monitor pc status register"
            },
            "CORE_0_RCD_EN": {
              "offset": "0x44",
              "size": 32,
              "description": "record enable configuration register"
            },
            "CORE_0_RCD_PDEBUGPC": {
              "offset": "0x48",
              "size": 32,
              "description": "record status regsiter"
            },
            "CORE_0_RCD_PDEBUGSP": {
              "offset": "0x4C",
              "size": 32,
              "description": "record status regsiter"
            },
            "CORE_0_IRAM0_EXCEPTION_MONITOR_0": {
              "offset": "0x50",
              "size": 32,
              "description": "exception monitor status register0"
            },
            "CORE_0_IRAM0_EXCEPTION_MONITOR_1": {
              "offset": "0x54",
              "size": 32,
              "description": "exception monitor status register1"
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_0": {
              "offset": "0x58",
              "size": 32,
              "description": "exception monitor status register2"
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_1": {
              "offset": "0x5C",
              "size": 32,
              "description": "exception monitor status register3"
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_2": {
              "offset": "0x60",
              "size": 32,
              "description": "exception monitor status register4"
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_3": {
              "offset": "0x64",
              "size": 32,
              "description": "exception monitor status register5"
            },
            "CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0": {
              "offset": "0x68",
              "size": 32,
              "description": "exception monitor status register6"
            },
            "CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1": {
              "offset": "0x6C",
              "size": 32,
              "description": "exception monitor status register7"
            },
            "C0RE_0_LASTPC_BEFORE_EXCEPTION": {
              "offset": "0x70",
              "size": 32,
              "description": "cpu status register"
            },
            "C0RE_0_DEBUG_MODE": {
              "offset": "0x74",
              "size": 32,
              "description": "cpu status register"
            },
            "CLOCK_GATE": {
              "offset": "0x78",
              "size": 32,
              "description": "clock register"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "version register"
            }
          },
          "bits": {
            "CORE_0_MONTR_ENA": {
              "CORE_0_AREA_DRAM0_0_RD_ENA": {
                "bit": 0,
                "description": "Core0 dram0 area0 read monitor enable"
              },
              "CORE_0_AREA_DRAM0_0_WR_ENA": {
                "bit": 1,
                "description": "Core0 dram0 area0 write monitor enable"
              },
              "CORE_0_AREA_DRAM0_1_RD_ENA": {
                "bit": 2,
                "description": "Core0 dram0 area1 read monitor enable"
              },
              "CORE_0_AREA_DRAM0_1_WR_ENA": {
                "bit": 3,
                "description": "Core0 dram0 area1 write monitor enable"
              },
              "CORE_0_AREA_PIF_0_RD_ENA": {
                "bit": 4,
                "description": "Core0 PIF area0 read monitor enable"
              },
              "CORE_0_AREA_PIF_0_WR_ENA": {
                "bit": 5,
                "description": "Core0 PIF area0 write monitor enable"
              },
              "CORE_0_AREA_PIF_1_RD_ENA": {
                "bit": 6,
                "description": "Core0 PIF area1 read monitor enable"
              },
              "CORE_0_AREA_PIF_1_WR_ENA": {
                "bit": 7,
                "description": "Core0 PIF area1 write monitor enable"
              },
              "CORE_0_SP_SPILL_MIN_ENA": {
                "bit": 8,
                "description": "Core0 stackpoint underflow monitor enable"
              },
              "CORE_0_SP_SPILL_MAX_ENA": {
                "bit": 9,
                "description": "Core0 stackpoint overflow monitor enable"
              },
              "CORE_0_IRAM0_EXCEPTION_MONITOR_ENA": {
                "bit": 10,
                "description": "IBUS busy monitor enable"
              },
              "CORE_0_DRAM0_EXCEPTION_MONITOR_ENA": {
                "bit": 11,
                "description": "DBUS busy monitor enbale"
              }
            },
            "CORE_0_INTR_RAW": {
              "CORE_0_AREA_DRAM0_0_RD_RAW": {
                "bit": 0,
                "description": "Core0 dram0 area0 read monitor interrupt status"
              },
              "CORE_0_AREA_DRAM0_0_WR_RAW": {
                "bit": 1,
                "description": "Core0 dram0 area0 write monitor interrupt status"
              },
              "CORE_0_AREA_DRAM0_1_RD_RAW": {
                "bit": 2,
                "description": "Core0 dram0 area1 read monitor interrupt status"
              },
              "CORE_0_AREA_DRAM0_1_WR_RAW": {
                "bit": 3,
                "description": "Core0 dram0 area1 write monitor interrupt status"
              },
              "CORE_0_AREA_PIF_0_RD_RAW": {
                "bit": 4,
                "description": "Core0 PIF area0 read monitor interrupt status"
              },
              "CORE_0_AREA_PIF_0_WR_RAW": {
                "bit": 5,
                "description": "Core0 PIF area0 write monitor interrupt status"
              },
              "CORE_0_AREA_PIF_1_RD_RAW": {
                "bit": 6,
                "description": "Core0 PIF area1 read monitor interrupt status"
              },
              "CORE_0_AREA_PIF_1_WR_RAW": {
                "bit": 7,
                "description": "Core0 PIF area1 write monitor interrupt status"
              },
              "CORE_0_SP_SPILL_MIN_RAW": {
                "bit": 8,
                "description": "Core0 stackpoint underflow monitor interrupt status"
              },
              "CORE_0_SP_SPILL_MAX_RAW": {
                "bit": 9,
                "description": "Core0 stackpoint overflow monitor interrupt status"
              },
              "CORE_0_IRAM0_EXCEPTION_MONITOR_RAW": {
                "bit": 10,
                "description": "IBUS busy monitor interrupt status"
              },
              "CORE_0_DRAM0_EXCEPTION_MONITOR_RAW": {
                "bit": 11,
                "description": "DBUS busy monitor initerrupt status"
              }
            },
            "CORE_0_INTR_ENA": {
              "CORE_0_AREA_DRAM0_0_RD_INTR_ENA": {
                "bit": 0,
                "description": "Core0 dram0 area0 read monitor interrupt enable"
              },
              "CORE_0_AREA_DRAM0_0_WR_INTR_ENA": {
                "bit": 1,
                "description": "Core0 dram0 area0 write monitor interrupt enable"
              },
              "CORE_0_AREA_DRAM0_1_RD_INTR_ENA": {
                "bit": 2,
                "description": "Core0 dram0 area1 read monitor interrupt enable"
              },
              "CORE_0_AREA_DRAM0_1_WR_INTR_ENA": {
                "bit": 3,
                "description": "Core0 dram0 area1 write monitor interrupt enable"
              },
              "CORE_0_AREA_PIF_0_RD_INTR_ENA": {
                "bit": 4,
                "description": "Core0 PIF area0 read monitor interrupt enable"
              },
              "CORE_0_AREA_PIF_0_WR_INTR_ENA": {
                "bit": 5,
                "description": "Core0 PIF area0 write monitor interrupt enable"
              },
              "CORE_0_AREA_PIF_1_RD_INTR_ENA": {
                "bit": 6,
                "description": "Core0 PIF area1 read monitor interrupt enable"
              },
              "CORE_0_AREA_PIF_1_WR_INTR_ENA": {
                "bit": 7,
                "description": "Core0 PIF area1 write monitor interrupt enable"
              },
              "CORE_0_SP_SPILL_MIN_INTR_ENA": {
                "bit": 8,
                "description": "Core0 stackpoint underflow monitor interrupt enable"
              },
              "CORE_0_SP_SPILL_MAX_INTR_ENA": {
                "bit": 9,
                "description": "Core0 stackpoint overflow monitor interrupt enable"
              },
              "CORE_0_IRAM0_EXCEPTION_MONITOR_INTR_ENA": {
                "bit": 10,
                "description": "IBUS busy monitor interrupt enable"
              },
              "CORE_0_DRAM0_EXCEPTION_MONITOR_INTR_ENA": {
                "bit": 11,
                "description": "DBUS busy monitor interrupt enbale"
              }
            },
            "CORE_0_INTR_CLR": {
              "CORE_0_AREA_DRAM0_0_RD_CLR": {
                "bit": 0,
                "description": "Core0 dram0 area0 read monitor interrupt clr"
              },
              "CORE_0_AREA_DRAM0_0_WR_CLR": {
                "bit": 1,
                "description": "Core0 dram0 area0 write monitor interrupt clr"
              },
              "CORE_0_AREA_DRAM0_1_RD_CLR": {
                "bit": 2,
                "description": "Core0 dram0 area1 read monitor interrupt clr"
              },
              "CORE_0_AREA_DRAM0_1_WR_CLR": {
                "bit": 3,
                "description": "Core0 dram0 area1 write monitor interrupt clr"
              },
              "CORE_0_AREA_PIF_0_RD_CLR": {
                "bit": 4,
                "description": "Core0 PIF area0 read monitor interrupt clr"
              },
              "CORE_0_AREA_PIF_0_WR_CLR": {
                "bit": 5,
                "description": "Core0 PIF area0 write monitor interrupt clr"
              },
              "CORE_0_AREA_PIF_1_RD_CLR": {
                "bit": 6,
                "description": "Core0 PIF area1 read monitor interrupt clr"
              },
              "CORE_0_AREA_PIF_1_WR_CLR": {
                "bit": 7,
                "description": "Core0 PIF area1 write monitor interrupt clr"
              },
              "CORE_0_SP_SPILL_MIN_CLR": {
                "bit": 8,
                "description": "Core0 stackpoint underflow monitor interrupt clr"
              },
              "CORE_0_SP_SPILL_MAX_CLR": {
                "bit": 9,
                "description": "Core0 stackpoint overflow monitor interrupt clr"
              },
              "CORE_0_IRAM0_EXCEPTION_MONITOR_CLR": {
                "bit": 10,
                "description": "IBUS busy monitor interrupt clr"
              },
              "CORE_0_DRAM0_EXCEPTION_MONITOR_CLR": {
                "bit": 11,
                "description": "DBUS busy monitor interrupt clr"
              }
            },
            "CORE_0_AREA_DRAM0_0_MIN": {
              "CORE_0_AREA_DRAM0_0_MIN": {
                "bit": 0,
                "description": "Core0 dram0 region0 start addr",
                "width": 32
              }
            },
            "CORE_0_AREA_DRAM0_0_MAX": {
              "CORE_0_AREA_DRAM0_0_MAX": {
                "bit": 0,
                "description": "Core0 dram0 region0 end addr",
                "width": 32
              }
            },
            "CORE_0_AREA_DRAM0_1_MIN": {
              "CORE_0_AREA_DRAM0_1_MIN": {
                "bit": 0,
                "description": "Core0 dram0 region1 start addr",
                "width": 32
              }
            },
            "CORE_0_AREA_DRAM0_1_MAX": {
              "CORE_0_AREA_DRAM0_1_MAX": {
                "bit": 0,
                "description": "Core0 dram0 region1 end addr",
                "width": 32
              }
            },
            "CORE_0_AREA_PIF_0_MIN": {
              "CORE_0_AREA_PIF_0_MIN": {
                "bit": 0,
                "description": "Core0 PIF region0 start addr",
                "width": 32
              }
            },
            "CORE_0_AREA_PIF_0_MAX": {
              "CORE_0_AREA_PIF_0_MAX": {
                "bit": 0,
                "description": "Core0 PIF region0 end addr",
                "width": 32
              }
            },
            "CORE_0_AREA_PIF_1_MIN": {
              "CORE_0_AREA_PIF_1_MIN": {
                "bit": 0,
                "description": "Core0 PIF region1 start addr",
                "width": 32
              }
            },
            "CORE_0_AREA_PIF_1_MAX": {
              "CORE_0_AREA_PIF_1_MAX": {
                "bit": 0,
                "description": "Core0 PIF region1 end addr",
                "width": 32
              }
            },
            "CORE_0_AREA_PC": {
              "CORE_0_AREA_PC": {
                "bit": 0,
                "description": "the stackpointer when first touch region monitor interrupt",
                "width": 32
              }
            },
            "CORE_0_AREA_SP": {
              "CORE_0_AREA_SP": {
                "bit": 0,
                "description": "the PC when first touch region monitor interrupt",
                "width": 32
              }
            },
            "CORE_0_SP_MIN": {
              "CORE_0_SP_MIN": {
                "bit": 0,
                "description": "core0 sp region configuration regsiter",
                "width": 32
              }
            },
            "CORE_0_SP_MAX": {
              "CORE_0_SP_MAX": {
                "bit": 0,
                "description": "core0 sp pc status register",
                "width": 32
              }
            },
            "CORE_0_SP_PC": {
              "CORE_0_SP_PC": {
                "bit": 0,
                "description": "This regsiter stores the PC when trigger stack monitor.",
                "width": 32
              }
            },
            "CORE_0_RCD_EN": {
              "CORE_0_RCD_RECORDEN": {
                "bit": 0,
                "description": "Set 1 to enable record PC"
              },
              "CORE_0_RCD_PDEBUGEN": {
                "bit": 1,
                "description": "Set 1 to enable cpu pdebug function, must set this bit can get cpu PC"
              }
            },
            "CORE_0_RCD_PDEBUGPC": {
              "CORE_0_RCD_PDEBUGPC": {
                "bit": 0,
                "description": "recorded PC",
                "width": 32
              }
            },
            "CORE_0_RCD_PDEBUGSP": {
              "CORE_0_RCD_PDEBUGSP": {
                "bit": 0,
                "description": "recorded sp",
                "width": 32
              }
            },
            "CORE_0_IRAM0_EXCEPTION_MONITOR_0": {
              "CORE_0_IRAM0_RECORDING_ADDR_0": {
                "bit": 0,
                "description": "reg_core_0_iram0_recording_addr_0",
                "width": 24
              },
              "CORE_0_IRAM0_RECORDING_WR_0": {
                "bit": 24,
                "description": "reg_core_0_iram0_recording_wr_0"
              },
              "CORE_0_IRAM0_RECORDING_LOADSTORE_0": {
                "bit": 25,
                "description": "reg_core_0_iram0_recording_loadstore_0"
              }
            },
            "CORE_0_IRAM0_EXCEPTION_MONITOR_1": {
              "CORE_0_IRAM0_RECORDING_ADDR_1": {
                "bit": 0,
                "description": "reg_core_0_iram0_recording_addr_1",
                "width": 24
              },
              "CORE_0_IRAM0_RECORDING_WR_1": {
                "bit": 24,
                "description": "reg_core_0_iram0_recording_wr_1"
              },
              "CORE_0_IRAM0_RECORDING_LOADSTORE_1": {
                "bit": 25,
                "description": "reg_core_0_iram0_recording_loadstore_1"
              }
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_0": {
              "CORE_0_DRAM0_RECORDING_ADDR_0": {
                "bit": 0,
                "description": "reg_core_0_dram0_recording_addr_0",
                "width": 24
              },
              "CORE_0_DRAM0_RECORDING_WR_0": {
                "bit": 24,
                "description": "reg_core_0_dram0_recording_wr_0"
              },
              "CORE_0_DRAM0_RECORDING_BYTEEN_0": {
                "bit": 25,
                "description": "reg_core_0_dram0_recording_byteen_0",
                "width": 4
              }
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_1": {
              "CORE_0_DRAM0_RECORDING_PC_0": {
                "bit": 0,
                "description": "reg_core_0_dram0_recording_pc_0",
                "width": 32
              }
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_2": {
              "CORE_0_DRAM0_RECORDING_ADDR_1": {
                "bit": 0,
                "description": "reg_core_0_dram0_recording_addr_1",
                "width": 24
              },
              "CORE_0_DRAM0_RECORDING_WR_1": {
                "bit": 24,
                "description": "reg_core_0_dram0_recording_wr_1"
              },
              "CORE_0_DRAM0_RECORDING_BYTEEN_1": {
                "bit": 25,
                "description": "reg_core_0_dram0_recording_byteen_1",
                "width": 4
              }
            },
            "CORE_0_DRAM0_EXCEPTION_MONITOR_3": {
              "CORE_0_DRAM0_RECORDING_PC_1": {
                "bit": 0,
                "description": "reg_core_0_dram0_recording_pc_1",
                "width": 32
              }
            },
            "CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0": {
              "CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0": {
                "bit": 0,
                "description": "reg_core_x_iram0_dram0_limit_cycle_0",
                "width": 20
              }
            },
            "CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1": {
              "CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1": {
                "bit": 0,
                "description": "reg_core_x_iram0_dram0_limit_cycle_1",
                "width": 20
              }
            },
            "C0RE_0_LASTPC_BEFORE_EXCEPTION": {
              "CORE_0_LASTPC_BEFORE_EXC": {
                "bit": 0,
                "description": "cpu's lastpc before exception",
                "width": 32
              }
            },
            "C0RE_0_DEBUG_MODE": {
              "CORE_0_DEBUG_MODE": {
                "bit": 0,
                "description": "cpu debug mode status, 1 means cpu enter debug mode."
              },
              "CORE_0_DEBUG_MODULE_ACTIVE": {
                "bit": 1,
                "description": "cpu debug_module active status"
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "Set 1 force on the clock gate"
              }
            },
            "DATE": {
              "ASSIST_DEBUG_DATE": {
                "bit": 0,
                "description": "version register",
                "width": 28
              }
            }
          }
        },
        "DMA": {
          "instances": [
            {
              "name": "DMA",
              "base": "0x60080000",
              "irq": 53
            }
          ],
          "registers": {
            "IN_INT_RAW_CH%s": {
              "offset": "0x00",
              "size": 32,
              "description": "Raw status interrupt of channel 0"
            },
            "IN_INT_ST_CH%s": {
              "offset": "0x04",
              "size": 32,
              "description": "Masked interrupt of channel 0"
            },
            "IN_INT_ENA_CH%s": {
              "offset": "0x08",
              "size": 32,
              "description": "Interrupt enable bits of channel 0"
            },
            "IN_INT_CLR_CH%s": {
              "offset": "0x0C",
              "size": 32,
              "description": "Interrupt clear bits of channel 0"
            },
            "OUT_INT_RAW_CH%s": {
              "offset": "0x30",
              "size": 32,
              "description": "Raw status interrupt of channel 0"
            },
            "OUT_INT_ST_CH%s": {
              "offset": "0x34",
              "size": 32,
              "description": "Masked interrupt of channel 0"
            },
            "OUT_INT_ENA_CH%s": {
              "offset": "0x38",
              "size": 32,
              "description": "Interrupt enable bits of channel 0"
            },
            "OUT_INT_CLR_CH%s": {
              "offset": "0x3C",
              "size": 32,
              "description": "Interrupt clear bits of channel 0"
            },
            "AHB_TEST": {
              "offset": "0x60",
              "size": 32,
              "description": "reserved"
            },
            "MISC_CONF": {
              "offset": "0x64",
              "size": 32,
              "description": "MISC register"
            },
            "DATE": {
              "offset": "0x68",
              "size": 32,
              "description": "Version control register"
            },
            "IN_CONF0_CH%s": {
              "offset": "0x70",
              "size": 32,
              "description": "Configure 0 register of Rx channel 0"
            },
            "IN_CONF1_CH%s": {
              "offset": "0x74",
              "size": 32,
              "description": "Configure 1 register of Rx channel 0"
            },
            "INFIFO_STATUS_CH%s": {
              "offset": "0x78",
              "size": 32,
              "description": "Receive FIFO status of Rx channel 0"
            },
            "IN_POP_CH%s": {
              "offset": "0x7C",
              "size": 32,
              "description": "Pop control register of Rx channel 0"
            },
            "IN_LINK_CH%s": {
              "offset": "0x80",
              "size": 32,
              "description": "Link descriptor configure and control register of Rx channel 0"
            },
            "IN_STATE_CH%s": {
              "offset": "0x84",
              "size": 32,
              "description": "Receive status of Rx channel 0"
            },
            "IN_SUC_EOF_DES_ADDR_CH%s": {
              "offset": "0x88",
              "size": 32,
              "description": "Inlink descriptor address when EOF occurs of Rx channel 0"
            },
            "IN_ERR_EOF_DES_ADDR_CH%s": {
              "offset": "0x8C",
              "size": 32,
              "description": "Inlink descriptor address when errors occur of Rx channel 0"
            },
            "IN_DSCR_CH%s": {
              "offset": "0x90",
              "size": 32,
              "description": "Current inlink descriptor address of Rx channel 0"
            },
            "IN_DSCR_BF0_CH%s": {
              "offset": "0x94",
              "size": 32,
              "description": "The last inlink descriptor address of Rx channel 0"
            },
            "IN_DSCR_BF1_CH%s": {
              "offset": "0x98",
              "size": 32,
              "description": "The second-to-last inlink descriptor address of Rx channel 0"
            },
            "IN_PRI_CH%s": {
              "offset": "0x9C",
              "size": 32,
              "description": "Priority register of Rx channel 0"
            },
            "IN_PERI_SEL_CH%s": {
              "offset": "0xA0",
              "size": 32,
              "description": "Peripheral selection of Rx channel 0"
            },
            "OUT_CONF1_CH%s": {
              "offset": "0xD4",
              "size": 32,
              "description": "Configure 1 register of Tx channel 0"
            },
            "OUTFIFO_STATUS_CH%s": {
              "offset": "0xD8",
              "size": 32,
              "description": "Transmit FIFO status of Tx channel 0"
            },
            "OUT_PUSH_CH%s": {
              "offset": "0xDC",
              "size": 32,
              "description": "Push control register of Rx channel 0"
            },
            "OUT_LINK_CH%s": {
              "offset": "0xE0",
              "size": 32,
              "description": "Link descriptor configure and control register of Tx channel 0"
            },
            "OUT_STATE_CH%s": {
              "offset": "0xE4",
              "size": 32,
              "description": "Transmit status of Tx channel 0"
            },
            "OUT_EOF_DES_ADDR_CH%s": {
              "offset": "0xE8",
              "size": 32,
              "description": "Outlink descriptor address when EOF occurs of Tx channel 0"
            },
            "OUT_EOF_BFR_DES_ADDR_CH%s": {
              "offset": "0xEC",
              "size": 32,
              "description": "The last outlink descriptor address when EOF occurs of Tx channel 0"
            },
            "OUT_DSCR_CH%s": {
              "offset": "0xF0",
              "size": 32,
              "description": "Current inlink descriptor address of Tx channel 0"
            },
            "OUT_DSCR_BF0_CH%s": {
              "offset": "0xF4",
              "size": 32,
              "description": "The last inlink descriptor address of Tx channel 0"
            },
            "OUT_DSCR_BF1_CH%s": {
              "offset": "0xF8",
              "size": 32,
              "description": "The second-to-last inlink descriptor address of Tx channel 0"
            },
            "OUT_PRI_CH%s": {
              "offset": "0xFC",
              "size": 32,
              "description": "Priority register of Tx channel 0."
            },
            "OUT_PERI_SEL_CH%s": {
              "offset": "0x100",
              "size": 32,
              "description": "Peripheral selection of Tx channel 0"
            },
            "OUT_CONF0_CH%s": {
              "offset": "0x190",
              "size": 32,
              "description": "Configure 0 register of Tx channel 1"
            }
          },
          "bits": {
            "IN_INT_RAW_CH%s": {
              "IN_DONE": {
                "bit": 0,
                "description": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0."
              },
              "IN_SUC_EOF": {
                "bit": 1,
                "description": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0. For UHCI0 the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 0."
              },
              "IN_ERR_EOF": {
                "bit": 2,
                "description": "The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 0. For other peripherals this raw interrupt is reserved."
              },
              "IN_DSCR_ERR": {
                "bit": 3,
                "description": "The raw interrupt bit turns to high level when detecting inlink descriptor error including owner error and the second and third word error of inlink descriptor for Rx channel 0."
              },
              "IN_DSCR_EMPTY": {
                "bit": 4,
                "description": "The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed but there is no more inlink for Rx channel 0."
              },
              "INFIFO_OVF": {
                "bit": 5,
                "description": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is overflow."
              },
              "INFIFO_UDF": {
                "bit": 6,
                "description": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is underflow."
              }
            },
            "IN_INT_ST_CH%s": {
              "IN_DONE": {
                "bit": 0,
                "description": "The raw interrupt status bit for the IN_DONE_CH_INT interrupt."
              },
              "IN_SUC_EOF": {
                "bit": 1,
                "description": "The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt."
              },
              "IN_ERR_EOF": {
                "bit": 2,
                "description": "The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt."
              },
              "IN_DSCR_ERR": {
                "bit": 3,
                "description": "The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt."
              },
              "IN_DSCR_EMPTY": {
                "bit": 4,
                "description": "The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt."
              },
              "INFIFO_OVF": {
                "bit": 5,
                "description": "The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt."
              },
              "INFIFO_UDF": {
                "bit": 6,
                "description": "The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "IN_INT_ENA_CH%s": {
              "IN_DONE": {
                "bit": 0,
                "description": "The interrupt enable bit for the IN_DONE_CH_INT interrupt."
              },
              "IN_SUC_EOF": {
                "bit": 1,
                "description": "The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt."
              },
              "IN_ERR_EOF": {
                "bit": 2,
                "description": "The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt."
              },
              "IN_DSCR_ERR": {
                "bit": 3,
                "description": "The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt."
              },
              "IN_DSCR_EMPTY": {
                "bit": 4,
                "description": "The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt."
              },
              "INFIFO_OVF": {
                "bit": 5,
                "description": "The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt."
              },
              "INFIFO_UDF": {
                "bit": 6,
                "description": "The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "IN_INT_CLR_CH%s": {
              "IN_DONE": {
                "bit": 0,
                "description": "Set this bit to clear the IN_DONE_CH_INT interrupt."
              },
              "IN_SUC_EOF": {
                "bit": 1,
                "description": "Set this bit to clear the IN_SUC_EOF_CH_INT interrupt."
              },
              "IN_ERR_EOF": {
                "bit": 2,
                "description": "Set this bit to clear the IN_ERR_EOF_CH_INT interrupt."
              },
              "IN_DSCR_ERR": {
                "bit": 3,
                "description": "Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt."
              },
              "IN_DSCR_EMPTY": {
                "bit": 4,
                "description": "Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt."
              },
              "INFIFO_OVF": {
                "bit": 5,
                "description": "Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt."
              },
              "INFIFO_UDF": {
                "bit": 6,
                "description": "Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "OUT_INT_RAW_CH%s": {
              "OUT_DONE": {
                "bit": 0,
                "description": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 0."
              },
              "OUT_EOF": {
                "bit": 1,
                "description": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 0."
              },
              "OUT_DSCR_ERR": {
                "bit": 2,
                "description": "The raw interrupt bit turns to high level when detecting outlink descriptor error including owner error and the second and third word error of outlink descriptor for Tx channel 0."
              },
              "OUT_TOTAL_EOF": {
                "bit": 3,
                "description": "The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 0."
              },
              "OUTFIFO_OVF": {
                "bit": 4,
                "description": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is overflow."
              },
              "OUTFIFO_UDF": {
                "bit": 5,
                "description": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is underflow."
              }
            },
            "OUT_INT_ST_CH%s": {
              "OUT_DONE": {
                "bit": 0,
                "description": "The raw interrupt status bit for the OUT_DONE_CH_INT interrupt."
              },
              "OUT_EOF": {
                "bit": 1,
                "description": "The raw interrupt status bit for the OUT_EOF_CH_INT interrupt."
              },
              "OUT_DSCR_ERR": {
                "bit": 2,
                "description": "The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt."
              },
              "OUT_TOTAL_EOF": {
                "bit": 3,
                "description": "The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt."
              },
              "OUTFIFO_OVF": {
                "bit": 4,
                "description": "The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
              },
              "OUTFIFO_UDF": {
                "bit": 5,
                "description": "The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "OUT_INT_ENA_CH%s": {
              "OUT_DONE": {
                "bit": 0,
                "description": "The interrupt enable bit for the OUT_DONE_CH_INT interrupt."
              },
              "OUT_EOF": {
                "bit": 1,
                "description": "The interrupt enable bit for the OUT_EOF_CH_INT interrupt."
              },
              "OUT_DSCR_ERR": {
                "bit": 2,
                "description": "The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt."
              },
              "OUT_TOTAL_EOF": {
                "bit": 3,
                "description": "The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt."
              },
              "OUTFIFO_OVF": {
                "bit": 4,
                "description": "The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
              },
              "OUTFIFO_UDF": {
                "bit": 5,
                "description": "The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "OUT_INT_CLR_CH%s": {
              "OUT_DONE": {
                "bit": 0,
                "description": "Set this bit to clear the OUT_DONE_CH_INT interrupt."
              },
              "OUT_EOF": {
                "bit": 1,
                "description": "Set this bit to clear the OUT_EOF_CH_INT interrupt."
              },
              "OUT_DSCR_ERR": {
                "bit": 2,
                "description": "Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt."
              },
              "OUT_TOTAL_EOF": {
                "bit": 3,
                "description": "Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt."
              },
              "OUTFIFO_OVF": {
                "bit": 4,
                "description": "Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt."
              },
              "OUTFIFO_UDF": {
                "bit": 5,
                "description": "Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt."
              }
            },
            "AHB_TEST": {
              "AHB_TESTMODE": {
                "bit": 0,
                "description": "reserved",
                "width": 3
              },
              "AHB_TESTADDR": {
                "bit": 4,
                "description": "reserved",
                "width": 2
              }
            },
            "MISC_CONF": {
              "AHBM_RST_INTER": {
                "bit": 0,
                "description": "Set this bit then clear this bit to reset the internal ahb FSM."
              },
              "ARB_PRI_DIS": {
                "bit": 2,
                "description": "Set this bit to disable priority arbitration function."
              },
              "CLK_EN": {
                "bit": 3,
                "description": "1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "register version.",
                "width": 32
              }
            },
            "IN_CONF0_CH%s": {
              "IN_RST": {
                "bit": 0,
                "description": "This bit is used to reset DMA channel 0 Rx FSM and Rx FIFO pointer."
              },
              "IN_LOOP_TEST": {
                "bit": 1,
                "description": "reserved"
              },
              "INDSCR_BURST_EN": {
                "bit": 2,
                "description": "Set this bit to 1 to enable INCR burst transfer for Rx channel 0 reading link descriptor when accessing internal SRAM."
              },
              "IN_DATA_BURST_EN": {
                "bit": 3,
                "description": "Set this bit to 1 to enable INCR burst transfer for Rx channel 0 receiving data when accessing internal SRAM."
              },
              "MEM_TRANS_EN": {
                "bit": 4,
                "description": "Set this bit 1 to enable automatic transmitting data from memory to memory via DMA."
              },
              "IN_ETM_EN": {
                "bit": 5,
                "description": "Set this bit to 1 to enable etm control mode, dma Rx channel 0 is triggered by etm task."
              }
            },
            "IN_CONF1_CH%s": {
              "IN_CHECK_OWNER": {
                "bit": 12,
                "description": "Set this bit to enable checking the owner attribute of the link descriptor."
              }
            },
            "INFIFO_STATUS_CH%s": {
              "INFIFO_FULL": {
                "bit": 0,
                "description": "L1 Rx FIFO full signal for Rx channel 0."
              },
              "INFIFO_EMPTY": {
                "bit": 1,
                "description": "L1 Rx FIFO empty signal for Rx channel 0."
              },
              "INFIFO_CNT": {
                "bit": 2,
                "description": "The register stores the byte number of the data in L1 Rx FIFO for Rx channel 0.",
                "width": 6
              },
              "IN_REMAIN_UNDER_1B": {
                "bit": 23,
                "description": "reserved"
              },
              "IN_REMAIN_UNDER_2B": {
                "bit": 24,
                "description": "reserved"
              },
              "IN_REMAIN_UNDER_3B": {
                "bit": 25,
                "description": "reserved"
              },
              "IN_REMAIN_UNDER_4B": {
                "bit": 26,
                "description": "reserved"
              },
              "IN_BUF_HUNGRY": {
                "bit": 27,
                "description": "reserved"
              }
            },
            "IN_POP_CH%s": {
              "INFIFO_RDATA": {
                "bit": 0,
                "description": "This register stores the data popping from DMA FIFO.",
                "width": 12
              },
              "INFIFO_POP": {
                "bit": 12,
                "description": "Set this bit to pop data from DMA FIFO."
              }
            },
            "IN_LINK_CH%s": {
              "INLINK_ADDR": {
                "bit": 0,
                "description": "This register stores the 20 least significant bits of the first inlink descriptor's address.",
                "width": 20
              },
              "INLINK_AUTO_RET": {
                "bit": 20,
                "description": "Set this bit to return to current inlink descriptor's address when there are some errors in current receiving data."
              },
              "INLINK_STOP": {
                "bit": 21,
                "description": "Set this bit to stop dealing with the inlink descriptors."
              },
              "INLINK_START": {
                "bit": 22,
                "description": "Set this bit to start dealing with the inlink descriptors."
              },
              "INLINK_RESTART": {
                "bit": 23,
                "description": "Set this bit to mount a new inlink descriptor."
              },
              "INLINK_PARK": {
                "bit": 24,
                "description": "1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working."
              }
            },
            "IN_STATE_CH%s": {
              "INLINK_DSCR_ADDR": {
                "bit": 0,
                "description": "This register stores the current inlink descriptor's address.",
                "width": 18
              },
              "IN_DSCR_STATE": {
                "bit": 18,
                "description": "reserved",
                "width": 2
              },
              "IN_STATE": {
                "bit": 20,
                "description": "reserved",
                "width": 3
              }
            },
            "IN_SUC_EOF_DES_ADDR_CH%s": {
              "IN_SUC_EOF_DES_ADDR": {
                "bit": 0,
                "description": "This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.",
                "width": 32
              }
            },
            "IN_ERR_EOF_DES_ADDR_CH%s": {
              "IN_ERR_EOF_DES_ADDR": {
                "bit": 0,
                "description": "This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.",
                "width": 32
              }
            },
            "IN_DSCR_CH%s": {
              "INLINK_DSCR": {
                "bit": 0,
                "description": "The address of the current inlink descriptor x.",
                "width": 32
              }
            },
            "IN_DSCR_BF0_CH%s": {
              "INLINK_DSCR_BF0": {
                "bit": 0,
                "description": "The address of the last inlink descriptor x-1.",
                "width": 32
              }
            },
            "IN_DSCR_BF1_CH%s": {
              "INLINK_DSCR_BF1": {
                "bit": 0,
                "description": "The address of the second-to-last inlink descriptor x-2.",
                "width": 32
              }
            },
            "IN_PRI_CH%s": {
              "RX_PRI": {
                "bit": 0,
                "description": "The priority of Rx channel 0. The larger of the value the higher of the priority.",
                "width": 4
              }
            },
            "IN_PERI_SEL_CH%s": {
              "PERI_IN_SEL": {
                "bit": 0,
                "description": "This register is used to select peripheral for Rx channel 0. 0:SPI2. 1: Dummy. 2: UHCI0. 3: I2S0. 4: Dummy. 5: Dummy. 6: AES. 7: SHA. 8: ADC_DAC. 9: Parallel_IO. 10~15: Dummy",
                "width": 6
              }
            },
            "OUT_CONF1_CH%s": {
              "OUT_CHECK_OWNER": {
                "bit": 12,
                "description": "Set this bit to enable checking the owner attribute of the link descriptor."
              }
            },
            "OUTFIFO_STATUS_CH%s": {
              "OUTFIFO_FULL": {
                "bit": 0,
                "description": "L1 Tx FIFO full signal for Tx channel 0."
              },
              "OUTFIFO_EMPTY": {
                "bit": 1,
                "description": "L1 Tx FIFO empty signal for Tx channel 0."
              },
              "OUTFIFO_CNT": {
                "bit": 2,
                "description": "The register stores the byte number of the data in L1 Tx FIFO for Tx channel 0.",
                "width": 6
              },
              "OUT_REMAIN_UNDER_1B": {
                "bit": 23,
                "description": "reserved"
              },
              "OUT_REMAIN_UNDER_2B": {
                "bit": 24,
                "description": "reserved"
              },
              "OUT_REMAIN_UNDER_3B": {
                "bit": 25,
                "description": "reserved"
              },
              "OUT_REMAIN_UNDER_4B": {
                "bit": 26,
                "description": "reserved"
              }
            },
            "OUT_PUSH_CH%s": {
              "OUTFIFO_WDATA": {
                "bit": 0,
                "description": "This register stores the data that need to be pushed into DMA FIFO.",
                "width": 9
              },
              "OUTFIFO_PUSH": {
                "bit": 9,
                "description": "Set this bit to push data into DMA FIFO."
              }
            },
            "OUT_LINK_CH%s": {
              "OUTLINK_ADDR": {
                "bit": 0,
                "description": "This register stores the 20 least significant bits of the first outlink descriptor's address.",
                "width": 20
              },
              "OUTLINK_STOP": {
                "bit": 20,
                "description": "Set this bit to stop dealing with the outlink descriptors."
              },
              "OUTLINK_START": {
                "bit": 21,
                "description": "Set this bit to start dealing with the outlink descriptors."
              },
              "OUTLINK_RESTART": {
                "bit": 22,
                "description": "Set this bit to restart a new outlink from the last address."
              },
              "OUTLINK_PARK": {
                "bit": 23,
                "description": "1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working."
              }
            },
            "OUT_STATE_CH%s": {
              "OUTLINK_DSCR_ADDR": {
                "bit": 0,
                "description": "This register stores the current outlink descriptor's address.",
                "width": 18
              },
              "OUT_DSCR_STATE": {
                "bit": 18,
                "description": "reserved",
                "width": 2
              },
              "OUT_STATE": {
                "bit": 20,
                "description": "reserved",
                "width": 3
              }
            },
            "OUT_EOF_DES_ADDR_CH%s": {
              "OUT_EOF_DES_ADDR": {
                "bit": 0,
                "description": "This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.",
                "width": 32
              }
            },
            "OUT_EOF_BFR_DES_ADDR_CH%s": {
              "OUT_EOF_BFR_DES_ADDR": {
                "bit": 0,
                "description": "This register stores the address of the outlink descriptor before the last outlink descriptor.",
                "width": 32
              }
            },
            "OUT_DSCR_CH%s": {
              "OUTLINK_DSCR": {
                "bit": 0,
                "description": "The address of the current outlink descriptor y.",
                "width": 32
              }
            },
            "OUT_DSCR_BF0_CH%s": {
              "OUTLINK_DSCR_BF0": {
                "bit": 0,
                "description": "The address of the last outlink descriptor y-1.",
                "width": 32
              }
            },
            "OUT_DSCR_BF1_CH%s": {
              "OUTLINK_DSCR_BF1": {
                "bit": 0,
                "description": "The address of the second-to-last inlink descriptor x-2.",
                "width": 32
              }
            },
            "OUT_PRI_CH%s": {
              "TX_PRI": {
                "bit": 0,
                "description": "The priority of Tx channel 0. The larger of the value the higher of the priority.",
                "width": 4
              }
            },
            "OUT_PERI_SEL_CH%s": {
              "PERI_OUT_SEL": {
                "bit": 0,
                "description": "This register is used to select peripheral for Tx channel 0. 0:SPI2. 1: Dummy. 2: UHCI0. 3: I2S0. 4: Dummy. 5: Dummy. 6: AES. 7: SHA. 8: ADC_DAC. 9: Parallel_IO. 10~15: Dummy",
                "width": 6
              }
            },
            "OUT_CONF0_CH%s": {
              "OUT_RST": {
                "bit": 0,
                "description": "This bit is used to reset DMA channel 1 Tx FSM and Tx FIFO pointer."
              },
              "OUT_LOOP_TEST": {
                "bit": 1,
                "description": "reserved"
              },
              "OUT_AUTO_WRBACK": {
                "bit": 2,
                "description": "Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted."
              },
              "OUT_EOF_MODE": {
                "bit": 3,
                "description": "EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 1 is generated when data need to transmit has been popped from FIFO in DMA"
              },
              "OUTDSCR_BURST_EN": {
                "bit": 4,
                "description": "Set this bit to 1 to enable INCR burst transfer for Tx channel 1 reading link descriptor when accessing internal SRAM."
              },
              "OUT_DATA_BURST_EN": {
                "bit": 5,
                "description": "Set this bit to 1 to enable INCR burst transfer for Tx channel 1 transmitting data when accessing internal SRAM."
              },
              "OUT_ETM_EN": {
                "bit": 6,
                "description": "Set this bit to 1 to enable etm control mode, dma Tx channel 1 is triggered by etm task."
              }
            }
          }
        },
        "DS": {
          "instances": [
            {
              "name": "DS",
              "base": "0x6008C000"
            }
          ],
          "registers": {
            "Y_MEM[%s]": {
              "offset": "0x00",
              "size": 8,
              "description": "memory that stores Y"
            },
            "M_MEM[%s]": {
              "offset": "0x200",
              "size": 8,
              "description": "memory that stores M"
            },
            "RB_MEM[%s]": {
              "offset": "0x400",
              "size": 8,
              "description": "memory that stores Rb"
            },
            "BOX_MEM[%s]": {
              "offset": "0x600",
              "size": 8,
              "description": "memory that stores BOX"
            },
            "IV_MEM[%s]": {
              "offset": "0x630",
              "size": 8,
              "description": "memory that stores IV"
            },
            "X_MEM[%s]": {
              "offset": "0x800",
              "size": 8,
              "description": "memory that stores X"
            },
            "Z_MEM[%s]": {
              "offset": "0xA00",
              "size": 8,
              "description": "memory that stores Z"
            },
            "SET_START": {
              "offset": "0xE00",
              "size": 32,
              "description": "DS start control register"
            },
            "SET_CONTINUE": {
              "offset": "0xE04",
              "size": 32,
              "description": "DS continue control register"
            },
            "SET_FINISH": {
              "offset": "0xE08",
              "size": 32,
              "description": "DS finish control register"
            },
            "QUERY_BUSY": {
              "offset": "0xE0C",
              "size": 32,
              "description": "DS query busy register"
            },
            "QUERY_KEY_WRONG": {
              "offset": "0xE10",
              "size": 32,
              "description": "DS query key-wrong counter register"
            },
            "QUERY_CHECK": {
              "offset": "0xE14",
              "size": 32,
              "description": "DS query check result register"
            },
            "DATE": {
              "offset": "0xE20",
              "size": 32,
              "description": "DS version control register"
            }
          },
          "bits": {
            "SET_START": {
              "SET_START": {
                "bit": 0,
                "description": "set this bit to start DS operation."
              }
            },
            "SET_CONTINUE": {
              "SET_CONTINUE": {
                "bit": 0,
                "description": "set this bit to continue DS operation."
              }
            },
            "SET_FINISH": {
              "SET_FINISH": {
                "bit": 0,
                "description": "Set this bit to finish DS process."
              }
            },
            "QUERY_BUSY": {
              "QUERY_BUSY": {
                "bit": 0,
                "description": "digital signature state. 1'b0: idle, 1'b1: busy"
              }
            },
            "QUERY_KEY_WRONG": {
              "QUERY_KEY_WRONG": {
                "bit": 0,
                "description": "digital signature key wrong counter",
                "width": 4
              }
            },
            "QUERY_CHECK": {
              "MD_ERROR": {
                "bit": 0,
                "description": "MD checkout result. 1'b0: MD check pass, 1'b1: MD check fail"
              },
              "PADDING_BAD": {
                "bit": 1,
                "description": "padding checkout result. 1'b0: a good padding, 1'b1: a bad padding"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "ds version information",
                "width": 30
              }
            }
          }
        },
        "ECC": {
          "instances": [
            {
              "name": "ECC",
              "base": "0x6008B000",
              "irq": 63
            }
          ],
          "registers": {
            "MULT_INT_RAW": {
              "offset": "0x0C",
              "size": 32,
              "description": "ECC interrupt raw register, valid in level."
            },
            "MULT_INT_ST": {
              "offset": "0x10",
              "size": 32,
              "description": "ECC interrupt status register."
            },
            "MULT_INT_ENA": {
              "offset": "0x14",
              "size": 32,
              "description": "ECC interrupt enable register."
            },
            "MULT_INT_CLR": {
              "offset": "0x18",
              "size": 32,
              "description": "ECC interrupt clear register."
            },
            "MULT_CONF": {
              "offset": "0x1C",
              "size": 32,
              "description": "ECC configure register"
            },
            "MULT_DATE": {
              "offset": "0xFC",
              "size": 32,
              "description": "Version control register"
            },
            "K_MEM[%s]": {
              "offset": "0x100",
              "size": 8,
              "description": "The memory that stores k."
            },
            "PX_MEM[%s]": {
              "offset": "0x120",
              "size": 8,
              "description": "The memory that stores Px."
            },
            "PY_MEM[%s]": {
              "offset": "0x140",
              "size": 8,
              "description": "The memory that stores Py."
            },
            "QX_MEM%s": {
              "offset": "0x160",
              "size": 8,
              "description": "The memory that stores Qx"
            },
            "QY_MEM%s": {
              "offset": "0x180",
              "size": 8,
              "description": "The memory that stores Qy"
            },
            "QZ_MEM%s": {
              "offset": "0x1A0",
              "size": 8,
              "description": "The memory that stores Qz"
            }
          },
          "bits": {
            "MULT_INT_RAW": {
              "CALC_DONE_INT_RAW": {
                "bit": 0,
                "description": "The raw interrupt status bit  for the ecc_calc_done_int interrupt"
              }
            },
            "MULT_INT_ST": {
              "CALC_DONE_INT_ST": {
                "bit": 0,
                "description": "The masked interrupt status bit  for the ecc_calc_done_int interrupt"
              }
            },
            "MULT_INT_ENA": {
              "CALC_DONE_INT_ENA": {
                "bit": 0,
                "description": "The interrupt enable bit  for the ecc_calc_done_int interrupt"
              }
            },
            "MULT_INT_CLR": {
              "CALC_DONE_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear the ecc_calc_done_int interrupt"
              }
            },
            "MULT_CONF": {
              "START": {
                "bit": 0,
                "description": "Write 1 to start caculation of ECC Accelerator. This bit will be self-cleared after the caculatrion is done."
              },
              "RESET": {
                "bit": 1,
                "description": "Write 1 to reset ECC Accelerator."
              },
              "KEY_LENGTH": {
                "bit": 2,
                "description": "The key length mode bit of ECC Accelerator.  0: P-192.  1: P-256."
              },
              "MOD_BASE": {
                "bit": 3,
                "description": "The mod base of mod operation, only valid in work_mode 8-11. 0: n(order of curve). 1: p(mod base of curve)"
              },
              "WORK_MODE": {
                "bit": 4,
                "description": "The work mode bits of ECC Accelerator. 0: Point Mult Mode. 1: Reserved. 2: Point verification mode. 3: Point Verif+mult mode. 4: Jacobian Point Mult Mode. 5: Point Add Mode. 6: Jacobian Point Verification Mode. 7: Point Verif + Jacobian Mult Mode. 8: mod addition. 9. mod substraction. 10: mod multiplication. 11: mod division.",
                "width": 4
              },
              "SECURITY_MODE": {
                "bit": 8,
                "description": "Reserved"
              },
              "VERIFICATION_RESULT": {
                "bit": 29,
                "description": "The verification result bit of ECC Accelerator, only valid when calculation is done."
              },
              "CLK_EN": {
                "bit": 30,
                "description": "Write 1 to force on register clock gate."
              },
              "MEM_CLOCK_GATE_FORCE_ON": {
                "bit": 31,
                "description": "ECC memory clock gate force on register"
              }
            },
            "MULT_DATE": {
              "DATE": {
                "bit": 0,
                "description": "ECC mult version control register",
                "width": 28
              }
            }
          }
        },
        "EFUSE": {
          "instances": [
            {
              "name": "EFUSE",
              "base": "0x600B0800",
              "irq": 1
            }
          ],
          "registers": {
            "PGM_DATA0": {
              "offset": "0x00",
              "size": 32,
              "description": "Register 0 that stores data to be programmed."
            },
            "PGM_DATA1": {
              "offset": "0x04",
              "size": 32,
              "description": "Register 1 that stores data to be programmed."
            },
            "PGM_DATA2": {
              "offset": "0x08",
              "size": 32,
              "description": "Register 2 that stores data to be programmed."
            },
            "PGM_DATA3": {
              "offset": "0x0C",
              "size": 32,
              "description": "Register 3 that stores data to be programmed."
            },
            "PGM_DATA4": {
              "offset": "0x10",
              "size": 32,
              "description": "Register 4 that stores data to be programmed."
            },
            "PGM_DATA5": {
              "offset": "0x14",
              "size": 32,
              "description": "Register 5 that stores data to be programmed."
            },
            "PGM_DATA6": {
              "offset": "0x18",
              "size": 32,
              "description": "Register 6 that stores data to be programmed."
            },
            "PGM_DATA7": {
              "offset": "0x1C",
              "size": 32,
              "description": "Register 7 that stores data to be programmed."
            },
            "PGM_CHECK_VALUE0": {
              "offset": "0x20",
              "size": 32,
              "description": "Register 0 that stores the RS code to be programmed."
            },
            "PGM_CHECK_VALUE1": {
              "offset": "0x24",
              "size": 32,
              "description": "Register 1 that stores the RS code to be programmed."
            },
            "PGM_CHECK_VALUE2": {
              "offset": "0x28",
              "size": 32,
              "description": "Register 2 that stores the RS code to be programmed."
            },
            "RD_WR_DIS": {
              "offset": "0x2C",
              "size": 32,
              "description": "BLOCK0 data register 0."
            },
            "RD_REPEAT_DATA0": {
              "offset": "0x30",
              "size": 32,
              "description": "BLOCK0 data register 1."
            },
            "RD_REPEAT_DATA1": {
              "offset": "0x34",
              "size": 32,
              "description": "BLOCK0 data register 2."
            },
            "RD_REPEAT_DATA2": {
              "offset": "0x38",
              "size": 32,
              "description": "BLOCK0 data register 3."
            },
            "RD_REPEAT_DATA3": {
              "offset": "0x3C",
              "size": 32,
              "description": "BLOCK0 data register 4."
            },
            "RD_REPEAT_DATA4": {
              "offset": "0x40",
              "size": 32,
              "description": "BLOCK0 data register 5."
            },
            "RD_MAC_SYS_0": {
              "offset": "0x44",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_MAC_SYS_1": {
              "offset": "0x48",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_MAC_SYS_2": {
              "offset": "0x4C",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_MAC_SYS_3": {
              "offset": "0x50",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_MAC_SYS_4": {
              "offset": "0x54",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_MAC_SYS_5": {
              "offset": "0x58",
              "size": 32,
              "description": "BLOCK1 data register $n."
            },
            "RD_SYS_PART1_DATA0": {
              "offset": "0x5C",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA1": {
              "offset": "0x60",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA2": {
              "offset": "0x64",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA3": {
              "offset": "0x68",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA4": {
              "offset": "0x6C",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA5": {
              "offset": "0x70",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA6": {
              "offset": "0x74",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_SYS_PART1_DATA7": {
              "offset": "0x78",
              "size": 32,
              "description": "Register $n of BLOCK2 (system)."
            },
            "RD_USR_DATA0": {
              "offset": "0x7C",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA1": {
              "offset": "0x80",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA2": {
              "offset": "0x84",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA3": {
              "offset": "0x88",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA4": {
              "offset": "0x8C",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA5": {
              "offset": "0x90",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA6": {
              "offset": "0x94",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_USR_DATA7": {
              "offset": "0x98",
              "size": 32,
              "description": "Register $n of BLOCK3 (user)."
            },
            "RD_KEY0_DATA0": {
              "offset": "0x9C",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA1": {
              "offset": "0xA0",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA2": {
              "offset": "0xA4",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA3": {
              "offset": "0xA8",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA4": {
              "offset": "0xAC",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA5": {
              "offset": "0xB0",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA6": {
              "offset": "0xB4",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY0_DATA7": {
              "offset": "0xB8",
              "size": 32,
              "description": "Register $n of BLOCK4 (KEY0)."
            },
            "RD_KEY1_DATA0": {
              "offset": "0xBC",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA1": {
              "offset": "0xC0",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA2": {
              "offset": "0xC4",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA3": {
              "offset": "0xC8",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA4": {
              "offset": "0xCC",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA5": {
              "offset": "0xD0",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA6": {
              "offset": "0xD4",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY1_DATA7": {
              "offset": "0xD8",
              "size": 32,
              "description": "Register $n of BLOCK5 (KEY1)."
            },
            "RD_KEY2_DATA0": {
              "offset": "0xDC",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA1": {
              "offset": "0xE0",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA2": {
              "offset": "0xE4",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA3": {
              "offset": "0xE8",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA4": {
              "offset": "0xEC",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA5": {
              "offset": "0xF0",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA6": {
              "offset": "0xF4",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY2_DATA7": {
              "offset": "0xF8",
              "size": 32,
              "description": "Register $n of BLOCK6 (KEY2)."
            },
            "RD_KEY3_DATA0": {
              "offset": "0xFC",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA1": {
              "offset": "0x100",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA2": {
              "offset": "0x104",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA3": {
              "offset": "0x108",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA4": {
              "offset": "0x10C",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA5": {
              "offset": "0x110",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA6": {
              "offset": "0x114",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY3_DATA7": {
              "offset": "0x118",
              "size": 32,
              "description": "Register $n of BLOCK7 (KEY3)."
            },
            "RD_KEY4_DATA0": {
              "offset": "0x11C",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA1": {
              "offset": "0x120",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA2": {
              "offset": "0x124",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA3": {
              "offset": "0x128",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA4": {
              "offset": "0x12C",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA5": {
              "offset": "0x130",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA6": {
              "offset": "0x134",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY4_DATA7": {
              "offset": "0x138",
              "size": 32,
              "description": "Register $n of BLOCK8 (KEY4)."
            },
            "RD_KEY5_DATA0": {
              "offset": "0x13C",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA1": {
              "offset": "0x140",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA2": {
              "offset": "0x144",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA3": {
              "offset": "0x148",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA4": {
              "offset": "0x14C",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA5": {
              "offset": "0x150",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA6": {
              "offset": "0x154",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_KEY5_DATA7": {
              "offset": "0x158",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_SYS_PART2_DATA0": {
              "offset": "0x15C",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA1": {
              "offset": "0x160",
              "size": 32,
              "description": "Register $n of BLOCK9 (KEY5)."
            },
            "RD_SYS_PART2_DATA2": {
              "offset": "0x164",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA3": {
              "offset": "0x168",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA4": {
              "offset": "0x16C",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA5": {
              "offset": "0x170",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA6": {
              "offset": "0x174",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_SYS_PART2_DATA7": {
              "offset": "0x178",
              "size": 32,
              "description": "Register $n of BLOCK10 (system)."
            },
            "RD_REPEAT_ERR0": {
              "offset": "0x17C",
              "size": 32,
              "description": "Programming error record register 0 of BLOCK0."
            },
            "RD_REPEAT_ERR1": {
              "offset": "0x180",
              "size": 32,
              "description": "Programming error record register 1 of BLOCK0."
            },
            "RD_REPEAT_ERR2": {
              "offset": "0x184",
              "size": 32,
              "description": "Programming error record register 2 of BLOCK0."
            },
            "RD_REPEAT_ERR3": {
              "offset": "0x188",
              "size": 32,
              "description": "Programming error record register 3 of BLOCK0."
            },
            "RD_REPEAT_ERR4": {
              "offset": "0x18C",
              "size": 32,
              "description": "Programming error record register 4 of BLOCK0."
            },
            "RD_RS_ERR0": {
              "offset": "0x1C0",
              "size": 32,
              "description": "Programming error record register 0 of BLOCK1-10."
            },
            "RD_RS_ERR1": {
              "offset": "0x1C4",
              "size": 32,
              "description": "Programming error record register 1 of BLOCK1-10."
            },
            "CLK": {
              "offset": "0x1C8",
              "size": 32,
              "description": "eFuse clcok configuration register."
            },
            "CONF": {
              "offset": "0x1CC",
              "size": 32,
              "description": "eFuse operation mode configuraiton register"
            },
            "STATUS": {
              "offset": "0x1D0",
              "size": 32,
              "description": "eFuse status register."
            },
            "CMD": {
              "offset": "0x1D4",
              "size": 32,
              "description": "eFuse command register."
            },
            "INT_RAW": {
              "offset": "0x1D8",
              "size": 32,
              "description": "eFuse raw interrupt register."
            },
            "INT_ST": {
              "offset": "0x1DC",
              "size": 32,
              "description": "eFuse interrupt status register."
            },
            "INT_ENA": {
              "offset": "0x1E0",
              "size": 32,
              "description": "eFuse interrupt enable register."
            },
            "INT_CLR": {
              "offset": "0x1E4",
              "size": 32,
              "description": "eFuse interrupt clear register."
            },
            "DAC_CONF": {
              "offset": "0x1E8",
              "size": 32,
              "description": "Controls the eFuse programming voltage."
            },
            "RD_TIM_CONF": {
              "offset": "0x1EC",
              "size": 32,
              "description": "Configures read timing parameters."
            },
            "WR_TIM_CONF1": {
              "offset": "0x1F0",
              "size": 32,
              "description": "Configurarion register 1 of eFuse programming timing parameters."
            },
            "WR_TIM_CONF2": {
              "offset": "0x1F4",
              "size": 32,
              "description": "Configurarion register 2 of eFuse programming timing parameters."
            },
            "WR_TIM_CONF0_RS_BYPASS": {
              "offset": "0x1F8",
              "size": 32,
              "description": "Configurarion register0 of eFuse programming time parameters and rs bypass operation."
            },
            "DATE": {
              "offset": "0x1FC",
              "size": 32,
              "description": "eFuse version register."
            }
          },
          "bits": {
            "PGM_DATA0": {
              "PGM_DATA_0": {
                "bit": 0,
                "description": "Configures the 0th 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA1": {
              "PGM_DATA_1": {
                "bit": 0,
                "description": "Configures the 1st 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA2": {
              "PGM_DATA_2": {
                "bit": 0,
                "description": "Configures the 2nd 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA3": {
              "PGM_DATA_3": {
                "bit": 0,
                "description": "Configures the 3rd 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA4": {
              "PGM_DATA_4": {
                "bit": 0,
                "description": "Configures the 4th 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA5": {
              "PGM_DATA_5": {
                "bit": 0,
                "description": "Configures the 5th 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA6": {
              "PGM_DATA_6": {
                "bit": 0,
                "description": "Configures the 6th 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_DATA7": {
              "PGM_DATA_7": {
                "bit": 0,
                "description": "Configures the 7th 32-bit data to be programmed.",
                "width": 32
              }
            },
            "PGM_CHECK_VALUE0": {
              "PGM_RS_DATA_0": {
                "bit": 0,
                "description": "Configures the 0th 32-bit RS code to be programmed.",
                "width": 32
              }
            },
            "PGM_CHECK_VALUE1": {
              "PGM_RS_DATA_1": {
                "bit": 0,
                "description": "Configures the 1st 32-bit RS code to be programmed.",
                "width": 32
              }
            },
            "PGM_CHECK_VALUE2": {
              "PGM_RS_DATA_2": {
                "bit": 0,
                "description": "Configures the 2nd 32-bit RS code to be programmed.",
                "width": 32
              }
            },
            "RD_WR_DIS": {
              "WR_DIS": {
                "bit": 0,
                "description": "Represents whether programming of individual eFuse memory bit is disabled or enabled. 1: Disabled. 0 Enabled.",
                "width": 32
              }
            },
            "RD_REPEAT_DATA0": {
              "RD_DIS": {
                "bit": 0,
                "description": "Represents whether reading of individual eFuse block(block4~block10) is disabled or enabled. 1: disabled. 0: enabled.",
                "width": 7
              },
              "RPT4_RESERVED0_4": {
                "bit": 7,
                "description": "Reserved."
              },
              "DIS_ICACHE": {
                "bit": 8,
                "description": "Represents whether icache is disabled or enabled. 1: disabled. 0: enabled."
              },
              "DIS_USB_JTAG": {
                "bit": 9,
                "description": "Represents whether the function of usb switch to jtag is disabled or enabled. 1: disabled. 0: enabled."
              },
              "POWERGLITCH_EN": {
                "bit": 10,
                "description": "Represents whether power glitch function is enabled. 1: enabled. 0: disabled."
              },
              "DIS_USB_SERIAL_JTAG": {
                "bit": 11,
                "description": "Represents whether USB-Serial-JTAG is disabled or enabled. 1: disabled. 0: enabled."
              },
              "DIS_FORCE_DOWNLOAD": {
                "bit": 12,
                "description": "Represents whether the function that forces chip into download mode is disabled or enabled. 1: disabled. 0: enabled."
              },
              "SPI_DOWNLOAD_MSPI_DIS": {
                "bit": 13,
                "description": "Represents whether SPI0 controller during boot_mode_download is disabled or enabled. 1: disabled. 0: enabled."
              },
              "DIS_CAN": {
                "bit": 14,
                "description": "Represents whether TWAI function is disabled or enabled. 1: disabled. 0: enabled."
              },
              "JTAG_SEL_ENABLE": {
                "bit": 15,
                "description": "Represents whether the selection between usb_to_jtag and pad_to_jtag through strapping gpio15 when both EFUSE_DIS_PAD_JTAG and EFUSE_DIS_USB_JTAG are equal to 0 is enabled or disabled. 1: enabled. 0: disabled."
              },
              "SOFT_DIS_JTAG": {
                "bit": 16,
                "description": "Represents whether JTAG is disabled in soft way. Odd number: disabled. Even number: enabled.",
                "width": 3
              },
              "DIS_PAD_JTAG": {
                "bit": 19,
                "description": "Represents whether JTAG is disabled in the hard way(permanently). 1: disabled. 0: enabled."
              },
              "DIS_DOWNLOAD_MANUAL_ENCRYPT": {
                "bit": 20,
                "description": "Represents whether flash encrypt function is disabled or enabled(except in SPI boot mode). 1: disabled. 0: enabled."
              },
              "USB_DREFH": {
                "bit": 21,
                "description": "Represents the single-end input threhold vrefh, 1.76 V to 2 V with step of 80 mV.",
                "width": 2
              },
              "USB_DREFL": {
                "bit": 23,
                "description": "Represents the single-end input threhold vrefl, 1.76 V to 2 V with step of 80 mV.",
                "width": 2
              },
              "USB_EXCHG_PINS": {
                "bit": 25,
                "description": "Represents whether the D+ and D- pins is exchanged. 1: exchanged. 0: not exchanged."
              },
              "VDD_SPI_AS_GPIO": {
                "bit": 26,
                "description": "Represents whether vdd spi pin is functioned as gpio. 1: functioned. 0: not functioned."
              },
              "RPT4_RESERVED0_2": {
                "bit": 27,
                "description": "Reserved.",
                "width": 2
              },
              "RPT4_RESERVED0_1": {
                "bit": 29,
                "description": "Reserved."
              },
              "RPT4_RESERVED0_0": {
                "bit": 30,
                "description": "Reserved.",
                "width": 2
              }
            },
            "RD_REPEAT_DATA1": {
              "RPT4_RESERVED1_1": {
                "bit": 0,
                "description": "Reserved.",
                "width": 16
              },
              "WDT_DELAY_SEL": {
                "bit": 16,
                "description": "Represents whether RTC watchdog timeout threshold is selected at startup. 1: selected. 0: not selected.",
                "width": 2
              },
              "SPI_BOOT_CRYPT_CNT": {
                "bit": 18,
                "description": "Represents whether SPI boot encrypt/decrypt is disabled or enabled. Odd number of 1: enabled. Even number of 1: disabled.",
                "width": 3
              },
              "SECURE_BOOT_KEY_REVOKE0": {
                "bit": 21,
                "description": "Represents whether revoking first secure boot key is enabled or disabled. 1: enabled. 0: disabled."
              },
              "SECURE_BOOT_KEY_REVOKE1": {
                "bit": 22,
                "description": "Represents whether revoking second secure boot key is enabled or disabled. 1: enabled. 0: disabled."
              },
              "SECURE_BOOT_KEY_REVOKE2": {
                "bit": 23,
                "description": "Represents whether revoking third secure boot key is enabled or disabled. 1: enabled. 0: disabled."
              },
              "KEY_PURPOSE_0": {
                "bit": 24,
                "description": "Represents the purpose of Key0.",
                "width": 4
              },
              "KEY_PURPOSE_1": {
                "bit": 28,
                "description": "Represents the purpose of Key1.",
                "width": 4
              }
            },
            "RD_REPEAT_DATA2": {
              "KEY_PURPOSE_2": {
                "bit": 0,
                "description": "Represents the purpose of Key2.",
                "width": 4
              },
              "KEY_PURPOSE_3": {
                "bit": 4,
                "description": "Represents the purpose of Key3.",
                "width": 4
              },
              "KEY_PURPOSE_4": {
                "bit": 8,
                "description": "Represents the purpose of Key4.",
                "width": 4
              },
              "KEY_PURPOSE_5": {
                "bit": 12,
                "description": "Represents the purpose of Key5.",
                "width": 4
              },
              "SEC_DPA_LEVEL": {
                "bit": 16,
                "description": "Represents the spa secure level by configuring the clock random divide mode.",
                "width": 2
              },
              "ECDSA_FORCE_USE_HARDWARE_K": {
                "bit": 18,
                "description": "Represents whether hardware random number k is forced used in ESDCA. 1: force used. 0: not force used."
              },
              "CRYPT_DPA_ENABLE": {
                "bit": 19,
                "description": "Represents whether anti-dpa attack is enabled. 1:enabled. 0: disabled."
              },
              "SECURE_BOOT_EN": {
                "bit": 20,
                "description": "Represents whether secure boot is enabled or disabled. 1: enabled. 0: disabled."
              },
              "SECURE_BOOT_AGGRESSIVE_REVOKE": {
                "bit": 21,
                "description": "Represents whether revoking aggressive secure boot is enabled or disabled. 1: enabled. 0: disabled."
              },
              "RPT4_RESERVED2_0": {
                "bit": 22,
                "description": "Reserved.",
                "width": 6
              },
              "FLASH_TPUW": {
                "bit": 28,
                "description": "Represents the flash waiting time after power-up, in unit of ms. When the value less than 15, the waiting time is the programmed value. Otherwise, the waiting time is 2 times the programmed value.",
                "width": 4
              }
            },
            "RD_REPEAT_DATA3": {
              "DIS_DOWNLOAD_MODE": {
                "bit": 0,
                "description": "Represents whether Download mode is disabled or enabled. 1: disabled. 0: enabled."
              },
              "DIS_DIRECT_BOOT": {
                "bit": 1,
                "description": "Represents whether direct boot mode is disabled or enabled. 1: disabled. 0: enabled."
              },
              "DIS_USB_PRINT": {
                "bit": 2,
                "description": "Represents whether print from USB-Serial-JTAG is disabled or enabled. 1: disabled. 0: enabled."
              },
              "RPT4_RESERVED3_5": {
                "bit": 3,
                "description": "Reserved."
              },
              "DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE": {
                "bit": 4,
                "description": "Represents whether the USB-Serial-JTAG download function is disabled or enabled. 1: disabled. 0: enabled."
              },
              "ENABLE_SECURITY_DOWNLOAD": {
                "bit": 5,
                "description": "Represents whether security download is enabled or disabled. 1: enabled. 0: disabled."
              },
              "UART_PRINT_CONTROL": {
                "bit": 6,
                "description": "Represents the type of UART printing. 00: force enable printing. 01: enable printing when GPIO8 is reset at low level. 10: enable printing when GPIO8 is reset at high level. 11: force disable printing.",
                "width": 2
              },
              "FORCE_SEND_RESUME": {
                "bit": 8,
                "description": "Represents whether ROM code is forced to send a resume command during SPI boot. 1: forced. 0:not forced."
              },
              "SECURE_VERSION": {
                "bit": 9,
                "description": "Represents the version used by ESP-IDF anti-rollback feature.",
                "width": 16
              },
              "SECURE_BOOT_DISABLE_FAST_WAKE": {
                "bit": 25,
                "description": "Represents whether FAST VERIFY ON WAKE is disabled or enabled when Secure Boot is enabled. 1: disabled. 0: enabled."
              },
              "HYS_EN_PAD0": {
                "bit": 26,
                "description": "Represents whether the hysteresis function of corresponding PAD is enabled. 1: enabled. 0:disabled.",
                "width": 6
              }
            },
            "RD_REPEAT_DATA4": {
              "HYS_EN_PAD1": {
                "bit": 0,
                "description": "Represents whether the hysteresis function of corresponding PAD is enabled. 1: enabled. 0:disabled.",
                "width": 22
              },
              "RPT4_RESERVED4_1": {
                "bit": 22,
                "description": "Reserved.",
                "width": 2
              },
              "RPT4_RESERVED4_0": {
                "bit": 24,
                "description": "Reserved.",
                "width": 8
              }
            },
            "RD_MAC_SYS_0": {
              "MAC_0": {
                "bit": 0,
                "description": "Stores the low 32 bits of MAC address.",
                "width": 32
              }
            },
            "RD_MAC_SYS_1": {
              "MAC_1": {
                "bit": 0,
                "description": "Stores the high 16 bits of MAC address.",
                "width": 16
              },
              "MAC_EXT": {
                "bit": 16,
                "description": "Stores the extended bits of MAC address.",
                "width": 16
              }
            },
            "RD_MAC_SYS_2": {
              "MAC_RESERVED_1": {
                "bit": 0,
                "description": "Reserved.",
                "width": 14
              },
              "MAC_RESERVED_0": {
                "bit": 14,
                "description": "Reserved.",
                "width": 18
              }
            },
            "RD_MAC_SYS_3": {
              "MAC_RESERVED_2": {
                "bit": 0,
                "description": "Reserved.",
                "width": 18
              },
              "SYS_DATA_PART0_0": {
                "bit": 18,
                "description": "Stores the first 14 bits of the zeroth part of system data.",
                "width": 14
              }
            },
            "RD_MAC_SYS_4": {
              "SYS_DATA_PART0_1": {
                "bit": 0,
                "description": "Stores the first 32 bits of the zeroth part of system data.",
                "width": 32
              }
            },
            "RD_MAC_SYS_5": {
              "SYS_DATA_PART0_2": {
                "bit": 0,
                "description": "Stores the second 32 bits of the zeroth part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA0": {
              "SYS_DATA_PART1_0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA1": {
              "SYS_DATA_PART1_1": {
                "bit": 0,
                "description": "Stores the first 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA2": {
              "SYS_DATA_PART1_2": {
                "bit": 0,
                "description": "Stores the second 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA3": {
              "SYS_DATA_PART1_3": {
                "bit": 0,
                "description": "Stores the third 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA4": {
              "SYS_DATA_PART1_4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA5": {
              "SYS_DATA_PART1_5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA6": {
              "SYS_DATA_PART1_6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART1_DATA7": {
              "SYS_DATA_PART1_7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of the first part of system data.",
                "width": 32
              }
            },
            "RD_USR_DATA0": {
              "USR_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA1": {
              "USR_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA2": {
              "USR_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA3": {
              "USR_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA4": {
              "USR_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA5": {
              "USR_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA6": {
              "USR_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_USR_DATA7": {
              "USR_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of BLOCK3 (user).",
                "width": 32
              }
            },
            "RD_KEY0_DATA0": {
              "KEY0_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA1": {
              "KEY0_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA2": {
              "KEY0_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA3": {
              "KEY0_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA4": {
              "KEY0_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA5": {
              "KEY0_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA6": {
              "KEY0_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY0_DATA7": {
              "KEY0_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY0.",
                "width": 32
              }
            },
            "RD_KEY1_DATA0": {
              "KEY1_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA1": {
              "KEY1_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA2": {
              "KEY1_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA3": {
              "KEY1_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA4": {
              "KEY1_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA5": {
              "KEY1_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA6": {
              "KEY1_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY1_DATA7": {
              "KEY1_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY1.",
                "width": 32
              }
            },
            "RD_KEY2_DATA0": {
              "KEY2_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA1": {
              "KEY2_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA2": {
              "KEY2_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA3": {
              "KEY2_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA4": {
              "KEY2_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA5": {
              "KEY2_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA6": {
              "KEY2_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY2_DATA7": {
              "KEY2_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY2.",
                "width": 32
              }
            },
            "RD_KEY3_DATA0": {
              "KEY3_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA1": {
              "KEY3_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA2": {
              "KEY3_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA3": {
              "KEY3_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA4": {
              "KEY3_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA5": {
              "KEY3_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA6": {
              "KEY3_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY3_DATA7": {
              "KEY3_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY3.",
                "width": 32
              }
            },
            "RD_KEY4_DATA0": {
              "KEY4_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA1": {
              "KEY4_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA2": {
              "KEY4_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA3": {
              "KEY4_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA4": {
              "KEY4_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA5": {
              "KEY4_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA6": {
              "KEY4_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY4_DATA7": {
              "KEY4_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY4.",
                "width": 32
              }
            },
            "RD_KEY5_DATA0": {
              "KEY5_DATA0": {
                "bit": 0,
                "description": "Stores the zeroth 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA1": {
              "KEY5_DATA1": {
                "bit": 0,
                "description": "Stores the first 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA2": {
              "KEY5_DATA2": {
                "bit": 0,
                "description": "Stores the second 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA3": {
              "KEY5_DATA3": {
                "bit": 0,
                "description": "Stores the third 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA4": {
              "KEY5_DATA4": {
                "bit": 0,
                "description": "Stores the fourth 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA5": {
              "KEY5_DATA5": {
                "bit": 0,
                "description": "Stores the fifth 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA6": {
              "KEY5_DATA6": {
                "bit": 0,
                "description": "Stores the sixth 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_KEY5_DATA7": {
              "KEY5_DATA7": {
                "bit": 0,
                "description": "Stores the seventh 32 bits of KEY5.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA0": {
              "SYS_DATA_PART2_0": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA1": {
              "SYS_DATA_PART2_1": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA2": {
              "SYS_DATA_PART2_2": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA3": {
              "SYS_DATA_PART2_3": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA4": {
              "SYS_DATA_PART2_4": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA5": {
              "SYS_DATA_PART2_5": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA6": {
              "SYS_DATA_PART2_6": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_SYS_PART2_DATA7": {
              "SYS_DATA_PART2_7": {
                "bit": 0,
                "description": "Stores the 0th 32 bits of the 2nd part of system data.",
                "width": 32
              }
            },
            "RD_REPEAT_ERR0": {
              "RD_DIS_ERR": {
                "bit": 0,
                "description": "Indicates a programming error of RD_DIS.",
                "width": 7
              },
              "RPT4_RESERVED0_ERR_4": {
                "bit": 7,
                "description": "Reserved."
              },
              "DIS_ICACHE_ERR": {
                "bit": 8,
                "description": "Indicates a programming error of DIS_ICACHE."
              },
              "DIS_USB_JTAG_ERR": {
                "bit": 9,
                "description": "Indicates a programming error of DIS_USB_JTAG."
              },
              "POWERGLITCH_EN_ERR": {
                "bit": 10,
                "description": "Indicates a programming error of POWERGLITCH_EN."
              },
              "DIS_USB_SERIAL_JTAG_ERR": {
                "bit": 11,
                "description": "Indicates a programming error of DIS_USB_DEVICE."
              },
              "DIS_FORCE_DOWNLOAD_ERR": {
                "bit": 12,
                "description": "Indicates a programming error of DIS_FORCE_DOWNLOAD."
              },
              "SPI_DOWNLOAD_MSPI_DIS_ERR": {
                "bit": 13,
                "description": "Indicates a programming error of SPI_DOWNLOAD_MSPI_DIS."
              },
              "DIS_TWAI_ERR": {
                "bit": 14,
                "description": "Indicates a programming error of DIS_CAN."
              },
              "JTAG_SEL_ENABLE_ERR": {
                "bit": 15,
                "description": "Indicates a programming error of JTAG_SEL_ENABLE."
              },
              "SOFT_DIS_JTAG_ERR": {
                "bit": 16,
                "description": "Indicates a programming error of SOFT_DIS_JTAG.",
                "width": 3
              },
              "DIS_PAD_JTAG_ERR": {
                "bit": 19,
                "description": "Indicates a programming error of DIS_PAD_JTAG."
              },
              "DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR": {
                "bit": 20,
                "description": "Indicates a programming error of DIS_DOWNLOAD_MANUAL_ENCRYPT."
              },
              "USB_DREFH_ERR": {
                "bit": 21,
                "description": "Indicates a programming error of USB_DREFH.",
                "width": 2
              },
              "USB_DREFL_ERR": {
                "bit": 23,
                "description": "Indicates a programming error of USB_DREFL.",
                "width": 2
              },
              "USB_EXCHG_PINS_ERR": {
                "bit": 25,
                "description": "Indicates a programming error of USB_EXCHG_PINS."
              },
              "VDD_SPI_AS_GPIO_ERR": {
                "bit": 26,
                "description": "Indicates a programming error of VDD_SPI_AS_GPIO."
              },
              "RPT4_RESERVED0_ERR_2": {
                "bit": 27,
                "description": "Reserved.",
                "width": 2
              },
              "RPT4_RESERVED0_ERR_1": {
                "bit": 29,
                "description": "Reserved."
              },
              "RPT4_RESERVED0_ERR_0": {
                "bit": 30,
                "description": "Reserved.",
                "width": 2
              }
            },
            "RD_REPEAT_ERR1": {
              "RPT4_RESERVED1_ERR_0": {
                "bit": 0,
                "description": "Reserved.",
                "width": 16
              },
              "WDT_DELAY_SEL_ERR": {
                "bit": 16,
                "description": "Indicates a programming error of WDT_DELAY_SEL.",
                "width": 2
              },
              "SPI_BOOT_CRYPT_CNT_ERR": {
                "bit": 18,
                "description": "Indicates a programming error of SPI_BOOT_CRYPT_CNT.",
                "width": 3
              },
              "SECURE_BOOT_KEY_REVOKE0_ERR": {
                "bit": 21,
                "description": "Indicates a programming error of SECURE_BOOT_KEY_REVOKE0."
              },
              "SECURE_BOOT_KEY_REVOKE1_ERR": {
                "bit": 22,
                "description": "Indicates a programming error of SECURE_BOOT_KEY_REVOKE1."
              },
              "SECURE_BOOT_KEY_REVOKE2_ERR": {
                "bit": 23,
                "description": "Indicates a programming error of SECURE_BOOT_KEY_REVOKE2."
              },
              "KEY_PURPOSE_0_ERR": {
                "bit": 24,
                "description": "Indicates a programming error of KEY_PURPOSE_0.",
                "width": 4
              },
              "KEY_PURPOSE_1_ERR": {
                "bit": 28,
                "description": "Indicates a programming error of KEY_PURPOSE_1.",
                "width": 4
              }
            },
            "RD_REPEAT_ERR2": {
              "KEY_PURPOSE_2_ERR": {
                "bit": 0,
                "description": "Indicates a programming error of KEY_PURPOSE_2.",
                "width": 4
              },
              "KEY_PURPOSE_3_ERR": {
                "bit": 4,
                "description": "Indicates a programming error of KEY_PURPOSE_3.",
                "width": 4
              },
              "KEY_PURPOSE_4_ERR": {
                "bit": 8,
                "description": "Indicates a programming error of KEY_PURPOSE_4.",
                "width": 4
              },
              "KEY_PURPOSE_5_ERR": {
                "bit": 12,
                "description": "Indicates a programming error of KEY_PURPOSE_5.",
                "width": 4
              },
              "SEC_DPA_LEVEL_ERR": {
                "bit": 16,
                "description": "Indicates a programming error of SEC_DPA_LEVEL.",
                "width": 2
              },
              "RPT4_RESERVED2_ERR_1": {
                "bit": 18,
                "description": "Reserved."
              },
              "CRYPT_DPA_ENABLE_ERR": {
                "bit": 19,
                "description": "Indicates a programming error of CRYPT_DPA_ENABLE."
              },
              "SECURE_BOOT_EN_ERR": {
                "bit": 20,
                "description": "Indicates a programming error of SECURE_BOOT_EN."
              },
              "SECURE_BOOT_AGGRESSIVE_REVOKE_ERR": {
                "bit": 21,
                "description": "Indicates a programming error of SECURE_BOOT_AGGRESSIVE_REVOKE."
              },
              "RPT4_RESERVED2_ERR_0": {
                "bit": 22,
                "description": "Reserved.",
                "width": 6
              },
              "FLASH_TPUW_ERR": {
                "bit": 28,
                "description": "Indicates a programming error of FLASH_TPUW.",
                "width": 4
              }
            },
            "RD_REPEAT_ERR3": {
              "DIS_DOWNLOAD_MODE_ERR": {
                "bit": 0,
                "description": "Indicates a programming error of DIS_DOWNLOAD_MODE."
              },
              "DIS_DIRECT_BOOT_ERR": {
                "bit": 1,
                "description": "Indicates a programming error of DIS_DIRECT_BOOT."
              },
              "USB_PRINT_ERR": {
                "bit": 2,
                "description": "Indicates a programming error of UART_PRINT_CHANNEL."
              },
              "RPT4_RESERVED3_ERR_5": {
                "bit": 3,
                "description": "Reserved."
              },
              "DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE_ERR": {
                "bit": 4,
                "description": "Indicates a programming error of DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE."
              },
              "ENABLE_SECURITY_DOWNLOAD_ERR": {
                "bit": 5,
                "description": "Indicates a programming error of ENABLE_SECURITY_DOWNLOAD."
              },
              "UART_PRINT_CONTROL_ERR": {
                "bit": 6,
                "description": "Indicates a programming error of UART_PRINT_CONTROL.",
                "width": 2
              },
              "FORCE_SEND_RESUME_ERR": {
                "bit": 8,
                "description": "Indicates a programming error of FORCE_SEND_RESUME."
              },
              "SECURE_VERSION_ERR": {
                "bit": 9,
                "description": "Indicates a programming error of SECURE VERSION.",
                "width": 16
              },
              "SECURE_BOOT_DISABLE_FAST_WAKE_ERR": {
                "bit": 25,
                "description": "Indicates a programming error of SECURE_BOOT_DISABLE_FAST_WAKE."
              },
              "HYS_EN_PAD0_ERR": {
                "bit": 26,
                "description": "Indicates a programming error of HYS_EN_PAD0.",
                "width": 6
              }
            },
            "RD_REPEAT_ERR4": {
              "HYS_EN_PAD1_ERR": {
                "bit": 0,
                "description": "Indicates a programming error of HYS_EN_PAD1.",
                "width": 22
              },
              "RPT4_RESERVED4_ERR_1": {
                "bit": 22,
                "description": "Reserved.",
                "width": 2
              },
              "RPT4_RESERVED4_ERR_0": {
                "bit": 24,
                "description": "Reserved.",
                "width": 8
              }
            },
            "RD_RS_ERR0": {
              "MAC_SPI_8M_ERR_NUM": {
                "bit": 0,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "MAC_SPI_8M_FAIL": {
                "bit": 3,
                "description": "0: Means no failure and that the data of MAC_SPI_8M is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
              },
              "SYS_PART1_NUM": {
                "bit": 4,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "SYS_PART1_FAIL": {
                "bit": 7,
                "description": "0: Means no failure and that the data of system part1 is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
              },
              "USR_DATA_ERR_NUM": {
                "bit": 8,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "USR_DATA_FAIL": {
                "bit": 11,
                "description": "0: Means no failure and that the user data is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
              },
              "KEY0_ERR_NUM": {
                "bit": 12,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY0_FAIL": {
                "bit": 15,
                "description": "0: Means no failure and that the data of key0 is reliable 1: Means that programming key0 failed and the number of error bytes is over 6."
              },
              "KEY1_ERR_NUM": {
                "bit": 16,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY1_FAIL": {
                "bit": 19,
                "description": "0: Means no failure and that the data of key1 is reliable 1: Means that programming key1 failed and the number of error bytes is over 6."
              },
              "KEY2_ERR_NUM": {
                "bit": 20,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY2_FAIL": {
                "bit": 23,
                "description": "0: Means no failure and that the data of key2 is reliable 1: Means that programming key2 failed and the number of error bytes is over 6."
              },
              "KEY3_ERR_NUM": {
                "bit": 24,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY3_FAIL": {
                "bit": 27,
                "description": "0: Means no failure and that the data of key3 is reliable 1: Means that programming key3 failed and the number of error bytes is over 6."
              },
              "KEY4_ERR_NUM": {
                "bit": 28,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY4_FAIL": {
                "bit": 31,
                "description": "0: Means no failure and that the data of key4 is reliable 1: Means that programming key4 failed and the number of error bytes is over 6."
              }
            },
            "RD_RS_ERR1": {
              "KEY5_ERR_NUM": {
                "bit": 0,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "KEY5_FAIL": {
                "bit": 3,
                "description": "0: Means no failure and that the data of key5 is reliable 1: Means that programming key5 failed and the number of error bytes is over 6."
              },
              "SYS_PART2_ERR_NUM": {
                "bit": 4,
                "description": "The value of this signal means the number of error bytes.",
                "width": 3
              },
              "SYS_PART2_FAIL": {
                "bit": 7,
                "description": "0: Means no failure and that the data of system part2 is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
              }
            },
            "CLK": {
              "MEM_FORCE_PD": {
                "bit": 0,
                "description": "Set this bit to force eFuse SRAM into power-saving mode."
              },
              "MEM_CLK_FORCE_ON": {
                "bit": 1,
                "description": "Set this bit and force to activate clock signal of eFuse SRAM."
              },
              "MEM_FORCE_PU": {
                "bit": 2,
                "description": "Set this bit to force eFuse SRAM into working mode."
              },
              "EN": {
                "bit": 16,
                "description": "Set this bit to force enable eFuse register configuration clock signal."
              }
            },
            "CONF": {
              "OP_CODE": {
                "bit": 0,
                "description": "0x5A5A:  programming operation command 0x5AA5: read operation command.",
                "width": 16
              },
              "CFG_ECDSA_BLK": {
                "bit": 16,
                "description": "Configures which block to use for ECDSA key output.",
                "width": 4
              }
            },
            "STATUS": {
              "STATE": {
                "bit": 0,
                "description": "Indicates the state of the eFuse state machine.",
                "width": 4
              },
              "OTP_LOAD_SW": {
                "bit": 4,
                "description": "The value of OTP_LOAD_SW."
              },
              "OTP_VDDQ_C_SYNC2": {
                "bit": 5,
                "description": "The value of OTP_VDDQ_C_SYNC2."
              },
              "OTP_STROBE_SW": {
                "bit": 6,
                "description": "The value of OTP_STROBE_SW."
              },
              "OTP_CSB_SW": {
                "bit": 7,
                "description": "The value of OTP_CSB_SW."
              },
              "OTP_PGENB_SW": {
                "bit": 8,
                "description": "The value of OTP_PGENB_SW."
              },
              "OTP_VDDQ_IS_SW": {
                "bit": 9,
                "description": "The value of OTP_VDDQ_IS_SW."
              },
              "BLK0_VALID_BIT_CNT": {
                "bit": 10,
                "description": "Indicates the number of block valid bit.",
                "width": 10
              },
              "CUR_ECDSA_BLK": {
                "bit": 20,
                "description": "Indicates which block is used for ECDSA key output.",
                "width": 4
              }
            },
            "CMD": {
              "READ_CMD": {
                "bit": 0,
                "description": "Set this bit to send read command."
              },
              "PGM_CMD": {
                "bit": 1,
                "description": "Set this bit to send programming command."
              },
              "BLK_NUM": {
                "bit": 2,
                "description": "The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively.",
                "width": 4
              }
            },
            "INT_RAW": {
              "READ_DONE_INT_RAW": {
                "bit": 0,
                "description": "The raw bit signal for read_done interrupt."
              },
              "PGM_DONE_INT_RAW": {
                "bit": 1,
                "description": "The raw bit signal for pgm_done interrupt."
              }
            },
            "INT_ST": {
              "READ_DONE_INT_ST": {
                "bit": 0,
                "description": "The status signal for read_done interrupt."
              },
              "PGM_DONE_INT_ST": {
                "bit": 1,
                "description": "The status signal for pgm_done interrupt."
              }
            },
            "INT_ENA": {
              "READ_DONE_INT_ENA": {
                "bit": 0,
                "description": "The enable signal for read_done interrupt."
              },
              "PGM_DONE_INT_ENA": {
                "bit": 1,
                "description": "The enable signal for pgm_done interrupt."
              }
            },
            "INT_CLR": {
              "READ_DONE_INT_CLR": {
                "bit": 0,
                "description": "The clear signal for read_done interrupt."
              },
              "PGM_DONE_INT_CLR": {
                "bit": 1,
                "description": "The clear signal for pgm_done interrupt."
              }
            },
            "DAC_CONF": {
              "DAC_CLK_DIV": {
                "bit": 0,
                "description": "Controls the division factor of the rising clock of the programming voltage.",
                "width": 8
              },
              "DAC_CLK_PAD_SEL": {
                "bit": 8,
                "description": "Don't care."
              },
              "DAC_NUM": {
                "bit": 9,
                "description": "Controls the rising period of the programming voltage.",
                "width": 8
              },
              "OE_CLR": {
                "bit": 17,
                "description": "Reduces the power supply of the programming voltage."
              }
            },
            "RD_TIM_CONF": {
              "THR_A": {
                "bit": 0,
                "description": "Configures the read hold time.",
                "width": 8
              },
              "TRD": {
                "bit": 8,
                "description": "Configures the read time.",
                "width": 8
              },
              "TSUR_A": {
                "bit": 16,
                "description": "Configures the read setup time.",
                "width": 8
              },
              "READ_INIT_NUM": {
                "bit": 24,
                "description": "Configures the waiting time of reading eFuse memory.",
                "width": 8
              }
            },
            "WR_TIM_CONF1": {
              "TSUP_A": {
                "bit": 0,
                "description": "Configures the programming setup time.",
                "width": 8
              },
              "PWR_ON_NUM": {
                "bit": 8,
                "description": "Configures the power up time for VDDQ.",
                "width": 16
              },
              "THP_A": {
                "bit": 24,
                "description": "Configures the programming hold time.",
                "width": 8
              }
            },
            "WR_TIM_CONF2": {
              "PWR_OFF_NUM": {
                "bit": 0,
                "description": "Configures the power outage time for VDDQ.",
                "width": 16
              },
              "TPGM": {
                "bit": 16,
                "description": "Configures the active programming time.",
                "width": 16
              }
            },
            "WR_TIM_CONF0_RS_BYPASS": {
              "BYPASS_RS_CORRECTION": {
                "bit": 0,
                "description": "Set this bit to bypass reed solomon correction step."
              },
              "BYPASS_RS_BLK_NUM": {
                "bit": 1,
                "description": "Configures block number of programming twice operation.",
                "width": 11
              },
              "UPDATE": {
                "bit": 12,
                "description": "Set this bit to update multi-bit register signals."
              },
              "TPGM_INACTIVE": {
                "bit": 13,
                "description": "Configures the inactive programming time.",
                "width": 8
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "Stores eFuse version.",
                "width": 28
              }
            }
          }
        },
        "GPIO": {
          "instances": [
            {
              "name": "GPIO",
              "base": "0x60091000",
              "irq": 22
            },
            {
              "name": "GPIO_SD",
              "base": "0x60091F00"
            }
          ],
          "registers": {
            "BT_SELECT": {
              "offset": "0x00",
              "size": 32,
              "description": "GPIO bit select register"
            },
            "OUT": {
              "offset": "0x04",
              "size": 32,
              "description": "GPIO output register for GPIO0-31"
            },
            "OUT_W1TS": {
              "offset": "0x08",
              "size": 32,
              "description": "GPIO output set register for GPIO0-31"
            },
            "OUT_W1TC": {
              "offset": "0x0C",
              "size": 32,
              "description": "GPIO output clear register for GPIO0-31"
            },
            "SDIO_SELECT": {
              "offset": "0x1C",
              "size": 32,
              "description": "GPIO sdio select register"
            },
            "ENABLE": {
              "offset": "0x20",
              "size": 32,
              "description": "GPIO output enable register for GPIO0-31"
            },
            "ENABLE_W1TS": {
              "offset": "0x24",
              "size": 32,
              "description": "GPIO output enable set register for GPIO0-31"
            },
            "ENABLE_W1TC": {
              "offset": "0x28",
              "size": 32,
              "description": "GPIO output enable clear register for GPIO0-31"
            },
            "STRAP": {
              "offset": "0x38",
              "size": 32,
              "description": "pad strapping register"
            },
            "IN": {
              "offset": "0x3C",
              "size": 32,
              "description": "GPIO input register for GPIO0-31"
            },
            "STATUS": {
              "offset": "0x44",
              "size": 32,
              "description": "GPIO interrupt status register for GPIO0-31"
            },
            "STATUS_W1TS": {
              "offset": "0x48",
              "size": 32,
              "description": "GPIO interrupt status set register for GPIO0-31"
            },
            "STATUS_W1TC": {
              "offset": "0x4C",
              "size": 32,
              "description": "GPIO interrupt status clear register for GPIO0-31"
            },
            "PCPU_INT": {
              "offset": "0x5C",
              "size": 32,
              "description": "GPIO PRO_CPU interrupt status register for GPIO0-31"
            },
            "PCPU_NMI_INT": {
              "offset": "0x60",
              "size": 32,
              "description": "GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-31"
            },
            "CPUSDIO_INT": {
              "offset": "0x64",
              "size": 32,
              "description": "GPIO CPUSDIO interrupt status register for GPIO0-31"
            },
            "PIN%s": {
              "offset": "0x74",
              "size": 32,
              "description": "GPIO pin configuration register"
            },
            "STATUS_NEXT": {
              "offset": "0x14C",
              "size": 32,
              "description": "GPIO interrupt source register for GPIO0-31"
            },
            "FUNC%s_IN_SEL_CFG": {
              "offset": "0x154",
              "size": 32,
              "description": "GPIO input function configuration register"
            },
            "FUNC%s_OUT_SEL_CFG": {
              "offset": "0x554",
              "size": 32,
              "description": "GPIO output function select register"
            },
            "CLOCK_GATE": {
              "offset": "0x62C",
              "size": 32,
              "description": "GPIO clock gate register"
            },
            "DATE": {
              "offset": "0x6FC",
              "size": 32,
              "description": "GPIO version register"
            }
          },
          "bits": {
            "BT_SELECT": {
              "BT_SEL": {
                "bit": 0,
                "description": "GPIO bit select register",
                "width": 32
              }
            },
            "OUT": {
              "DATA_ORIG": {
                "bit": 0,
                "description": "GPIO output register for GPIO0-31",
                "width": 32
              }
            },
            "OUT_W1TS": {
              "OUT_W1TS": {
                "bit": 0,
                "description": "GPIO output set register for GPIO0-31",
                "width": 32
              }
            },
            "OUT_W1TC": {
              "OUT_W1TC": {
                "bit": 0,
                "description": "GPIO output clear register for GPIO0-31",
                "width": 32
              }
            },
            "SDIO_SELECT": {
              "SDIO_SEL": {
                "bit": 0,
                "description": "GPIO sdio select register",
                "width": 8
              }
            },
            "ENABLE": {
              "DATA": {
                "bit": 0,
                "description": "GPIO output enable register for GPIO0-31",
                "width": 32
              }
            },
            "ENABLE_W1TS": {
              "ENABLE_W1TS": {
                "bit": 0,
                "description": "GPIO output enable set register for GPIO0-31",
                "width": 32
              }
            },
            "ENABLE_W1TC": {
              "ENABLE_W1TC": {
                "bit": 0,
                "description": "GPIO output enable clear register for GPIO0-31",
                "width": 32
              }
            },
            "STRAP": {
              "STRAPPING": {
                "bit": 0,
                "description": "pad strapping register",
                "width": 16
              }
            },
            "IN": {
              "DATA_NEXT": {
                "bit": 0,
                "description": "GPIO input register for GPIO0-31",
                "width": 32
              }
            },
            "STATUS": {
              "INTERRUPT": {
                "bit": 0,
                "description": "GPIO interrupt status register for GPIO0-31",
                "width": 32
              }
            },
            "STATUS_W1TS": {
              "STATUS_W1TS": {
                "bit": 0,
                "description": "GPIO interrupt status set register for GPIO0-31",
                "width": 32
              }
            },
            "STATUS_W1TC": {
              "STATUS_W1TC": {
                "bit": 0,
                "description": "GPIO interrupt status clear register for GPIO0-31",
                "width": 32
              }
            },
            "PCPU_INT": {
              "PROCPU_INT": {
                "bit": 0,
                "description": "GPIO PRO_CPU interrupt status register for GPIO0-31",
                "width": 32
              }
            },
            "PCPU_NMI_INT": {
              "PROCPU_NMI_INT": {
                "bit": 0,
                "description": "GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-31",
                "width": 32
              }
            },
            "CPUSDIO_INT": {
              "SDIO_INT": {
                "bit": 0,
                "description": "GPIO CPUSDIO interrupt status register for GPIO0-31",
                "width": 32
              }
            },
            "PIN%s": {
              "SYNC2_BYPASS": {
                "bit": 0,
                "description": "set GPIO input_sync2 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.",
                "width": 2
              },
              "PAD_DRIVER": {
                "bit": 2,
                "description": "set this bit to select pad driver. 1:open-drain. 0:normal."
              },
              "SYNC1_BYPASS": {
                "bit": 3,
                "description": "set GPIO input_sync1 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.",
                "width": 2
              },
              "INT_TYPE": {
                "bit": 7,
                "description": "set this value to choose interrupt mode. 0:disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level",
                "width": 3
              },
              "WAKEUP_ENABLE": {
                "bit": 10,
                "description": "set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)"
              },
              "CONFIG": {
                "bit": 11,
                "description": "reserved",
                "width": 2
              },
              "INT_ENA": {
                "bit": 13,
                "description": "set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.",
                "width": 5
              }
            },
            "STATUS_NEXT": {
              "STATUS_INTERRUPT_NEXT": {
                "bit": 0,
                "description": "GPIO interrupt source register for GPIO0-31",
                "width": 32
              }
            },
            "FUNC%s_IN_SEL_CFG": {
              "IN_SEL": {
                "bit": 0,
                "description": "set this value: s=0-34: connect GPIO[s] to this port. s=0x38: set this port always high level. s=0x3C: set this port always low level.",
                "width": 6
              },
              "IN_INV_SEL": {
                "bit": 6,
                "description": "set this bit to invert input signal. 1:invert. 0:not invert."
              },
              "SEL": {
                "bit": 7,
                "description": "set this bit to bypass GPIO. 1:do not bypass GPIO. 0:bypass GPIO."
              }
            },
            "FUNC%s_OUT_SEL_CFG": {
              "OUT_SEL": {
                "bit": 0,
                "description": "The value of the bits: 0<=s<=256. Set the value to select output signal. s=0-127: output of GPIO[n] equals input of peripheral[s]. s=128: output of GPIO[n] equals GPIO_OUT_REG[n].",
                "width": 8
              },
              "INV_SEL": {
                "bit": 8,
                "description": "set this bit to invert output signal.1:invert.0:not invert."
              },
              "OEN_SEL": {
                "bit": 9,
                "description": "set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.0:use peripheral output enable signal."
              },
              "OEN_INV_SEL": {
                "bit": 10,
                "description": "set this bit to invert output enable signal.1:invert.0:not invert."
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "set this bit to enable GPIO clock gate"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "version register",
                "width": 28
              }
            }
          }
        },
        "HP": {
          "instances": [
            {
              "name": "HP_APM",
              "base": "0x60099000",
              "irq": 26
            },
            {
              "name": "HP_SYS",
              "base": "0x60095000",
              "irq": 25
            }
          ],
          "registers": {
            "REGION_FILTER_EN": {
              "offset": "0x00",
              "size": 32,
              "description": "Region filter enable register"
            },
            "REGION0_ADDR_START": {
              "offset": "0x04",
              "size": 32,
              "description": "Region address register"
            },
            "REGION0_ADDR_END": {
              "offset": "0x08",
              "size": 32,
              "description": "Region address register"
            },
            "REGION0_PMS_ATTR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION1_ADDR_START": {
              "offset": "0x10",
              "size": 32,
              "description": "Region address register"
            },
            "REGION1_ADDR_END": {
              "offset": "0x14",
              "size": 32,
              "description": "Region address register"
            },
            "REGION1_PMS_ATTR": {
              "offset": "0x18",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION2_ADDR_START": {
              "offset": "0x1C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION2_ADDR_END": {
              "offset": "0x20",
              "size": 32,
              "description": "Region address register"
            },
            "REGION2_PMS_ATTR": {
              "offset": "0x24",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION3_ADDR_START": {
              "offset": "0x28",
              "size": 32,
              "description": "Region address register"
            },
            "REGION3_ADDR_END": {
              "offset": "0x2C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION3_PMS_ATTR": {
              "offset": "0x30",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION4_ADDR_START": {
              "offset": "0x34",
              "size": 32,
              "description": "Region address register"
            },
            "REGION4_ADDR_END": {
              "offset": "0x38",
              "size": 32,
              "description": "Region address register"
            },
            "REGION4_PMS_ATTR": {
              "offset": "0x3C",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION5_ADDR_START": {
              "offset": "0x40",
              "size": 32,
              "description": "Region address register"
            },
            "REGION5_ADDR_END": {
              "offset": "0x44",
              "size": 32,
              "description": "Region address register"
            },
            "REGION5_PMS_ATTR": {
              "offset": "0x48",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION6_ADDR_START": {
              "offset": "0x4C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION6_ADDR_END": {
              "offset": "0x50",
              "size": 32,
              "description": "Region address register"
            },
            "REGION6_PMS_ATTR": {
              "offset": "0x54",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION7_ADDR_START": {
              "offset": "0x58",
              "size": 32,
              "description": "Region address register"
            },
            "REGION7_ADDR_END": {
              "offset": "0x5C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION7_PMS_ATTR": {
              "offset": "0x60",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION8_ADDR_START": {
              "offset": "0x64",
              "size": 32,
              "description": "Region address register"
            },
            "REGION8_ADDR_END": {
              "offset": "0x68",
              "size": 32,
              "description": "Region address register"
            },
            "REGION8_PMS_ATTR": {
              "offset": "0x6C",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION9_ADDR_START": {
              "offset": "0x70",
              "size": 32,
              "description": "Region address register"
            },
            "REGION9_ADDR_END": {
              "offset": "0x74",
              "size": 32,
              "description": "Region address register"
            },
            "REGION9_PMS_ATTR": {
              "offset": "0x78",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION10_ADDR_START": {
              "offset": "0x7C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION10_ADDR_END": {
              "offset": "0x80",
              "size": 32,
              "description": "Region address register"
            },
            "REGION10_PMS_ATTR": {
              "offset": "0x84",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION11_ADDR_START": {
              "offset": "0x88",
              "size": 32,
              "description": "Region address register"
            },
            "REGION11_ADDR_END": {
              "offset": "0x8C",
              "size": 32,
              "description": "Region address register"
            },
            "REGION11_PMS_ATTR": {
              "offset": "0x90",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION12_ADDR_START": {
              "offset": "0x94",
              "size": 32,
              "description": "Region address register"
            },
            "REGION12_ADDR_END": {
              "offset": "0x98",
              "size": 32,
              "description": "Region address register"
            },
            "REGION12_PMS_ATTR": {
              "offset": "0x9C",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION13_ADDR_START": {
              "offset": "0xA0",
              "size": 32,
              "description": "Region address register"
            },
            "REGION13_ADDR_END": {
              "offset": "0xA4",
              "size": 32,
              "description": "Region address register"
            },
            "REGION13_PMS_ATTR": {
              "offset": "0xA8",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION14_ADDR_START": {
              "offset": "0xAC",
              "size": 32,
              "description": "Region address register"
            },
            "REGION14_ADDR_END": {
              "offset": "0xB0",
              "size": 32,
              "description": "Region address register"
            },
            "REGION14_PMS_ATTR": {
              "offset": "0xB4",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "REGION15_ADDR_START": {
              "offset": "0xB8",
              "size": 32,
              "description": "Region address register"
            },
            "REGION15_ADDR_END": {
              "offset": "0xBC",
              "size": 32,
              "description": "Region address register"
            },
            "REGION15_PMS_ATTR": {
              "offset": "0xC0",
              "size": 32,
              "description": "Region access authority attribute register"
            },
            "FUNC_CTRL": {
              "offset": "0xC4",
              "size": 32,
              "description": "PMS function control register"
            },
            "M0_STATUS": {
              "offset": "0xC8",
              "size": 32,
              "description": "M0 status register"
            },
            "M0_STATUS_CLR": {
              "offset": "0xCC",
              "size": 32,
              "description": "M0 status clear register"
            },
            "M0_EXCEPTION_INFO0": {
              "offset": "0xD0",
              "size": 32,
              "description": "M0 exception_info0 register"
            },
            "M0_EXCEPTION_INFO1": {
              "offset": "0xD4",
              "size": 32,
              "description": "M0 exception_info1 register"
            },
            "M1_STATUS": {
              "offset": "0xD8",
              "size": 32,
              "description": "M1 status register"
            },
            "M1_STATUS_CLR": {
              "offset": "0xDC",
              "size": 32,
              "description": "M1 status clear register"
            },
            "M1_EXCEPTION_INFO0": {
              "offset": "0xE0",
              "size": 32,
              "description": "M1 exception_info0 register"
            },
            "M1_EXCEPTION_INFO1": {
              "offset": "0xE4",
              "size": 32,
              "description": "M1 exception_info1 register"
            },
            "M2_STATUS": {
              "offset": "0xE8",
              "size": 32,
              "description": "M2 status register"
            },
            "M2_STATUS_CLR": {
              "offset": "0xEC",
              "size": 32,
              "description": "M2 status clear register"
            },
            "M2_EXCEPTION_INFO0": {
              "offset": "0xF0",
              "size": 32,
              "description": "M2 exception_info0 register"
            },
            "M2_EXCEPTION_INFO1": {
              "offset": "0xF4",
              "size": 32,
              "description": "M2 exception_info1 register"
            },
            "M3_STATUS": {
              "offset": "0xF8",
              "size": 32,
              "description": "M3 status register"
            },
            "M3_STATUS_CLR": {
              "offset": "0xFC",
              "size": 32,
              "description": "M3 status clear register"
            },
            "M3_EXCEPTION_INFO0": {
              "offset": "0x100",
              "size": 32,
              "description": "M3 exception_info0 register"
            },
            "M3_EXCEPTION_INFO1": {
              "offset": "0x104",
              "size": 32,
              "description": "M3 exception_info1 register"
            },
            "INT_EN": {
              "offset": "0x108",
              "size": 32,
              "description": "APM interrupt enable register"
            },
            "CLOCK_GATE": {
              "offset": "0x10C",
              "size": 32,
              "description": "clock gating register"
            },
            "DATE": {
              "offset": "0x7FC",
              "size": 32,
              "description": "Version register"
            }
          },
          "bits": {
            "REGION_FILTER_EN": {
              "REGION_FILTER_EN": {
                "bit": 0,
                "description": "Region filter enable",
                "width": 16
              }
            },
            "REGION0_ADDR_START": {
              "REGION0_ADDR_START": {
                "bit": 0,
                "description": "Start address of region0",
                "width": 32
              }
            },
            "REGION0_ADDR_END": {
              "REGION0_ADDR_END": {
                "bit": 0,
                "description": "End address of region0",
                "width": 32
              }
            },
            "REGION0_PMS_ATTR": {
              "REGION0_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION0_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION0_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION0_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION0_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION0_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION0_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION0_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION0_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION1_ADDR_START": {
              "REGION1_ADDR_START": {
                "bit": 0,
                "description": "Start address of region1",
                "width": 32
              }
            },
            "REGION1_ADDR_END": {
              "REGION1_ADDR_END": {
                "bit": 0,
                "description": "End address of region1",
                "width": 32
              }
            },
            "REGION1_PMS_ATTR": {
              "REGION1_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION1_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION1_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION1_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION1_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION1_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION1_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION1_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION1_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION2_ADDR_START": {
              "REGION2_ADDR_START": {
                "bit": 0,
                "description": "Start address of region2",
                "width": 32
              }
            },
            "REGION2_ADDR_END": {
              "REGION2_ADDR_END": {
                "bit": 0,
                "description": "End address of region2",
                "width": 32
              }
            },
            "REGION2_PMS_ATTR": {
              "REGION2_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION2_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION2_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION2_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION2_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION2_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION2_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION2_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION2_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION3_ADDR_START": {
              "REGION3_ADDR_START": {
                "bit": 0,
                "description": "Start address of region3",
                "width": 32
              }
            },
            "REGION3_ADDR_END": {
              "REGION3_ADDR_END": {
                "bit": 0,
                "description": "End address of region3",
                "width": 32
              }
            },
            "REGION3_PMS_ATTR": {
              "REGION3_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION3_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION3_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION3_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION3_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION3_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION3_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION3_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION3_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION4_ADDR_START": {
              "REGION4_ADDR_START": {
                "bit": 0,
                "description": "Start address of region4",
                "width": 32
              }
            },
            "REGION4_ADDR_END": {
              "REGION4_ADDR_END": {
                "bit": 0,
                "description": "End address of region4",
                "width": 32
              }
            },
            "REGION4_PMS_ATTR": {
              "REGION4_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION4_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION4_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION4_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION4_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION4_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION4_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION4_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION4_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION5_ADDR_START": {
              "REGION5_ADDR_START": {
                "bit": 0,
                "description": "Start address of region5",
                "width": 32
              }
            },
            "REGION5_ADDR_END": {
              "REGION5_ADDR_END": {
                "bit": 0,
                "description": "End address of region5",
                "width": 32
              }
            },
            "REGION5_PMS_ATTR": {
              "REGION5_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION5_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION5_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION5_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION5_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION5_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION5_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION5_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION5_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION6_ADDR_START": {
              "REGION6_ADDR_START": {
                "bit": 0,
                "description": "Start address of region6",
                "width": 32
              }
            },
            "REGION6_ADDR_END": {
              "REGION6_ADDR_END": {
                "bit": 0,
                "description": "End address of region6",
                "width": 32
              }
            },
            "REGION6_PMS_ATTR": {
              "REGION6_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION6_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION6_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION6_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION6_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION6_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION6_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION6_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION6_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION7_ADDR_START": {
              "REGION7_ADDR_START": {
                "bit": 0,
                "description": "Start address of region7",
                "width": 32
              }
            },
            "REGION7_ADDR_END": {
              "REGION7_ADDR_END": {
                "bit": 0,
                "description": "End address of region7",
                "width": 32
              }
            },
            "REGION7_PMS_ATTR": {
              "REGION7_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION7_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION7_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION7_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION7_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION7_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION7_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION7_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION7_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION8_ADDR_START": {
              "REGION8_ADDR_START": {
                "bit": 0,
                "description": "Start address of region8",
                "width": 32
              }
            },
            "REGION8_ADDR_END": {
              "REGION8_ADDR_END": {
                "bit": 0,
                "description": "End address of region8",
                "width": 32
              }
            },
            "REGION8_PMS_ATTR": {
              "REGION8_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION8_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION8_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION8_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION8_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION8_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION8_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION8_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION8_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION9_ADDR_START": {
              "REGION9_ADDR_START": {
                "bit": 0,
                "description": "Start address of region9",
                "width": 32
              }
            },
            "REGION9_ADDR_END": {
              "REGION9_ADDR_END": {
                "bit": 0,
                "description": "End address of region9",
                "width": 32
              }
            },
            "REGION9_PMS_ATTR": {
              "REGION9_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION9_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION9_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION9_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION9_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION9_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION9_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION9_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION9_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION10_ADDR_START": {
              "REGION10_ADDR_START": {
                "bit": 0,
                "description": "Start address of region10",
                "width": 32
              }
            },
            "REGION10_ADDR_END": {
              "REGION10_ADDR_END": {
                "bit": 0,
                "description": "End address of region10",
                "width": 32
              }
            },
            "REGION10_PMS_ATTR": {
              "REGION10_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION10_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION10_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION10_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION10_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION10_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION10_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION10_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION10_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION11_ADDR_START": {
              "REGION11_ADDR_START": {
                "bit": 0,
                "description": "Start address of region11",
                "width": 32
              }
            },
            "REGION11_ADDR_END": {
              "REGION11_ADDR_END": {
                "bit": 0,
                "description": "End address of region11",
                "width": 32
              }
            },
            "REGION11_PMS_ATTR": {
              "REGION11_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION11_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION11_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION11_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION11_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION11_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION11_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION11_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION11_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION12_ADDR_START": {
              "REGION12_ADDR_START": {
                "bit": 0,
                "description": "Start address of region12",
                "width": 32
              }
            },
            "REGION12_ADDR_END": {
              "REGION12_ADDR_END": {
                "bit": 0,
                "description": "End address of region12",
                "width": 32
              }
            },
            "REGION12_PMS_ATTR": {
              "REGION12_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION12_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION12_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION12_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION12_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION12_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION12_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION12_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION12_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION13_ADDR_START": {
              "REGION13_ADDR_START": {
                "bit": 0,
                "description": "Start address of region13",
                "width": 32
              }
            },
            "REGION13_ADDR_END": {
              "REGION13_ADDR_END": {
                "bit": 0,
                "description": "End address of region13",
                "width": 32
              }
            },
            "REGION13_PMS_ATTR": {
              "REGION13_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION13_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION13_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION13_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION13_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION13_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION13_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION13_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION13_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION14_ADDR_START": {
              "REGION14_ADDR_START": {
                "bit": 0,
                "description": "Start address of region14",
                "width": 32
              }
            },
            "REGION14_ADDR_END": {
              "REGION14_ADDR_END": {
                "bit": 0,
                "description": "End address of region14",
                "width": 32
              }
            },
            "REGION14_PMS_ATTR": {
              "REGION14_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION14_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION14_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION14_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION14_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION14_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION14_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION14_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION14_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "REGION15_ADDR_START": {
              "REGION15_ADDR_START": {
                "bit": 0,
                "description": "Start address of region15",
                "width": 32
              }
            },
            "REGION15_ADDR_END": {
              "REGION15_ADDR_END": {
                "bit": 0,
                "description": "End address of region15",
                "width": 32
              }
            },
            "REGION15_PMS_ATTR": {
              "REGION15_R0_PMS_X": {
                "bit": 0,
                "description": "Region execute authority in REE_MODE0"
              },
              "REGION15_R0_PMS_W": {
                "bit": 1,
                "description": "Region write authority in REE_MODE0"
              },
              "REGION15_R0_PMS_R": {
                "bit": 2,
                "description": "Region read authority in REE_MODE0"
              },
              "REGION15_R1_PMS_X": {
                "bit": 4,
                "description": "Region execute authority in REE_MODE1"
              },
              "REGION15_R1_PMS_W": {
                "bit": 5,
                "description": "Region write authority in REE_MODE1"
              },
              "REGION15_R1_PMS_R": {
                "bit": 6,
                "description": "Region read authority in REE_MODE1"
              },
              "REGION15_R2_PMS_X": {
                "bit": 8,
                "description": "Region execute authority in REE_MODE2"
              },
              "REGION15_R2_PMS_W": {
                "bit": 9,
                "description": "Region write authority in REE_MODE2"
              },
              "REGION15_R2_PMS_R": {
                "bit": 10,
                "description": "Region read authority in REE_MODE2"
              }
            },
            "FUNC_CTRL": {
              "M0_PMS_FUNC_EN": {
                "bit": 0,
                "description": "PMS M0 function enable"
              },
              "M1_PMS_FUNC_EN": {
                "bit": 1,
                "description": "PMS M1 function enable"
              },
              "M2_PMS_FUNC_EN": {
                "bit": 2,
                "description": "PMS M2 function enable"
              },
              "M3_PMS_FUNC_EN": {
                "bit": 3,
                "description": "PMS M3 function enable"
              }
            },
            "M0_STATUS": {
              "M0_EXCEPTION_STATUS": {
                "bit": 0,
                "description": "Exception status",
                "width": 2
              }
            },
            "M0_STATUS_CLR": {
              "M0_REGION_STATUS_CLR": {
                "bit": 0,
                "description": "Clear exception status"
              }
            },
            "M0_EXCEPTION_INFO0": {
              "M0_EXCEPTION_REGION": {
                "bit": 0,
                "description": "Exception region",
                "width": 16
              },
              "M0_EXCEPTION_MODE": {
                "bit": 16,
                "description": "Exception mode",
                "width": 2
              },
              "M0_EXCEPTION_ID": {
                "bit": 18,
                "description": "Exception id information",
                "width": 5
              }
            },
            "M0_EXCEPTION_INFO1": {
              "M0_EXCEPTION_ADDR": {
                "bit": 0,
                "description": "Exception addr",
                "width": 32
              }
            },
            "M1_STATUS": {
              "M1_EXCEPTION_STATUS": {
                "bit": 0,
                "description": "Exception status",
                "width": 2
              }
            },
            "M1_STATUS_CLR": {
              "M1_REGION_STATUS_CLR": {
                "bit": 0,
                "description": "Clear exception status"
              }
            },
            "M1_EXCEPTION_INFO0": {
              "M1_EXCEPTION_REGION": {
                "bit": 0,
                "description": "Exception region",
                "width": 16
              },
              "M1_EXCEPTION_MODE": {
                "bit": 16,
                "description": "Exception mode",
                "width": 2
              },
              "M1_EXCEPTION_ID": {
                "bit": 18,
                "description": "Exception id information",
                "width": 5
              }
            },
            "M1_EXCEPTION_INFO1": {
              "M1_EXCEPTION_ADDR": {
                "bit": 0,
                "description": "Exception addr",
                "width": 32
              }
            },
            "M2_STATUS": {
              "M2_EXCEPTION_STATUS": {
                "bit": 0,
                "description": "Exception status",
                "width": 2
              }
            },
            "M2_STATUS_CLR": {
              "M2_REGION_STATUS_CLR": {
                "bit": 0,
                "description": "Clear exception status"
              }
            },
            "M2_EXCEPTION_INFO0": {
              "M2_EXCEPTION_REGION": {
                "bit": 0,
                "description": "Exception region",
                "width": 16
              },
              "M2_EXCEPTION_MODE": {
                "bit": 16,
                "description": "Exception mode",
                "width": 2
              },
              "M2_EXCEPTION_ID": {
                "bit": 18,
                "description": "Exception id information",
                "width": 5
              }
            },
            "M2_EXCEPTION_INFO1": {
              "M2_EXCEPTION_ADDR": {
                "bit": 0,
                "description": "Exception addr",
                "width": 32
              }
            },
            "M3_STATUS": {
              "M3_EXCEPTION_STATUS": {
                "bit": 0,
                "description": "Exception status",
                "width": 2
              }
            },
            "M3_STATUS_CLR": {
              "M3_REGION_STATUS_CLR": {
                "bit": 0,
                "description": "Clear exception status"
              }
            },
            "M3_EXCEPTION_INFO0": {
              "M3_EXCEPTION_REGION": {
                "bit": 0,
                "description": "Exception region",
                "width": 16
              },
              "M3_EXCEPTION_MODE": {
                "bit": 16,
                "description": "Exception mode",
                "width": 2
              },
              "M3_EXCEPTION_ID": {
                "bit": 18,
                "description": "Exception id information",
                "width": 5
              }
            },
            "M3_EXCEPTION_INFO1": {
              "M3_EXCEPTION_ADDR": {
                "bit": 0,
                "description": "Exception addr",
                "width": 32
              }
            },
            "INT_EN": {
              "M0_APM_INT_EN": {
                "bit": 0,
                "description": "APM M0 interrupt enable"
              },
              "M1_APM_INT_EN": {
                "bit": 1,
                "description": "APM M1 interrupt enable"
              },
              "M2_APM_INT_EN": {
                "bit": 2,
                "description": "APM M2 interrupt enable"
              },
              "M3_APM_INT_EN": {
                "bit": 3,
                "description": "APM M3 interrupt enable"
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "reg_clk_en"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "reg_date",
                "width": 28
              }
            }
          }
        },
        "I2C": {
          "instances": [
            {
              "name": "I2C0",
              "base": "0x60004000",
              "irq": 39
            },
            {
              "name": "I2C1",
              "base": "0x60005000",
              "irq": 40
            }
          ],
          "registers": {
            "SCL_LOW_PERIOD": {
              "offset": "0x00",
              "size": 32,
              "description": "Configures the low level width of the SCL\nClock"
            },
            "CTR": {
              "offset": "0x04",
              "size": 32,
              "description": "Transmission setting"
            },
            "SR": {
              "offset": "0x08",
              "size": 32,
              "description": "Describe I2C work status."
            },
            "TO": {
              "offset": "0x0C",
              "size": 32,
              "description": "Setting time out control for receiving data."
            },
            "SLAVE_ADDR": {
              "offset": "0x10",
              "size": 32,
              "description": "Local slave address setting"
            },
            "FIFO_ST": {
              "offset": "0x14",
              "size": 32,
              "description": "FIFO status register."
            },
            "FIFO_CONF": {
              "offset": "0x18",
              "size": 32,
              "description": "FIFO configuration register."
            },
            "DATA": {
              "offset": "0x1C",
              "size": 32,
              "description": "Rx FIFO read data."
            },
            "INT_RAW": {
              "offset": "0x20",
              "size": 32,
              "description": "Raw interrupt status"
            },
            "INT_CLR": {
              "offset": "0x24",
              "size": 32,
              "description": "Interrupt clear bits"
            },
            "INT_ENA": {
              "offset": "0x28",
              "size": 32,
              "description": "Interrupt enable bits"
            },
            "INT_STATUS": {
              "offset": "0x2C",
              "size": 32,
              "description": "Status of captured I2C communication events"
            },
            "SDA_HOLD": {
              "offset": "0x30",
              "size": 32,
              "description": "Configures the hold time after a negative SCL edge."
            },
            "SDA_SAMPLE": {
              "offset": "0x34",
              "size": 32,
              "description": "Configures the sample time after a positive SCL edge."
            },
            "SCL_HIGH_PERIOD": {
              "offset": "0x38",
              "size": 32,
              "description": "Configures the high level width of SCL"
            },
            "SCL_START_HOLD": {
              "offset": "0x40",
              "size": 32,
              "description": "Configures the delay between the SDA and SCL negative edge for a start condition"
            },
            "SCL_RSTART_SETUP": {
              "offset": "0x44",
              "size": 32,
              "description": "Configures the delay between the positive\nedge of SCL and the negative edge of SDA"
            },
            "SCL_STOP_HOLD": {
              "offset": "0x48",
              "size": 32,
              "description": "Configures the delay after the SCL clock\nedge for a stop condition"
            },
            "SCL_STOP_SETUP": {
              "offset": "0x4C",
              "size": 32,
              "description": "Configures the delay between the SDA and\nSCL positive edge for a stop condition"
            },
            "FILTER_CFG": {
              "offset": "0x50",
              "size": 32,
              "description": "SCL and SDA filter configuration register"
            },
            "CLK_CONF": {
              "offset": "0x54",
              "size": 32,
              "description": "I2C CLK configuration register"
            },
            "COMD%s": {
              "offset": "0x58",
              "size": 32,
              "description": "I2C command register %s"
            },
            "SCL_ST_TIME_OUT": {
              "offset": "0x78",
              "size": 32,
              "description": "SCL status time out register"
            },
            "SCL_MAIN_ST_TIME_OUT": {
              "offset": "0x7C",
              "size": 32,
              "description": "SCL main status time out register"
            },
            "SCL_SP_CONF": {
              "offset": "0x80",
              "size": 32,
              "description": "Power configuration register"
            },
            "SCL_STRETCH_CONF": {
              "offset": "0x84",
              "size": 32,
              "description": "Set SCL stretch of I2C slave"
            },
            "DATE": {
              "offset": "0xF8",
              "size": 32,
              "description": "Version register"
            },
            "TXFIFO_START_ADDR": {
              "offset": "0x100",
              "size": 32,
              "description": "I2C TXFIFO base address register"
            },
            "RXFIFO_START_ADDR": {
              "offset": "0x180",
              "size": 32,
              "description": "I2C RXFIFO base address register"
            }
          },
          "bits": {
            "SCL_LOW_PERIOD": {
              "SCL_LOW_PERIOD": {
                "bit": 0,
                "description": "This register is used to configure for how long SCL remains low in master mode, in I2C module clock cycles.",
                "width": 9
              }
            },
            "CTR": {
              "SDA_FORCE_OUT": {
                "bit": 0,
                "description": "1: direct output, 0: open drain output."
              },
              "SCL_FORCE_OUT": {
                "bit": 1,
                "description": "1: direct output, 0: open drain output."
              },
              "SAMPLE_SCL_LEVEL": {
                "bit": 2,
                "description": "This register is used to select the sample mode.\n1: sample SDA data on the SCL low level.\n0: sample SDA data on the SCL high level."
              },
              "RX_FULL_ACK_LEVEL": {
                "bit": 3,
                "description": "This register is used to configure the ACK value that need to sent by master when the rx_fifo_cnt has reached the threshold."
              },
              "MS_MODE": {
                "bit": 4,
                "description": "Set this bit to configure the module as an I2C Master. Clear this bit to configure the\nmodule as an I2C Slave."
              },
              "TRANS_START": {
                "bit": 5,
                "description": "Set this bit to start sending the data in txfifo."
              },
              "TX_LSB_FIRST": {
                "bit": 6,
                "description": "This bit is used to control the sending mode for data needing to be sent. \n1: send data from the least significant bit,\n0: send data from the most significant bit."
              },
              "RX_LSB_FIRST": {
                "bit": 7,
                "description": "This bit is used to control the storage mode for received data.\n1: receive data from the least significant bit,\n0: receive data from the most significant bit."
              },
              "CLK_EN": {
                "bit": 8,
                "description": "Reserved"
              },
              "ARBITRATION_EN": {
                "bit": 9,
                "description": "This is the enable bit for arbitration_lost."
              },
              "FSM_RST": {
                "bit": 10,
                "description": "This register is used to reset the scl FMS."
              },
              "CONF_UPGATE": {
                "bit": 11,
                "description": "synchronization bit"
              },
              "SLV_TX_AUTO_START_EN": {
                "bit": 12,
                "description": "This is the enable bit for slave to send data automatically"
              },
              "ADDR_10BIT_RW_CHECK_EN": {
                "bit": 13,
                "description": "This is the enable bit to check if the r/w bit of 10bit addressing consists with I2C protocol"
              },
              "ADDR_BROADCASTING_EN": {
                "bit": 14,
                "description": "This is the enable bit to support the 7bit general call function."
              }
            },
            "SR": {
              "RESP_REC": {
                "bit": 0,
                "description": "The received ACK value in master mode or slave mode. 0: ACK, 1: NACK."
              },
              "SLAVE_RW": {
                "bit": 1,
                "description": "When in slave mode, 1: master reads from slave, 0: master writes to slave."
              },
              "ARB_LOST": {
                "bit": 3,
                "description": "When the I2C controller loses control of SCL line, this register changes to 1."
              },
              "BUS_BUSY": {
                "bit": 4,
                "description": "1: the I2C bus is busy transferring data, 0: the I2C bus is in idle state."
              },
              "SLAVE_ADDRESSED": {
                "bit": 5,
                "description": "When configured as an I2C Slave, and the address sent by the master is\nequal to the address of the slave, then this bit will be of high level."
              },
              "RXFIFO_CNT": {
                "bit": 8,
                "description": "This field represents the amount of data needed to be sent.",
                "width": 6
              },
              "STRETCH_CAUSE": {
                "bit": 14,
                "description": "The cause of stretching SCL low in slave mode. 0:  stretching SCL low at the beginning of I2C read data state. 1: stretching SCL low when I2C Tx FIFO is empty in slave mode. 2: stretching SCL low when I2C Rx FIFO is full in slave mode.",
                "width": 2
              },
              "TXFIFO_CNT": {
                "bit": 18,
                "description": "This field stores the amount of received data in RAM.",
                "width": 6
              },
              "SCL_MAIN_STATE_LAST": {
                "bit": 24,
                "description": "This field indicates the states of the I2C module state machine. \n0: Idle, 1: Address shift, 2: ACK address, 3: Rx data, 4: Tx data, 5: Send ACK, 6: Wait ACK",
                "width": 3
              },
              "SCL_STATE_LAST": {
                "bit": 28,
                "description": "This field indicates the states of the state machine used to produce SCL.\n0: Idle, 1: Start, 2: Negative edge, 3: Low, 4: Positive edge, 5: High, 6: Stop",
                "width": 3
              }
            },
            "TO": {
              "TIME_OUT_VALUE": {
                "bit": 0,
                "description": "This register is used to configure the timeout for receiving a data bit in APB\nclock cycles.",
                "width": 5
              },
              "TIME_OUT_EN": {
                "bit": 5,
                "description": "This is the enable bit for time out control."
              }
            },
            "SLAVE_ADDR": {
              "SLAVE_ADDR": {
                "bit": 0,
                "description": "When configured as an I2C Slave, this field is used to configure the slave address.",
                "width": 15
              },
              "ADDR_10BIT_EN": {
                "bit": 31,
                "description": "This field is used to enable the slave 10-bit addressing mode in master mode."
              }
            },
            "FIFO_ST": {
              "RXFIFO_RADDR": {
                "bit": 0,
                "description": "This is the offset address of the APB reading from rxfifo",
                "width": 5
              },
              "RXFIFO_WADDR": {
                "bit": 5,
                "description": "This is the offset address of i2c module receiving data and writing to rxfifo.",
                "width": 5
              },
              "TXFIFO_RADDR": {
                "bit": 10,
                "description": "This is the offset address of i2c module reading from txfifo.",
                "width": 5
              },
              "TXFIFO_WADDR": {
                "bit": 15,
                "description": "This is the offset address of APB bus writing to txfifo.",
                "width": 5
              },
              "SLAVE_RW_POINT": {
                "bit": 22,
                "description": "The received data in I2C slave mode.",
                "width": 8
              }
            },
            "FIFO_CONF": {
              "RXFIFO_WM_THRHD": {
                "bit": 0,
                "description": "The water mark threshold of rx FIFO in nonfifo access mode. When reg_reg_fifo_prt_en is 1 and rx FIFO counter is bigger than reg_rxfifo_wm_thrhd[4:0], reg_rxfifo_wm_int_raw bit will be valid.",
                "width": 5
              },
              "TXFIFO_WM_THRHD": {
                "bit": 5,
                "description": "The water mark threshold of tx FIFO in nonfifo access mode. When reg_reg_fifo_prt_en is 1 and tx FIFO counter is smaller than reg_txfifo_wm_thrhd[4:0], reg_txfifo_wm_int_raw bit will be valid.",
                "width": 5
              },
              "NONFIFO_EN": {
                "bit": 10,
                "description": "Set this bit to enable APB nonfifo access."
              },
              "FIFO_ADDR_CFG_EN": {
                "bit": 11,
                "description": "When this bit is set to 1, the byte received after the I2C address byte represents the offset address in the I2C Slave RAM."
              },
              "RX_FIFO_RST": {
                "bit": 12,
                "description": "Set this bit to reset rx-fifo."
              },
              "TX_FIFO_RST": {
                "bit": 13,
                "description": "Set this bit to reset tx-fifo."
              },
              "FIFO_PRT_EN": {
                "bit": 14,
                "description": "The control enable bit of FIFO pointer in non-fifo access mode. This bit controls the valid bits and the interrupts of tx/rx_fifo overflow, underflow, full and empty."
              }
            },
            "DATA": {
              "FIFO_RDATA": {
                "bit": 0,
                "description": "The value of rx FIFO read data.",
                "width": 8
              }
            },
            "INT_RAW": {
              "RXFIFO_WM_INT_RAW": {
                "bit": 0,
                "description": "The raw interrupt bit for I2C_RXFIFO_WM_INT interrupt."
              },
              "TXFIFO_WM_INT_RAW": {
                "bit": 1,
                "description": "The raw interrupt bit for I2C_TXFIFO_WM_INT interrupt."
              },
              "RXFIFO_OVF_INT_RAW": {
                "bit": 2,
                "description": "The raw interrupt bit for I2C_RXFIFO_OVF_INT interrupt."
              },
              "END_DETECT_INT_RAW": {
                "bit": 3,
                "description": "The raw interrupt bit for the I2C_END_DETECT_INT interrupt."
              },
              "BYTE_TRANS_DONE_INT_RAW": {
                "bit": 4,
                "description": "The raw interrupt bit for the I2C_END_DETECT_INT interrupt."
              },
              "ARBITRATION_LOST_INT_RAW": {
                "bit": 5,
                "description": "The raw interrupt bit for the I2C_ARBITRATION_LOST_INT interrupt."
              },
              "MST_TXFIFO_UDF_INT_RAW": {
                "bit": 6,
                "description": "The raw interrupt bit for I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TRANS_COMPLETE_INT_RAW": {
                "bit": 7,
                "description": "The raw interrupt bit for the I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TIME_OUT_INT_RAW": {
                "bit": 8,
                "description": "The raw interrupt bit for the I2C_TIME_OUT_INT interrupt."
              },
              "TRANS_START_INT_RAW": {
                "bit": 9,
                "description": "The raw interrupt bit for the I2C_TRANS_START_INT interrupt."
              },
              "NACK_INT_RAW": {
                "bit": 10,
                "description": "The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "TXFIFO_OVF_INT_RAW": {
                "bit": 11,
                "description": "The raw interrupt bit for I2C_TXFIFO_OVF_INT interrupt."
              },
              "RXFIFO_UDF_INT_RAW": {
                "bit": 12,
                "description": "The raw interrupt bit for I2C_RXFIFO_UDF_INT  interrupt."
              },
              "SCL_ST_TO_INT_RAW": {
                "bit": 13,
                "description": "The raw interrupt bit for I2C_SCL_ST_TO_INT interrupt."
              },
              "SCL_MAIN_ST_TO_INT_RAW": {
                "bit": 14,
                "description": "The raw interrupt bit for I2C_SCL_MAIN_ST_TO_INT interrupt."
              },
              "DET_START_INT_RAW": {
                "bit": 15,
                "description": "The raw interrupt bit for I2C_DET_START_INT interrupt."
              },
              "SLAVE_STRETCH_INT_RAW": {
                "bit": 16,
                "description": "The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "GENERAL_CALL_INT_RAW": {
                "bit": 17,
                "description": "The raw interrupt bit for I2C_GENARAL_CALL_INT interrupt."
              },
              "SLAVE_ADDR_UNMATCH_INT_RAW": {
                "bit": 18,
                "description": "The raw interrupt bit for I2C_SLAVE_ADDR_UNMATCH_INT_RAW interrupt."
              }
            },
            "INT_CLR": {
              "RXFIFO_WM_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear I2C_RXFIFO_WM_INT interrupt."
              },
              "TXFIFO_WM_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear I2C_TXFIFO_WM_INT interrupt."
              },
              "RXFIFO_OVF_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear I2C_RXFIFO_OVF_INT interrupt."
              },
              "END_DETECT_INT_CLR": {
                "bit": 3,
                "description": "Set this bit to clear the I2C_END_DETECT_INT interrupt."
              },
              "BYTE_TRANS_DONE_INT_CLR": {
                "bit": 4,
                "description": "Set this bit to clear the I2C_END_DETECT_INT interrupt."
              },
              "ARBITRATION_LOST_INT_CLR": {
                "bit": 5,
                "description": "Set this bit to clear the I2C_ARBITRATION_LOST_INT interrupt."
              },
              "MST_TXFIFO_UDF_INT_CLR": {
                "bit": 6,
                "description": "Set this bit to clear I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TRANS_COMPLETE_INT_CLR": {
                "bit": 7,
                "description": "Set this bit to clear the I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TIME_OUT_INT_CLR": {
                "bit": 8,
                "description": "Set this bit to clear the I2C_TIME_OUT_INT interrupt."
              },
              "TRANS_START_INT_CLR": {
                "bit": 9,
                "description": "Set this bit to clear the I2C_TRANS_START_INT interrupt."
              },
              "NACK_INT_CLR": {
                "bit": 10,
                "description": "Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt."
              },
              "TXFIFO_OVF_INT_CLR": {
                "bit": 11,
                "description": "Set this bit to clear I2C_TXFIFO_OVF_INT interrupt."
              },
              "RXFIFO_UDF_INT_CLR": {
                "bit": 12,
                "description": "Set this bit to clear I2C_RXFIFO_UDF_INT  interrupt."
              },
              "SCL_ST_TO_INT_CLR": {
                "bit": 13,
                "description": "Set this bit to clear I2C_SCL_ST_TO_INT interrupt."
              },
              "SCL_MAIN_ST_TO_INT_CLR": {
                "bit": 14,
                "description": "Set this bit to clear I2C_SCL_MAIN_ST_TO_INT interrupt."
              },
              "DET_START_INT_CLR": {
                "bit": 15,
                "description": "Set this bit to clear I2C_DET_START_INT interrupt."
              },
              "SLAVE_STRETCH_INT_CLR": {
                "bit": 16,
                "description": "Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt."
              },
              "GENERAL_CALL_INT_CLR": {
                "bit": 17,
                "description": "Set this bit to clear I2C_GENARAL_CALL_INT interrupt."
              },
              "SLAVE_ADDR_UNMATCH_INT_CLR": {
                "bit": 18,
                "description": "Set this bit to clear I2C_SLAVE_ADDR_UNMATCH_INT_RAW interrupt."
              }
            },
            "INT_ENA": {
              "RXFIFO_WM_INT_ENA": {
                "bit": 0,
                "description": "The interrupt enable bit for I2C_RXFIFO_WM_INT interrupt."
              },
              "TXFIFO_WM_INT_ENA": {
                "bit": 1,
                "description": "The interrupt enable bit for I2C_TXFIFO_WM_INT interrupt."
              },
              "RXFIFO_OVF_INT_ENA": {
                "bit": 2,
                "description": "The interrupt enable bit for I2C_RXFIFO_OVF_INT interrupt."
              },
              "END_DETECT_INT_ENA": {
                "bit": 3,
                "description": "The interrupt enable bit for the I2C_END_DETECT_INT interrupt."
              },
              "BYTE_TRANS_DONE_INT_ENA": {
                "bit": 4,
                "description": "The interrupt enable bit for the I2C_END_DETECT_INT interrupt."
              },
              "ARBITRATION_LOST_INT_ENA": {
                "bit": 5,
                "description": "The interrupt enable bit for the I2C_ARBITRATION_LOST_INT interrupt."
              },
              "MST_TXFIFO_UDF_INT_ENA": {
                "bit": 6,
                "description": "The interrupt enable bit for I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TRANS_COMPLETE_INT_ENA": {
                "bit": 7,
                "description": "The interrupt enable bit for the I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TIME_OUT_INT_ENA": {
                "bit": 8,
                "description": "The interrupt enable bit for the I2C_TIME_OUT_INT interrupt."
              },
              "TRANS_START_INT_ENA": {
                "bit": 9,
                "description": "The interrupt enable bit for the I2C_TRANS_START_INT interrupt."
              },
              "NACK_INT_ENA": {
                "bit": 10,
                "description": "The interrupt enable bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "TXFIFO_OVF_INT_ENA": {
                "bit": 11,
                "description": "The interrupt enable bit for I2C_TXFIFO_OVF_INT interrupt."
              },
              "RXFIFO_UDF_INT_ENA": {
                "bit": 12,
                "description": "The interrupt enable bit for I2C_RXFIFO_UDF_INT  interrupt."
              },
              "SCL_ST_TO_INT_ENA": {
                "bit": 13,
                "description": "The interrupt enable bit for I2C_SCL_ST_TO_INT interrupt."
              },
              "SCL_MAIN_ST_TO_INT_ENA": {
                "bit": 14,
                "description": "The interrupt enable bit for I2C_SCL_MAIN_ST_TO_INT interrupt."
              },
              "DET_START_INT_ENA": {
                "bit": 15,
                "description": "The interrupt enable bit for I2C_DET_START_INT interrupt."
              },
              "SLAVE_STRETCH_INT_ENA": {
                "bit": 16,
                "description": "The interrupt enable bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "GENERAL_CALL_INT_ENA": {
                "bit": 17,
                "description": "The interrupt enable bit for I2C_GENARAL_CALL_INT interrupt."
              },
              "SLAVE_ADDR_UNMATCH_INT_ENA": {
                "bit": 18,
                "description": "The interrupt enable bit for I2C_SLAVE_ADDR_UNMATCH_INT interrupt."
              }
            },
            "INT_STATUS": {
              "RXFIFO_WM_INT_ST": {
                "bit": 0,
                "description": "The masked interrupt status bit for I2C_RXFIFO_WM_INT interrupt."
              },
              "TXFIFO_WM_INT_ST": {
                "bit": 1,
                "description": "The masked interrupt status bit for I2C_TXFIFO_WM_INT interrupt."
              },
              "RXFIFO_OVF_INT_ST": {
                "bit": 2,
                "description": "The masked interrupt status bit for I2C_RXFIFO_OVF_INT interrupt."
              },
              "END_DETECT_INT_ST": {
                "bit": 3,
                "description": "The masked interrupt status bit for the I2C_END_DETECT_INT interrupt."
              },
              "BYTE_TRANS_DONE_INT_ST": {
                "bit": 4,
                "description": "The masked interrupt status bit for the I2C_END_DETECT_INT interrupt."
              },
              "ARBITRATION_LOST_INT_ST": {
                "bit": 5,
                "description": "The masked interrupt status bit for the I2C_ARBITRATION_LOST_INT interrupt."
              },
              "MST_TXFIFO_UDF_INT_ST": {
                "bit": 6,
                "description": "The masked interrupt status bit for I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TRANS_COMPLETE_INT_ST": {
                "bit": 7,
                "description": "The masked interrupt status bit for the I2C_TRANS_COMPLETE_INT interrupt."
              },
              "TIME_OUT_INT_ST": {
                "bit": 8,
                "description": "The masked interrupt status bit for the I2C_TIME_OUT_INT interrupt."
              },
              "TRANS_START_INT_ST": {
                "bit": 9,
                "description": "The masked interrupt status bit for the I2C_TRANS_START_INT interrupt."
              },
              "NACK_INT_ST": {
                "bit": 10,
                "description": "The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "TXFIFO_OVF_INT_ST": {
                "bit": 11,
                "description": "The masked interrupt status bit for I2C_TXFIFO_OVF_INT interrupt."
              },
              "RXFIFO_UDF_INT_ST": {
                "bit": 12,
                "description": "The masked interrupt status bit for I2C_RXFIFO_UDF_INT  interrupt."
              },
              "SCL_ST_TO_INT_ST": {
                "bit": 13,
                "description": "The masked interrupt status bit for I2C_SCL_ST_TO_INT interrupt."
              },
              "SCL_MAIN_ST_TO_INT_ST": {
                "bit": 14,
                "description": "The masked interrupt status bit for I2C_SCL_MAIN_ST_TO_INT interrupt."
              },
              "DET_START_INT_ST": {
                "bit": 15,
                "description": "The masked interrupt status bit for I2C_DET_START_INT interrupt."
              },
              "SLAVE_STRETCH_INT_ST": {
                "bit": 16,
                "description": "The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt."
              },
              "GENERAL_CALL_INT_ST": {
                "bit": 17,
                "description": "The masked interrupt status bit for I2C_GENARAL_CALL_INT interrupt."
              },
              "SLAVE_ADDR_UNMATCH_INT_ST": {
                "bit": 18,
                "description": "The masked interrupt status bit for I2C_SLAVE_ADDR_UNMATCH_INT interrupt."
              }
            },
            "SDA_HOLD": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure the time to hold the data after the negative\nedge of SCL, in I2C module clock cycles.",
                "width": 9
              }
            },
            "SDA_SAMPLE": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure for how long SDA is sampled, in I2C module clock cycles.",
                "width": 9
              }
            },
            "SCL_HIGH_PERIOD": {
              "SCL_HIGH_PERIOD": {
                "bit": 0,
                "description": "This register is used to configure for how long SCL remains high in master mode, in I2C module clock cycles.",
                "width": 9
              },
              "SCL_WAIT_HIGH_PERIOD": {
                "bit": 9,
                "description": "This register is used to configure for the SCL_FSM's waiting period for SCL high level in master mode, in I2C module clock cycles.",
                "width": 7
              }
            },
            "SCL_START_HOLD": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure the time between the negative edge\nof SDA and the negative edge of SCL for a START condition, in I2C module clock cycles.",
                "width": 9
              }
            },
            "SCL_RSTART_SETUP": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure the time between the positive\nedge of SCL and the negative edge of SDA for a RESTART condition, in I2C module clock cycles.",
                "width": 9
              }
            },
            "SCL_STOP_HOLD": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure the delay after the STOP condition,\nin I2C module clock cycles.",
                "width": 9
              }
            },
            "SCL_STOP_SETUP": {
              "TIME": {
                "bit": 0,
                "description": "This register is used to configure the time between the positive edge\nof SCL and the positive edge of SDA, in I2C module clock cycles.",
                "width": 9
              }
            },
            "FILTER_CFG": {
              "SCL_FILTER_THRES": {
                "bit": 0,
                "description": "When a pulse on the SCL input has smaller width than this register value\nin I2C module clock cycles, the I2C controller will ignore that pulse.",
                "width": 4
              },
              "SDA_FILTER_THRES": {
                "bit": 4,
                "description": "When a pulse on the SDA input has smaller width than this register value\nin I2C module clock cycles, the I2C controller will ignore that pulse.",
                "width": 4
              },
              "SCL_FILTER_EN": {
                "bit": 8,
                "description": "This is the filter enable bit for SCL."
              },
              "SDA_FILTER_EN": {
                "bit": 9,
                "description": "This is the filter enable bit for SDA."
              }
            },
            "CLK_CONF": {
              "SCLK_DIV_NUM": {
                "bit": 0,
                "description": "the integral part of the fractional divisor for i2c module",
                "width": 8
              },
              "SCLK_DIV_A": {
                "bit": 8,
                "description": "the numerator of the fractional part of the fractional divisor for i2c module",
                "width": 6
              },
              "SCLK_DIV_B": {
                "bit": 14,
                "description": "the denominator of the fractional part of the fractional divisor for i2c module",
                "width": 6
              },
              "SCLK_SEL": {
                "bit": 20,
                "description": "The clock selection for i2c module:0-XTAL,1-CLK_8MHz."
              },
              "SCLK_ACTIVE": {
                "bit": 21,
                "description": "The clock switch for i2c module"
              }
            },
            "COMD%s": {
              "COMMAND": {
                "bit": 0,
                "description": "This is the content of command 0. It consists of three parts: \nop_code is the command, 0: RSTART, 1: WRITE, 2: READ, 3: STOP, 4: END.\nByte_num represents the number of bytes that need to be sent or received.\nack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more\nInformation.",
                "width": 14
              },
              "COMMAND_DONE": {
                "bit": 31,
                "description": "When command 0 is done in I2C Master mode, this bit changes to high\nlevel."
              }
            },
            "SCL_ST_TIME_OUT": {
              "SCL_ST_TO_I2C": {
                "bit": 0,
                "description": "The threshold value of SCL_FSM state unchanged period. It should be o more than 23",
                "width": 5
              }
            },
            "SCL_MAIN_ST_TIME_OUT": {
              "SCL_MAIN_ST_TO_I2C": {
                "bit": 0,
                "description": "The threshold value of SCL_MAIN_FSM state unchanged period.nIt should be o more than 23",
                "width": 5
              }
            },
            "SCL_SP_CONF": {
              "SCL_RST_SLV_EN": {
                "bit": 0,
                "description": "When I2C master is IDLE, set this bit to send out SCL pulses. The number of pulses equals to reg_scl_rst_slv_num[4:0]."
              },
              "SCL_RST_SLV_NUM": {
                "bit": 1,
                "description": "Configure the pulses of SCL generated in I2C master mode. Valid when reg_scl_rst_slv_en is 1.",
                "width": 5
              },
              "SCL_PD_EN": {
                "bit": 6,
                "description": "The power down enable bit for the I2C output SCL line. 1: Power down. 0: Not power down. Set reg_scl_force_out and reg_scl_pd_en to 1 to stretch SCL low."
              },
              "SDA_PD_EN": {
                "bit": 7,
                "description": "The power down enable bit for the I2C output SDA line. 1: Power down. 0: Not power down. Set reg_sda_force_out and reg_sda_pd_en to 1 to stretch SDA low."
              }
            },
            "SCL_STRETCH_CONF": {
              "STRETCH_PROTECT_NUM": {
                "bit": 0,
                "description": "Configure the period of I2C slave stretching SCL line.",
                "width": 10
              },
              "SLAVE_SCL_STRETCH_EN": {
                "bit": 10,
                "description": "The enable bit for slave SCL stretch function. 1: Enable. 0: Disable. The SCL output line will be stretched low when reg_slave_scl_stretch_en is 1 and stretch event happens. The stretch cause can be seen in reg_stretch_cause."
              },
              "SLAVE_SCL_STRETCH_CLR": {
                "bit": 11,
                "description": "Set this bit to clear the I2C slave SCL stretch function."
              },
              "SLAVE_BYTE_ACK_CTL_EN": {
                "bit": 12,
                "description": "The enable bit for slave to control ACK level function."
              },
              "SLAVE_BYTE_ACK_LVL": {
                "bit": 13,
                "description": "Set the ACK level when slave controlling ACK level function enables."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "This is the the version register.",
                "width": 32
              }
            },
            "TXFIFO_START_ADDR": {
              "TXFIFO_START_ADDR": {
                "bit": 0,
                "description": "This is the I2C txfifo first address.",
                "width": 32
              }
            },
            "RXFIFO_START_ADDR": {
              "RXFIFO_START_ADDR": {
                "bit": 0,
                "description": "This is the I2C rxfifo first address.",
                "width": 32
              }
            }
          }
        },
        "I2S": {
          "instances": [
            {
              "name": "I2S0",
              "base": "0x6000D000",
              "irq": 31
            }
          ],
          "registers": {
            "INT_RAW": {
              "offset": "0x0C",
              "size": 32,
              "description": "I2S interrupt raw register, valid in level."
            },
            "INT_ST": {
              "offset": "0x10",
              "size": 32,
              "description": "I2S interrupt status register."
            },
            "INT_ENA": {
              "offset": "0x14",
              "size": 32,
              "description": "I2S interrupt enable register."
            },
            "INT_CLR": {
              "offset": "0x18",
              "size": 32,
              "description": "I2S interrupt clear register."
            },
            "RX_CONF": {
              "offset": "0x20",
              "size": 32,
              "description": "I2S RX configure register"
            },
            "TX_CONF": {
              "offset": "0x24",
              "size": 32,
              "description": "I2S TX configure register"
            },
            "RX_CONF1": {
              "offset": "0x28",
              "size": 32,
              "description": "I2S RX configure register 1"
            },
            "TX_CONF1": {
              "offset": "0x2C",
              "size": 32,
              "description": "I2S TX configure register 1"
            },
            "RX_CLKM_CONF": {
              "offset": "0x30",
              "size": 32,
              "description": "I2S RX clock configure register"
            },
            "TX_CLKM_CONF": {
              "offset": "0x34",
              "size": 32,
              "description": "I2S TX clock configure register"
            },
            "RX_CLKM_DIV_CONF": {
              "offset": "0x38",
              "size": 32,
              "description": "I2S RX module clock divider configure register"
            },
            "TX_CLKM_DIV_CONF": {
              "offset": "0x3C",
              "size": 32,
              "description": "I2S TX module clock divider configure register"
            },
            "TX_PCM2PDM_CONF": {
              "offset": "0x40",
              "size": 32,
              "description": "I2S TX PCM2PDM configuration register"
            },
            "TX_PCM2PDM_CONF1": {
              "offset": "0x44",
              "size": 32,
              "description": "I2S TX PCM2PDM configuration register"
            },
            "RX_TDM_CTRL": {
              "offset": "0x50",
              "size": 32,
              "description": "I2S TX TDM mode control register"
            },
            "TX_TDM_CTRL": {
              "offset": "0x54",
              "size": 32,
              "description": "I2S TX TDM mode control register"
            },
            "RX_TIMING": {
              "offset": "0x58",
              "size": 32,
              "description": "I2S RX timing control register"
            },
            "TX_TIMING": {
              "offset": "0x5C",
              "size": 32,
              "description": "I2S TX timing control register"
            },
            "LC_HUNG_CONF": {
              "offset": "0x60",
              "size": 32,
              "description": "I2S HUNG configure register."
            },
            "RXEOF_NUM": {
              "offset": "0x64",
              "size": 32,
              "description": "I2S RX data number control register."
            },
            "CONF_SIGLE_DATA": {
              "offset": "0x68",
              "size": 32,
              "description": "I2S signal data register"
            },
            "STATE": {
              "offset": "0x6C",
              "size": 32,
              "description": "I2S TX status register"
            },
            "ETM_CONF": {
              "offset": "0x70",
              "size": 32,
              "description": "I2S ETM configure register"
            },
            "DATE": {
              "offset": "0x80",
              "size": 32,
              "description": "Version control register"
            }
          },
          "bits": {
            "INT_RAW": {
              "RX_DONE_INT_RAW": {
                "bit": 0,
                "description": "The raw interrupt status bit  for the i2s_rx_done_int interrupt"
              },
              "TX_DONE_INT_RAW": {
                "bit": 1,
                "description": "The raw interrupt status bit  for the i2s_tx_done_int interrupt"
              },
              "RX_HUNG_INT_RAW": {
                "bit": 2,
                "description": "The raw interrupt status bit  for the i2s_rx_hung_int interrupt"
              },
              "TX_HUNG_INT_RAW": {
                "bit": 3,
                "description": "The raw interrupt status bit  for the i2s_tx_hung_int interrupt"
              }
            },
            "INT_ST": {
              "RX_DONE_INT_ST": {
                "bit": 0,
                "description": "The masked interrupt status bit  for the i2s_rx_done_int interrupt"
              },
              "TX_DONE_INT_ST": {
                "bit": 1,
                "description": "The masked interrupt status bit  for the i2s_tx_done_int interrupt"
              },
              "RX_HUNG_INT_ST": {
                "bit": 2,
                "description": "The masked interrupt status bit  for the i2s_rx_hung_int interrupt"
              },
              "TX_HUNG_INT_ST": {
                "bit": 3,
                "description": "The masked interrupt status bit  for the i2s_tx_hung_int interrupt"
              }
            },
            "INT_ENA": {
              "RX_DONE_INT_ENA": {
                "bit": 0,
                "description": "The interrupt enable bit  for the i2s_rx_done_int interrupt"
              },
              "TX_DONE_INT_ENA": {
                "bit": 1,
                "description": "The interrupt enable bit  for the i2s_tx_done_int interrupt"
              },
              "RX_HUNG_INT_ENA": {
                "bit": 2,
                "description": "The interrupt enable bit  for the i2s_rx_hung_int interrupt"
              },
              "TX_HUNG_INT_ENA": {
                "bit": 3,
                "description": "The interrupt enable bit  for the i2s_tx_hung_int interrupt"
              }
            },
            "INT_CLR": {
              "RX_DONE_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear the i2s_rx_done_int interrupt"
              },
              "TX_DONE_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear the i2s_tx_done_int interrupt"
              },
              "RX_HUNG_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear the i2s_rx_hung_int interrupt"
              },
              "TX_HUNG_INT_CLR": {
                "bit": 3,
                "description": "Set this bit to clear the i2s_tx_hung_int interrupt"
              }
            },
            "RX_CONF": {
              "RX_RESET": {
                "bit": 0,
                "description": "Set this bit to reset receiver"
              },
              "RX_FIFO_RESET": {
                "bit": 1,
                "description": "Set this bit to reset Rx AFIFO"
              },
              "RX_START": {
                "bit": 2,
                "description": "Set this bit to start receiving data"
              },
              "RX_SLAVE_MOD": {
                "bit": 3,
                "description": "Set this bit to enable slave receiver mode"
              },
              "RX_STOP_MODE": {
                "bit": 4,
                "description": "0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full.",
                "width": 2
              },
              "RX_MONO": {
                "bit": 6,
                "description": "Set this bit to enable receiver  in mono mode"
              },
              "RX_BIG_ENDIAN": {
                "bit": 7,
                "description": "I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value."
              },
              "RX_UPDATE": {
                "bit": 8,
                "description": "Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done."
              },
              "RX_MONO_FST_VLD": {
                "bit": 9,
                "description": "1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode."
              },
              "RX_PCM_CONF": {
                "bit": 10,
                "description": "I2S RX compress/decompress configuration bit. & 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &",
                "width": 2
              },
              "RX_PCM_BYPASS": {
                "bit": 12,
                "description": "Set this bit to bypass Compress/Decompress module for received data."
              },
              "RX_MSB_SHIFT": {
                "bit": 13,
                "description": "Set this bit to enable receiver in Phillips standard mode"
              },
              "RX_LEFT_ALIGN": {
                "bit": 15,
                "description": "1: I2S RX left alignment mode. 0: I2S RX right alignment mode."
              },
              "RX_24_FILL_EN": {
                "bit": 16,
                "description": "1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits."
              },
              "RX_WS_IDLE_POL": {
                "bit": 17,
                "description": "0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel."
              },
              "RX_BIT_ORDER": {
                "bit": 18,
                "description": "I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first."
              },
              "RX_TDM_EN": {
                "bit": 19,
                "description": "1: Enable I2S TDM Rx mode . 0: Disable."
              },
              "RX_PDM_EN": {
                "bit": 20,
                "description": "1: Enable I2S PDM Rx mode . 0: Disable."
              },
              "RX_BCK_DIV_NUM": {
                "bit": 21,
                "description": "Bit clock configuration bits in receiver mode.",
                "width": 6
              }
            },
            "TX_CONF": {
              "TX_RESET": {
                "bit": 0,
                "description": "Set this bit to reset transmitter"
              },
              "TX_FIFO_RESET": {
                "bit": 1,
                "description": "Set this bit to reset Tx AFIFO"
              },
              "TX_START": {
                "bit": 2,
                "description": "Set this bit to start transmitting data"
              },
              "TX_SLAVE_MOD": {
                "bit": 3,
                "description": "Set this bit to enable slave transmitter mode"
              },
              "TX_STOP_EN": {
                "bit": 4,
                "description": "Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy"
              },
              "TX_CHAN_EQUAL": {
                "bit": 5,
                "description": "1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode."
              },
              "TX_MONO": {
                "bit": 6,
                "description": "Set this bit to enable transmitter in mono mode"
              },
              "TX_BIG_ENDIAN": {
                "bit": 7,
                "description": "I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value."
              },
              "TX_UPDATE": {
                "bit": 8,
                "description": "Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done."
              },
              "TX_MONO_FST_VLD": {
                "bit": 9,
                "description": "1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode."
              },
              "TX_PCM_CONF": {
                "bit": 10,
                "description": "I2S TX compress/decompress configuration bit. & 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &",
                "width": 2
              },
              "TX_PCM_BYPASS": {
                "bit": 12,
                "description": "Set this bit to bypass  Compress/Decompress module for transmitted data."
              },
              "TX_MSB_SHIFT": {
                "bit": 13,
                "description": "Set this bit to enable transmitter in Phillips standard mode"
              },
              "TX_BCK_NO_DLY": {
                "bit": 14,
                "description": "1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode."
              },
              "TX_LEFT_ALIGN": {
                "bit": 15,
                "description": "1: I2S TX left alignment mode. 0: I2S TX right alignment mode."
              },
              "TX_24_FILL_EN": {
                "bit": 16,
                "description": "1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode"
              },
              "TX_WS_IDLE_POL": {
                "bit": 17,
                "description": "0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel."
              },
              "TX_BIT_ORDER": {
                "bit": 18,
                "description": "I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first."
              },
              "TX_TDM_EN": {
                "bit": 19,
                "description": "1: Enable I2S TDM Tx mode . 0: Disable."
              },
              "TX_PDM_EN": {
                "bit": 20,
                "description": "1: Enable I2S PDM Tx mode . 0: Disable."
              },
              "TX_BCK_DIV_NUM": {
                "bit": 21,
                "description": "Bit clock configuration bits in transmitter mode.",
                "width": 6
              },
              "TX_CHAN_MOD": {
                "bit": 27,
                "description": "I2S transmitter channel mode configuration bits.",
                "width": 3
              },
              "SIG_LOOPBACK": {
                "bit": 30,
                "description": "Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals."
              }
            },
            "RX_CONF1": {
              "RX_TDM_WS_WIDTH": {
                "bit": 0,
                "description": "The width of rx_ws_out at idle level in TDM mode is (I2S_RX_TDM_WS_WIDTH[8:0] +1) * T_bck",
                "width": 9
              },
              "RX_BITS_MOD": {
                "bit": 14,
                "description": "Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.",
                "width": 5
              },
              "RX_HALF_SAMPLE_BITS": {
                "bit": 19,
                "description": "I2S Rx half sample bits -1.",
                "width": 8
              },
              "RX_TDM_CHAN_BITS": {
                "bit": 27,
                "description": "The Rx bit number for each channel minus 1in TDM mode.",
                "width": 5
              }
            },
            "TX_CONF1": {
              "TX_TDM_WS_WIDTH": {
                "bit": 0,
                "description": "The width of tx_ws_out at idle level in TDM mode is (I2S_TX_TDM_WS_WIDTH[8:0] +1) * T_bck",
                "width": 9
              },
              "TX_BITS_MOD": {
                "bit": 14,
                "description": "Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.",
                "width": 5
              },
              "TX_HALF_SAMPLE_BITS": {
                "bit": 19,
                "description": "I2S Tx half sample bits -1.",
                "width": 8
              },
              "TX_TDM_CHAN_BITS": {
                "bit": 27,
                "description": "The Tx bit number for each channel minus 1in TDM mode.",
                "width": 5
              }
            },
            "RX_CLKM_CONF": {
              "RX_CLKM_DIV_NUM": {
                "bit": 0,
                "description": "Integral I2S clock divider value",
                "width": 8
              },
              "RX_CLK_ACTIVE": {
                "bit": 26,
                "description": "I2S Rx module clock enable signal."
              },
              "RX_CLK_SEL": {
                "bit": 27,
                "description": "Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.",
                "width": 2
              },
              "MCLK_SEL": {
                "bit": 29,
                "description": "0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT."
              }
            },
            "TX_CLKM_CONF": {
              "TX_CLKM_DIV_NUM": {
                "bit": 0,
                "description": "Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b <= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.",
                "width": 8
              },
              "TX_CLK_ACTIVE": {
                "bit": 26,
                "description": "I2S Tx module clock enable signal."
              },
              "TX_CLK_SEL": {
                "bit": 27,
                "description": "Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.",
                "width": 2
              },
              "CLK_EN": {
                "bit": 29,
                "description": "Set this bit to enable clk gate"
              }
            },
            "RX_CLKM_DIV_CONF": {
              "RX_CLKM_DIV_Z": {
                "bit": 0,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).",
                "width": 9
              },
              "RX_CLKM_DIV_Y": {
                "bit": 9,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).",
                "width": 9
              },
              "RX_CLKM_DIV_X": {
                "bit": 18,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.",
                "width": 9
              },
              "RX_CLKM_DIV_YN1": {
                "bit": 27,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1."
              }
            },
            "TX_CLKM_DIV_CONF": {
              "TX_CLKM_DIV_Z": {
                "bit": 0,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).",
                "width": 9
              },
              "TX_CLKM_DIV_Y": {
                "bit": 9,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).",
                "width": 9
              },
              "TX_CLKM_DIV_X": {
                "bit": 18,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.",
                "width": 9
              },
              "TX_CLKM_DIV_YN1": {
                "bit": 27,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1."
              }
            },
            "TX_PCM2PDM_CONF": {
              "TX_PDM_HP_BYPASS": {
                "bit": 0,
                "description": "I2S TX PDM bypass hp filter or not. The option has been removed."
              },
              "TX_PDM_SINC_OSR2": {
                "bit": 1,
                "description": "I2S TX PDM OSR2 value",
                "width": 4
              },
              "TX_PDM_PRESCALE": {
                "bit": 5,
                "description": "I2S TX PDM prescale for sigmadelta",
                "width": 8
              },
              "TX_PDM_HP_IN_SHIFT": {
                "bit": 13,
                "description": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4",
                "width": 2
              },
              "TX_PDM_LP_IN_SHIFT": {
                "bit": 15,
                "description": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4",
                "width": 2
              },
              "TX_PDM_SINC_IN_SHIFT": {
                "bit": 17,
                "description": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4",
                "width": 2
              },
              "TX_PDM_SIGMADELTA_IN_SHIFT": {
                "bit": 19,
                "description": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4",
                "width": 2
              },
              "TX_PDM_SIGMADELTA_DITHER2": {
                "bit": 21,
                "description": "I2S TX PDM sigmadelta dither2 value"
              },
              "TX_PDM_SIGMADELTA_DITHER": {
                "bit": 22,
                "description": "I2S TX PDM sigmadelta dither value"
              },
              "TX_PDM_DAC_2OUT_EN": {
                "bit": 23,
                "description": "I2S TX PDM dac mode enable"
              },
              "TX_PDM_DAC_MODE_EN": {
                "bit": 24,
                "description": "I2S TX PDM dac 2channel enable"
              },
              "PCM2PDM_CONV_EN": {
                "bit": 25,
                "description": "I2S TX PDM Converter enable"
              }
            },
            "TX_PCM2PDM_CONF1": {
              "TX_PDM_FP": {
                "bit": 0,
                "description": "I2S TX PDM Fp",
                "width": 10
              },
              "TX_PDM_FS": {
                "bit": 10,
                "description": "I2S TX PDM Fs",
                "width": 10
              },
              "TX_IIR_HP_MULT12_5": {
                "bit": 20,
                "description": "The fourth parameter of PDM TX IIR_HP filter stage 2 is (504 + I2S_TX_IIR_HP_MULT12_5[2:0])",
                "width": 3
              },
              "TX_IIR_HP_MULT12_0": {
                "bit": 23,
                "description": "The fourth parameter of PDM TX IIR_HP filter stage 1 is (504 + I2S_TX_IIR_HP_MULT12_0[2:0])",
                "width": 3
              }
            },
            "RX_TDM_CTRL": {
              "RX_TDM_PDM_CHAN0_EN": {
                "bit": 0,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN1_EN": {
                "bit": 1,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN2_EN": {
                "bit": 2,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN3_EN": {
                "bit": 3,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN4_EN": {
                "bit": 4,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN5_EN": {
                "bit": 5,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN6_EN": {
                "bit": 6,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_PDM_CHAN7_EN": {
                "bit": 7,
                "description": "1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN8_EN": {
                "bit": 8,
                "description": "1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN9_EN": {
                "bit": 9,
                "description": "1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN10_EN": {
                "bit": 10,
                "description": "1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN11_EN": {
                "bit": 11,
                "description": "1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN12_EN": {
                "bit": 12,
                "description": "1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN13_EN": {
                "bit": 13,
                "description": "1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN14_EN": {
                "bit": 14,
                "description": "1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_CHAN15_EN": {
                "bit": 15,
                "description": "1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel."
              },
              "RX_TDM_TOT_CHAN_NUM": {
                "bit": 16,
                "description": "The total channel number of I2S TX TDM mode.",
                "width": 4
              }
            },
            "TX_TDM_CTRL": {
              "TX_TDM_CHAN0_EN": {
                "bit": 0,
                "description": "1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN1_EN": {
                "bit": 1,
                "description": "1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN2_EN": {
                "bit": 2,
                "description": "1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN3_EN": {
                "bit": 3,
                "description": "1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN4_EN": {
                "bit": 4,
                "description": "1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN5_EN": {
                "bit": 5,
                "description": "1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN6_EN": {
                "bit": 6,
                "description": "1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN7_EN": {
                "bit": 7,
                "description": "1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN8_EN": {
                "bit": 8,
                "description": "1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN9_EN": {
                "bit": 9,
                "description": "1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN10_EN": {
                "bit": 10,
                "description": "1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN11_EN": {
                "bit": 11,
                "description": "1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN12_EN": {
                "bit": 12,
                "description": "1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN13_EN": {
                "bit": 13,
                "description": "1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN14_EN": {
                "bit": 14,
                "description": "1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_CHAN15_EN": {
                "bit": 15,
                "description": "1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel."
              },
              "TX_TDM_TOT_CHAN_NUM": {
                "bit": 16,
                "description": "The total channel number of I2S TX TDM mode.",
                "width": 4
              },
              "TX_TDM_SKIP_MSK_EN": {
                "bit": 20,
                "description": "When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels."
              }
            },
            "RX_TIMING": {
              "RX_SD_IN_DM": {
                "bit": 0,
                "description": "The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "RX_WS_OUT_DM": {
                "bit": 16,
                "description": "The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "RX_BCK_OUT_DM": {
                "bit": 20,
                "description": "The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "RX_WS_IN_DM": {
                "bit": 24,
                "description": "The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "RX_BCK_IN_DM": {
                "bit": 28,
                "description": "The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              }
            },
            "TX_TIMING": {
              "TX_SD_OUT_DM": {
                "bit": 0,
                "description": "The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "TX_SD1_OUT_DM": {
                "bit": 4,
                "description": "The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "TX_WS_OUT_DM": {
                "bit": 16,
                "description": "The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "TX_BCK_OUT_DM": {
                "bit": 20,
                "description": "The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "TX_WS_IN_DM": {
                "bit": 24,
                "description": "The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              },
              "TX_BCK_IN_DM": {
                "bit": 28,
                "description": "The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.",
                "width": 2
              }
            },
            "LC_HUNG_CONF": {
              "LC_FIFO_TIMEOUT": {
                "bit": 0,
                "description": "the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value",
                "width": 8
              },
              "LC_FIFO_TIMEOUT_SHIFT": {
                "bit": 8,
                "description": "The bits are used to scale tick counter threshold. The tick counter is reset when counter value >= 88000/2^i2s_lc_fifo_timeout_shift",
                "width": 3
              },
              "LC_FIFO_TIMEOUT_ENA": {
                "bit": 11,
                "description": "The enable bit for FIFO timeout"
              }
            },
            "RXEOF_NUM": {
              "RX_EOF_NUM": {
                "bit": 0,
                "description": "The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel.",
                "width": 12
              }
            },
            "CONF_SIGLE_DATA": {
              "SINGLE_DATA": {
                "bit": 0,
                "description": "The configured constant channel data to be sent out.",
                "width": 32
              }
            },
            "STATE": {
              "TX_IDLE": {
                "bit": 0,
                "description": "1: i2s_tx is idle state. 0: i2s_tx is working."
              }
            },
            "ETM_CONF": {
              "ETM_TX_SEND_WORD_NUM": {
                "bit": 0,
                "description": "I2S ETM send x words event. When sending word number of reg_etm_tx_send_word_num[9:0], i2s will trigger an etm event.",
                "width": 10
              },
              "ETM_RX_RECEIVE_WORD_NUM": {
                "bit": 10,
                "description": "I2S ETM receive x words event. When receiving word number of reg_etm_rx_receive_word_num[9:0], i2s will trigger an etm event.",
                "width": 10
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "I2S version control register",
                "width": 28
              }
            }
          }
        },
        "INTERRUPT": {
          "instances": [
            {
              "name": "INTERRUPT_CORE0",
              "base": "0x60010000",
              "irq": 7
            }
          ],
          "registers": {
            "PMU_INTR_MAP": {
              "offset": "0x00",
              "size": 32,
              "description": "register description"
            },
            "EFUSE_INTR_MAP": {
              "offset": "0x04",
              "size": 32,
              "description": "register description"
            },
            "LP_RTC_TIMER_INTR_MAP": {
              "offset": "0x08",
              "size": 32,
              "description": "register description"
            },
            "LP_BLE_TIMER_INTR_MAP": {
              "offset": "0x0C",
              "size": 32,
              "description": "register description"
            },
            "LP_WDT_INTR_MAP": {
              "offset": "0x10",
              "size": 32,
              "description": "register description"
            },
            "LP_PERI_TIMEOUT_INTR_MAP": {
              "offset": "0x14",
              "size": 32,
              "description": "register description"
            },
            "LP_APM_M0_INTR_MAP": {
              "offset": "0x18",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_0_MAP": {
              "offset": "0x1C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_1_MAP": {
              "offset": "0x20",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_2_MAP": {
              "offset": "0x24",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_3_MAP": {
              "offset": "0x28",
              "size": 32,
              "description": "register description"
            },
            "ASSIST_DEBUG_INTR_MAP": {
              "offset": "0x2C",
              "size": 32,
              "description": "register description"
            },
            "TRACE_INTR_MAP": {
              "offset": "0x30",
              "size": 32,
              "description": "register description"
            },
            "CACHE_INTR_MAP": {
              "offset": "0x34",
              "size": 32,
              "description": "register description"
            },
            "CPU_PERI_TIMEOUT_INTR_MAP": {
              "offset": "0x38",
              "size": 32,
              "description": "register description"
            },
            "BT_MAC_INTR_MAP": {
              "offset": "0x3C",
              "size": 32,
              "description": "register description"
            },
            "BT_BB_INTR_MAP": {
              "offset": "0x40",
              "size": 32,
              "description": "register description"
            },
            "BT_BB_NMI_MAP": {
              "offset": "0x44",
              "size": 32,
              "description": "register description"
            },
            "COEX_INTR_MAP": {
              "offset": "0x48",
              "size": 32,
              "description": "register description"
            },
            "BLE_TIMER_INTR_MAP": {
              "offset": "0x4C",
              "size": 32,
              "description": "register description"
            },
            "BLE_SEC_INTR_MAP": {
              "offset": "0x50",
              "size": 32,
              "description": "register description"
            },
            "ZB_MAC_INTR_MAP": {
              "offset": "0x54",
              "size": 32,
              "description": "register description"
            },
            "GPIO_INTERRUPT_PRO_MAP": {
              "offset": "0x58",
              "size": 32,
              "description": "register description"
            },
            "GPIO_INTERRUPT_PRO_NMI_MAP": {
              "offset": "0x5C",
              "size": 32,
              "description": "register description"
            },
            "PAU_INTR_MAP": {
              "offset": "0x60",
              "size": 32,
              "description": "register description"
            },
            "HP_PERI_TIMEOUT_INTR_MAP": {
              "offset": "0x64",
              "size": 32,
              "description": "register description"
            },
            "HP_APM_M0_INTR_MAP": {
              "offset": "0x68",
              "size": 32,
              "description": "register description"
            },
            "HP_APM_M1_INTR_MAP": {
              "offset": "0x6C",
              "size": 32,
              "description": "register description"
            },
            "HP_APM_M2_INTR_MAP": {
              "offset": "0x70",
              "size": 32,
              "description": "register description"
            },
            "HP_APM_M3_INTR_MAP": {
              "offset": "0x74",
              "size": 32,
              "description": "register description"
            },
            "MSPI_INTR_MAP": {
              "offset": "0x78",
              "size": 32,
              "description": "register description"
            },
            "I2S1_INTR_MAP": {
              "offset": "0x7C",
              "size": 32,
              "description": "register description"
            },
            "UHCI0_INTR_MAP": {
              "offset": "0x80",
              "size": 32,
              "description": "register description"
            },
            "UART0_INTR_MAP": {
              "offset": "0x84",
              "size": 32,
              "description": "register description"
            },
            "UART1_INTR_MAP": {
              "offset": "0x88",
              "size": 32,
              "description": "register description"
            },
            "LEDC_INTR_MAP": {
              "offset": "0x8C",
              "size": 32,
              "description": "register description"
            },
            "CAN0_INTR_MAP": {
              "offset": "0x90",
              "size": 32,
              "description": "register description"
            },
            "USB_INTR_MAP": {
              "offset": "0x94",
              "size": 32,
              "description": "register description"
            },
            "RMT_INTR_MAP": {
              "offset": "0x98",
              "size": 32,
              "description": "register description"
            },
            "I2C_EXT0_INTR_MAP": {
              "offset": "0x9C",
              "size": 32,
              "description": "register description"
            },
            "I2C_EXT1_INTR_MAP": {
              "offset": "0xA0",
              "size": 32,
              "description": "register description"
            },
            "TG0_T0_INTR_MAP": {
              "offset": "0xA4",
              "size": 32,
              "description": "register description"
            },
            "TG0_WDT_INTR_MAP": {
              "offset": "0xA8",
              "size": 32,
              "description": "register description"
            },
            "TG1_T0_INTR_MAP": {
              "offset": "0xAC",
              "size": 32,
              "description": "register description"
            },
            "TG1_WDT_INTR_MAP": {
              "offset": "0xB0",
              "size": 32,
              "description": "register description"
            },
            "SYSTIMER_TARGET0_INTR_MAP": {
              "offset": "0xB4",
              "size": 32,
              "description": "register description"
            },
            "SYSTIMER_TARGET1_INTR_MAP": {
              "offset": "0xB8",
              "size": 32,
              "description": "register description"
            },
            "SYSTIMER_TARGET2_INTR_MAP": {
              "offset": "0xBC",
              "size": 32,
              "description": "register description"
            },
            "APB_ADC_INTR_MAP": {
              "offset": "0xC0",
              "size": 32,
              "description": "register description"
            },
            "PWM_INTR_MAP": {
              "offset": "0xC4",
              "size": 32,
              "description": "register description"
            },
            "PCNT_INTR_MAP": {
              "offset": "0xC8",
              "size": 32,
              "description": "register description"
            },
            "PARL_IO_TX_INTR_MAP": {
              "offset": "0xCC",
              "size": 32,
              "description": "register description"
            },
            "PARL_IO_RX_INTR_MAP": {
              "offset": "0xD0",
              "size": 32,
              "description": "register description"
            },
            "DMA_IN_CH0_INTR_MAP": {
              "offset": "0xD4",
              "size": 32,
              "description": "register description"
            },
            "DMA_IN_CH1_INTR_MAP": {
              "offset": "0xD8",
              "size": 32,
              "description": "register description"
            },
            "DMA_IN_CH2_INTR_MAP": {
              "offset": "0xDC",
              "size": 32,
              "description": "register description"
            },
            "DMA_OUT_CH0_INTR_MAP": {
              "offset": "0xE0",
              "size": 32,
              "description": "register description"
            },
            "DMA_OUT_CH1_INTR_MAP": {
              "offset": "0xE4",
              "size": 32,
              "description": "register description"
            },
            "DMA_OUT_CH2_INTR_MAP": {
              "offset": "0xE8",
              "size": 32,
              "description": "register description"
            },
            "GPSPI2_INTR_MAP": {
              "offset": "0xEC",
              "size": 32,
              "description": "register description"
            },
            "AES_INTR_MAP": {
              "offset": "0xF0",
              "size": 32,
              "description": "register description"
            },
            "SHA_INTR_MAP": {
              "offset": "0xF4",
              "size": 32,
              "description": "register description"
            },
            "RSA_INTR_MAP": {
              "offset": "0xF8",
              "size": 32,
              "description": "register description"
            },
            "ECC_INTR_MAP": {
              "offset": "0xFC",
              "size": 32,
              "description": "register description"
            },
            "ECDSA_INTR_MAP": {
              "offset": "0x100",
              "size": 32,
              "description": "register description"
            },
            "INTR_STATUS_REG_0": {
              "offset": "0x104",
              "size": 32,
              "description": "register description"
            },
            "INTR_STATUS_REG_1": {
              "offset": "0x108",
              "size": 32,
              "description": "register description"
            },
            "INT_STATUS_REG_2": {
              "offset": "0x10C",
              "size": 32,
              "description": "register description"
            },
            "CLOCK_GATE": {
              "offset": "0x110",
              "size": 32,
              "description": "register description"
            },
            "INTERRUPT_REG_DATE": {
              "offset": "0x7FC",
              "size": 32,
              "description": "register description"
            }
          },
          "bits": {
            "PMU_INTR_MAP": {
              "PMU_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PMU_INTR mapping register",
                "width": 5
              }
            },
            "EFUSE_INTR_MAP": {
              "EFUSE_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_EFUSE_INTR mapping register",
                "width": 5
              }
            },
            "LP_RTC_TIMER_INTR_MAP": {
              "LP_RTC_TIMER_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LP_RTC_TIMER_INTR mapping register",
                "width": 5
              }
            },
            "LP_BLE_TIMER_INTR_MAP": {
              "LP_BLE_TIMER_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LP_BLE_TIMER_INTR mapping register",
                "width": 5
              }
            },
            "LP_WDT_INTR_MAP": {
              "LP_WDT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LP_WDT_INTR mapping register",
                "width": 5
              }
            },
            "LP_PERI_TIMEOUT_INTR_MAP": {
              "LP_PERI_TIMEOUT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LP_PERI_TIMEOUT_INTR mapping register",
                "width": 5
              }
            },
            "LP_APM_M0_INTR_MAP": {
              "LP_APM_M0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LP_APM_M0_INTR mapping register",
                "width": 5
              }
            },
            "CPU_INTR_FROM_CPU_0_MAP": {
              "CPU_INTR_FROM_CPU_0_MAP": {
                "bit": 0,
                "description": "CORE0_CPU_INTR_FROM_CPU_0 mapping register",
                "width": 5
              }
            },
            "CPU_INTR_FROM_CPU_1_MAP": {
              "CPU_INTR_FROM_CPU_1_MAP": {
                "bit": 0,
                "description": "CORE0_CPU_INTR_FROM_CPU_1 mapping register",
                "width": 5
              }
            },
            "CPU_INTR_FROM_CPU_2_MAP": {
              "CPU_INTR_FROM_CPU_2_MAP": {
                "bit": 0,
                "description": "CORE0_CPU_INTR_FROM_CPU_2 mapping register",
                "width": 5
              }
            },
            "CPU_INTR_FROM_CPU_3_MAP": {
              "CPU_INTR_FROM_CPU_3_MAP": {
                "bit": 0,
                "description": "CORE0_CPU_INTR_FROM_CPU_3 mapping register",
                "width": 5
              }
            },
            "ASSIST_DEBUG_INTR_MAP": {
              "ASSIST_DEBUG_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_ASSIST_DEBUG_INTR mapping register",
                "width": 5
              }
            },
            "TRACE_INTR_MAP": {
              "TRACE_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_TRACE_INTR mapping register",
                "width": 5
              }
            },
            "CACHE_INTR_MAP": {
              "CACHE_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_CACHE_INTR mapping register",
                "width": 5
              }
            },
            "CPU_PERI_TIMEOUT_INTR_MAP": {
              "CPU_PERI_TIMEOUT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_CPU_PERI_TIMEOUT_INTR mapping register",
                "width": 5
              }
            },
            "BT_MAC_INTR_MAP": {
              "BT_MAC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_BT_MAC_INTR mapping register",
                "width": 5
              }
            },
            "BT_BB_INTR_MAP": {
              "BT_BB_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_BT_BB_INTR mapping register",
                "width": 5
              }
            },
            "BT_BB_NMI_MAP": {
              "BT_BB_NMI_MAP": {
                "bit": 0,
                "description": "CORE0_BT_BB_NMI mapping register",
                "width": 5
              }
            },
            "COEX_INTR_MAP": {
              "COEX_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_COEX_INTR mapping register",
                "width": 5
              }
            },
            "BLE_TIMER_INTR_MAP": {
              "BLE_TIMER_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_BLE_TIMER_INTR mapping register",
                "width": 5
              }
            },
            "BLE_SEC_INTR_MAP": {
              "BLE_SEC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_BLE_SEC_INTR mapping register",
                "width": 5
              }
            },
            "ZB_MAC_INTR_MAP": {
              "ZB_MAC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_ZB_MAC_INTR mapping register",
                "width": 5
              }
            },
            "GPIO_INTERRUPT_PRO_MAP": {
              "GPIO_INTERRUPT_PRO_MAP": {
                "bit": 0,
                "description": "CORE0_GPIO_INTERRUPT_PRO mapping register",
                "width": 5
              }
            },
            "GPIO_INTERRUPT_PRO_NMI_MAP": {
              "GPIO_INTERRUPT_PRO_NMI_MAP": {
                "bit": 0,
                "description": "CORE0_GPIO_INTERRUPT_PRO_NMI mapping register",
                "width": 5
              }
            },
            "PAU_INTR_MAP": {
              "PAU_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PAU_INTR mapping register",
                "width": 5
              }
            },
            "HP_PERI_TIMEOUT_INTR_MAP": {
              "HP_PERI_TIMEOUT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_HP_PERI_TIMEOUT_INTR mapping register",
                "width": 5
              }
            },
            "HP_APM_M0_INTR_MAP": {
              "HP_APM_M0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_HP_APM_M0_INTR mapping register",
                "width": 5
              }
            },
            "HP_APM_M1_INTR_MAP": {
              "HP_APM_M1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_HP_APM_M1_INTR mapping register",
                "width": 5
              }
            },
            "HP_APM_M2_INTR_MAP": {
              "HP_APM_M2_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_HP_APM_M2_INTR mapping register",
                "width": 5
              }
            },
            "HP_APM_M3_INTR_MAP": {
              "HP_APM_M3_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_HP_APM_M3_INTR mapping register",
                "width": 5
              }
            },
            "MSPI_INTR_MAP": {
              "MSPI_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_MSPI_INTR mapping register",
                "width": 5
              }
            },
            "I2S1_INTR_MAP": {
              "I2S1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_I2S1_INTR mapping register",
                "width": 5
              }
            },
            "UHCI0_INTR_MAP": {
              "UHCI0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_UHCI0_INTR mapping register",
                "width": 5
              }
            },
            "UART0_INTR_MAP": {
              "UART0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_UART0_INTR mapping register",
                "width": 5
              }
            },
            "UART1_INTR_MAP": {
              "UART1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_UART1_INTR mapping register",
                "width": 5
              }
            },
            "LEDC_INTR_MAP": {
              "LEDC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_LEDC_INTR mapping register",
                "width": 5
              }
            },
            "CAN0_INTR_MAP": {
              "CAN0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_CAN0_INTR mapping register",
                "width": 5
              }
            },
            "USB_INTR_MAP": {
              "USB_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_USB_INTR mapping register",
                "width": 5
              }
            },
            "RMT_INTR_MAP": {
              "RMT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_RMT_INTR mapping register",
                "width": 5
              }
            },
            "I2C_EXT0_INTR_MAP": {
              "I2C_EXT0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_I2C_EXT0_INTR mapping register",
                "width": 5
              }
            },
            "I2C_EXT1_INTR_MAP": {
              "I2C_EXT1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_I2C_EXT1_INTR mapping register",
                "width": 5
              }
            },
            "TG0_T0_INTR_MAP": {
              "TG0_T0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_TG0_T0_INTR mapping register",
                "width": 5
              }
            },
            "TG0_WDT_INTR_MAP": {
              "TG0_WDT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_TG0_WDT_INTR mapping register",
                "width": 5
              }
            },
            "TG1_T0_INTR_MAP": {
              "TG1_T0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_TG1_T0_INTR mapping register",
                "width": 5
              }
            },
            "TG1_WDT_INTR_MAP": {
              "TG1_WDT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_TG1_WDT_INTR mapping register",
                "width": 5
              }
            },
            "SYSTIMER_TARGET0_INTR_MAP": {
              "SYSTIMER_TARGET0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_SYSTIMER_TARGET0_INTR mapping register",
                "width": 5
              }
            },
            "SYSTIMER_TARGET1_INTR_MAP": {
              "SYSTIMER_TARGET1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_SYSTIMER_TARGET1_INTR mapping register",
                "width": 5
              }
            },
            "SYSTIMER_TARGET2_INTR_MAP": {
              "SYSTIMER_TARGET2_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_SYSTIMER_TARGET2_INTR mapping register",
                "width": 5
              }
            },
            "APB_ADC_INTR_MAP": {
              "APB_ADC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_APB_ADC_INTR mapping register",
                "width": 5
              }
            },
            "PWM_INTR_MAP": {
              "PWM_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PWM_INTR mapping register",
                "width": 5
              }
            },
            "PCNT_INTR_MAP": {
              "PCNT_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PCNT_INTR mapping register",
                "width": 5
              }
            },
            "PARL_IO_TX_INTR_MAP": {
              "PARL_IO_TX_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PARL_IO_TX_INTR mapping register",
                "width": 5
              }
            },
            "PARL_IO_RX_INTR_MAP": {
              "PARL_IO_RX_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_PARL_IO_RX_INTR mapping register",
                "width": 5
              }
            },
            "DMA_IN_CH0_INTR_MAP": {
              "DMA_IN_CH0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_IN_CH0_INTR mapping register",
                "width": 5
              }
            },
            "DMA_IN_CH1_INTR_MAP": {
              "DMA_IN_CH1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_IN_CH1_INTR mapping register",
                "width": 5
              }
            },
            "DMA_IN_CH2_INTR_MAP": {
              "DMA_IN_CH2_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_IN_CH2_INTR mapping register",
                "width": 5
              }
            },
            "DMA_OUT_CH0_INTR_MAP": {
              "DMA_OUT_CH0_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_OUT_CH0_INTR mapping register",
                "width": 5
              }
            },
            "DMA_OUT_CH1_INTR_MAP": {
              "DMA_OUT_CH1_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_OUT_CH1_INTR mapping register",
                "width": 5
              }
            },
            "DMA_OUT_CH2_INTR_MAP": {
              "DMA_OUT_CH2_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_DMA_OUT_CH2_INTR mapping register",
                "width": 5
              }
            },
            "GPSPI2_INTR_MAP": {
              "GPSPI2_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_GPSPI2_INTR mapping register",
                "width": 5
              }
            },
            "AES_INTR_MAP": {
              "AES_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_AES_INTR mapping register",
                "width": 5
              }
            },
            "SHA_INTR_MAP": {
              "SHA_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_SHA_INTR mapping register",
                "width": 5
              }
            },
            "RSA_INTR_MAP": {
              "RSA_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_RSA_INTR mapping register",
                "width": 5
              }
            },
            "ECC_INTR_MAP": {
              "ECC_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_ECC_INTR mapping register",
                "width": 5
              }
            },
            "ECDSA_INTR_MAP": {
              "ECDSA_INTR_MAP": {
                "bit": 0,
                "description": "CORE0_ECDSA_INTR mapping register",
                "width": 5
              }
            },
            "INTR_STATUS_REG_0": {
              "INTR_STATUS_0": {
                "bit": 0,
                "description": "Status register for interrupt sources 0~31 mapping register",
                "width": 32
              }
            },
            "INTR_STATUS_REG_1": {
              "INTR_STATUS_1": {
                "bit": 0,
                "description": "Status register for interrupt sources 32~63 mapping register",
                "width": 32
              }
            },
            "INT_STATUS_REG_2": {
              "INT_STATUS_2": {
                "bit": 0,
                "description": "Status register for interrupt sources 64~95 mapping register",
                "width": 32
              }
            },
            "CLOCK_GATE": {
              "REG_CLK_EN": {
                "bit": 0,
                "description": "Clock register"
              }
            },
            "INTERRUPT_REG_DATE": {
              "INTERRUPT_REG_DATE": {
                "bit": 0,
                "description": "Version control register",
                "width": 28
              }
            }
          }
        },
        "INTPRI": {
          "instances": [
            {
              "name": "INTPRI",
              "base": "0x600C5000"
            }
          ],
          "registers": {
            "CPU_INT_ENABLE": {
              "offset": "0x00",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_TYPE": {
              "offset": "0x04",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_EIP_STATUS": {
              "offset": "0x08",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_0": {
              "offset": "0x0C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_1": {
              "offset": "0x10",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_2": {
              "offset": "0x14",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_3": {
              "offset": "0x18",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_4": {
              "offset": "0x1C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_5": {
              "offset": "0x20",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_6": {
              "offset": "0x24",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_7": {
              "offset": "0x28",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_8": {
              "offset": "0x2C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_9": {
              "offset": "0x30",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_10": {
              "offset": "0x34",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_11": {
              "offset": "0x38",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_12": {
              "offset": "0x3C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_13": {
              "offset": "0x40",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_14": {
              "offset": "0x44",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_15": {
              "offset": "0x48",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_16": {
              "offset": "0x4C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_17": {
              "offset": "0x50",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_18": {
              "offset": "0x54",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_19": {
              "offset": "0x58",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_20": {
              "offset": "0x5C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_21": {
              "offset": "0x60",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_22": {
              "offset": "0x64",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_23": {
              "offset": "0x68",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_24": {
              "offset": "0x6C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_25": {
              "offset": "0x70",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_26": {
              "offset": "0x74",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_27": {
              "offset": "0x78",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_28": {
              "offset": "0x7C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_29": {
              "offset": "0x80",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_30": {
              "offset": "0x84",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_PRI_31": {
              "offset": "0x88",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_THRESH": {
              "offset": "0x8C",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_0": {
              "offset": "0x90",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_1": {
              "offset": "0x94",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_2": {
              "offset": "0x98",
              "size": 32,
              "description": "register description"
            },
            "CPU_INTR_FROM_CPU_3": {
              "offset": "0x9C",
              "size": 32,
              "description": "register description"
            },
            "DATE": {
              "offset": "0xA0",
              "size": 32,
              "description": "register description"
            },
            "CLOCK_GATE": {
              "offset": "0xA4",
              "size": 32,
              "description": "register description"
            },
            "CPU_INT_CLEAR": {
              "offset": "0xA8",
              "size": 32,
              "description": "register description"
            },
            "RND_ECO": {
              "offset": "0xAC",
              "size": 32,
              "description": "redcy eco register."
            },
            "RND_ECO_LOW": {
              "offset": "0xB0",
              "size": 32,
              "description": "redcy eco low register."
            },
            "RND_ECO_HIGH": {
              "offset": "0x3FC",
              "size": 32,
              "description": "redcy eco high register."
            }
          },
          "bits": {
            "CPU_INT_ENABLE": {
              "CPU_INT_ENABLE": {
                "bit": 0,
                "description": "Need add description",
                "width": 32
              }
            },
            "CPU_INT_TYPE": {
              "CPU_INT_TYPE": {
                "bit": 0,
                "description": "Need add description",
                "width": 32
              }
            },
            "CPU_INT_EIP_STATUS": {
              "CPU_INT_EIP_STATUS": {
                "bit": 0,
                "description": "Need add description",
                "width": 32
              }
            },
            "CPU_INT_PRI_0": {
              "CPU_PRI_0_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_1": {
              "CPU_PRI_1_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_2": {
              "CPU_PRI_2_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_3": {
              "CPU_PRI_3_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_4": {
              "CPU_PRI_4_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_5": {
              "CPU_PRI_5_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_6": {
              "CPU_PRI_6_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_7": {
              "CPU_PRI_7_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_8": {
              "CPU_PRI_8_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_9": {
              "CPU_PRI_9_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_10": {
              "CPU_PRI_10_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_11": {
              "CPU_PRI_11_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_12": {
              "CPU_PRI_12_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_13": {
              "CPU_PRI_13_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_14": {
              "CPU_PRI_14_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_15": {
              "CPU_PRI_15_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_16": {
              "CPU_PRI_16_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_17": {
              "CPU_PRI_17_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_18": {
              "CPU_PRI_18_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_19": {
              "CPU_PRI_19_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_20": {
              "CPU_PRI_20_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_21": {
              "CPU_PRI_21_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_22": {
              "CPU_PRI_22_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_23": {
              "CPU_PRI_23_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_24": {
              "CPU_PRI_24_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_25": {
              "CPU_PRI_25_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_26": {
              "CPU_PRI_26_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_27": {
              "CPU_PRI_27_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_28": {
              "CPU_PRI_28_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_29": {
              "CPU_PRI_29_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_30": {
              "CPU_PRI_30_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_PRI_31": {
              "CPU_PRI_31_MAP": {
                "bit": 0,
                "description": "Need add description",
                "width": 4
              }
            },
            "CPU_INT_THRESH": {
              "CPU_INT_THRESH": {
                "bit": 0,
                "description": "Need add description",
                "width": 8
              }
            },
            "CPU_INTR_FROM_CPU_0": {
              "CPU_INTR_FROM_CPU_0": {
                "bit": 0,
                "description": "Need add description"
              }
            },
            "CPU_INTR_FROM_CPU_1": {
              "CPU_INTR_FROM_CPU_1": {
                "bit": 0,
                "description": "Need add description"
              }
            },
            "CPU_INTR_FROM_CPU_2": {
              "CPU_INTR_FROM_CPU_2": {
                "bit": 0,
                "description": "Need add description"
              }
            },
            "CPU_INTR_FROM_CPU_3": {
              "CPU_INTR_FROM_CPU_3": {
                "bit": 0,
                "description": "Need add description"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "Need add description",
                "width": 28
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "Need add description"
              }
            },
            "CPU_INT_CLEAR": {
              "CPU_INT_CLEAR": {
                "bit": 0,
                "description": "Need add description",
                "width": 32
              }
            },
            "RND_ECO": {
              "REDCY_ENA": {
                "bit": 0,
                "description": "Only reserved for ECO."
              },
              "REDCY_RESULT": {
                "bit": 1,
                "description": "Only reserved for ECO."
              }
            },
            "RND_ECO_LOW": {
              "REDCY_LOW": {
                "bit": 0,
                "description": "Only reserved for ECO.",
                "width": 32
              }
            },
            "RND_ECO_HIGH": {
              "REDCY_HIGH": {
                "bit": 0,
                "description": "Only reserved for ECO.",
                "width": 32
              }
            }
          }
        },
        "IO": {
          "instances": [
            {
              "name": "IO_MUX",
              "base": "0x60090000"
            }
          ],
          "registers": {
            "PIN_CTRL": {
              "offset": "0x00",
              "size": 32,
              "description": "Clock Output Configuration Register"
            },
            "GPIO%s": {
              "offset": "0x04",
              "size": 32,
              "description": "IO MUX Configure Register for pad GPIO0"
            },
            "MODEM_DIAG_EN": {
              "offset": "0xBC",
              "size": 32,
              "description": "GPIO MATRIX Configure Register for modem diag"
            },
            "DATE": {
              "offset": "0xFC",
              "size": 32,
              "description": "IO MUX Version Control Register"
            }
          },
          "bits": {
            "PIN_CTRL": {
              "CLK_OUT1": {
                "bit": 0,
                "description": "If you want to output clock for I2S to CLK_OUT_out1, set this register to 0x0. CLK_OUT_out1 can be found in peripheral output signals.",
                "width": 5
              },
              "CLK_OUT2": {
                "bit": 5,
                "description": "If you want to output clock for I2S to CLK_OUT_out2, set this register to 0x0. CLK_OUT_out2 can be found in peripheral output signals.",
                "width": 5
              },
              "CLK_OUT3": {
                "bit": 10,
                "description": "If you want to output clock for I2S to CLK_OUT_out3, set this register to 0x0. CLK_OUT_out3 can be found in peripheral output signals.",
                "width": 5
              }
            },
            "GPIO%s": {
              "MCU_OE": {
                "bit": 0,
                "description": "Output enable of the pad in sleep mode. 1: output enabled. 0: output disabled."
              },
              "SLP_SEL": {
                "bit": 1,
                "description": "Sleep mode selection of this pad. Set to 1 to put the pad in pad mode."
              },
              "MCU_WPD": {
                "bit": 2,
                "description": "Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled. 0: internal pull-down disabled."
              },
              "MCU_WPU": {
                "bit": 3,
                "description": "Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled. 0: internal pull-up disabled."
              },
              "MCU_IE": {
                "bit": 4,
                "description": "Input enable of the pad during sleep mode. 1: input enabled. 0: input disabled."
              },
              "MCU_DRV": {
                "bit": 5,
                "description": "Select the drive strength of the pad during sleep mode. 0: ~5 mA. 1: ~10mA. 2: ~20mA. 3: ~40mA.",
                "width": 2
              },
              "FUN_WPD": {
                "bit": 7,
                "description": "Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled."
              },
              "FUN_WPU": {
                "bit": 8,
                "description": "Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled."
              },
              "FUN_IE": {
                "bit": 9,
                "description": "Input enable of the pad. 1: input enabled. 0: input disabled."
              },
              "FUN_DRV": {
                "bit": 10,
                "description": "Select the drive strength of the pad. 0: ~5 mA. 1: ~10mA. 2: ~20mA. 3: ~40mA.",
                "width": 2
              },
              "MCU_SEL": {
                "bit": 12,
                "description": "Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2. etc.",
                "width": 3
              },
              "FILTER_EN": {
                "bit": 15,
                "description": "Enable filter for pin input signals. 1: Filter enabled. 0: Filter disabled."
              },
              "HYS_EN": {
                "bit": 16,
                "description": "Software enables hysteresis function for the pad. 1: Hysteresis enabled. 0: Hysteresis disabled."
              },
              "HYS_SEL": {
                "bit": 17,
                "description": "Select enabling signals of the pad from software and efuse hardware. 1: Select enabling siganl from slftware. 0: Select enabling signal from efuse hardware."
              }
            },
            "MODEM_DIAG_EN": {
              "MODEM_DIAG_EN": {
                "bit": 0,
                "description": "bit i to enable modem_diag[i] into gpio matrix. 1:enable modem_diag[i] into gpio matrix. 0:enable other signals into gpio matrix",
                "width": 32
              }
            },
            "DATE": {
              "REG_DATE": {
                "bit": 0,
                "description": "Version control register",
                "width": 28
              }
            }
          }
        },
        "PWM": {
          "instances": [
            {
              "name": "LEDC",
              "base": "0x60008000",
              "irq": 35
            },
            {
              "name": "MCPWM0",
              "base": "0x60014000",
              "irq": 49
            }
          ],
          "registers": {
            "CH%s_CONF0": {
              "offset": "0x00",
              "size": 32,
              "description": "Configuration register 0 for channel %s"
            },
            "CH%s_HPOINT": {
              "offset": "0x04",
              "size": 32,
              "description": "High point register for channel %s"
            },
            "CH%s_DUTY": {
              "offset": "0x08",
              "size": 32,
              "description": "Initial duty cycle for channel %s"
            },
            "CH%s_CONF1": {
              "offset": "0x0C",
              "size": 32,
              "description": "Configuration register 1 for channel %s"
            },
            "CH%s_DUTY_R": {
              "offset": "0x10",
              "size": 32,
              "description": "Current duty cycle for channel %s"
            },
            "TIMER%s_CONF": {
              "offset": "0xA0",
              "size": 32,
              "description": "Timer %s configuration"
            },
            "TIMER%s_VALUE": {
              "offset": "0xA4",
              "size": 32,
              "description": "Timer %s current counter value"
            },
            "INT_RAW": {
              "offset": "0xC0",
              "size": 32,
              "description": "Raw interrupt status"
            },
            "INT_ST": {
              "offset": "0xC4",
              "size": 32,
              "description": "Masked interrupt status"
            },
            "INT_ENA": {
              "offset": "0xC8",
              "size": 32,
              "description": "Interrupt enable bits"
            },
            "INT_CLR": {
              "offset": "0xCC",
              "size": 32,
              "description": "Interrupt clear bits"
            },
            "CH%s_GAMMA_WR": {
              "offset": "0x100",
              "size": 32,
              "description": "Ledc ch%s gamma ram write register."
            },
            "CH%s_GAMMA_WR_ADDR": {
              "offset": "0x104",
              "size": 32,
              "description": "Ledc ch%s gamma ram write address register."
            },
            "CH%s_GAMMA_RD_ADDR": {
              "offset": "0x108",
              "size": 32,
              "description": "Ledc ch%s gamma ram read address register."
            },
            "CH%s_GAMMA_RD_DATA": {
              "offset": "0x10C",
              "size": 32,
              "description": "Ledc ch%s gamma ram read data register."
            },
            "CH%s_GAMMA_CONF": {
              "offset": "0x180",
              "size": 32,
              "description": "Ledc ch%s gamma config register."
            },
            "EVT_TASK_EN0": {
              "offset": "0x1A0",
              "size": 32,
              "description": "Ledc event task enable bit register0."
            },
            "EVT_TASK_EN1": {
              "offset": "0x1A4",
              "size": 32,
              "description": "Ledc event task enable bit register1."
            },
            "EVT_TASK_EN2": {
              "offset": "0x1A8",
              "size": 32,
              "description": "Ledc event task enable bit register2."
            },
            "TIMER%s_CMP": {
              "offset": "0x1B0",
              "size": 32,
              "description": "Ledc timer%s compare value register."
            },
            "TIMER%s_CNT_CAP": {
              "offset": "0x1C0",
              "size": 32,
              "description": "Ledc timer%s count value capture register."
            },
            "CONF": {
              "offset": "0x1F0",
              "size": 32,
              "description": "Global ledc configuration register"
            },
            "DATE": {
              "offset": "0x1FC",
              "size": 32,
              "description": "Version control register"
            }
          },
          "bits": {
            "CH%s_CONF0": {
              "TIMER_SEL": {
                "bit": 0,
                "description": "This field is used to select one of timers for channel %s.\n\n0: select timer0, 1: select timer1, 2: select timer2, 3: select timer3",
                "width": 2
              },
              "SIG_OUT_EN": {
                "bit": 2,
                "description": "Set this bit to enable signal output on channel %s."
              },
              "IDLE_LV": {
                "bit": 3,
                "description": "This bit is used to control the output value when channel %s is inactive (when LEDC_SIG_OUT_EN_CH%s is 0)."
              },
              "PARA_UP": {
                "bit": 4,
                "description": "This bit is used to update LEDC_HPOINT_CH%s, LEDC_DUTY_START_CH%s, LEDC_SIG_OUT_EN_CH%s, LEDC_TIMER_SEL_CH%s, LEDC_DUTY_NUM_CH%s, LEDC_DUTY_CYCLE_CH%s, LEDC_DUTY_SCALE_CH%s, LEDC_DUTY_INC_CH%s, and LEDC_OVF_CNT_EN_CH%s fields for channel %s, and will be automatically cleared by hardware."
              },
              "OVF_NUM": {
                "bit": 5,
                "description": "This register is used to configure the maximum times of overflow minus 1.\n\nThe LEDC_OVF_CNT_CH%s_INT interrupt will be triggered when channel %s overflows for (LEDC_OVF_NUM_CH%s + 1) times.",
                "width": 10
              },
              "OVF_CNT_EN": {
                "bit": 15,
                "description": "This bit is used to enable the ovf_cnt of channel %s."
              },
              "OVF_CNT_RESET": {
                "bit": 16,
                "description": "Set this bit to reset the ovf_cnt of channel %s."
              }
            },
            "CH%s_HPOINT": {
              "HPOINT": {
                "bit": 0,
                "description": "The output value changes to high when the selected timers has reached the value specified by this register.",
                "width": 20
              }
            },
            "CH%s_DUTY": {
              "DUTY": {
                "bit": 0,
                "description": "This register is used to change the output duty by controlling the Lpoint.\n\nThe output value turns to low when the selected timers has reached the Lpoint.",
                "width": 25
              }
            },
            "CH%s_CONF1": {
              "DUTY_START": {
                "bit": 31,
                "description": "Other configured fields in LEDC_CH%s_CONF1_REG will start to take effect when this bit is set to 1."
              }
            },
            "CH%s_DUTY_R": {
              "DUTY_CH_R": {
                "bit": 0,
                "description": "This register stores the current duty of output signal on channel %s.",
                "width": 25
              }
            },
            "TIMER%s_CONF": {
              "DUTY_RES": {
                "bit": 0,
                "description": "This register is used to control the range of the counter in timer %s.",
                "width": 5
              },
              "CLK_DIV": {
                "bit": 5,
                "description": "This register is used to configure the divisor for the divider in timer %s.\n\nThe least significant eight bits represent the fractional part.",
                "width": 18
              },
              "PAUSE": {
                "bit": 23,
                "description": "This bit is used to suspend the counter in timer %s."
              },
              "RST": {
                "bit": 24,
                "description": "This bit is used to reset timer %s. The counter will show 0 after reset."
              },
              "TICK_SEL": {
                "bit": 25,
                "description": "This bit is used to select clock for timer %s. When this bit is set to 1 LEDC_APB_CLK_SEL[1:0] should be 1, otherwise the timer clock may be not accurate.\n\n1'h0: SLOW_CLK 1'h1: REF_TICK"
              },
              "PARA_UP": {
                "bit": 26,
                "description": "Set this bit to update LEDC_CLK_DIV_TIMER%s and LEDC_TIMER%s_DUTY_RES."
              }
            },
            "TIMER%s_VALUE": {
              "TIMER_CNT": {
                "bit": 0,
                "description": "This register stores the current counter value of timer %s.",
                "width": 20
              }
            },
            "INT_RAW": {
              "TIMER0_OVF_INT_RAW": {
                "bit": 0,
                "description": "Triggered when the timer0 has reached its maximum counter value."
              },
              "TIMER1_OVF_INT_RAW": {
                "bit": 1,
                "description": "Triggered when the timer1 has reached its maximum counter value."
              },
              "TIMER2_OVF_INT_RAW": {
                "bit": 2,
                "description": "Triggered when the timer2 has reached its maximum counter value."
              },
              "TIMER3_OVF_INT_RAW": {
                "bit": 3,
                "description": "Triggered when the timer3 has reached its maximum counter value."
              },
              "DUTY_CHNG_END_CH0_INT_RAW": {
                "bit": 4,
                "description": "Interrupt raw bit for channel 0. Triggered when the gradual change of duty has finished."
              },
              "DUTY_CHNG_END_CH1_INT_RAW": {
                "bit": 5,
                "description": "Interrupt raw bit for channel 1. Triggered when the gradual change of duty has finished."
              },
              "DUTY_CHNG_END_CH2_INT_RAW": {
                "bit": 6,
                "description": "Interrupt raw bit for channel 2. Triggered when the gradual change of duty has finished."
              },
              "DUTY_CHNG_END_CH3_INT_RAW": {
                "bit": 7,
                "description": "Interrupt raw bit for channel 3. Triggered when the gradual change of duty has finished."
              },
              "DUTY_CHNG_END_CH4_INT_RAW": {
                "bit": 8,
                "description": "Interrupt raw bit for channel 4. Triggered when the gradual change of duty has finished."
              },
              "DUTY_CHNG_END_CH5_INT_RAW": {
                "bit": 9,
                "description": "Interrupt raw bit for channel 5. Triggered when the gradual change of duty has finished."
              },
              "OVF_CNT_CH0_INT_RAW": {
                "bit": 12,
                "description": "Interrupt raw bit for channel 0. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH0."
              },
              "OVF_CNT_CH1_INT_RAW": {
                "bit": 13,
                "description": "Interrupt raw bit for channel 1. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH1."
              },
              "OVF_CNT_CH2_INT_RAW": {
                "bit": 14,
                "description": "Interrupt raw bit for channel 2. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH2."
              },
              "OVF_CNT_CH3_INT_RAW": {
                "bit": 15,
                "description": "Interrupt raw bit for channel 3. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH3."
              },
              "OVF_CNT_CH4_INT_RAW": {
                "bit": 16,
                "description": "Interrupt raw bit for channel 4. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH4."
              },
              "OVF_CNT_CH5_INT_RAW": {
                "bit": 17,
                "description": "Interrupt raw bit for channel 5. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH5."
              }
            },
            "INT_ST": {
              "TIMER0_OVF_INT_ST": {
                "bit": 0,
                "description": "This is the masked interrupt status bit for the LEDC_TIMER0_OVF_INT interrupt when LEDC_TIMER0_OVF_INT_ENA is set to 1."
              },
              "TIMER1_OVF_INT_ST": {
                "bit": 1,
                "description": "This is the masked interrupt status bit for the LEDC_TIMER1_OVF_INT interrupt when LEDC_TIMER1_OVF_INT_ENA is set to 1."
              },
              "TIMER2_OVF_INT_ST": {
                "bit": 2,
                "description": "This is the masked interrupt status bit for the LEDC_TIMER2_OVF_INT interrupt when LEDC_TIMER2_OVF_INT_ENA is set to 1."
              },
              "TIMER3_OVF_INT_ST": {
                "bit": 3,
                "description": "This is the masked interrupt status bit for the LEDC_TIMER3_OVF_INT interrupt when LEDC_TIMER3_OVF_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH0_INT_ST": {
                "bit": 4,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH0_INT interrupt when LEDC_DUTY_CHNG_END_CH0_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH1_INT_ST": {
                "bit": 5,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH1_INT interrupt when LEDC_DUTY_CHNG_END_CH1_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH2_INT_ST": {
                "bit": 6,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH2_INT interrupt when LEDC_DUTY_CHNG_END_CH2_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH3_INT_ST": {
                "bit": 7,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH3_INT interrupt when LEDC_DUTY_CHNG_END_CH3_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH4_INT_ST": {
                "bit": 8,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH4_INT interrupt when LEDC_DUTY_CHNG_END_CH4_INT_ENA is set to 1."
              },
              "DUTY_CHNG_END_CH5_INT_ST": {
                "bit": 9,
                "description": "This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH5_INT interrupt when LEDC_DUTY_CHNG_END_CH5_INT_ENA is set to 1."
              },
              "OVF_CNT_CH0_INT_ST": {
                "bit": 12,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH0_INT interrupt when LEDC_OVF_CNT_CH0_INT_ENA is set to 1."
              },
              "OVF_CNT_CH1_INT_ST": {
                "bit": 13,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH1_INT interrupt when LEDC_OVF_CNT_CH1_INT_ENA is set to 1."
              },
              "OVF_CNT_CH2_INT_ST": {
                "bit": 14,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH2_INT interrupt when LEDC_OVF_CNT_CH2_INT_ENA is set to 1."
              },
              "OVF_CNT_CH3_INT_ST": {
                "bit": 15,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH3_INT interrupt when LEDC_OVF_CNT_CH3_INT_ENA is set to 1."
              },
              "OVF_CNT_CH4_INT_ST": {
                "bit": 16,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH4_INT interrupt when LEDC_OVF_CNT_CH4_INT_ENA is set to 1."
              },
              "OVF_CNT_CH5_INT_ST": {
                "bit": 17,
                "description": "This is the masked interrupt status bit for the LEDC_OVF_CNT_CH5_INT interrupt when LEDC_OVF_CNT_CH5_INT_ENA is set to 1."
              }
            },
            "INT_ENA": {
              "TIMER0_OVF_INT_ENA": {
                "bit": 0,
                "description": "The interrupt enable bit for the LEDC_TIMER0_OVF_INT interrupt."
              },
              "TIMER1_OVF_INT_ENA": {
                "bit": 1,
                "description": "The interrupt enable bit for the LEDC_TIMER1_OVF_INT interrupt."
              },
              "TIMER2_OVF_INT_ENA": {
                "bit": 2,
                "description": "The interrupt enable bit for the LEDC_TIMER2_OVF_INT interrupt."
              },
              "TIMER3_OVF_INT_ENA": {
                "bit": 3,
                "description": "The interrupt enable bit for the LEDC_TIMER3_OVF_INT interrupt."
              },
              "DUTY_CHNG_END_CH0_INT_ENA": {
                "bit": 4,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH0_INT interrupt."
              },
              "DUTY_CHNG_END_CH1_INT_ENA": {
                "bit": 5,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH1_INT interrupt."
              },
              "DUTY_CHNG_END_CH2_INT_ENA": {
                "bit": 6,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH2_INT interrupt."
              },
              "DUTY_CHNG_END_CH3_INT_ENA": {
                "bit": 7,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH3_INT interrupt."
              },
              "DUTY_CHNG_END_CH4_INT_ENA": {
                "bit": 8,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH4_INT interrupt."
              },
              "DUTY_CHNG_END_CH5_INT_ENA": {
                "bit": 9,
                "description": "The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH5_INT interrupt."
              },
              "OVF_CNT_CH0_INT_ENA": {
                "bit": 12,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH0_INT interrupt."
              },
              "OVF_CNT_CH1_INT_ENA": {
                "bit": 13,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH1_INT interrupt."
              },
              "OVF_CNT_CH2_INT_ENA": {
                "bit": 14,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH2_INT interrupt."
              },
              "OVF_CNT_CH3_INT_ENA": {
                "bit": 15,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH3_INT interrupt."
              },
              "OVF_CNT_CH4_INT_ENA": {
                "bit": 16,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH4_INT interrupt."
              },
              "OVF_CNT_CH5_INT_ENA": {
                "bit": 17,
                "description": "The interrupt enable bit for the LEDC_OVF_CNT_CH5_INT interrupt."
              }
            },
            "INT_CLR": {
              "TIMER0_OVF_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear the LEDC_TIMER0_OVF_INT interrupt."
              },
              "TIMER1_OVF_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear the LEDC_TIMER1_OVF_INT interrupt."
              },
              "TIMER2_OVF_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear the LEDC_TIMER2_OVF_INT interrupt."
              },
              "TIMER3_OVF_INT_CLR": {
                "bit": 3,
                "description": "Set this bit to clear the LEDC_TIMER3_OVF_INT interrupt."
              },
              "DUTY_CHNG_END_CH0_INT_CLR": {
                "bit": 4,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH0_INT interrupt."
              },
              "DUTY_CHNG_END_CH1_INT_CLR": {
                "bit": 5,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH1_INT interrupt."
              },
              "DUTY_CHNG_END_CH2_INT_CLR": {
                "bit": 6,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH2_INT interrupt."
              },
              "DUTY_CHNG_END_CH3_INT_CLR": {
                "bit": 7,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH3_INT interrupt."
              },
              "DUTY_CHNG_END_CH4_INT_CLR": {
                "bit": 8,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH4_INT interrupt."
              },
              "DUTY_CHNG_END_CH5_INT_CLR": {
                "bit": 9,
                "description": "Set this bit to clear the LEDC_DUTY_CHNG_END_CH5_INT interrupt."
              },
              "OVF_CNT_CH0_INT_CLR": {
                "bit": 12,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH0_INT interrupt."
              },
              "OVF_CNT_CH1_INT_CLR": {
                "bit": 13,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH1_INT interrupt."
              },
              "OVF_CNT_CH2_INT_CLR": {
                "bit": 14,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH2_INT interrupt."
              },
              "OVF_CNT_CH3_INT_CLR": {
                "bit": 15,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH3_INT interrupt."
              },
              "OVF_CNT_CH4_INT_CLR": {
                "bit": 16,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH4_INT interrupt."
              },
              "OVF_CNT_CH5_INT_CLR": {
                "bit": 17,
                "description": "Set this bit to clear the LEDC_OVF_CNT_CH5_INT interrupt."
              }
            },
            "CH%s_GAMMA_WR": {
              "CH_GAMMA_DUTY_INC": {
                "bit": 0,
                "description": "Ledc ch%s gamma duty inc of current ram write address.This register is used to increase or decrease the duty of output signal on channel %s. \n\n1: Increase  0: Decrease."
              },
              "CH_GAMMA_DUTY_CYCLE": {
                "bit": 1,
                "description": "Ledc ch%s gamma duty cycle of current ram write address.The duty will change every LEDC_CH%s_GAMMA_DUTY_CYCLE on channel %s.",
                "width": 10
              },
              "CH_GAMMA_SCALE": {
                "bit": 11,
                "description": "Ledc ch%s gamma scale of current ram write address.This register is used to configure the changing step scale of duty on channel %s.",
                "width": 10
              },
              "CH_GAMMA_DUTY_NUM": {
                "bit": 21,
                "description": "Ledc ch%s gamma duty num of current ram write address.This register is used to control the number of times the duty cycle will be changed.",
                "width": 10
              }
            },
            "CH%s_GAMMA_WR_ADDR": {
              "CH_GAMMA_WR_ADDR": {
                "bit": 0,
                "description": "Ledc ch%s gamma ram write address.",
                "width": 4
              }
            },
            "CH%s_GAMMA_RD_ADDR": {
              "CH_GAMMA_RD_ADDR": {
                "bit": 0,
                "description": "Ledc ch%s gamma ram read address.",
                "width": 4
              }
            },
            "CH%s_GAMMA_RD_DATA": {
              "CH_GAMMA_RD_DATA": {
                "bit": 0,
                "description": "Ledc ch%s gamma ram read data.",
                "width": 31
              }
            },
            "CH%s_GAMMA_CONF": {
              "CH_GAMMA_ENTRY_NUM": {
                "bit": 0,
                "description": "Ledc ch%s gamma entry num.",
                "width": 5
              },
              "CH_GAMMA_PAUSE": {
                "bit": 5,
                "description": "Ledc ch%s gamma pause, write 1 to pause."
              },
              "CH_GAMMA_RESUME": {
                "bit": 6,
                "description": "Ledc ch%s gamma resume, write 1 to resume."
              }
            },
            "EVT_TASK_EN0": {
              "EVT_DUTY_CHNG_END_CH0_EN": {
                "bit": 0,
                "description": "Ledc ch0 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_DUTY_CHNG_END_CH1_EN": {
                "bit": 1,
                "description": "Ledc ch1 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_DUTY_CHNG_END_CH2_EN": {
                "bit": 2,
                "description": "Ledc ch2 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_DUTY_CHNG_END_CH3_EN": {
                "bit": 3,
                "description": "Ledc ch3 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_DUTY_CHNG_END_CH4_EN": {
                "bit": 4,
                "description": "Ledc ch4 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_DUTY_CHNG_END_CH5_EN": {
                "bit": 5,
                "description": "Ledc ch5 duty change end event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH0_EN": {
                "bit": 8,
                "description": "Ledc ch0 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH1_EN": {
                "bit": 9,
                "description": "Ledc ch1 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH2_EN": {
                "bit": 10,
                "description": "Ledc ch2 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH3_EN": {
                "bit": 11,
                "description": "Ledc ch3 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH4_EN": {
                "bit": 12,
                "description": "Ledc ch4 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_OVF_CNT_PLS_CH5_EN": {
                "bit": 13,
                "description": "Ledc ch5 overflow count pulse event enable register, write 1 to enable this event."
              },
              "EVT_TIME_OVF_TIMER0_EN": {
                "bit": 16,
                "description": "Ledc timer0 overflow event enable register, write 1 to enable this event."
              },
              "EVT_TIME_OVF_TIMER1_EN": {
                "bit": 17,
                "description": "Ledc timer1 overflow event enable register, write 1 to enable this event."
              },
              "EVT_TIME_OVF_TIMER2_EN": {
                "bit": 18,
                "description": "Ledc timer2 overflow event enable register, write 1 to enable this event."
              },
              "EVT_TIME_OVF_TIMER3_EN": {
                "bit": 19,
                "description": "Ledc timer3 overflow event enable register, write 1 to enable this event."
              },
              "EVT_TIME0_CMP_EN": {
                "bit": 20,
                "description": "Ledc timer0 compare event enable register, write 1 to enable this event."
              },
              "EVT_TIME1_CMP_EN": {
                "bit": 21,
                "description": "Ledc timer1 compare event enable register, write 1 to enable this event."
              },
              "EVT_TIME2_CMP_EN": {
                "bit": 22,
                "description": "Ledc timer2 compare event enable register, write 1 to enable this event."
              },
              "EVT_TIME3_CMP_EN": {
                "bit": 23,
                "description": "Ledc timer3 compare event enable register, write 1 to enable this event."
              },
              "TASK_DUTY_SCALE_UPDATE_CH0_EN": {
                "bit": 24,
                "description": "Ledc ch0 duty scale update task enable register, write 1 to enable this task."
              },
              "TASK_DUTY_SCALE_UPDATE_CH1_EN": {
                "bit": 25,
                "description": "Ledc ch1 duty scale update task enable register, write 1 to enable this task."
              },
              "TASK_DUTY_SCALE_UPDATE_CH2_EN": {
                "bit": 26,
                "description": "Ledc ch2 duty scale update task enable register, write 1 to enable this task."
              },
              "TASK_DUTY_SCALE_UPDATE_CH3_EN": {
                "bit": 27,
                "description": "Ledc ch3 duty scale update task enable register, write 1 to enable this task."
              },
              "TASK_DUTY_SCALE_UPDATE_CH4_EN": {
                "bit": 28,
                "description": "Ledc ch4 duty scale update task enable register, write 1 to enable this task."
              },
              "TASK_DUTY_SCALE_UPDATE_CH5_EN": {
                "bit": 29,
                "description": "Ledc ch5 duty scale update task enable register, write 1 to enable this task."
              }
            },
            "EVT_TASK_EN1": {
              "TASK_TIMER0_RES_UPDATE_EN": {
                "bit": 0,
                "description": "Ledc timer0 res update task enable register, write 1 to enable this task."
              },
              "TASK_TIMER1_RES_UPDATE_EN": {
                "bit": 1,
                "description": "Ledc timer1 res update task enable register, write 1 to enable this task."
              },
              "TASK_TIMER2_RES_UPDATE_EN": {
                "bit": 2,
                "description": "Ledc timer2 res update task enable register, write 1 to enable this task."
              },
              "TASK_TIMER3_RES_UPDATE_EN": {
                "bit": 3,
                "description": "Ledc timer3 res update task enable register, write 1 to enable this task."
              },
              "TASK_TIMER0_CAP_EN": {
                "bit": 4,
                "description": "Ledc timer0 capture task enable register, write 1 to enable this task."
              },
              "TASK_TIMER1_CAP_EN": {
                "bit": 5,
                "description": "Ledc timer1 capture task enable register, write 1 to enable this task."
              },
              "TASK_TIMER2_CAP_EN": {
                "bit": 6,
                "description": "Ledc timer2 capture task enable register, write 1 to enable this task."
              },
              "TASK_TIMER3_CAP_EN": {
                "bit": 7,
                "description": "Ledc timer3 capture task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH0_EN": {
                "bit": 8,
                "description": "Ledc ch0 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH1_EN": {
                "bit": 9,
                "description": "Ledc ch1 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH2_EN": {
                "bit": 10,
                "description": "Ledc ch2 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH3_EN": {
                "bit": 11,
                "description": "Ledc ch3 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH4_EN": {
                "bit": 12,
                "description": "Ledc ch4 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_SIG_OUT_DIS_CH5_EN": {
                "bit": 13,
                "description": "Ledc ch5 signal out disable task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH0_EN": {
                "bit": 16,
                "description": "Ledc ch0 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH1_EN": {
                "bit": 17,
                "description": "Ledc ch1 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH2_EN": {
                "bit": 18,
                "description": "Ledc ch2 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH3_EN": {
                "bit": 19,
                "description": "Ledc ch3 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH4_EN": {
                "bit": 20,
                "description": "Ledc ch4 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_OVF_CNT_RST_CH5_EN": {
                "bit": 21,
                "description": "Ledc ch5 overflow count reset task enable register, write 1 to enable this task."
              },
              "TASK_TIMER0_RST_EN": {
                "bit": 24,
                "description": "Ledc timer0 reset task enable register, write 1 to enable this task."
              },
              "TASK_TIMER1_RST_EN": {
                "bit": 25,
                "description": "Ledc timer1 reset task enable register, write 1 to enable this task."
              },
              "TASK_TIMER2_RST_EN": {
                "bit": 26,
                "description": "Ledc timer2 reset task enable register, write 1 to enable this task."
              },
              "TASK_TIMER3_RST_EN": {
                "bit": 27,
                "description": "Ledc timer3 reset task enable register, write 1 to enable this task."
              },
              "TASK_TIMER0_PAUSE_RESUME_EN": {
                "bit": 28,
                "description": "Ledc timer0 pause resume task enable register, write 1 to enable this task."
              },
              "TASK_TIMER1_PAUSE_RESUME_EN": {
                "bit": 29,
                "description": "Ledc timer1 pause resume task enable register, write 1 to enable this task."
              },
              "TASK_TIMER2_PAUSE_RESUME_EN": {
                "bit": 30,
                "description": "Ledc timer2 pause resume task enable register, write 1 to enable this task."
              },
              "TASK_TIMER3_PAUSE_RESUME_EN": {
                "bit": 31,
                "description": "Ledc timer3 pause resume task enable register, write 1 to enable this task."
              }
            },
            "EVT_TASK_EN2": {
              "TASK_GAMMA_RESTART_CH0_EN": {
                "bit": 0,
                "description": "Ledc ch0 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESTART_CH1_EN": {
                "bit": 1,
                "description": "Ledc ch1 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESTART_CH2_EN": {
                "bit": 2,
                "description": "Ledc ch2 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESTART_CH3_EN": {
                "bit": 3,
                "description": "Ledc ch3 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESTART_CH4_EN": {
                "bit": 4,
                "description": "Ledc ch4 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESTART_CH5_EN": {
                "bit": 5,
                "description": "Ledc ch5 gamma restart task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH0_EN": {
                "bit": 8,
                "description": "Ledc ch0 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH1_EN": {
                "bit": 9,
                "description": "Ledc ch1 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH2_EN": {
                "bit": 10,
                "description": "Ledc ch2 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH3_EN": {
                "bit": 11,
                "description": "Ledc ch3 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH4_EN": {
                "bit": 12,
                "description": "Ledc ch4 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_PAUSE_CH5_EN": {
                "bit": 13,
                "description": "Ledc ch5 gamma pause task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH0_EN": {
                "bit": 16,
                "description": "Ledc ch0 gamma resume task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH1_EN": {
                "bit": 17,
                "description": "Ledc ch1 gamma resume task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH2_EN": {
                "bit": 18,
                "description": "Ledc ch2 gamma resume task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH3_EN": {
                "bit": 19,
                "description": "Ledc ch3 gamma resume task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH4_EN": {
                "bit": 20,
                "description": "Ledc ch4 gamma resume task enable register, write 1 to enable this task."
              },
              "TASK_GAMMA_RESUME_CH5_EN": {
                "bit": 21,
                "description": "Ledc ch5 gamma resume task enable register, write 1 to enable this task."
              }
            },
            "TIMER%s_CMP": {
              "TIMER_CMP": {
                "bit": 0,
                "description": "This register stores ledc timer%s compare value.",
                "width": 20
              }
            },
            "TIMER%s_CNT_CAP": {
              "TIMER_CNT_CAP": {
                "bit": 0,
                "description": "This register stores ledc timer%s count value.",
                "width": 20
              }
            },
            "CONF": {
              "APB_CLK_SEL": {
                "bit": 0,
                "description": "This bit is used to select clock source for the 4 timers .\n\n2'd1: APB_CLK 2'd2: RTC8M_CLK 2'd3: XTAL_CLK",
                "width": 2
              },
              "GAMMA_RAM_CLK_EN_CH0": {
                "bit": 2,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "GAMMA_RAM_CLK_EN_CH1": {
                "bit": 3,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "GAMMA_RAM_CLK_EN_CH2": {
                "bit": 4,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "GAMMA_RAM_CLK_EN_CH3": {
                "bit": 5,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "GAMMA_RAM_CLK_EN_CH4": {
                "bit": 6,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "GAMMA_RAM_CLK_EN_CH5": {
                "bit": 7,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for gamma ram. 1'h0: Support clock only when application writes or read gamma ram."
              },
              "CLK_EN": {
                "bit": 31,
                "description": "This bit is used to control clock.\n\n1'b1: Force clock on for register. 1'h0: Support clock only when application writes registers."
              }
            },
            "DATE": {
              "LEDC_DATE": {
                "bit": 0,
                "description": "This is the version control register.",
                "width": 28
              }
            }
          }
        },
        "LP": {
          "instances": [
            {
              "name": "LP_PERI",
              "base": "0x600B2800",
              "irq": 5
            },
            {
              "name": "LP_ANA",
              "base": "0x600B2C00"
            },
            {
              "name": "LP_AON",
              "base": "0x600B1000"
            },
            {
              "name": "LP_APM",
              "base": "0x600B3800",
              "irq": 6
            },
            {
              "name": "LP_CLKRST",
              "base": "0x600B0400"
            }
          ],
          "registers": {
            "CLK_EN": {
              "offset": "0x00",
              "size": 32,
              "description": "need_des"
            },
            "RESET_EN": {
              "offset": "0x04",
              "size": 32,
              "description": "need_des"
            },
            "RNG_DATA": {
              "offset": "0x08",
              "size": 32,
              "description": "need_des"
            },
            "CPU": {
              "offset": "0x0C",
              "size": 32,
              "description": "need_des"
            },
            "BUS_TIMEOUT": {
              "offset": "0x10",
              "size": 32,
              "description": "need_des"
            },
            "BUS_TIMEOUT_ADDR": {
              "offset": "0x14",
              "size": 32,
              "description": "need_des"
            },
            "BUS_TIMEOUT_UID": {
              "offset": "0x18",
              "size": 32,
              "description": "need_des"
            },
            "MEM_CTRL": {
              "offset": "0x1C",
              "size": 32,
              "description": "need_des"
            },
            "INTERRUPT_SOURCE": {
              "offset": "0x20",
              "size": 32,
              "description": "need_des"
            },
            "DEBUG_SEL0": {
              "offset": "0x24",
              "size": 32,
              "description": "need des"
            },
            "DEBUG_SEL1": {
              "offset": "0x28",
              "size": 32,
              "description": "need des"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "need_des"
            }
          },
          "bits": {
            "CLK_EN": {
              "RNG_CK_EN": {
                "bit": 24,
                "description": "need_des"
              },
              "OTP_DBG_CK_EN": {
                "bit": 25,
                "description": "need_des"
              },
              "LP_UART_CK_EN": {
                "bit": 26,
                "description": "need_des"
              },
              "LP_IO_CK_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "LP_EXT_I2C_CK_EN": {
                "bit": 28,
                "description": "need_des"
              },
              "LP_ANA_I2C_CK_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "EFUSE_CK_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_CPU_CK_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "RESET_EN": {
              "BUS_RESET_EN": {
                "bit": 23,
                "description": "need_des"
              },
              "LP_BLE_TIMER_RESET_EN": {
                "bit": 24,
                "description": "need_des"
              },
              "OTP_DBG_RESET_EN": {
                "bit": 25,
                "description": "need_des"
              },
              "LP_UART_RESET_EN": {
                "bit": 26,
                "description": "need_des"
              },
              "LP_IO_RESET_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "LP_EXT_I2C_RESET_EN": {
                "bit": 28,
                "description": "need_des"
              },
              "LP_ANA_I2C_RESET_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "EFUSE_RESET_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_CPU_RESET_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "RNG_DATA": {
              "RND_DATA": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CPU": {
              "LPCORE_DBGM_UNAVALIABLE": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "BUS_TIMEOUT": {
              "LP_PERI_TIMEOUT_THRES": {
                "bit": 14,
                "description": "need_des",
                "width": 16
              },
              "LP_PERI_TIMEOUT_INT_CLEAR": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_PERI_TIMEOUT_PROTECT_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "BUS_TIMEOUT_ADDR": {
              "LP_PERI_TIMEOUT_ADDR": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "BUS_TIMEOUT_UID": {
              "LP_PERI_TIMEOUT_UID": {
                "bit": 0,
                "description": "need_des",
                "width": 7
              }
            },
            "MEM_CTRL": {
              "UART_WAKEUP_FLAG_CLR": {
                "bit": 0,
                "description": "need_des"
              },
              "UART_WAKEUP_FLAG": {
                "bit": 1,
                "description": "need_des"
              },
              "UART_WAKEUP_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "UART_MEM_FORCE_PD": {
                "bit": 30,
                "description": "need_des"
              },
              "UART_MEM_FORCE_PU": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INTERRUPT_SOURCE": {
              "LP_INTERRUPT_SOURCE": {
                "bit": 0,
                "description": "BIT5~BIT0: pmu_lp_int, modem_lp_int, lp_timer_lp_int, lp_uart_int, lp_i2c_int, lp_io_int",
                "width": 6
              }
            },
            "DEBUG_SEL0": {
              "DEBUG_SEL0": {
                "bit": 0,
                "description": "need des",
                "width": 7
              },
              "DEBUG_SEL1": {
                "bit": 7,
                "description": "need des",
                "width": 7
              },
              "DEBUG_SEL2": {
                "bit": 14,
                "description": "need des",
                "width": 7
              },
              "DEBUG_SEL3": {
                "bit": 21,
                "description": "need des",
                "width": 7
              }
            },
            "DEBUG_SEL1": {
              "DEBUG_SEL4": {
                "bit": 0,
                "description": "need des",
                "width": 7
              }
            },
            "DATE": {
              "LPPERI_DATE": {
                "bit": 0,
                "description": "need_des",
                "width": 31
              },
              "CLK_EN": {
                "bit": 31,
                "description": "need_des"
              }
            }
          }
        },
        "TIM": {
          "instances": [
            {
              "name": "LP_TIMER",
              "base": "0x600B0C00",
              "irq": 2
            },
            {
              "name": "SYSTIMER",
              "base": "0x6000B000",
              "irq": 45
            },
            {
              "name": "TIMG0",
              "base": "0x60009000",
              "irq": 41
            },
            {
              "name": "TIMG1",
              "base": "0x6000A000",
              "irq": 43
            }
          ],
          "registers": {
            "TAR0_LOW": {
              "offset": "0x00",
              "size": 32,
              "description": "need_des"
            },
            "TAR0_HIGH": {
              "offset": "0x04",
              "size": 32,
              "description": "need_des"
            },
            "UPDATE": {
              "offset": "0x10",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_BUF0_LOW": {
              "offset": "0x14",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_BUF0_HIGH": {
              "offset": "0x18",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_BUF1_LOW": {
              "offset": "0x1C",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_BUF1_HIGH": {
              "offset": "0x20",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_OVERFLOW": {
              "offset": "0x24",
              "size": 32,
              "description": "need_des"
            },
            "INT_RAW": {
              "offset": "0x28",
              "size": 32,
              "description": "need_des"
            },
            "INT_ST": {
              "offset": "0x2C",
              "size": 32,
              "description": "need_des"
            },
            "INT_ENA": {
              "offset": "0x30",
              "size": 32,
              "description": "need_des"
            },
            "INT_CLR": {
              "offset": "0x34",
              "size": 32,
              "description": "need_des"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "need_des"
            }
          },
          "bits": {
            "TAR0_LOW": {
              "MAIN_TIMER_TAR_LOW0": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "TAR0_HIGH": {
              "MAIN_TIMER_TAR_HIGH0": {
                "bit": 0,
                "description": "need_des",
                "width": 16
              },
              "MAIN_TIMER_TAR_EN0": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "UPDATE": {
              "MAIN_TIMER_UPDATE": {
                "bit": 28,
                "description": "need_des"
              },
              "MAIN_TIMER_XTAL_OFF": {
                "bit": 29,
                "description": "need_des"
              },
              "MAIN_TIMER_SYS_STALL": {
                "bit": 30,
                "description": "need_des"
              },
              "MAIN_TIMER_SYS_RST": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "MAIN_BUF0_LOW": {
              "MAIN_TIMER_BUF0_LOW": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "MAIN_BUF0_HIGH": {
              "MAIN_TIMER_BUF0_HIGH": {
                "bit": 0,
                "description": "need_des",
                "width": 16
              }
            },
            "MAIN_BUF1_LOW": {
              "MAIN_TIMER_BUF1_LOW": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "MAIN_BUF1_HIGH": {
              "MAIN_TIMER_BUF1_HIGH": {
                "bit": 0,
                "description": "need_des",
                "width": 16
              }
            },
            "MAIN_OVERFLOW": {
              "MAIN_TIMER_ALARM_LOAD": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_RAW": {
              "OVERFLOW_RAW": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_RAW": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_ST": {
              "OVERFLOW_ST": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_ST": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_ENA": {
              "OVERFLOW_ENA": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_ENA": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_CLR": {
              "OVERFLOW_CLR": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_CLR": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "need_des",
                "width": 31
              },
              "CLK_EN": {
                "bit": 31,
                "description": "need_des"
              }
            }
          }
        },
        "WDG": {
          "instances": [
            {
              "name": "LP_WDT",
              "base": "0x600B1C00",
              "irq": 4
            }
          ],
          "registers": {
            "WDTCONFIG0": {
              "offset": "0x00",
              "size": 32,
              "description": "need_des"
            },
            "CONFIG1": {
              "offset": "0x04",
              "size": 32,
              "description": "need_des"
            },
            "CONFIG2": {
              "offset": "0x08",
              "size": 32,
              "description": "need_des"
            },
            "CONFIG3": {
              "offset": "0x0C",
              "size": 32,
              "description": "need_des"
            },
            "CONFIG4": {
              "offset": "0x10",
              "size": 32,
              "description": "need_des"
            },
            "CONFIG5": {
              "offset": "0x14",
              "size": 32,
              "description": "need_des"
            },
            "WDTFEED": {
              "offset": "0x18",
              "size": 32,
              "description": "need_des"
            },
            "WDTWPROTECT": {
              "offset": "0x1C",
              "size": 32,
              "description": "need_des"
            },
            "SWD_CONF": {
              "offset": "0x20",
              "size": 32,
              "description": "need_des"
            },
            "SWD_WPROTECT": {
              "offset": "0x24",
              "size": 32,
              "description": "need_des"
            },
            "INT_RAW": {
              "offset": "0x28",
              "size": 32,
              "description": "need_des"
            },
            "INT_ST_RTC": {
              "offset": "0x2C",
              "size": 32,
              "description": "need_des"
            },
            "INT_ENA_RTC": {
              "offset": "0x30",
              "size": 32,
              "description": "need_des"
            },
            "INT_CLR_RTC": {
              "offset": "0x34",
              "size": 32,
              "description": "need_des"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "need_des"
            }
          },
          "bits": {
            "WDTCONFIG0": {
              "WDT_PAUSE_IN_SLP": {
                "bit": 9,
                "description": "need_des"
              },
              "WDT_APPCPU_RESET_EN": {
                "bit": 10,
                "description": "need_des"
              },
              "WDT_PROCPU_RESET_EN": {
                "bit": 11,
                "description": "need_des"
              },
              "WDT_FLASHBOOT_MOD_EN": {
                "bit": 12,
                "description": "need_des"
              },
              "WDT_SYS_RESET_LENGTH": {
                "bit": 13,
                "description": "need_des",
                "width": 3
              },
              "WDT_CPU_RESET_LENGTH": {
                "bit": 16,
                "description": "need_des",
                "width": 3
              },
              "WDT_STG3": {
                "bit": 19,
                "description": "need_des",
                "width": 3
              },
              "WDT_STG2": {
                "bit": 22,
                "description": "need_des",
                "width": 3
              },
              "WDT_STG1": {
                "bit": 25,
                "description": "need_des",
                "width": 3
              },
              "WDT_STG0": {
                "bit": 28,
                "description": "need_des",
                "width": 3
              },
              "WDT_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "CONFIG1": {
              "WDT_STG0_HOLD": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CONFIG2": {
              "WDT_STG1_HOLD": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CONFIG3": {
              "WDT_STG2_HOLD": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CONFIG4": {
              "WDT_STG3_HOLD": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CONFIG5": {
              "CHIP_RESET_TARGET": {
                "bit": 0,
                "description": "need_des",
                "width": 8
              },
              "CHIP_RESET_EN": {
                "bit": 8,
                "description": "need_des"
              },
              "CHIP_RESET_KEY": {
                "bit": 9,
                "description": "need_des",
                "width": 8
              }
            },
            "WDTFEED": {
              "RTC_WDT_FEED": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "WDTWPROTECT": {
              "WDT_WKEY": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "SWD_CONF": {
              "SWD_RESET_FLAG": {
                "bit": 0,
                "description": "need_des"
              },
              "SWD_AUTO_FEED_EN": {
                "bit": 18,
                "description": "need_des"
              },
              "SWD_RST_FLAG_CLR": {
                "bit": 19,
                "description": "need_des"
              },
              "SWD_SIGNAL_WIDTH": {
                "bit": 20,
                "description": "need_des",
                "width": 10
              },
              "SWD_DISABLE": {
                "bit": 30,
                "description": "need_des"
              },
              "SWD_FEED": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "SWD_WPROTECT": {
              "SWD_WKEY": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "INT_RAW": {
              "SUPER_WDT_INT_RAW": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_WDT_INT_RAW": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_ST_RTC": {
              "SUPER_WDT_INT_ST": {
                "bit": 30,
                "description": "need_des"
              },
              "WDT_INT_ST": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_ENA_RTC": {
              "SUPER_WDT_INT_ENA": {
                "bit": 30,
                "description": "need_des"
              },
              "WDT_INT_ENA": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_CLR_RTC": {
              "SUPER_WDT_INT_CLR": {
                "bit": 30,
                "description": "need_des"
              },
              "WDT_INT_CLR": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "DATE": {
              "LP_WDT_DATE": {
                "bit": 0,
                "description": "need_des",
                "width": 31
              },
              "CLK_EN": {
                "bit": 31,
                "description": "need_des"
              }
            }
          }
        },
        "MEM": {
          "instances": [
            {
              "name": "MEM_MONITOR",
              "base": "0x60092000"
            }
          ],
          "registers": {
            "LOG_SETTING": {
              "offset": "0x00",
              "size": 32,
              "description": "log config regsiter"
            },
            "LOG_CHECK_DATA": {
              "offset": "0x04",
              "size": 32,
              "description": "check data regsiter"
            },
            "LOG_DATA_MASK": {
              "offset": "0x08",
              "size": 32,
              "description": "check data mask register"
            },
            "LOG_MIN": {
              "offset": "0x0C",
              "size": 32,
              "description": "log boundary regsiter"
            },
            "LOG_MAX": {
              "offset": "0x10",
              "size": 32,
              "description": "log boundary regsiter"
            },
            "LOG_MEM_START": {
              "offset": "0x14",
              "size": 32,
              "description": "log message store range register"
            },
            "LOG_MEM_END": {
              "offset": "0x18",
              "size": 32,
              "description": "log message store range register"
            },
            "LOG_MEM_CURRENT_ADDR": {
              "offset": "0x1C",
              "size": 32,
              "description": "current writing address."
            },
            "LOG_MEM_ADDR_UPDATE": {
              "offset": "0x20",
              "size": 32,
              "description": "writing address update"
            },
            "LOG_MEM_FULL_FLAG": {
              "offset": "0x24",
              "size": 32,
              "description": "full flag status register"
            },
            "CLOCK_GATE": {
              "offset": "0x28",
              "size": 32,
              "description": "clock gate force on register"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "version register"
            }
          },
          "bits": {
            "LOG_SETTING": {
              "LOG_ENA": {
                "bit": 0,
                "description": "enable bus log. BIT0: hp-cpu, BIT1: lp-cpu, BIT2: DMA.823 don't support lp-cpu",
                "width": 3
              },
              "LOG_MODE": {
                "bit": 3,
                "description": "This field must be onehot. 4'b0001 : WR monitor, 4'b0010: WORD monitor, 4'b0100: HALFWORD monitor, 4'b1000: BYTE monitor.",
                "width": 4
              },
              "LOG_MEM_LOOP_ENABLE": {
                "bit": 7,
                "description": "Set 1 enable mem_loop, it will loop write at the range of MEM_START and MEM_END"
              }
            },
            "LOG_CHECK_DATA": {
              "LOG_CHECK_DATA": {
                "bit": 0,
                "description": "The special check data, when write this special data, it will trigger logging.",
                "width": 32
              }
            },
            "LOG_DATA_MASK": {
              "LOG_DATA_MASK": {
                "bit": 0,
                "description": "byte mask enable, BIT0 mask the first byte of MEM_MONITOR_LOG_CHECK_DATA, and BIT1 mask second byte, and so on.",
                "width": 4
              }
            },
            "LOG_MIN": {
              "LOG_MIN": {
                "bit": 0,
                "description": "the min address of log range",
                "width": 32
              }
            },
            "LOG_MAX": {
              "LOG_MAX": {
                "bit": 0,
                "description": "the max address of log range",
                "width": 32
              }
            },
            "LOG_MEM_START": {
              "LOG_MEM_START": {
                "bit": 0,
                "description": "the start address of writing logging message",
                "width": 32
              }
            },
            "LOG_MEM_END": {
              "LOG_MEM_END": {
                "bit": 0,
                "description": "the end address of writing logging message",
                "width": 32
              }
            },
            "LOG_MEM_CURRENT_ADDR": {
              "LOG_MEM_CURRENT_ADDR": {
                "bit": 0,
                "description": "means next writing address",
                "width": 32
              }
            },
            "LOG_MEM_ADDR_UPDATE": {
              "LOG_MEM_ADDR_UPDATE": {
                "bit": 0,
                "description": "Set 1 to updata MEM_MONITOR_LOG_MEM_CURRENT_ADDR, when set 1, MEM_MONITOR_LOG_MEM_CURRENT_ADDR will update to MEM_MONITOR_LOG_MEM_START"
              }
            },
            "LOG_MEM_FULL_FLAG": {
              "LOG_MEM_FULL_FLAG": {
                "bit": 0,
                "description": "1 means memory write loop at least one time at the range of MEM_START and MEM_END"
              },
              "CLR_LOG_MEM_FULL_FLAG": {
                "bit": 1,
                "description": "Set 1 to clr MEM_MONITOR_LOG_MEM_FULL_FLAG"
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "Set 1 to force on the clk of mem_monitor register"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "version register",
                "width": 28
              }
            }
          }
        },
        "MODEM": {
          "instances": [
            {
              "name": "MODEM_LPCON",
              "base": "0x600AD000"
            },
            {
              "name": "MODEM_SYSCON",
              "base": "0x600A5400"
            }
          ],
          "registers": {
            "TEST_CONF": {
              "offset": "0x00",
              "size": 32
            },
            "COEX_LP_CLK_CONF": {
              "offset": "0x04",
              "size": 32
            },
            "CLK_CONF": {
              "offset": "0x08",
              "size": 32
            },
            "CLK_CONF_FORCE_ON": {
              "offset": "0x0C",
              "size": 32
            },
            "TICK_CONF": {
              "offset": "0x10",
              "size": 32
            },
            "RST_CONF": {
              "offset": "0x14",
              "size": 32
            },
            "MEM_CONF": {
              "offset": "0x18",
              "size": 32
            },
            "DATE": {
              "offset": "0x1C",
              "size": 32
            }
          },
          "bits": {
            "TEST_CONF": {
              "CLK_EN": {
                "bit": 0,
                "description": "CLK_EN"
              }
            },
            "COEX_LP_CLK_CONF": {
              "CLK_COEX_LP_SEL_OSC_SLOW": {
                "bit": 0,
                "description": "CLK_COEX_LP_SEL_OSC_SLOW"
              },
              "CLK_COEX_LP_SEL_OSC_FAST": {
                "bit": 1,
                "description": "CLK_COEX_LP_SEL_OSC_FAST"
              },
              "CLK_COEX_LP_SEL_XTAL": {
                "bit": 2,
                "description": "CLK_COEX_LP_SEL_XTAL"
              },
              "CLK_COEX_LP_SEL_XTAL32K": {
                "bit": 3,
                "description": "CLK_COEX_LP_SEL_XTAL32K"
              },
              "CLK_COEX_LP_DIV_NUM": {
                "bit": 4,
                "description": "CLK_COEX_LP_DIV_NUM",
                "width": 12
              }
            },
            "CLK_CONF": {
              "CLK_COEX_EN": {
                "bit": 1,
                "description": "CLK_COEX_EN"
              },
              "CLK_I2C_MST_EN": {
                "bit": 2,
                "description": "CLK_I2C_MST_EN"
              },
              "CLK_FE_MEM_EN": {
                "bit": 5,
                "description": "CLK_FE_MEM_EN"
              }
            },
            "CLK_CONF_FORCE_ON": {
              "CLK_COEX_FO": {
                "bit": 1,
                "description": "CLK_COEX_FO"
              },
              "CLK_I2C_MST_FO": {
                "bit": 2,
                "description": "CLK_I2C_MST_FO"
              },
              "CLK_FE_MEM_FO": {
                "bit": 5,
                "description": "CLK_FE_MEM_FO"
              }
            },
            "TICK_CONF": {
              "PWR_TICK_TARGET": {
                "bit": 0,
                "description": "PWR_TICK_TARGET",
                "width": 6
              }
            },
            "RST_CONF": {
              "RST_COEX": {
                "bit": 1,
                "description": "RST_COEX"
              },
              "RST_I2C_MST": {
                "bit": 2,
                "description": "RST_I2C_MST"
              }
            },
            "MEM_CONF": {
              "AGC_MEM_FORCE_PU": {
                "bit": 2,
                "description": "AGC_MEM_FORCE_PU"
              },
              "AGC_MEM_FORCE_PD": {
                "bit": 3,
                "description": "AGC_MEM_FORCE_PD"
              },
              "PBUS_MEM_FORCE_PU": {
                "bit": 4,
                "description": "PBUS_MEM_FORCE_PU"
              },
              "PBUS_MEM_FORCE_PD": {
                "bit": 5,
                "description": "PBUS_MEM_FORCE_PD"
              },
              "I2C_MST_MEM_FORCE_PU": {
                "bit": 8,
                "description": "I2C_MST_MEM_FORCE_PU"
              },
              "I2C_MST_MEM_FORCE_PD": {
                "bit": 9,
                "description": "I2C_MST_MEM_FORCE_PD"
              },
              "CHAN_FREQ_MEM_FORCE_PU": {
                "bit": 10,
                "description": "CHAN_FREQ_MEM_FORCE_PU"
              },
              "CHAN_FREQ_MEM_FORCE_PD": {
                "bit": 11,
                "description": "CHAN_FREQ_MEM_FORCE_PD"
              },
              "MODEM_PWR_MEM_WP": {
                "bit": 12,
                "description": "MODEM_PWR_MEM_WP",
                "width": 3
              },
              "MODEM_PWR_MEM_WA": {
                "bit": 15,
                "description": "MODEM_PWR_MEM_WA",
                "width": 3
              },
              "MODEM_PWR_MEM_RA": {
                "bit": 18,
                "description": "MODEM_PWR_MEM_RA",
                "width": 2
              },
              "MODEM_PWR_MEM_RM": {
                "bit": 20,
                "description": "MODEM_PWR_MEM_RM",
                "width": 4
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "DATE",
                "width": 28
              }
            }
          }
        },
        "OTP": {
          "instances": [
            {
              "name": "OTP_DEBUG",
              "base": "0x600B3C00"
            }
          ],
          "registers": {
            "WR_DIS": {
              "offset": "0x00",
              "size": 32,
              "description": "Otp debuger block0 data register1."
            },
            "BLK0_BACKUP1_W1": {
              "offset": "0x04",
              "size": 32,
              "description": "Otp debuger block0 data register2."
            },
            "BLK0_BACKUP1_W2": {
              "offset": "0x08",
              "size": 32,
              "description": "Otp debuger block0 data register3."
            },
            "BLK0_BACKUP1_W3": {
              "offset": "0x0C",
              "size": 32,
              "description": "Otp debuger block0 data register4."
            },
            "BLK0_BACKUP1_W4": {
              "offset": "0x10",
              "size": 32,
              "description": "Otp debuger block0 data register5."
            },
            "BLK0_BACKUP1_W5": {
              "offset": "0x14",
              "size": 32,
              "description": "Otp debuger block0 data register6."
            },
            "BLK0_BACKUP2_W1": {
              "offset": "0x18",
              "size": 32,
              "description": "Otp debuger block0 data register7."
            },
            "BLK0_BACKUP2_W2": {
              "offset": "0x1C",
              "size": 32,
              "description": "Otp debuger block0 data register8."
            },
            "BLK0_BACKUP2_W3": {
              "offset": "0x20",
              "size": 32,
              "description": "Otp debuger block0 data register9."
            },
            "BLK0_BACKUP2_W4": {
              "offset": "0x24",
              "size": 32,
              "description": "Otp debuger block0 data register10."
            },
            "BLK0_BACKUP2_W5": {
              "offset": "0x28",
              "size": 32,
              "description": "Otp debuger block0 data register11."
            },
            "BLK0_BACKUP3_W1": {
              "offset": "0x2C",
              "size": 32,
              "description": "Otp debuger block0 data register12."
            },
            "BLK0_BACKUP3_W2": {
              "offset": "0x30",
              "size": 32,
              "description": "Otp debuger block0 data register13."
            },
            "BLK0_BACKUP3_W3": {
              "offset": "0x34",
              "size": 32,
              "description": "Otp debuger block0 data register14."
            },
            "BLK0_BACKUP3_W4": {
              "offset": "0x38",
              "size": 32,
              "description": "Otp debuger block0 data register15."
            },
            "BLK0_BACKUP3_W5": {
              "offset": "0x3C",
              "size": 32,
              "description": "Otp debuger block0 data register16."
            },
            "BLK0_BACKUP4_W1": {
              "offset": "0x40",
              "size": 32,
              "description": "Otp debuger block0 data register17."
            },
            "BLK0_BACKUP4_W2": {
              "offset": "0x44",
              "size": 32,
              "description": "Otp debuger block0 data register18."
            },
            "BLK0_BACKUP4_W3": {
              "offset": "0x48",
              "size": 32,
              "description": "Otp debuger block0 data register19."
            },
            "BLK0_BACKUP4_W4": {
              "offset": "0x4C",
              "size": 32,
              "description": "Otp debuger block0 data register20."
            },
            "BLK0_BACKUP4_W5": {
              "offset": "0x50",
              "size": 32,
              "description": "Otp debuger block0 data register21."
            },
            "BLK1_W1": {
              "offset": "0x54",
              "size": 32,
              "description": "Otp debuger block1 data register1."
            },
            "BLK1_W2": {
              "offset": "0x58",
              "size": 32,
              "description": "Otp debuger block1 data register2."
            },
            "BLK1_W3": {
              "offset": "0x5C",
              "size": 32,
              "description": "Otp debuger block1 data register3."
            },
            "BLK1_W4": {
              "offset": "0x60",
              "size": 32,
              "description": "Otp debuger block1 data register4."
            },
            "BLK1_W5": {
              "offset": "0x64",
              "size": 32,
              "description": "Otp debuger block1 data register5."
            },
            "BLK1_W6": {
              "offset": "0x68",
              "size": 32,
              "description": "Otp debuger block1 data register6."
            },
            "BLK1_W7": {
              "offset": "0x6C",
              "size": 32,
              "description": "Otp debuger block1 data register7."
            },
            "BLK1_W8": {
              "offset": "0x70",
              "size": 32,
              "description": "Otp debuger block1 data register8."
            },
            "BLK1_W9": {
              "offset": "0x74",
              "size": 32,
              "description": "Otp debuger block1 data register9."
            },
            "BLK2_W1": {
              "offset": "0x78",
              "size": 32,
              "description": "Otp debuger block2 data register1."
            },
            "BLK2_W2": {
              "offset": "0x7C",
              "size": 32,
              "description": "Otp debuger block2 data register2."
            },
            "BLK2_W3": {
              "offset": "0x80",
              "size": 32,
              "description": "Otp debuger block2 data register3."
            },
            "BLK2_W4": {
              "offset": "0x84",
              "size": 32,
              "description": "Otp debuger block2 data register4."
            },
            "BLK2_W5": {
              "offset": "0x88",
              "size": 32,
              "description": "Otp debuger block2 data register5."
            },
            "BLK2_W6": {
              "offset": "0x8C",
              "size": 32,
              "description": "Otp debuger block2 data register6."
            },
            "BLK2_W7": {
              "offset": "0x90",
              "size": 32,
              "description": "Otp debuger block2 data register7."
            },
            "BLK2_W8": {
              "offset": "0x94",
              "size": 32,
              "description": "Otp debuger block2 data register8."
            },
            "BLK2_W9": {
              "offset": "0x98",
              "size": 32,
              "description": "Otp debuger block2 data register9."
            },
            "BLK2_W10": {
              "offset": "0x9C",
              "size": 32,
              "description": "Otp debuger block2 data register10."
            },
            "BLK2_W11": {
              "offset": "0xA0",
              "size": 32,
              "description": "Otp debuger block2 data register11."
            },
            "BLK3_W1": {
              "offset": "0xA4",
              "size": 32,
              "description": "Otp debuger block3 data register1."
            },
            "BLK3_W2": {
              "offset": "0xA8",
              "size": 32,
              "description": "Otp debuger block3 data register2."
            },
            "BLK3_W3": {
              "offset": "0xAC",
              "size": 32,
              "description": "Otp debuger block3 data register3."
            },
            "BLK3_W4": {
              "offset": "0xB0",
              "size": 32,
              "description": "Otp debuger block3 data register4."
            },
            "BLK3_W5": {
              "offset": "0xB4",
              "size": 32,
              "description": "Otp debuger block3 data register5."
            },
            "BLK3_W6": {
              "offset": "0xB8",
              "size": 32,
              "description": "Otp debuger block3 data register6."
            },
            "BLK3_W7": {
              "offset": "0xBC",
              "size": 32,
              "description": "Otp debuger block3 data register7."
            },
            "BLK3_W8": {
              "offset": "0xC0",
              "size": 32,
              "description": "Otp debuger block3 data register8."
            },
            "BLK3_W9": {
              "offset": "0xC4",
              "size": 32,
              "description": "Otp debuger block3 data register9."
            },
            "BLK3_W10": {
              "offset": "0xC8",
              "size": 32,
              "description": "Otp debuger block3 data register10."
            },
            "BLK3_W11": {
              "offset": "0xCC",
              "size": 32,
              "description": "Otp debuger block3 data register11."
            },
            "BLK4_W1": {
              "offset": "0xD0",
              "size": 32,
              "description": "Otp debuger block4 data register1."
            },
            "BLK4_W2": {
              "offset": "0xD4",
              "size": 32,
              "description": "Otp debuger block4 data register2."
            },
            "BLK4_W3": {
              "offset": "0xD8",
              "size": 32,
              "description": "Otp debuger block4 data register3."
            },
            "BLK4_W4": {
              "offset": "0xDC",
              "size": 32,
              "description": "Otp debuger block4 data register4."
            },
            "BLK4_W5": {
              "offset": "0xE0",
              "size": 32,
              "description": "Otp debuger block4 data register5."
            },
            "BLK4_W6": {
              "offset": "0xE4",
              "size": 32,
              "description": "Otp debuger block4 data register6."
            },
            "BLK4_W7": {
              "offset": "0xE8",
              "size": 32,
              "description": "Otp debuger block4 data register7."
            },
            "BLK4_W8": {
              "offset": "0xEC",
              "size": 32,
              "description": "Otp debuger block4 data register8."
            },
            "BLK4_W9": {
              "offset": "0xF0",
              "size": 32,
              "description": "Otp debuger block4 data register9."
            },
            "BLK4_W10": {
              "offset": "0xF4",
              "size": 32,
              "description": "Otp debuger block4 data registe10."
            },
            "BLK4_W11": {
              "offset": "0xF8",
              "size": 32,
              "description": "Otp debuger block4 data register11."
            },
            "BLK5_W1": {
              "offset": "0xFC",
              "size": 32,
              "description": "Otp debuger block5 data register1."
            },
            "BLK5_W2": {
              "offset": "0x100",
              "size": 32,
              "description": "Otp debuger block5 data register2."
            },
            "BLK5_W3": {
              "offset": "0x104",
              "size": 32,
              "description": "Otp debuger block5 data register3."
            },
            "BLK5_W4": {
              "offset": "0x108",
              "size": 32,
              "description": "Otp debuger block5 data register4."
            },
            "BLK5_W5": {
              "offset": "0x10C",
              "size": 32,
              "description": "Otp debuger block5 data register5."
            },
            "BLK5_W6": {
              "offset": "0x110",
              "size": 32,
              "description": "Otp debuger block5 data register6."
            },
            "BLK5_W7": {
              "offset": "0x114",
              "size": 32,
              "description": "Otp debuger block5 data register7."
            },
            "BLK5_W8": {
              "offset": "0x118",
              "size": 32,
              "description": "Otp debuger block5 data register8."
            },
            "BLK5_W9": {
              "offset": "0x11C",
              "size": 32,
              "description": "Otp debuger block5 data register9."
            },
            "BLK5_W10": {
              "offset": "0x120",
              "size": 32,
              "description": "Otp debuger block5 data register10."
            },
            "BLK5_W11": {
              "offset": "0x124",
              "size": 32,
              "description": "Otp debuger block5 data register11."
            },
            "BLK6_W1": {
              "offset": "0x128",
              "size": 32,
              "description": "Otp debuger block6 data register1."
            },
            "BLK6_W2": {
              "offset": "0x12C",
              "size": 32,
              "description": "Otp debuger block6 data register2."
            },
            "BLK6_W3": {
              "offset": "0x130",
              "size": 32,
              "description": "Otp debuger block6 data register3."
            },
            "BLK6_W4": {
              "offset": "0x134",
              "size": 32,
              "description": "Otp debuger block6 data register4."
            },
            "BLK6_W5": {
              "offset": "0x138",
              "size": 32,
              "description": "Otp debuger block6 data register5."
            },
            "BLK6_W6": {
              "offset": "0x13C",
              "size": 32,
              "description": "Otp debuger block6 data register6."
            },
            "BLK6_W7": {
              "offset": "0x140",
              "size": 32,
              "description": "Otp debuger block6 data register7."
            },
            "BLK6_W8": {
              "offset": "0x144",
              "size": 32,
              "description": "Otp debuger block6 data register8."
            },
            "BLK6_W9": {
              "offset": "0x148",
              "size": 32,
              "description": "Otp debuger block6 data register9."
            },
            "BLK6_W10": {
              "offset": "0x14C",
              "size": 32,
              "description": "Otp debuger block6 data register10."
            },
            "BLK6_W11": {
              "offset": "0x150",
              "size": 32,
              "description": "Otp debuger block6 data register11."
            },
            "BLK7_W1": {
              "offset": "0x154",
              "size": 32,
              "description": "Otp debuger block7 data register1."
            },
            "BLK7_W2": {
              "offset": "0x158",
              "size": 32,
              "description": "Otp debuger block7 data register2."
            },
            "BLK7_W3": {
              "offset": "0x15C",
              "size": 32,
              "description": "Otp debuger block7 data register3."
            },
            "BLK7_W4": {
              "offset": "0x160",
              "size": 32,
              "description": "Otp debuger block7 data register4."
            },
            "BLK7_W5": {
              "offset": "0x164",
              "size": 32,
              "description": "Otp debuger block7 data register5."
            },
            "BLK7_W6": {
              "offset": "0x168",
              "size": 32,
              "description": "Otp debuger block7 data register6."
            },
            "BLK7_W7": {
              "offset": "0x16C",
              "size": 32,
              "description": "Otp debuger block7 data register7."
            },
            "BLK7_W8": {
              "offset": "0x170",
              "size": 32,
              "description": "Otp debuger block7 data register8."
            },
            "BLK7_W9": {
              "offset": "0x174",
              "size": 32,
              "description": "Otp debuger block7 data register9."
            },
            "BLK7_W10": {
              "offset": "0x178",
              "size": 32,
              "description": "Otp debuger block7 data register10."
            },
            "BLK7_W11": {
              "offset": "0x17C",
              "size": 32,
              "description": "Otp debuger block7 data register11."
            },
            "BLK8_W1": {
              "offset": "0x180",
              "size": 32,
              "description": "Otp debuger block8 data register1."
            },
            "BLK8_W2": {
              "offset": "0x184",
              "size": 32,
              "description": "Otp debuger block8 data register2."
            },
            "BLK8_W3": {
              "offset": "0x188",
              "size": 32,
              "description": "Otp debuger block8 data register3."
            },
            "BLK8_W4": {
              "offset": "0x18C",
              "size": 32,
              "description": "Otp debuger block8 data register4."
            },
            "BLK8_W5": {
              "offset": "0x190",
              "size": 32,
              "description": "Otp debuger block8 data register5."
            },
            "BLK8_W6": {
              "offset": "0x194",
              "size": 32,
              "description": "Otp debuger block8 data register6."
            },
            "BLK8_W7": {
              "offset": "0x198",
              "size": 32,
              "description": "Otp debuger block8 data register7."
            },
            "BLK8_W8": {
              "offset": "0x19C",
              "size": 32,
              "description": "Otp debuger block8 data register8."
            },
            "BLK8_W9": {
              "offset": "0x1A0",
              "size": 32,
              "description": "Otp debuger block8 data register9."
            },
            "BLK8_W10": {
              "offset": "0x1A4",
              "size": 32,
              "description": "Otp debuger block8 data register10."
            },
            "BLK8_W11": {
              "offset": "0x1A8",
              "size": 32,
              "description": "Otp debuger block8 data register11."
            },
            "BLK9_W1": {
              "offset": "0x1AC",
              "size": 32,
              "description": "Otp debuger block9 data register1."
            },
            "BLK9_W2": {
              "offset": "0x1B0",
              "size": 32,
              "description": "Otp debuger block9 data register2."
            },
            "BLK9_W3": {
              "offset": "0x1B4",
              "size": 32,
              "description": "Otp debuger block9 data register3."
            },
            "BLK9_W4": {
              "offset": "0x1B8",
              "size": 32,
              "description": "Otp debuger block9 data register4."
            },
            "BLK9_W5": {
              "offset": "0x1BC",
              "size": 32,
              "description": "Otp debuger block9 data register5."
            },
            "BLK9_W6": {
              "offset": "0x1C0",
              "size": 32,
              "description": "Otp debuger block9 data register6."
            },
            "BLK9_W7": {
              "offset": "0x1C4",
              "size": 32,
              "description": "Otp debuger block9 data register7."
            },
            "BLK9_W8": {
              "offset": "0x1C8",
              "size": 32,
              "description": "Otp debuger block9 data register8."
            },
            "BLK9_W9": {
              "offset": "0x1CC",
              "size": 32,
              "description": "Otp debuger block9 data register9."
            },
            "BLK9_W10": {
              "offset": "0x1D0",
              "size": 32,
              "description": "Otp debuger block9 data register10."
            },
            "BLK9_W11": {
              "offset": "0x1D4",
              "size": 32,
              "description": "Otp debuger block9 data register11."
            },
            "BLK10_W1": {
              "offset": "0x1D8",
              "size": 32,
              "description": "Otp debuger block10 data register1."
            },
            "BLK10_W2": {
              "offset": "0x1DC",
              "size": 32,
              "description": "Otp debuger block10 data register2."
            },
            "BLK10_W3": {
              "offset": "0x1E0",
              "size": 32,
              "description": "Otp debuger block10 data register3."
            },
            "BLK10_W4": {
              "offset": "0x1E4",
              "size": 32,
              "description": "Otp debuger block10 data register4."
            },
            "BLK10_W5": {
              "offset": "0x1E8",
              "size": 32,
              "description": "Otp debuger block10 data register5."
            },
            "BLK10_W6": {
              "offset": "0x1EC",
              "size": 32,
              "description": "Otp debuger block10 data register6."
            },
            "BLK10_W7": {
              "offset": "0x1F0",
              "size": 32,
              "description": "Otp debuger block10 data register7."
            },
            "BLK10_W8": {
              "offset": "0x1F4",
              "size": 32,
              "description": "Otp debuger block10 data register8."
            },
            "BLK10_W9": {
              "offset": "0x1F8",
              "size": 32,
              "description": "Otp debuger block10 data register9."
            },
            "BLK10_W10": {
              "offset": "0x1FC",
              "size": 32,
              "description": "Otp debuger block10 data register10."
            },
            "BLK10_W11": {
              "offset": "0x200",
              "size": 32,
              "description": "Otp debuger block10 data register11."
            },
            "CLK": {
              "offset": "0x204",
              "size": 32,
              "description": "Otp debuger clk_en configuration register."
            },
            "APB2OTP_EN": {
              "offset": "0x208",
              "size": 32,
              "description": "Otp_debuger apb2otp enable configuration register."
            },
            "DATE": {
              "offset": "0x20C",
              "size": 32,
              "description": "eFuse version register."
            }
          },
          "bits": {
            "WR_DIS": {
              "BLOCK0_WR_DIS": {
                "bit": 0,
                "description": "Otp block0 write disable data.",
                "width": 32
              }
            },
            "BLK0_BACKUP1_W1": {
              "OTP_BEBUG_BLOCK0_BACKUP1_W1": {
                "bit": 0,
                "description": "Otp block0 backup1 word1 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP1_W2": {
              "OTP_BEBUG_BLOCK0_BACKUP1_W2": {
                "bit": 0,
                "description": "Otp block0 backup1 word2 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP1_W3": {
              "OTP_BEBUG_BLOCK0_BACKUP1_W3": {
                "bit": 0,
                "description": "Otp block0 backup1 word3 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP1_W4": {
              "OTP_BEBUG_BLOCK0_BACKUP1_W4": {
                "bit": 0,
                "description": "Otp block0 backup1 word4 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP1_W5": {
              "OTP_BEBUG_BLOCK0_BACKUP1_W5": {
                "bit": 0,
                "description": "Otp block0 backup1 word5 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP2_W1": {
              "OTP_BEBUG_BLOCK0_BACKUP2_W1": {
                "bit": 0,
                "description": "Otp block0 backup2 word1 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP2_W2": {
              "OTP_BEBUG_BLOCK0_BACKUP2_W2": {
                "bit": 0,
                "description": "Otp block0 backup2 word2 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP2_W3": {
              "OTP_BEBUG_BLOCK0_BACKUP2_W3": {
                "bit": 0,
                "description": "Otp block0 backup2 word3 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP2_W4": {
              "OTP_BEBUG_BLOCK0_BACKUP2_W4": {
                "bit": 0,
                "description": "Otp block0 backup2 word4 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP2_W5": {
              "OTP_BEBUG_BLOCK0_BACKUP2_W5": {
                "bit": 0,
                "description": "Otp block0 backup2 word5 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP3_W1": {
              "OTP_BEBUG_BLOCK0_BACKUP3_W1": {
                "bit": 0,
                "description": "Otp block0 backup3 word1 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP3_W2": {
              "OTP_BEBUG_BLOCK0_BACKUP3_W2": {
                "bit": 0,
                "description": "Otp block0 backup3 word2 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP3_W3": {
              "OTP_BEBUG_BLOCK0_BACKUP3_W3": {
                "bit": 0,
                "description": "Otp block0 backup3 word3 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP3_W4": {
              "OTP_BEBUG_BLOCK0_BACKUP3_W4": {
                "bit": 0,
                "description": "Otp block0 backup3 word4 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP3_W5": {
              "OTP_BEBUG_BLOCK0_BACKUP3_W5": {
                "bit": 0,
                "description": "Otp block0 backup3 word5 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP4_W1": {
              "OTP_BEBUG_BLOCK0_BACKUP4_W1": {
                "bit": 0,
                "description": "Otp block0 backup4 word1 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP4_W2": {
              "OTP_BEBUG_BLOCK0_BACKUP4_W2": {
                "bit": 0,
                "description": "Otp block0 backup4 word2 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP4_W3": {
              "OTP_BEBUG_BLOCK0_BACKUP4_W3": {
                "bit": 0,
                "description": "Otp block0 backup4 word3 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP4_W4": {
              "OTP_BEBUG_BLOCK0_BACKUP4_W4": {
                "bit": 0,
                "description": "Otp block0 backup4 word4 data.",
                "width": 32
              }
            },
            "BLK0_BACKUP4_W5": {
              "OTP_BEBUG_BLOCK0_BACKUP4_W5": {
                "bit": 0,
                "description": "Otp block0 backup4 word5 data.",
                "width": 32
              }
            },
            "BLK1_W1": {
              "BLOCK1_W1": {
                "bit": 0,
                "description": "Otp block1  word1 data.",
                "width": 32
              }
            },
            "BLK1_W2": {
              "BLOCK1_W2": {
                "bit": 0,
                "description": "Otp block1  word2 data.",
                "width": 32
              }
            },
            "BLK1_W3": {
              "BLOCK1_W3": {
                "bit": 0,
                "description": "Otp block1  word3 data.",
                "width": 32
              }
            },
            "BLK1_W4": {
              "BLOCK1_W4": {
                "bit": 0,
                "description": "Otp block1  word4 data.",
                "width": 32
              }
            },
            "BLK1_W5": {
              "BLOCK1_W5": {
                "bit": 0,
                "description": "Otp block1  word5 data.",
                "width": 32
              }
            },
            "BLK1_W6": {
              "BLOCK1_W6": {
                "bit": 0,
                "description": "Otp block1  word6 data.",
                "width": 32
              }
            },
            "BLK1_W7": {
              "BLOCK1_W7": {
                "bit": 0,
                "description": "Otp block1  word7 data.",
                "width": 32
              }
            },
            "BLK1_W8": {
              "BLOCK1_W8": {
                "bit": 0,
                "description": "Otp block1  word8 data.",
                "width": 32
              }
            },
            "BLK1_W9": {
              "BLOCK1_W9": {
                "bit": 0,
                "description": "Otp block1  word9 data.",
                "width": 32
              }
            },
            "BLK2_W1": {
              "BLOCK2_W1": {
                "bit": 0,
                "description": "Otp block2 word1 data.",
                "width": 32
              }
            },
            "BLK2_W2": {
              "BLOCK2_W2": {
                "bit": 0,
                "description": "Otp block2 word2 data.",
                "width": 32
              }
            },
            "BLK2_W3": {
              "BLOCK2_W3": {
                "bit": 0,
                "description": "Otp block2 word3 data.",
                "width": 32
              }
            },
            "BLK2_W4": {
              "BLOCK2_W4": {
                "bit": 0,
                "description": "Otp block2 word4 data.",
                "width": 32
              }
            },
            "BLK2_W5": {
              "BLOCK2_W5": {
                "bit": 0,
                "description": "Otp block2 word5 data.",
                "width": 32
              }
            },
            "BLK2_W6": {
              "BLOCK2_W6": {
                "bit": 0,
                "description": "Otp block2 word6 data.",
                "width": 32
              }
            },
            "BLK2_W7": {
              "BLOCK2_W7": {
                "bit": 0,
                "description": "Otp block2 word7 data.",
                "width": 32
              }
            },
            "BLK2_W8": {
              "BLOCK2_W8": {
                "bit": 0,
                "description": "Otp block2 word8 data.",
                "width": 32
              }
            },
            "BLK2_W9": {
              "BLOCK2_W9": {
                "bit": 0,
                "description": "Otp block2 word9 data.",
                "width": 32
              }
            },
            "BLK2_W10": {
              "BLOCK2_W10": {
                "bit": 0,
                "description": "Otp block2 word10 data.",
                "width": 32
              }
            },
            "BLK2_W11": {
              "BLOCK2_W11": {
                "bit": 0,
                "description": "Otp block2 word11 data.",
                "width": 32
              }
            },
            "BLK3_W1": {
              "BLOCK3_W1": {
                "bit": 0,
                "description": "Otp block3 word1 data.",
                "width": 32
              }
            },
            "BLK3_W2": {
              "BLOCK3_W2": {
                "bit": 0,
                "description": "Otp block3 word2 data.",
                "width": 32
              }
            },
            "BLK3_W3": {
              "BLOCK3_W3": {
                "bit": 0,
                "description": "Otp block3 word3 data.",
                "width": 32
              }
            },
            "BLK3_W4": {
              "BLOCK3_W4": {
                "bit": 0,
                "description": "Otp block3 word4 data.",
                "width": 32
              }
            },
            "BLK3_W5": {
              "BLOCK3_W5": {
                "bit": 0,
                "description": "Otp block3 word5 data.",
                "width": 32
              }
            },
            "BLK3_W6": {
              "BLOCK3_W6": {
                "bit": 0,
                "description": "Otp block3 word6 data.",
                "width": 32
              }
            },
            "BLK3_W7": {
              "BLOCK3_W7": {
                "bit": 0,
                "description": "Otp block3 word7 data.",
                "width": 32
              }
            },
            "BLK3_W8": {
              "BLOCK3_W8": {
                "bit": 0,
                "description": "Otp block3 word8 data.",
                "width": 32
              }
            },
            "BLK3_W9": {
              "BLOCK3_W9": {
                "bit": 0,
                "description": "Otp block3 word9 data.",
                "width": 32
              }
            },
            "BLK3_W10": {
              "BLOCK3_W10": {
                "bit": 0,
                "description": "Otp block3 word10 data.",
                "width": 32
              }
            },
            "BLK3_W11": {
              "BLOCK3_W11": {
                "bit": 0,
                "description": "Otp block3 word11 data.",
                "width": 32
              }
            },
            "BLK4_W1": {
              "BLOCK4_W1": {
                "bit": 0,
                "description": "Otp block4 word1 data.",
                "width": 32
              }
            },
            "BLK4_W2": {
              "BLOCK4_W2": {
                "bit": 0,
                "description": "Otp block4 word2 data.",
                "width": 32
              }
            },
            "BLK4_W3": {
              "BLOCK4_W3": {
                "bit": 0,
                "description": "Otp block4 word3 data.",
                "width": 32
              }
            },
            "BLK4_W4": {
              "BLOCK4_W4": {
                "bit": 0,
                "description": "Otp block4 word4 data.",
                "width": 32
              }
            },
            "BLK4_W5": {
              "BLOCK4_W5": {
                "bit": 0,
                "description": "Otp block4 word5 data.",
                "width": 32
              }
            },
            "BLK4_W6": {
              "BLOCK4_W6": {
                "bit": 0,
                "description": "Otp block4 word6 data.",
                "width": 32
              }
            },
            "BLK4_W7": {
              "BLOCK4_W7": {
                "bit": 0,
                "description": "Otp block4 word7 data.",
                "width": 32
              }
            },
            "BLK4_W8": {
              "BLOCK4_W8": {
                "bit": 0,
                "description": "Otp block4 word8 data.",
                "width": 32
              }
            },
            "BLK4_W9": {
              "BLOCK4_W9": {
                "bit": 0,
                "description": "Otp block4 word9 data.",
                "width": 32
              }
            },
            "BLK4_W10": {
              "BLOCK4_W10": {
                "bit": 0,
                "description": "Otp block4 word10 data.",
                "width": 32
              }
            },
            "BLK4_W11": {
              "BLOCK4_W11": {
                "bit": 0,
                "description": "Otp block4 word11 data.",
                "width": 32
              }
            },
            "BLK5_W1": {
              "BLOCK5_W1": {
                "bit": 0,
                "description": "Otp block5 word1 data.",
                "width": 32
              }
            },
            "BLK5_W2": {
              "BLOCK5_W2": {
                "bit": 0,
                "description": "Otp block5 word2 data.",
                "width": 32
              }
            },
            "BLK5_W3": {
              "BLOCK5_W3": {
                "bit": 0,
                "description": "Otp block5 word3 data.",
                "width": 32
              }
            },
            "BLK5_W4": {
              "BLOCK5_W4": {
                "bit": 0,
                "description": "Otp block5 word4 data.",
                "width": 32
              }
            },
            "BLK5_W5": {
              "BLOCK5_W5": {
                "bit": 0,
                "description": "Otp block5 word5 data.",
                "width": 32
              }
            },
            "BLK5_W6": {
              "BLOCK5_W6": {
                "bit": 0,
                "description": "Otp block5 word6 data.",
                "width": 32
              }
            },
            "BLK5_W7": {
              "BLOCK5_W7": {
                "bit": 0,
                "description": "Otp block5 word7 data.",
                "width": 32
              }
            },
            "BLK5_W8": {
              "BLOCK5_W8": {
                "bit": 0,
                "description": "Otp block5 word8 data.",
                "width": 32
              }
            },
            "BLK5_W9": {
              "BLOCK5_W9": {
                "bit": 0,
                "description": "Otp block5 word9 data.",
                "width": 32
              }
            },
            "BLK5_W10": {
              "BLOCK5_W10": {
                "bit": 0,
                "description": "Otp block5 word10 data.",
                "width": 32
              }
            },
            "BLK5_W11": {
              "BLOCK5_W11": {
                "bit": 0,
                "description": "Otp block5 word11 data.",
                "width": 32
              }
            },
            "BLK6_W1": {
              "BLOCK6_W1": {
                "bit": 0,
                "description": "Otp block6 word1 data.",
                "width": 32
              }
            },
            "BLK6_W2": {
              "BLOCK6_W2": {
                "bit": 0,
                "description": "Otp block6 word2 data.",
                "width": 32
              }
            },
            "BLK6_W3": {
              "BLOCK6_W3": {
                "bit": 0,
                "description": "Otp block6 word3 data.",
                "width": 32
              }
            },
            "BLK6_W4": {
              "BLOCK6_W4": {
                "bit": 0,
                "description": "Otp block6 word4 data.",
                "width": 32
              }
            },
            "BLK6_W5": {
              "BLOCK6_W5": {
                "bit": 0,
                "description": "Otp block6 word5 data.",
                "width": 32
              }
            },
            "BLK6_W6": {
              "BLOCK6_W6": {
                "bit": 0,
                "description": "Otp block6 word6 data.",
                "width": 32
              }
            },
            "BLK6_W7": {
              "BLOCK6_W7": {
                "bit": 0,
                "description": "Otp block6 word7 data.",
                "width": 32
              }
            },
            "BLK6_W8": {
              "BLOCK6_W8": {
                "bit": 0,
                "description": "Otp block6 word8 data.",
                "width": 32
              }
            },
            "BLK6_W9": {
              "BLOCK6_W9": {
                "bit": 0,
                "description": "Otp block6 word9 data.",
                "width": 32
              }
            },
            "BLK6_W10": {
              "BLOCK6_W10": {
                "bit": 0,
                "description": "Otp block6 word10 data.",
                "width": 32
              }
            },
            "BLK6_W11": {
              "BLOCK6_W11": {
                "bit": 0,
                "description": "Otp block6 word11 data.",
                "width": 32
              }
            },
            "BLK7_W1": {
              "BLOCK7_W1": {
                "bit": 0,
                "description": "Otp block7 word1 data.",
                "width": 32
              }
            },
            "BLK7_W2": {
              "BLOCK7_W2": {
                "bit": 0,
                "description": "Otp block7 word2 data.",
                "width": 32
              }
            },
            "BLK7_W3": {
              "BLOCK7_W3": {
                "bit": 0,
                "description": "Otp block7 word3 data.",
                "width": 32
              }
            },
            "BLK7_W4": {
              "BLOCK7_W4": {
                "bit": 0,
                "description": "Otp block7 word4 data.",
                "width": 32
              }
            },
            "BLK7_W5": {
              "BLOCK7_W5": {
                "bit": 0,
                "description": "Otp block7 word5 data.",
                "width": 32
              }
            },
            "BLK7_W6": {
              "BLOCK7_W6": {
                "bit": 0,
                "description": "Otp block7 word6 data.",
                "width": 32
              }
            },
            "BLK7_W7": {
              "BLOCK7_W7": {
                "bit": 0,
                "description": "Otp block7 word7 data.",
                "width": 32
              }
            },
            "BLK7_W8": {
              "BLOCK7_W8": {
                "bit": 0,
                "description": "Otp block7 word8 data.",
                "width": 32
              }
            },
            "BLK7_W9": {
              "BLOCK7_W9": {
                "bit": 0,
                "description": "Otp block7 word9 data.",
                "width": 32
              }
            },
            "BLK7_W10": {
              "BLOCK7_W10": {
                "bit": 0,
                "description": "Otp block7 word10 data.",
                "width": 32
              }
            },
            "BLK7_W11": {
              "BLOCK7_W11": {
                "bit": 0,
                "description": "Otp block7 word11 data.",
                "width": 32
              }
            },
            "BLK8_W1": {
              "BLOCK8_W1": {
                "bit": 0,
                "description": "Otp block8 word1 data.",
                "width": 32
              }
            },
            "BLK8_W2": {
              "BLOCK8_W2": {
                "bit": 0,
                "description": "Otp block8 word2 data.",
                "width": 32
              }
            },
            "BLK8_W3": {
              "BLOCK8_W3": {
                "bit": 0,
                "description": "Otp block8 word3 data.",
                "width": 32
              }
            },
            "BLK8_W4": {
              "BLOCK8_W4": {
                "bit": 0,
                "description": "Otp block8 word4 data.",
                "width": 32
              }
            },
            "BLK8_W5": {
              "BLOCK8_W5": {
                "bit": 0,
                "description": "Otp block8 word5 data.",
                "width": 32
              }
            },
            "BLK8_W6": {
              "BLOCK8_W6": {
                "bit": 0,
                "description": "Otp block8 word6 data.",
                "width": 32
              }
            },
            "BLK8_W7": {
              "BLOCK8_W7": {
                "bit": 0,
                "description": "Otp block8 word7 data.",
                "width": 32
              }
            },
            "BLK8_W8": {
              "BLOCK8_W8": {
                "bit": 0,
                "description": "Otp block8 word8 data.",
                "width": 32
              }
            },
            "BLK8_W9": {
              "BLOCK8_W9": {
                "bit": 0,
                "description": "Otp block8 word9 data.",
                "width": 32
              }
            },
            "BLK8_W10": {
              "BLOCK8_W10": {
                "bit": 0,
                "description": "Otp block8 word10 data.",
                "width": 32
              }
            },
            "BLK8_W11": {
              "BLOCK8_W11": {
                "bit": 0,
                "description": "Otp block8 word11 data.",
                "width": 32
              }
            },
            "BLK9_W1": {
              "BLOCK9_W1": {
                "bit": 0,
                "description": "Otp block9 word1 data.",
                "width": 32
              }
            },
            "BLK9_W2": {
              "BLOCK9_W2": {
                "bit": 0,
                "description": "Otp block9 word2 data.",
                "width": 32
              }
            },
            "BLK9_W3": {
              "BLOCK9_W3": {
                "bit": 0,
                "description": "Otp block9 word3 data.",
                "width": 32
              }
            },
            "BLK9_W4": {
              "BLOCK9_W4": {
                "bit": 0,
                "description": "Otp block9 word4 data.",
                "width": 32
              }
            },
            "BLK9_W5": {
              "BLOCK9_W5": {
                "bit": 0,
                "description": "Otp block9 word5 data.",
                "width": 32
              }
            },
            "BLK9_W6": {
              "BLOCK9_W6": {
                "bit": 0,
                "description": "Otp block9 word6 data.",
                "width": 32
              }
            },
            "BLK9_W7": {
              "BLOCK9_W7": {
                "bit": 0,
                "description": "Otp block9 word7 data.",
                "width": 32
              }
            },
            "BLK9_W8": {
              "BLOCK9_W8": {
                "bit": 0,
                "description": "Otp block9 word8 data.",
                "width": 32
              }
            },
            "BLK9_W9": {
              "BLOCK9_W9": {
                "bit": 0,
                "description": "Otp block9 word9 data.",
                "width": 32
              }
            },
            "BLK9_W10": {
              "BLOCK9_W10": {
                "bit": 0,
                "description": "Otp block9 word10 data.",
                "width": 32
              }
            },
            "BLK9_W11": {
              "BLOCK9_W11": {
                "bit": 0,
                "description": "Otp block9 word11 data.",
                "width": 32
              }
            },
            "BLK10_W1": {
              "BLOCK10_W1": {
                "bit": 0,
                "description": "Otp block10 word1 data.",
                "width": 32
              }
            },
            "BLK10_W2": {
              "BLOCK10_W2": {
                "bit": 0,
                "description": "Otp block10 word2 data.",
                "width": 32
              }
            },
            "BLK10_W3": {
              "BLOCK10_W3": {
                "bit": 0,
                "description": "Otp block10 word3 data.",
                "width": 32
              }
            },
            "BLK10_W4": {
              "BLOCK10_W4": {
                "bit": 0,
                "description": "Otp block10 word4 data.",
                "width": 32
              }
            },
            "BLK10_W5": {
              "BLOCK10_W5": {
                "bit": 0,
                "description": "Otp block10 word5 data.",
                "width": 32
              }
            },
            "BLK10_W6": {
              "BLOCK10_W6": {
                "bit": 0,
                "description": "Otp block10 word6 data.",
                "width": 32
              }
            },
            "BLK10_W7": {
              "BLOCK10_W7": {
                "bit": 0,
                "description": "Otp block10 word7 data.",
                "width": 32
              }
            },
            "BLK10_W8": {
              "BLOCK10_W8": {
                "bit": 0,
                "description": "Otp block10 word8 data.",
                "width": 32
              }
            },
            "BLK10_W9": {
              "BLOCK10_W9": {
                "bit": 0,
                "description": "Otp block10 word9 data.",
                "width": 32
              }
            },
            "BLK10_W10": {
              "BLOCK19_W10": {
                "bit": 0,
                "description": "Otp block10 word10 data.",
                "width": 32
              }
            },
            "BLK10_W11": {
              "BLOCK10_W11": {
                "bit": 0,
                "description": "Otp block10 word11 data.",
                "width": 32
              }
            },
            "CLK": {
              "EN": {
                "bit": 0,
                "description": "Force clock on for this register file."
              }
            },
            "APB2OTP_EN": {
              "APB2OTP_EN": {
                "bit": 0,
                "description": "Debug mode enable signal."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "Stores otp_debug version.",
                "width": 28
              }
            }
          }
        },
        "PARL": {
          "instances": [
            {
              "name": "PARL_IO",
              "base": "0x60015000",
              "irq": 51
            }
          ],
          "registers": {
            "RX_MODE_CFG": {
              "offset": "0x00",
              "size": 32,
              "description": "Parallel RX Sampling mode configuration register."
            },
            "RX_DATA_CFG": {
              "offset": "0x04",
              "size": 32,
              "description": "Parallel RX data configuration register."
            },
            "RX_GENRL_CFG": {
              "offset": "0x08",
              "size": 32,
              "description": "Parallel RX general configuration register."
            },
            "RX_START_CFG": {
              "offset": "0x0C",
              "size": 32,
              "description": "Parallel RX Start configuration register."
            },
            "TX_DATA_CFG": {
              "offset": "0x10",
              "size": 32,
              "description": "Parallel TX data configuration register."
            },
            "TX_START_CFG": {
              "offset": "0x14",
              "size": 32,
              "description": "Parallel TX Start configuration register."
            },
            "TX_GENRL_CFG": {
              "offset": "0x18",
              "size": 32,
              "description": "Parallel TX general configuration register."
            },
            "FIFO_CFG": {
              "offset": "0x1C",
              "size": 32,
              "description": "Parallel IO FIFO configuration register."
            },
            "REG_UPDATE": {
              "offset": "0x20",
              "size": 32,
              "description": "Parallel IO FIFO configuration register."
            },
            "ST": {
              "offset": "0x24",
              "size": 32,
              "description": "Parallel IO module status register0."
            },
            "INT_ENA": {
              "offset": "0x28",
              "size": 32,
              "description": "Parallel IO interrupt enable singal configuration register."
            },
            "INT_RAW": {
              "offset": "0x2C",
              "size": 32,
              "description": "Parallel IO interrupt raw singal status register."
            },
            "INT_ST": {
              "offset": "0x30",
              "size": 32,
              "description": "Parallel IO interrupt singal status register."
            },
            "INT_CLR": {
              "offset": "0x34",
              "size": 32,
              "description": "Parallel IO interrupt  clear singal configuration register."
            },
            "RX_ST0": {
              "offset": "0x38",
              "size": 32,
              "description": "Parallel IO RX status register0"
            },
            "RX_ST1": {
              "offset": "0x3C",
              "size": 32,
              "description": "Parallel IO RX status register1"
            },
            "TX_ST0": {
              "offset": "0x40",
              "size": 32,
              "description": "Parallel IO TX status register0"
            },
            "RX_CLK_CFG": {
              "offset": "0x44",
              "size": 32,
              "description": "Parallel IO RX clk configuration register"
            },
            "TX_CLK_CFG": {
              "offset": "0x48",
              "size": 32,
              "description": "Parallel IO TX clk configuration register"
            },
            "CLK": {
              "offset": "0x120",
              "size": 32,
              "description": "Parallel IO clk configuration register"
            },
            "VERSION": {
              "offset": "0x3FC",
              "size": 32,
              "description": "Version register."
            }
          },
          "bits": {
            "RX_MODE_CFG": {
              "RX_EXT_EN_SEL": {
                "bit": 21,
                "description": "Configures rx external enable signal selection from IO PAD.",
                "width": 4
              },
              "RX_SW_EN": {
                "bit": 25,
                "description": "Set this bit to enable data sampling by software."
              },
              "RX_EXT_EN_INV": {
                "bit": 26,
                "description": "Set this bit to invert the external enable signal."
              },
              "RX_PULSE_SUBMODE_SEL": {
                "bit": 27,
                "description": "Configures the rxd pulse sampling submode. \n4'd0: positive pulse start(data bit included) &&  positive pulse end(data bit included)\n4'd1: positive pulse start(data bit included) && positive pulse end (data bit excluded)\n4'd2: positive pulse start(data bit excluded) && positive pulse end (data bit included)\n4'd3: positive pulse start(data bit excluded) && positive pulse end (data bit excluded)\n4'd4: positive pulse start(data bit included) && length end\n4'd5: positive pulse start(data bit excluded) && length end",
                "width": 3
              },
              "RX_SMP_MODE_SEL": {
                "bit": 30,
                "description": "Configures the rxd sampling mode. \n2'b00: external level enable mode\n2'b01: external pulse enable mode  \n2'b10: internal software enable mode",
                "width": 2
              }
            },
            "RX_DATA_CFG": {
              "RX_BITLEN": {
                "bit": 9,
                "description": "Configures expected byte number of received data.",
                "width": 19
              },
              "RX_DATA_ORDER_INV": {
                "bit": 28,
                "description": "Set this bit to invert bit order of one byte sent from RX_FIFO to DMA."
              },
              "RX_BUS_WID_SEL": {
                "bit": 29,
                "description": "Configures the rxd bus width. \n3'd0: bus width is 1.\n3'd1: bus width is 2.\n3'd2: bus width is 4.\n3'd3: bus width is 8.",
                "width": 3
              }
            },
            "RX_GENRL_CFG": {
              "RX_GATING_EN": {
                "bit": 12,
                "description": "Set this bit to enable the clock gating of output rx clock."
              },
              "RX_TIMEOUT_THRES": {
                "bit": 13,
                "description": "Configures threshold of timeout counter.",
                "width": 16
              },
              "RX_TIMEOUT_EN": {
                "bit": 29,
                "description": "Set this bit to enable timeout function to generate error eof."
              },
              "RX_EOF_GEN_SEL": {
                "bit": 30,
                "description": "Configures the DMA eof generated mechanism. 1'b0: eof generated by data byte length. 1'b1: eof generated by external enable signal."
              }
            },
            "RX_START_CFG": {
              "RX_START": {
                "bit": 31,
                "description": "Set this bit to start rx data sampling."
              }
            },
            "TX_DATA_CFG": {
              "TX_BITLEN": {
                "bit": 9,
                "description": "Configures expected byte number of sent data.",
                "width": 19
              },
              "TX_DATA_ORDER_INV": {
                "bit": 28,
                "description": "Set this bit to invert bit order of one byte sent from TX_FIFO to IO data."
              },
              "TX_BUS_WID_SEL": {
                "bit": 29,
                "description": "Configures the txd bus width. \n3'd0: bus width is 1.\n3'd1: bus width is 2.\n3'd2: bus width is 4.\n3'd3: bus width is 8.",
                "width": 3
              }
            },
            "TX_START_CFG": {
              "TX_START": {
                "bit": 31,
                "description": "Set this bit to start tx data transmit."
              }
            },
            "TX_GENRL_CFG": {
              "TX_IDLE_VALUE": {
                "bit": 14,
                "description": "Configures bus value of transmitter in IDLE state.",
                "width": 16
              },
              "TX_GATING_EN": {
                "bit": 30,
                "description": "Set this bit to enable the clock gating of output tx clock."
              },
              "TX_VALID_OUTPUT_EN": {
                "bit": 31,
                "description": "Set this bit to enable the output of tx data valid signal."
              }
            },
            "FIFO_CFG": {
              "TX_FIFO_SRST": {
                "bit": 30,
                "description": "Set this bit to reset async fifo in tx module."
              },
              "RX_FIFO_SRST": {
                "bit": 31,
                "description": "Set this bit to reset async fifo in rx module."
              }
            },
            "REG_UPDATE": {
              "RX_REG_UPDATE": {
                "bit": 31,
                "description": "Set this bit to update rx register configuration."
              }
            },
            "ST": {
              "TX_READY": {
                "bit": 31,
                "description": "Represents the status that tx is ready to transmit."
              }
            },
            "INT_ENA": {
              "TX_FIFO_REMPTY_INT_ENA": {
                "bit": 0,
                "description": "Set this bit to enable TX_FIFO_REMPTY_INT."
              },
              "RX_FIFO_WOVF_INT_ENA": {
                "bit": 1,
                "description": "Set this bit to enable RX_FIFO_WOVF_INT."
              },
              "TX_EOF_INT_ENA": {
                "bit": 2,
                "description": "Set this bit to enable TX_EOF_INT."
              }
            },
            "INT_RAW": {
              "TX_FIFO_REMPTY_INT_RAW": {
                "bit": 0,
                "description": "The raw interrupt status of TX_FIFO_REMPTY_INT."
              },
              "RX_FIFO_WOVF_INT_RAW": {
                "bit": 1,
                "description": "The raw interrupt status of RX_FIFO_WOVF_INT."
              },
              "TX_EOF_INT_RAW": {
                "bit": 2,
                "description": "The raw interrupt status of TX_EOF_INT."
              }
            },
            "INT_ST": {
              "TX_FIFO_REMPTY_INT_ST": {
                "bit": 0,
                "description": "The masked interrupt status of TX_FIFO_REMPTY_INT."
              },
              "RX_FIFO_WOVF_INT_ST": {
                "bit": 1,
                "description": "The masked interrupt status of RX_FIFO_WOVF_INT."
              },
              "TX_EOF_INT_ST": {
                "bit": 2,
                "description": "The masked interrupt status of TX_EOF_INT."
              }
            },
            "INT_CLR": {
              "TX_FIFO_REMPTY_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear TX_FIFO_REMPTY_INT."
              },
              "RX_FIFO_WOVF_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear RX_FIFO_WOVF_INT."
              },
              "TX_EOF_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear TX_EOF_INT."
              }
            },
            "RX_ST0": {
              "RX_CNT": {
                "bit": 9,
                "description": "Indicates the cycle number of reading Rx FIFO.",
                "width": 4
              },
              "RX_FIFO_WR_BIT_CNT": {
                "bit": 13,
                "description": "Indicates the current written bit number into Rx FIFO.",
                "width": 19
              }
            },
            "RX_ST1": {
              "RX_FIFO_RD_BIT_CNT": {
                "bit": 13,
                "description": "Indicates the current read bit number from Rx FIFO.",
                "width": 19
              }
            },
            "TX_ST0": {
              "TX_CNT": {
                "bit": 6,
                "description": "Indicates the cycle number of reading Tx FIFO.",
                "width": 7
              },
              "TX_FIFO_RD_BIT_CNT": {
                "bit": 13,
                "description": "Indicates the current read bit number from Tx FIFO.",
                "width": 19
              }
            },
            "RX_CLK_CFG": {
              "RX_CLK_I_INV": {
                "bit": 30,
                "description": "Set this bit to invert the input Rx core clock."
              },
              "RX_CLK_O_INV": {
                "bit": 31,
                "description": "Set this bit to invert the output Rx core clock."
              }
            },
            "TX_CLK_CFG": {
              "TX_CLK_I_INV": {
                "bit": 30,
                "description": "Set this bit to invert the input Tx core clock."
              },
              "TX_CLK_O_INV": {
                "bit": 31,
                "description": "Set this bit to invert the output Tx core clock."
              }
            },
            "CLK": {
              "EN": {
                "bit": 31,
                "description": "Force clock on for this register file"
              }
            },
            "VERSION": {
              "DATE": {
                "bit": 0,
                "description": "Version of this register file",
                "width": 28
              }
            }
          }
        },
        "PAU": {
          "instances": [
            {
              "name": "PAU",
              "base": "0x60093000",
              "irq": 24
            }
          ],
          "registers": {
            "REGDMA_CONF": {
              "offset": "0x00",
              "size": 32,
              "description": "Peri backup control register"
            },
            "REGDMA_CLK_CONF": {
              "offset": "0x04",
              "size": 32,
              "description": "Clock control register"
            },
            "REGDMA_ETM_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "ETM start ctrl reg"
            },
            "REGDMA_LINK_0_ADDR": {
              "offset": "0x0C",
              "size": 32,
              "description": "link_0_addr"
            },
            "REGDMA_LINK_1_ADDR": {
              "offset": "0x10",
              "size": 32,
              "description": "Link_1_addr"
            },
            "REGDMA_LINK_2_ADDR": {
              "offset": "0x14",
              "size": 32,
              "description": "Link_2_addr"
            },
            "REGDMA_LINK_3_ADDR": {
              "offset": "0x18",
              "size": 32,
              "description": "Link_3_addr"
            },
            "REGDMA_LINK_MAC_ADDR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Link_mac_addr"
            },
            "REGDMA_CURRENT_LINK_ADDR": {
              "offset": "0x20",
              "size": 32,
              "description": "current link addr"
            },
            "REGDMA_BACKUP_ADDR": {
              "offset": "0x24",
              "size": 32,
              "description": "Backup addr"
            },
            "REGDMA_MEM_ADDR": {
              "offset": "0x28",
              "size": 32,
              "description": "mem addr"
            },
            "REGDMA_BKP_CONF": {
              "offset": "0x2C",
              "size": 32,
              "description": "backup config"
            },
            "RETENTION_LINK_BASE": {
              "offset": "0x30",
              "size": 32,
              "description": "retention dma link base"
            },
            "RETENTION_CFG": {
              "offset": "0x34",
              "size": 32,
              "description": "retention_cfg"
            },
            "INT_ENA": {
              "offset": "0x38",
              "size": 32,
              "description": "Read only register for error and done"
            },
            "INT_RAW": {
              "offset": "0x3C",
              "size": 32,
              "description": "Read only register for error and done"
            },
            "INT_CLR": {
              "offset": "0x40",
              "size": 32,
              "description": "Read only register for error and done"
            },
            "INT_ST": {
              "offset": "0x44",
              "size": 32,
              "description": "Read only register for error and done"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "Date register."
            }
          },
          "bits": {
            "REGDMA_CONF": {
              "FLOW_ERR": {
                "bit": 0,
                "description": "backup error type",
                "width": 3
              },
              "START": {
                "bit": 3,
                "description": "backup start signal"
              },
              "TO_MEM": {
                "bit": 4,
                "description": "backup direction(reg to mem / mem to reg)"
              },
              "LINK_SEL": {
                "bit": 5,
                "description": "Link select",
                "width": 2
              },
              "START_MAC": {
                "bit": 7,
                "description": "mac sw backup start signal"
              },
              "TO_MEM_MAC": {
                "bit": 8,
                "description": "mac sw backup direction(reg to mem / mem to reg)"
              },
              "SEL_MAC": {
                "bit": 9,
                "description": "mac hw/sw select"
              }
            },
            "REGDMA_CLK_CONF": {
              "CLK_EN": {
                "bit": 0,
                "description": "clock enable"
              }
            },
            "REGDMA_ETM_CTRL": {
              "ETM_START_0": {
                "bit": 0,
                "description": "etm_start_0 reg"
              },
              "ETM_START_1": {
                "bit": 1,
                "description": "etm_start_1 reg"
              },
              "ETM_START_2": {
                "bit": 2,
                "description": "etm_start_2 reg"
              },
              "ETM_START_3": {
                "bit": 3,
                "description": "etm_start_3 reg"
              }
            },
            "REGDMA_LINK_0_ADDR": {
              "LINK_ADDR_0": {
                "bit": 0,
                "description": "link_0_addr reg",
                "width": 32
              }
            },
            "REGDMA_LINK_1_ADDR": {
              "LINK_ADDR_1": {
                "bit": 0,
                "description": "Link_1_addr reg",
                "width": 32
              }
            },
            "REGDMA_LINK_2_ADDR": {
              "LINK_ADDR_2": {
                "bit": 0,
                "description": "Link_2_addr reg",
                "width": 32
              }
            },
            "REGDMA_LINK_3_ADDR": {
              "LINK_ADDR_3": {
                "bit": 0,
                "description": "Link_3_addr reg",
                "width": 32
              }
            },
            "REGDMA_LINK_MAC_ADDR": {
              "LINK_ADDR_MAC": {
                "bit": 0,
                "description": "Link_mac_addr reg",
                "width": 32
              }
            },
            "REGDMA_CURRENT_LINK_ADDR": {
              "CURRENT_LINK_ADDR": {
                "bit": 0,
                "description": "current link addr reg",
                "width": 32
              }
            },
            "REGDMA_BACKUP_ADDR": {
              "BACKUP_ADDR": {
                "bit": 0,
                "description": "backup addr reg",
                "width": 32
              }
            },
            "REGDMA_MEM_ADDR": {
              "MEM_ADDR": {
                "bit": 0,
                "description": "mem addr reg",
                "width": 32
              }
            },
            "REGDMA_BKP_CONF": {
              "READ_INTERVAL": {
                "bit": 0,
                "description": "Link read_interval",
                "width": 7
              },
              "LINK_TOUT_THRES": {
                "bit": 7,
                "description": "link wait timeout threshold",
                "width": 10
              },
              "BURST_LIMIT": {
                "bit": 17,
                "description": "burst limit",
                "width": 5
              },
              "BACKUP_TOUT_THRES": {
                "bit": 22,
                "description": "Backup timeout threshold",
                "width": 10
              }
            },
            "RETENTION_LINK_BASE": {
              "LINK_BASE_ADDR": {
                "bit": 0,
                "description": "retention dma link base",
                "width": 27
              }
            },
            "RETENTION_CFG": {
              "RET_INV_CFG": {
                "bit": 0,
                "description": "retention inv scan out",
                "width": 32
              }
            },
            "INT_ENA": {
              "DONE_INT_ENA": {
                "bit": 0,
                "description": "backup done flag"
              },
              "ERROR_INT_ENA": {
                "bit": 1,
                "description": "error flag"
              }
            },
            "INT_RAW": {
              "DONE_INT_RAW": {
                "bit": 0,
                "description": "backup done flag"
              },
              "ERROR_INT_RAW": {
                "bit": 1,
                "description": "error flag"
              }
            },
            "INT_CLR": {
              "DONE_INT_CLR": {
                "bit": 0,
                "description": "backup done flag"
              },
              "ERROR_INT_CLR": {
                "bit": 1,
                "description": "error flag"
              }
            },
            "INT_ST": {
              "DONE_INT_ST": {
                "bit": 0,
                "description": "backup done flag"
              },
              "ERROR_INT_ST": {
                "bit": 1,
                "description": "error flag"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "REGDMA date information/ REGDMA version information.",
                "width": 28
              }
            }
          }
        },
        "PCNT": {
          "instances": [
            {
              "name": "PCNT",
              "base": "0x60012000",
              "irq": 50
            }
          ],
          "registers": {
            "U%s_CONF0": {
              "offset": "0x00",
              "size": 32,
              "description": "Configuration register 0 for unit %s"
            },
            "U%s_CONF1": {
              "offset": "0x04",
              "size": 32,
              "description": "Configuration register 1 for unit %s"
            },
            "U%s_CONF2": {
              "offset": "0x08",
              "size": 32,
              "description": "Configuration register 2 for unit %s"
            },
            "U%s_CNT": {
              "offset": "0x30",
              "size": 32,
              "description": "Counter value for unit %s"
            },
            "INT_RAW": {
              "offset": "0x40",
              "size": 32,
              "description": "Interrupt raw status register"
            },
            "INT_ST": {
              "offset": "0x44",
              "size": 32,
              "description": "Interrupt status register"
            },
            "INT_ENA": {
              "offset": "0x48",
              "size": 32,
              "description": "Interrupt enable register"
            },
            "INT_CLR": {
              "offset": "0x4C",
              "size": 32,
              "description": "Interrupt clear register"
            },
            "U%s_STATUS": {
              "offset": "0x50",
              "size": 32,
              "description": "PNCT UNIT%s status register"
            },
            "CTRL": {
              "offset": "0x60",
              "size": 32,
              "description": "Control register for all counters"
            },
            "DATE": {
              "offset": "0xFC",
              "size": 32,
              "description": "PCNT version control register"
            }
          },
          "bits": {
            "U%s_CONF0": {
              "FILTER_THRES": {
                "bit": 0,
                "description": "This sets the maximum threshold, in APB_CLK cycles, for the filter.\n\nAny pulses with width less than this will be ignored when the filter is enabled.",
                "width": 10
              },
              "FILTER_EN": {
                "bit": 10,
                "description": "This is the enable bit for unit %s's input filter."
              },
              "THR_ZERO_EN": {
                "bit": 11,
                "description": "This is the enable bit for unit %s's zero comparator."
              },
              "THR_H_LIM_EN": {
                "bit": 12,
                "description": "This is the enable bit for unit %s's thr_h_lim comparator. Configures it to enable the high limit interrupt."
              },
              "THR_L_LIM_EN": {
                "bit": 13,
                "description": "This is the enable bit for unit %s's thr_l_lim comparator. Configures it to enable the low limit interrupt."
              },
              "THR_THRES0_EN": {
                "bit": 14,
                "description": "This is the enable bit for unit %s's thres0 comparator."
              },
              "THR_THRES1_EN": {
                "bit": 15,
                "description": "This is the enable bit for unit %s's thres1 comparator."
              },
              "CH0_NEG_MODE": {
                "bit": 16,
                "description": "This register sets the behavior when the signal input of channel 0 detects a negative edge.\n\n1: Increase the counter.2: Decrease the counter.0, 3: No effect on counter",
                "width": 2
              },
              "CH0_POS_MODE": {
                "bit": 18,
                "description": "This register sets the behavior when the signal input of channel 0 detects a positive edge.\n\n1: Increase the counter.2: Decrease the counter.0, 3: No effect on counter",
                "width": 2
              },
              "CH0_HCTRL_MODE": {
                "bit": 20,
                "description": "This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is high.\n\n0: No modification.1: Invert behavior (increase -> decrease, decrease -> increase).2, 3: Inhibit counter modification",
                "width": 2
              },
              "CH0_LCTRL_MODE": {
                "bit": 22,
                "description": "This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is low.\n\n0: No modification.1: Invert behavior (increase -> decrease, decrease -> increase).2, 3: Inhibit counter modification",
                "width": 2
              },
              "CH1_NEG_MODE": {
                "bit": 24,
                "description": "This register sets the behavior when the signal input of channel 1 detects a negative edge.\n\n1: Increment the counter.2: Decrement the counter.0, 3: No effect on counter",
                "width": 2
              },
              "CH1_POS_MODE": {
                "bit": 26,
                "description": "This register sets the behavior when the signal input of channel 1 detects a positive edge.\n\n1: Increment the counter.2: Decrement the counter.0, 3: No effect on counter",
                "width": 2
              },
              "CH1_HCTRL_MODE": {
                "bit": 28,
                "description": "This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is high.\n\n0: No modification.1: Invert behavior (increase -> decrease, decrease -> increase).2, 3: Inhibit counter modification",
                "width": 2
              },
              "CH1_LCTRL_MODE": {
                "bit": 30,
                "description": "This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is low.\n\n0: No modification.1: Invert behavior (increase -> decrease, decrease -> increase).2, 3: Inhibit counter modification",
                "width": 2
              }
            },
            "U%s_CONF1": {
              "CNT_THRES0": {
                "bit": 0,
                "description": "This register is used to configure the thres0 value for unit %s.",
                "width": 16
              },
              "CNT_THRES1": {
                "bit": 16,
                "description": "This register is used to configure the thres1 value for unit %s.",
                "width": 16
              }
            },
            "U%s_CONF2": {
              "CNT_H_LIM": {
                "bit": 0,
                "description": "This register is used to configure the thr_h_lim value for unit %s. When pluse_cnt reaches this value, the counter will be cleared to 0.",
                "width": 16
              },
              "CNT_L_LIM": {
                "bit": 16,
                "description": "This register is used to configure the thr_l_lim value for unit %s. When pluse_cnt reaches this value, the counter will be cleared to 0.",
                "width": 16
              }
            },
            "U%s_CNT": {
              "CNT": {
                "bit": 0,
                "description": "This register stores the current pulse count value for unit %s.",
                "width": 16
              }
            },
            "INT_RAW": {
              "CNT_THR_EVENT_U0": {
                "bit": 0,
                "description": "The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt."
              },
              "CNT_THR_EVENT_U1": {
                "bit": 1,
                "description": "The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt."
              },
              "CNT_THR_EVENT_U2": {
                "bit": 2,
                "description": "The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt."
              },
              "CNT_THR_EVENT_U3": {
                "bit": 3,
                "description": "The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt."
              }
            },
            "INT_ST": {
              "CNT_THR_EVENT_U0": {
                "bit": 0,
                "description": "The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt."
              },
              "CNT_THR_EVENT_U1": {
                "bit": 1,
                "description": "The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt."
              },
              "CNT_THR_EVENT_U2": {
                "bit": 2,
                "description": "The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt."
              },
              "CNT_THR_EVENT_U3": {
                "bit": 3,
                "description": "The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt."
              }
            },
            "INT_ENA": {
              "CNT_THR_EVENT_U0": {
                "bit": 0,
                "description": "The interrupt enable bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt."
              },
              "CNT_THR_EVENT_U1": {
                "bit": 1,
                "description": "The interrupt enable bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt."
              },
              "CNT_THR_EVENT_U2": {
                "bit": 2,
                "description": "The interrupt enable bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt."
              },
              "CNT_THR_EVENT_U3": {
                "bit": 3,
                "description": "The interrupt enable bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt."
              }
            },
            "INT_CLR": {
              "CNT_THR_EVENT_U0": {
                "bit": 0,
                "description": "Set this bit to clear the PCNT_CNT_THR_EVENT_U0_INT interrupt."
              },
              "CNT_THR_EVENT_U1": {
                "bit": 1,
                "description": "Set this bit to clear the PCNT_CNT_THR_EVENT_U1_INT interrupt."
              },
              "CNT_THR_EVENT_U2": {
                "bit": 2,
                "description": "Set this bit to clear the PCNT_CNT_THR_EVENT_U2_INT interrupt."
              },
              "CNT_THR_EVENT_U3": {
                "bit": 3,
                "description": "Set this bit to clear the PCNT_CNT_THR_EVENT_U3_INT interrupt."
              }
            },
            "U%s_STATUS": {
              "ZERO_MODE": {
                "bit": 0,
                "description": "The pulse counter status of PCNT_U%s corresponding to 0. 0: pulse counter decreases from positive to 0. 1: pulse counter increases from negative to 0. 2: pulse counter is negative. 3: pulse counter is positive.",
                "width": 2
              },
              "THRES1": {
                "bit": 2,
                "description": "The latched value of thres1 event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thres1 and thres1 event is valid. 0: others"
              },
              "THRES0": {
                "bit": 3,
                "description": "The latched value of thres0 event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thres0 and thres0 event is valid. 0: others"
              },
              "L_LIM": {
                "bit": 4,
                "description": "The latched value of low limit event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thr_l_lim and low limit event is valid. 0: others"
              },
              "H_LIM": {
                "bit": 5,
                "description": "The latched value of high limit event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thr_h_lim and high limit event is valid. 0: others"
              },
              "ZERO": {
                "bit": 6,
                "description": "The latched value of zero threshold event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to 0 and zero threshold event is valid. 0: others"
              }
            },
            "CTRL": {
              "CNT_RST_U0": {
                "bit": 0,
                "description": "Set this bit to clear unit 0's counter."
              },
              "CNT_PAUSE_U0": {
                "bit": 1,
                "description": "Set this bit to freeze unit 0's counter."
              },
              "CNT_RST_U1": {
                "bit": 2,
                "description": "Set this bit to clear unit 1's counter."
              },
              "CNT_PAUSE_U1": {
                "bit": 3,
                "description": "Set this bit to freeze unit 1's counter."
              },
              "CNT_RST_U2": {
                "bit": 4,
                "description": "Set this bit to clear unit 2's counter."
              },
              "CNT_PAUSE_U2": {
                "bit": 5,
                "description": "Set this bit to freeze unit 2's counter."
              },
              "CNT_RST_U3": {
                "bit": 6,
                "description": "Set this bit to clear unit 3's counter."
              },
              "CNT_PAUSE_U3": {
                "bit": 7,
                "description": "Set this bit to freeze unit 3's counter."
              },
              "CLK_EN": {
                "bit": 16,
                "description": "The registers clock gate enable signal of PCNT module. 1: the registers can be read and written by application. 0: the registers can not be read or written by application"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "This is the PCNT version control register.",
                "width": 32
              }
            }
          }
        },
        "PCR": {
          "instances": [
            {
              "name": "PCR",
              "base": "0x60096000"
            }
          ],
          "registers": {
            "UART0_CONF": {
              "offset": "0x00",
              "size": 32,
              "description": "UART0 configuration register"
            },
            "UART0_SCLK_CONF": {
              "offset": "0x04",
              "size": 32,
              "description": "UART0_SCLK configuration register"
            },
            "UART0_PD_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "UART0 power control register"
            },
            "UART1_CONF": {
              "offset": "0x0C",
              "size": 32,
              "description": "UART1 configuration register"
            },
            "UART1_SCLK_CONF": {
              "offset": "0x10",
              "size": 32,
              "description": "UART1_SCLK configuration register"
            },
            "UART1_PD_CTRL": {
              "offset": "0x14",
              "size": 32,
              "description": "UART1 power control register"
            },
            "MSPI_CONF": {
              "offset": "0x18",
              "size": 32,
              "description": "MSPI configuration register"
            },
            "MSPI_CLK_CONF": {
              "offset": "0x1C",
              "size": 32,
              "description": "MSPI_CLK configuration register"
            },
            "I2C0_CONF": {
              "offset": "0x20",
              "size": 32,
              "description": "I2C configuration register"
            },
            "I2C0_SCLK_CONF": {
              "offset": "0x24",
              "size": 32,
              "description": "I2C_SCLK configuration register"
            },
            "I2C1_CONF": {
              "offset": "0x28",
              "size": 32,
              "description": "I2C configuration register"
            },
            "I2C1_SCLK_CONF": {
              "offset": "0x2C",
              "size": 32,
              "description": "I2C_SCLK configuration register"
            },
            "UHCI_CONF": {
              "offset": "0x30",
              "size": 32,
              "description": "UHCI configuration register"
            },
            "RMT_CONF": {
              "offset": "0x34",
              "size": 32,
              "description": "RMT configuration register"
            },
            "RMT_SCLK_CONF": {
              "offset": "0x38",
              "size": 32,
              "description": "RMT_SCLK configuration register"
            },
            "LEDC_CONF": {
              "offset": "0x3C",
              "size": 32,
              "description": "LEDC configuration register"
            },
            "LEDC_SCLK_CONF": {
              "offset": "0x40",
              "size": 32,
              "description": "LEDC_SCLK configuration register"
            },
            "TIMERGROUP0_CONF": {
              "offset": "0x44",
              "size": 32,
              "description": "TIMERGROUP0 configuration register"
            },
            "TIMERGROUP0_TIMER_CLK_CONF": {
              "offset": "0x48",
              "size": 32,
              "description": "TIMERGROUP0_TIMER_CLK configuration register"
            },
            "TIMERGROUP0_WDT_CLK_CONF": {
              "offset": "0x4C",
              "size": 32,
              "description": "TIMERGROUP0_WDT_CLK configuration register"
            },
            "TIMERGROUP1_CONF": {
              "offset": "0x50",
              "size": 32,
              "description": "TIMERGROUP1 configuration register"
            },
            "TIMERGROUP1_TIMER_CLK_CONF": {
              "offset": "0x54",
              "size": 32,
              "description": "TIMERGROUP1_TIMER_CLK configuration register"
            },
            "TIMERGROUP1_WDT_CLK_CONF": {
              "offset": "0x58",
              "size": 32,
              "description": "TIMERGROUP1_WDT_CLK configuration register"
            },
            "SYSTIMER_CONF": {
              "offset": "0x5C",
              "size": 32,
              "description": "SYSTIMER configuration register"
            },
            "SYSTIMER_FUNC_CLK_CONF": {
              "offset": "0x60",
              "size": 32,
              "description": "SYSTIMER_FUNC_CLK configuration register"
            },
            "TWAI0_CONF": {
              "offset": "0x64",
              "size": 32,
              "description": "TWAI0 configuration register"
            },
            "TWAI0_FUNC_CLK_CONF": {
              "offset": "0x68",
              "size": 32,
              "description": "TWAI0_FUNC_CLK configuration register"
            },
            "I2S_CONF": {
              "offset": "0x6C",
              "size": 32,
              "description": "I2S configuration register"
            },
            "I2S_TX_CLKM_CONF": {
              "offset": "0x70",
              "size": 32,
              "description": "I2S_TX_CLKM configuration register"
            },
            "I2S_TX_CLKM_DIV_CONF": {
              "offset": "0x74",
              "size": 32,
              "description": "I2S_TX_CLKM_DIV configuration register"
            },
            "I2S_RX_CLKM_CONF": {
              "offset": "0x78",
              "size": 32,
              "description": "I2S_RX_CLKM configuration register"
            },
            "I2S_RX_CLKM_DIV_CONF": {
              "offset": "0x7C",
              "size": 32,
              "description": "I2S_RX_CLKM_DIV configuration register"
            },
            "SARADC_CONF": {
              "offset": "0x80",
              "size": 32,
              "description": "SARADC configuration register"
            },
            "SARADC_CLKM_CONF": {
              "offset": "0x84",
              "size": 32,
              "description": "SARADC_CLKM configuration register"
            },
            "TSENS_CLK_CONF": {
              "offset": "0x88",
              "size": 32,
              "description": "TSENS_CLK configuration register"
            },
            "USB_DEVICE_CONF": {
              "offset": "0x8C",
              "size": 32,
              "description": "USB_DEVICE configuration register"
            },
            "INTMTX_CONF": {
              "offset": "0x90",
              "size": 32,
              "description": "INTMTX configuration register"
            },
            "PCNT_CONF": {
              "offset": "0x94",
              "size": 32,
              "description": "PCNT configuration register"
            },
            "ETM_CONF": {
              "offset": "0x98",
              "size": 32,
              "description": "ETM configuration register"
            },
            "PWM_CONF": {
              "offset": "0x9C",
              "size": 32,
              "description": "PWM configuration register"
            },
            "PWM_CLK_CONF": {
              "offset": "0xA0",
              "size": 32,
              "description": "PWM_CLK configuration register"
            },
            "PARL_IO_CONF": {
              "offset": "0xA4",
              "size": 32,
              "description": "PARL_IO configuration register"
            },
            "PARL_CLK_RX_CONF": {
              "offset": "0xA8",
              "size": 32,
              "description": "PARL_CLK_RX configuration register"
            },
            "PARL_CLK_TX_CONF": {
              "offset": "0xAC",
              "size": 32,
              "description": "PARL_CLK_TX configuration register"
            },
            "PVT_MONITOR_CONF": {
              "offset": "0xB0",
              "size": 32,
              "description": "PVT_MONITOR configuration register"
            },
            "PVT_MONITOR_FUNC_CLK_CONF": {
              "offset": "0xB4",
              "size": 32,
              "description": "PVT_MONITOR function clock configuration register"
            },
            "GDMA_CONF": {
              "offset": "0xB8",
              "size": 32,
              "description": "GDMA configuration register"
            },
            "SPI2_CONF": {
              "offset": "0xBC",
              "size": 32,
              "description": "SPI2 configuration register"
            },
            "SPI2_CLKM_CONF": {
              "offset": "0xC0",
              "size": 32,
              "description": "SPI2_CLKM configuration register"
            },
            "AES_CONF": {
              "offset": "0xC4",
              "size": 32,
              "description": "AES configuration register"
            },
            "SHA_CONF": {
              "offset": "0xC8",
              "size": 32,
              "description": "SHA configuration register"
            },
            "RSA_CONF": {
              "offset": "0xCC",
              "size": 32,
              "description": "RSA configuration register"
            },
            "RSA_PD_CTRL": {
              "offset": "0xD0",
              "size": 32,
              "description": "RSA power control register"
            },
            "ECC_CONF": {
              "offset": "0xD4",
              "size": 32,
              "description": "ECC configuration register"
            },
            "ECC_PD_CTRL": {
              "offset": "0xD8",
              "size": 32,
              "description": "ECC power control register"
            },
            "DS_CONF": {
              "offset": "0xDC",
              "size": 32,
              "description": "DS configuration register"
            },
            "HMAC_CONF": {
              "offset": "0xE0",
              "size": 32,
              "description": "HMAC configuration register"
            },
            "ECDSA_CONF": {
              "offset": "0xE4",
              "size": 32,
              "description": "ECDSA configuration register"
            },
            "IOMUX_CONF": {
              "offset": "0xE8",
              "size": 32,
              "description": "IOMUX configuration register"
            },
            "IOMUX_CLK_CONF": {
              "offset": "0xEC",
              "size": 32,
              "description": "IOMUX_CLK configuration register"
            },
            "MEM_MONITOR_CONF": {
              "offset": "0xF0",
              "size": 32,
              "description": "MEM_MONITOR configuration register"
            },
            "REGDMA_CONF": {
              "offset": "0xF4",
              "size": 32,
              "description": "REGDMA configuration register"
            },
            "TRACE_CONF": {
              "offset": "0xF8",
              "size": 32,
              "description": "TRACE configuration register"
            },
            "ASSIST_CONF": {
              "offset": "0xFC",
              "size": 32,
              "description": "ASSIST configuration register"
            },
            "CACHE_CONF": {
              "offset": "0x100",
              "size": 32,
              "description": "CACHE configuration register"
            },
            "MODEM_CONF": {
              "offset": "0x104",
              "size": 32,
              "description": "MODEM_APB configuration register"
            },
            "TIMEOUT_CONF": {
              "offset": "0x108",
              "size": 32,
              "description": "TIMEOUT configuration register"
            },
            "SYSCLK_CONF": {
              "offset": "0x10C",
              "size": 32,
              "description": "SYSCLK configuration register"
            },
            "CPU_WAITI_CONF": {
              "offset": "0x110",
              "size": 32,
              "description": "CPU_WAITI configuration register"
            },
            "CPU_FREQ_CONF": {
              "offset": "0x114",
              "size": 32,
              "description": "CPU_FREQ configuration register"
            },
            "AHB_FREQ_CONF": {
              "offset": "0x118",
              "size": 32,
              "description": "AHB_FREQ configuration register"
            },
            "APB_FREQ_CONF": {
              "offset": "0x11C",
              "size": 32,
              "description": "APB_FREQ configuration register"
            },
            "SYSCLK_FREQ_QUERY_0": {
              "offset": "0x120",
              "size": 32,
              "description": "SYSCLK frequency query 0 register"
            },
            "PLL_DIV_CLK_EN": {
              "offset": "0x124",
              "size": 32,
              "description": "SPLL DIV clock-gating configuration register"
            },
            "CTRL_CLK_OUT_EN": {
              "offset": "0x128",
              "size": 32,
              "description": "CLK_OUT_EN configuration register"
            },
            "CTRL_TICK_CONF": {
              "offset": "0x12C",
              "size": 32,
              "description": "TICK configuration register"
            },
            "CTRL_32K_CONF": {
              "offset": "0x130",
              "size": 32,
              "description": "32KHz clock configuration register"
            },
            "SRAM_POWER_CONF_0": {
              "offset": "0x134",
              "size": 32,
              "description": "HP SRAM/ROM configuration register"
            },
            "SRAM_POWER_CONF_1": {
              "offset": "0x138",
              "size": 32,
              "description": "HP SRAM/ROM configuration register"
            },
            "SEC_CONF": {
              "offset": "0x13C",
              "size": 32,
              "description": "xxxx"
            },
            "ADC_INV_PHASE_CONF": {
              "offset": "0x140",
              "size": 32,
              "description": "xxxx"
            },
            "SDM_INV_PHASE_CONF": {
              "offset": "0x144",
              "size": 32,
              "description": "xxxx"
            },
            "BUS_CLK_UPDATE": {
              "offset": "0x148",
              "size": 32,
              "description": "xxxx"
            },
            "SAR_CLK_DIV": {
              "offset": "0x14C",
              "size": 32,
              "description": "xxxx"
            },
            "PWDET_SAR_CLK_CONF": {
              "offset": "0x150",
              "size": 32,
              "description": "xxxx"
            },
            "RESET_EVENT_BYPASS": {
              "offset": "0xFF0",
              "size": 32,
              "description": "reset event bypass backdoor configuration register"
            },
            "FPGA_DEBUG": {
              "offset": "0xFF4",
              "size": 32,
              "description": "fpga debug register"
            },
            "CLOCK_GATE": {
              "offset": "0xFF8",
              "size": 32,
              "description": "PCR clock gating configure register"
            },
            "DATE": {
              "offset": "0xFFC",
              "size": 32,
              "description": "Date register."
            }
          },
          "bits": {
            "UART0_CONF": {
              "UART0_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable uart0 apb clock"
              },
              "UART0_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset uart0 module"
              },
              "UART0_READY": {
                "bit": 2,
                "description": "Query this field after reset uart0 module"
              }
            },
            "UART0_SCLK_CONF": {
              "UART0_SCLK_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the uart0 function clock.",
                "width": 6
              },
              "UART0_SCLK_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the uart0 function clock.",
                "width": 6
              },
              "UART0_SCLK_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the uart0 function clock.",
                "width": 8
              },
              "UART0_SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0: do not select anyone clock, 1: 80MHz, 2: FOSC, 3(default): XTAL.",
                "width": 2
              },
              "UART0_SCLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable uart0 function clock"
              }
            },
            "UART0_PD_CTRL": {
              "UART0_MEM_FORCE_PU": {
                "bit": 1,
                "description": "Set this bit to force power down UART0 memory."
              },
              "UART0_MEM_FORCE_PD": {
                "bit": 2,
                "description": "Set this bit to force power up UART0 memory."
              }
            },
            "UART1_CONF": {
              "UART1_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable uart1 apb clock"
              },
              "UART1_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset uart1 module"
              },
              "UART1_READY": {
                "bit": 2,
                "description": "Query this field after reset uart1 module"
              }
            },
            "UART1_SCLK_CONF": {
              "UART1_SCLK_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the uart1 function clock.",
                "width": 6
              },
              "UART1_SCLK_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the uart1 function clock.",
                "width": 6
              },
              "UART1_SCLK_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the uart1 function clock.",
                "width": 8
              },
              "UART1_SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0: do not select anyone clock, 1: 80MHz, 2: FOSC, 3(default): XTAL.",
                "width": 2
              },
              "UART1_SCLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable uart0 function clock"
              }
            },
            "UART1_PD_CTRL": {
              "UART1_MEM_FORCE_PU": {
                "bit": 1,
                "description": "Set this bit to force power down UART1 memory."
              },
              "UART1_MEM_FORCE_PD": {
                "bit": 2,
                "description": "Set this bit to force power up UART1 memory."
              }
            },
            "MSPI_CONF": {
              "MSPI_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable mspi clock, include mspi pll clock"
              },
              "MSPI_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset mspi module"
              },
              "MSPI_PLL_CLK_EN": {
                "bit": 2,
                "description": "Set 1 to enable mspi pll clock"
              },
              "MSPI_CLK_SEL": {
                "bit": 3,
                "description": "set this field to select clock-source.",
                "width": 2
              },
              "MSPI_READY": {
                "bit": 5,
                "description": "Query this field after reset mspi module"
              }
            },
            "MSPI_CLK_CONF": {
              "MSPI_FAST_DIV_NUM": {
                "bit": 0,
                "description": "Set as one within (0,1,2) to generate div1(default)/div2/div4 of low-speed clock-source to drive clk_mspi_fast. Only avaiable whe the clck-source is a low-speed clock-source such as XTAL/FOSC.",
                "width": 8
              }
            },
            "I2C0_CONF": {
              "I2C0_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable i2c apb clock"
              },
              "I2C0_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset i2c module"
              },
              "I2C0_READY": {
                "bit": 2,
                "description": "Query this field after reset i2c0 module"
              }
            },
            "I2C0_SCLK_CONF": {
              "I2C0_SCLK_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the i2c function clock.",
                "width": 6
              },
              "I2C0_SCLK_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the i2c function clock.",
                "width": 6
              },
              "I2C0_SCLK_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the i2c function clock.",
                "width": 8
              },
              "I2C0_SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: FOSC."
              },
              "I2C0_SCLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable i2c function clock"
              }
            },
            "I2C1_CONF": {
              "I2C1_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable i2c apb clock"
              },
              "I2C1_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset i2c module"
              },
              "I2C1_READY": {
                "bit": 2,
                "description": "Query this field after reset i2c1 module"
              }
            },
            "I2C1_SCLK_CONF": {
              "I2C1_SCLK_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the i2c function clock.",
                "width": 6
              },
              "I2C1_SCLK_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the i2c function clock.",
                "width": 6
              },
              "I2C1_SCLK_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the i2c function clock.",
                "width": 8
              },
              "I2C1_SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: FOSC."
              },
              "I2C1_SCLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable i2c function clock"
              }
            },
            "UHCI_CONF": {
              "UHCI_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable uhci clock"
              },
              "UHCI_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset uhci module"
              },
              "UHCI_READY": {
                "bit": 2,
                "description": "Query this field after reset uhci module"
              }
            },
            "RMT_CONF": {
              "RMT_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable rmt apb clock"
              },
              "RMT_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset rmt module"
              },
              "RMT_READY": {
                "bit": 2,
                "description": "Query this field after reset rmt module"
              }
            },
            "RMT_SCLK_CONF": {
              "SCLK_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the rmt function clock.",
                "width": 6
              },
              "SCLK_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the rmt function clock.",
                "width": 6
              },
              "SCLK_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the rmt function clock.",
                "width": 8
              },
              "SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0: do not select anyone clock, 1(default): 80MHz, 2: FOSC, 3: XTAL."
              },
              "SCLK_EN": {
                "bit": 21,
                "description": "Set 1 to enable rmt function clock"
              }
            },
            "LEDC_CONF": {
              "LEDC_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable ledc apb clock"
              },
              "LEDC_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset ledc module"
              },
              "LEDC_READY": {
                "bit": 2,
                "description": "Query this field after reset ledc module"
              }
            },
            "LEDC_SCLK_CONF": {
              "LEDC_SCLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): do not select anyone clock, 1: 80MHz, 2: FOSC, 3: XTAL.",
                "width": 2
              },
              "LEDC_SCLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable ledc function clock"
              }
            },
            "TIMERGROUP0_CONF": {
              "TG0_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable timer_group0 apb clock"
              },
              "TG0_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset timer_group0 module"
              },
              "TG0_WDT_READY": {
                "bit": 2,
                "description": "Query this field after reset timer_group0 wdt module"
              },
              "TG0_TIMER0_READY": {
                "bit": 3,
                "description": "Query this field after reset timer_group0 timer0 module"
              },
              "TG0_TIMER1_READY": {
                "bit": 4,
                "description": "reserved"
              }
            },
            "TIMERGROUP0_TIMER_CLK_CONF": {
              "TG0_TIMER_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 80MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "TG0_TIMER_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable timer_group0 timer clock"
              }
            },
            "TIMERGROUP0_WDT_CLK_CONF": {
              "TG0_WDT_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 80MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "TG0_WDT_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable timer_group0 wdt clock"
              }
            },
            "TIMERGROUP1_CONF": {
              "TG1_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable timer_group1 apb clock"
              },
              "TG1_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset timer_group1 module"
              },
              "TG1_WDT_READY": {
                "bit": 2,
                "description": "Query this field after reset timer_group1 wdt module"
              },
              "TG1_TIMER0_READY": {
                "bit": 3,
                "description": "Query this field after reset timer_group1 timer0 module"
              },
              "TG1_TIMER1_READY": {
                "bit": 4,
                "description": "reserved"
              }
            },
            "TIMERGROUP1_TIMER_CLK_CONF": {
              "TG1_TIMER_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 80MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "TG1_TIMER_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable timer_group1 timer clock"
              }
            },
            "TIMERGROUP1_WDT_CLK_CONF": {
              "TG1_WDT_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 80MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "TG1_WDT_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable timer_group0 wdt clock"
              }
            },
            "SYSTIMER_CONF": {
              "SYSTIMER_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable systimer apb clock"
              },
              "SYSTIMER_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset systimer module"
              },
              "SYSTIMER_READY": {
                "bit": 2,
                "description": "Query this field after reset systimer module"
              }
            },
            "SYSTIMER_FUNC_CLK_CONF": {
              "SYSTIMER_FUNC_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: FOSC."
              },
              "SYSTIMER_FUNC_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable systimer function clock"
              }
            },
            "TWAI0_CONF": {
              "TWAI0_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable twai0 apb clock"
              },
              "TWAI0_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset twai0 module"
              },
              "TWAI0_READY": {
                "bit": 2,
                "description": "Query this field after reset twai0 module"
              }
            },
            "TWAI0_FUNC_CLK_CONF": {
              "TWAI0_FUNC_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: FOSC."
              },
              "TWAI0_FUNC_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable twai0 function clock"
              }
            },
            "I2S_CONF": {
              "I2S_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable i2s apb clock"
              },
              "I2S_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset i2s module"
              },
              "I2S_RX_READY": {
                "bit": 2,
                "description": "Query this field before using i2s rx function, after reset i2s module"
              },
              "I2S_TX_READY": {
                "bit": 3,
                "description": "Query this field before using i2s tx function, after reset i2s module"
              }
            },
            "I2S_TX_CLKM_CONF": {
              "I2S_TX_CLKM_DIV_NUM": {
                "bit": 12,
                "description": "Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b <= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.",
                "width": 8
              },
              "I2S_TX_CLKM_SEL": {
                "bit": 20,
                "description": "Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.",
                "width": 2
              },
              "I2S_TX_CLKM_EN": {
                "bit": 22,
                "description": "Set 1 to enable i2s_tx function clock"
              }
            },
            "I2S_TX_CLKM_DIV_CONF": {
              "I2S_TX_CLKM_DIV_Z": {
                "bit": 0,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).",
                "width": 9
              },
              "I2S_TX_CLKM_DIV_Y": {
                "bit": 9,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).",
                "width": 9
              },
              "I2S_TX_CLKM_DIV_X": {
                "bit": 18,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.",
                "width": 9
              },
              "I2S_TX_CLKM_DIV_YN1": {
                "bit": 27,
                "description": "For b <= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1."
              }
            },
            "I2S_RX_CLKM_CONF": {
              "I2S_RX_CLKM_DIV_NUM": {
                "bit": 12,
                "description": "Integral I2S clock divider value",
                "width": 8
              },
              "I2S_RX_CLKM_SEL": {
                "bit": 20,
                "description": "Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.",
                "width": 2
              },
              "I2S_RX_CLKM_EN": {
                "bit": 22,
                "description": "Set 1 to enable i2s_rx function clock"
              },
              "I2S_MCLK_SEL": {
                "bit": 23,
                "description": "This field is used to select master-clock. 0(default): clk_i2s_rx, 1: clk_i2s_tx"
              }
            },
            "I2S_RX_CLKM_DIV_CONF": {
              "I2S_RX_CLKM_DIV_Z": {
                "bit": 0,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).",
                "width": 9
              },
              "I2S_RX_CLKM_DIV_Y": {
                "bit": 9,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).",
                "width": 9
              },
              "I2S_RX_CLKM_DIV_X": {
                "bit": 18,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.",
                "width": 9
              },
              "I2S_RX_CLKM_DIV_YN1": {
                "bit": 27,
                "description": "For b <= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1."
              }
            },
            "SARADC_CONF": {
              "SARADC_CLK_EN": {
                "bit": 0,
                "description": "no use"
              },
              "SARADC_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset function_register of saradc module"
              },
              "SARADC_REG_CLK_EN": {
                "bit": 2,
                "description": "Set 1 to enable saradc apb clock"
              },
              "SARADC_REG_RST_EN": {
                "bit": 3,
                "description": "Set 0 to reset apb_register of saradc module"
              }
            },
            "SARADC_CLKM_CONF": {
              "SARADC_CLKM_DIV_A": {
                "bit": 0,
                "description": "The  denominator of the frequency divider factor of the saradc function clock.",
                "width": 6
              },
              "SARADC_CLKM_DIV_B": {
                "bit": 6,
                "description": "The numerator of the frequency divider factor of the saradc function clock.",
                "width": 6
              },
              "SARADC_CLKM_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the saradc function clock.",
                "width": 8
              },
              "SARADC_CLKM_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 240MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "SARADC_CLKM_EN": {
                "bit": 22,
                "description": "Set 1 to enable saradc function clock"
              }
            },
            "TSENS_CLK_CONF": {
              "TSENS_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): FOSC, 1: XTAL."
              },
              "TSENS_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable tsens clock"
              },
              "TSENS_RST_EN": {
                "bit": 23,
                "description": "Set 0 to reset tsens module"
              }
            },
            "USB_DEVICE_CONF": {
              "USB_DEVICE_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable usb_device clock"
              },
              "USB_DEVICE_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset usb_device module"
              },
              "USB_DEVICE_READY": {
                "bit": 2,
                "description": "Query this field after reset usb_device module"
              }
            },
            "INTMTX_CONF": {
              "INTMTX_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable intmtx clock"
              },
              "INTMTX_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset intmtx module"
              },
              "INTMTX_READY": {
                "bit": 2,
                "description": "Query this field after reset intmtx module"
              }
            },
            "PCNT_CONF": {
              "PCNT_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable pcnt clock"
              },
              "PCNT_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset pcnt module"
              },
              "PCNT_READY": {
                "bit": 2,
                "description": "Query this field after reset pcnt module"
              }
            },
            "ETM_CONF": {
              "ETM_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable etm clock"
              },
              "ETM_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset etm module"
              },
              "ETM_READY": {
                "bit": 2,
                "description": "Query this field after reset etm module"
              }
            },
            "PWM_CONF": {
              "PWM_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable pwm clock"
              },
              "PWM_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset pwm module"
              },
              "PWM_READY": {
                "bit": 2,
                "description": "Query this field after reset pwm module"
              }
            },
            "PWM_CLK_CONF": {
              "PWM_DIV_NUM": {
                "bit": 12,
                "description": "The integral part of the frequency divider factor of the pwm function clock.",
                "width": 8
              },
              "PWM_CLKM_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): do not select anyone clock, 1: 160MHz, 2: XTAL, 3: FOSC.",
                "width": 2
              },
              "PWM_CLKM_EN": {
                "bit": 22,
                "description": "set this field as 1 to activate pwm clkm."
              }
            },
            "PARL_IO_CONF": {
              "PARL_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable parl apb clock"
              },
              "PARL_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset parl apb reg"
              },
              "PARL_READY": {
                "bit": 2,
                "description": "Query this field after reset parl module"
              }
            },
            "PARL_CLK_RX_CONF": {
              "PARL_CLK_RX_DIV_NUM": {
                "bit": 0,
                "description": "The integral part of the frequency divider factor of the parl rx clock.",
                "width": 16
              },
              "PARL_CLK_RX_SEL": {
                "bit": 16,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 240MHz, 2: FOSC, 3: user clock from pad.",
                "width": 2
              },
              "PARL_CLK_RX_EN": {
                "bit": 18,
                "description": "Set 1 to enable parl rx clock"
              },
              "PARL_RX_RST_EN": {
                "bit": 19,
                "description": "Set 0 to reset parl rx module"
              }
            },
            "PARL_CLK_TX_CONF": {
              "PARL_CLK_TX_DIV_NUM": {
                "bit": 0,
                "description": "The integral part of the frequency divider factor of the parl tx clock.",
                "width": 16
              },
              "PARL_CLK_TX_SEL": {
                "bit": 16,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 240MHz, 2: FOSC, 3: user clock from pad.",
                "width": 2
              },
              "PARL_CLK_TX_EN": {
                "bit": 18,
                "description": "Set 1 to enable parl tx clock"
              },
              "PARL_TX_RST_EN": {
                "bit": 19,
                "description": "Set 0 to reset parl tx module"
              }
            },
            "PVT_MONITOR_CONF": {
              "PVT_MONITOR_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable apb clock of pvt module"
              },
              "PVT_MONITOR_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset all pvt monitor module"
              },
              "PVT_MONITOR_SITE1_CLK_EN": {
                "bit": 2,
                "description": "Set 1 to enable function clock of modem pvt module"
              },
              "PVT_MONITOR_SITE2_CLK_EN": {
                "bit": 3,
                "description": "Set 1 to enable function clock of cpu pvt module"
              },
              "PVT_MONITOR_SITE3_CLK_EN": {
                "bit": 4,
                "description": "Set 1 to enable function clock of hp_peri pvt module"
              }
            },
            "PVT_MONITOR_FUNC_CLK_CONF": {
              "PVT_MONITOR_FUNC_CLK_DIV_NUM": {
                "bit": 0,
                "description": "The integral part of the frequency divider factor of the pvt_monitor function clock.",
                "width": 4
              },
              "PVT_MONITOR_FUNC_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0: XTAL, 1(default): 160MHz drived by SPLL divided by 3."
              },
              "PVT_MONITOR_FUNC_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable source clock of pvt sitex"
              }
            },
            "GDMA_CONF": {
              "GDMA_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable gdma clock"
              },
              "GDMA_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset gdma module"
              }
            },
            "SPI2_CONF": {
              "SPI2_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable spi2 apb clock"
              },
              "SPI2_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset spi2 module"
              },
              "SPI2_READY": {
                "bit": 2,
                "description": "Query this field after reset spi2 module"
              }
            },
            "SPI2_CLKM_CONF": {
              "SPI2_CLKM_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0(default): XTAL, 1: 80MHz, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "SPI2_CLKM_EN": {
                "bit": 22,
                "description": "Set 1 to enable spi2 function clock"
              }
            },
            "AES_CONF": {
              "AES_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable aes clock"
              },
              "AES_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset aes module"
              },
              "AES_READY": {
                "bit": 2,
                "description": "Query this field after reset aes module"
              }
            },
            "SHA_CONF": {
              "SHA_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable sha clock"
              },
              "SHA_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset sha module"
              },
              "SHA_READY": {
                "bit": 2,
                "description": "Query this field after reset sha module"
              }
            },
            "RSA_CONF": {
              "RSA_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable rsa clock"
              },
              "RSA_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset rsa module"
              },
              "RSA_READY": {
                "bit": 2,
                "description": "Query this field after reset rsa module"
              }
            },
            "RSA_PD_CTRL": {
              "RSA_MEM_PD": {
                "bit": 0,
                "description": "Set this bit to power down rsa internal memory."
              },
              "RSA_MEM_FORCE_PU": {
                "bit": 1,
                "description": "Set this bit to force power up rsa internal memory"
              },
              "RSA_MEM_FORCE_PD": {
                "bit": 2,
                "description": "Set this bit to force power down rsa internal memory."
              }
            },
            "ECC_CONF": {
              "ECC_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable ecc clock"
              },
              "ECC_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset ecc module"
              },
              "ECC_READY": {
                "bit": 2,
                "description": "Query this field after reset ecc module"
              }
            },
            "ECC_PD_CTRL": {
              "ECC_MEM_PD": {
                "bit": 0,
                "description": "Set this bit to power down ecc internal memory."
              },
              "ECC_MEM_FORCE_PU": {
                "bit": 1,
                "description": "Set this bit to force power up ecc internal memory"
              },
              "ECC_MEM_FORCE_PD": {
                "bit": 2,
                "description": "Set this bit to force power down ecc internal memory."
              }
            },
            "DS_CONF": {
              "DS_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable ds clock"
              },
              "DS_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset ds module"
              },
              "DS_READY": {
                "bit": 2,
                "description": "Query this field after reset ds module"
              }
            },
            "HMAC_CONF": {
              "HMAC_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable hmac clock"
              },
              "HMAC_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset hmac module"
              },
              "HMAC_READY": {
                "bit": 2,
                "description": "Query this field after reset hmac module"
              }
            },
            "ECDSA_CONF": {
              "ECDSA_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable ecdsa clock"
              },
              "ECDSA_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset ecdsa module"
              },
              "ECDSA_READY": {
                "bit": 2,
                "description": "Query this field after reset ecdsa module"
              }
            },
            "IOMUX_CONF": {
              "IOMUX_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable iomux apb clock"
              },
              "IOMUX_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset iomux module"
              }
            },
            "IOMUX_CLK_CONF": {
              "IOMUX_FUNC_CLK_SEL": {
                "bit": 20,
                "description": "set this field to select clock-source. 0: do not select anyone clock, 1: 80MHz, 2: FOSC, 3(default): XTAL.",
                "width": 2
              },
              "IOMUX_FUNC_CLK_EN": {
                "bit": 22,
                "description": "Set 1 to enable iomux function clock"
              }
            },
            "MEM_MONITOR_CONF": {
              "MEM_MONITOR_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable mem_monitor clock"
              },
              "MEM_MONITOR_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset mem_monitor module"
              },
              "MEM_MONITOR_READY": {
                "bit": 2,
                "description": "Query this field after reset mem_monitor module"
              }
            },
            "REGDMA_CONF": {
              "REGDMA_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable regdma clock"
              },
              "REGDMA_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset regdma module"
              }
            },
            "TRACE_CONF": {
              "TRACE_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable trace clock"
              },
              "TRACE_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset trace module"
              }
            },
            "ASSIST_CONF": {
              "ASSIST_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable assist clock"
              },
              "ASSIST_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset assist module"
              }
            },
            "CACHE_CONF": {
              "CACHE_CLK_EN": {
                "bit": 0,
                "description": "Set 1 to enable cache clock"
              },
              "CACHE_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset cache module"
              }
            },
            "MODEM_CONF": {
              "MODEM_CLK_SEL": {
                "bit": 0,
                "description": "xxxx"
              },
              "MODEM_CLK_EN": {
                "bit": 1,
                "description": "xxxx"
              },
              "MODEM_RST_EN": {
                "bit": 2,
                "description": "Set this file as 1 to reset modem-subsystem."
              }
            },
            "TIMEOUT_CONF": {
              "CPU_TIMEOUT_RST_EN": {
                "bit": 1,
                "description": "Set 0 to reset cpu_peri timeout module"
              },
              "HP_TIMEOUT_RST_EN": {
                "bit": 2,
                "description": "Set 0 to reset hp_peri timeout module and hp_modem timeout module"
              }
            },
            "SYSCLK_CONF": {
              "LS_DIV_NUM": {
                "bit": 0,
                "description": "clk_hproot is div1 of low-speed clock-source if clck-source is a low-speed clock-source such as XTAL/FOSC.",
                "width": 8
              },
              "HS_DIV_NUM": {
                "bit": 8,
                "description": "clk_hproot is div3 of SPLL if the clock-source is high-speed clock SPLL.",
                "width": 8
              },
              "SOC_CLK_SEL": {
                "bit": 16,
                "description": "This field is used to select clock source. 0: XTAL, 1: SPLL, 2: FOSC, 3: reserved.",
                "width": 2
              },
              "CLK_XTAL_FREQ": {
                "bit": 24,
                "description": "This field indicates the frequency(MHz) of XTAL.",
                "width": 7
              }
            },
            "CPU_WAITI_CONF": {
              "CPUPERIOD_SEL": {
                "bit": 0,
                "description": "Reserved. This filed has been replaced by PCR_CPU_DIV_NUM",
                "width": 2
              },
              "PLL_FREQ_SEL": {
                "bit": 2,
                "description": "Reserved. This filed has been replaced by PCR_CPU_DIV_NUM"
              },
              "CPU_WAIT_MODE_FORCE_ON": {
                "bit": 3,
                "description": "Set 1 to force cpu_waiti_clk enable."
              },
              "CPU_WAITI_DELAY_NUM": {
                "bit": 4,
                "description": "This field used to set delay cycle when cpu enter waiti mode, after delay waiti_clk will close",
                "width": 4
              }
            },
            "CPU_FREQ_CONF": {
              "CPU_DIV_NUM": {
                "bit": 0,
                "description": "Set this field to generate clk_cpu drived by clk_hproot. The clk_cpu is div1(default)/div2/div4 of clk_hproot. This field is only avaliable for low-speed clock-source such as XTAL/FOSC, and should be used together with PCR_AHB_DIV_NUM.",
                "width": 8
              }
            },
            "AHB_FREQ_CONF": {
              "AHB_DIV_NUM": {
                "bit": 0,
                "description": "Set this field to generate clk_ahb drived by clk_hproot. The clk_ahb is div1(default)/div2/div4/div8 of clk_hproot. This field is only avaliable for low-speed clock-source such as XTAL/FOSC, and should be used together with PCR_CPU_DIV_NUM.",
                "width": 8
              }
            },
            "APB_FREQ_CONF": {
              "APB_DECREASE_DIV_NUM": {
                "bit": 0,
                "description": "If this field's value is grater than PCR_APB_DIV_NUM, the clk_apb will be automatically down to clk_apb_decrease only when no access is on apb-bus, and will recover to the previous frequency when a new access appears on apb-bus. Set as one within (0,1,3) to set clk_apb_decrease as div1/div2/div4(default) of clk_ahb. Note that enable this function will reduce performance. Users can set this field as zero to disable the auto-decrease-apb-freq function. By default, this function is disable.",
                "width": 8
              },
              "APB_DIV_NUM": {
                "bit": 8,
                "description": "Set as one within (0,1,3) to generate clk_apb drived by clk_ahb. The clk_apb is div1(default)/div2/div4 of clk_ahb.",
                "width": 8
              }
            },
            "SYSCLK_FREQ_QUERY_0": {
              "FOSC_FREQ": {
                "bit": 0,
                "description": "This field indicates the frequency(MHz) of FOSC.",
                "width": 8
              },
              "PLL_FREQ": {
                "bit": 8,
                "description": "This field indicates the frequency(MHz) of SPLL.",
                "width": 10
              }
            },
            "PLL_DIV_CLK_EN": {
              "PLL_240M_CLK_EN": {
                "bit": 0,
                "description": "This field is used to open 96 MHz clock (SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              },
              "PLL_160M_CLK_EN": {
                "bit": 1,
                "description": "This field is used to open 64 MHz clock (div3 of SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              },
              "PLL_120M_CLK_EN": {
                "bit": 2,
                "description": "This field is used to open 48 MHz clock (div4 of SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              },
              "PLL_80M_CLK_EN": {
                "bit": 3,
                "description": "This field is used to open 32 MHz clock (div6  of SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              },
              "PLL_48M_CLK_EN": {
                "bit": 4,
                "description": "This field is used to open 16 MHz clock (div10 of SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              },
              "PLL_40M_CLK_EN": {
                "bit": 5,
                "description": "This field is used to open 8 MHz clock (div12 of SPLL) drived from SPLL. 0: close, 1: open(default). Only avaliable when high-speed clock-source SPLL is active."
              }
            },
            "CTRL_CLK_OUT_EN": {
              "CLK8_OEN": {
                "bit": 0,
                "description": "Set 1 to enable 8m clock"
              },
              "CLK16_OEN": {
                "bit": 1,
                "description": "Set 1 to enable 16m clock"
              },
              "CLK32_OEN": {
                "bit": 2,
                "description": "Set 1 to enable 32m clock"
              },
              "CLK_ADC_INF_OEN": {
                "bit": 3,
                "description": "Reserved"
              },
              "CLK_DFM_INF_OEN": {
                "bit": 4,
                "description": "Reserved"
              },
              "CLK_SDM_MOD_OEN": {
                "bit": 5,
                "description": "Reserved"
              },
              "CLK_XTAL_OEN": {
                "bit": 6,
                "description": "Set 1 to enable xtal clock"
              }
            },
            "CTRL_TICK_CONF": {
              "XTAL_TICK_NUM": {
                "bit": 0,
                "description": "******* Description ***********",
                "width": 8
              },
              "FOSC_TICK_NUM": {
                "bit": 8,
                "description": "******* Description ***********",
                "width": 8
              },
              "TICK_ENABLE": {
                "bit": 16,
                "description": "******* Description ***********"
              },
              "RST_TICK_CNT": {
                "bit": 17,
                "description": "******* Description ***********"
              }
            },
            "CTRL_32K_CONF": {
              "CLK_32K_SEL": {
                "bit": 0,
                "description": "This field indicates which one 32KHz clock will be used by timergroup. 0: OSC32K(default), 1: XTAL32K, 2/3: 32KHz from pad GPIO0.",
                "width": 2
              },
              "_32K_MODEM_SEL": {
                "bit": 2,
                "description": "This field indicates which one 32KHz clock will be used by MODEM_SYSTEM. 0: OSC32K(default), 1: XTAL32K, 2/3: 32KHz from pad GPIO0.",
                "width": 2
              }
            },
            "SRAM_POWER_CONF_0": {
              "ROM_FORCE_PU": {
                "bit": 13,
                "description": "Set this bit to force power up ROM",
                "width": 2
              },
              "ROM_FORCE_PD": {
                "bit": 15,
                "description": "Set this bit to force power down ROM.",
                "width": 2
              },
              "ROM_CLKGATE_FORCE_ON": {
                "bit": 17,
                "description": "1: Force to open the clock and bypass the gate-clock when accessing the ROM. 0: A gate-clock will be used when accessing the ROM.",
                "width": 2
              }
            },
            "SRAM_POWER_CONF_1": {
              "SRAM_FORCE_PU": {
                "bit": 0,
                "description": "Set this bit to force power up SRAM",
                "width": 5
              },
              "SRAM_FORCE_PD": {
                "bit": 10,
                "description": "Set this bit to force power down SRAM.",
                "width": 5
              },
              "SRAM_CLKGATE_FORCE_ON": {
                "bit": 25,
                "description": "1: Force to open the clock and bypass the gate-clock when accessing the SRAM. 0: A gate-clock will be used when accessing the SRAM.",
                "width": 5
              }
            },
            "SEC_CONF": {
              "SEC_CLK_SEL": {
                "bit": 0,
                "description": "xxxx",
                "width": 2
              }
            },
            "ADC_INV_PHASE_CONF": {
              "CLK_ADC_INV_PHASE_ENA": {
                "bit": 0,
                "description": "xxxx"
              }
            },
            "SDM_INV_PHASE_CONF": {
              "CLK_SDM_INV_PHASE_ENA": {
                "bit": 0,
                "description": "xxxx"
              },
              "CLK_SDM_INV_PHASE_SEL": {
                "bit": 1,
                "description": "xxxx",
                "width": 3
              }
            },
            "BUS_CLK_UPDATE": {
              "BUS_CLOCK_UPDATE": {
                "bit": 0,
                "description": "xxxx"
              }
            },
            "SAR_CLK_DIV": {
              "SAR2_CLK_DIV_NUM": {
                "bit": 0,
                "description": "xxxx",
                "width": 8
              },
              "SAR1_CLK_DIV_NUM": {
                "bit": 8,
                "description": "xxxx",
                "width": 8
              }
            },
            "PWDET_SAR_CLK_CONF": {
              "PWDET_SAR_CLK_DIV_NUM": {
                "bit": 0,
                "description": "xxxx",
                "width": 8
              },
              "PWDET_SAR_READER_EN": {
                "bit": 8,
                "description": "xxxx"
              }
            },
            "RESET_EVENT_BYPASS": {
              "APM": {
                "bit": 0,
                "description": "This field is used to control reset event relationship for tee_reg/apm_reg/hp_system_reg. 1: tee_reg/apm_reg/hp_system_reg will only be reset by power-reset. some reset event will be bypass. 0: tee_reg/apm_reg/hp_system_reg will not only be reset by power-reset, but also some reset event."
              },
              "RESET_EVENT_BYPASS": {
                "bit": 1,
                "description": "This field is used to control reset event relationship for system-bus. 1: system bus (including arbiter/router) will only be reset by power-reset. some reset event will be bypass. 0: system bus (including arbiter/router) will not only be reset by power-reset, but also some reset event."
              }
            },
            "FPGA_DEBUG": {
              "FPGA_DEBUG": {
                "bit": 0,
                "description": "Only used in fpga debug.",
                "width": 32
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "Set this bit as 1 to force on clock gating."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "PCR version information.",
                "width": 28
              }
            }
          }
        },
        "PMU": {
          "instances": [
            {
              "name": "PMU",
              "base": "0x600B0000",
              "irq": 0
            }
          ],
          "registers": {
            "HP_ACTIVE_DIG_POWER": {
              "offset": "0x00",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_ICG_HP_FUNC": {
              "offset": "0x04",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_ICG_HP_APB": {
              "offset": "0x08",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_ICG_MODEM": {
              "offset": "0x0C",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_HP_SYS_CNTL": {
              "offset": "0x10",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_HP_CK_POWER": {
              "offset": "0x14",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_BIAS": {
              "offset": "0x18",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_BACKUP": {
              "offset": "0x1C",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_BACKUP_CLK": {
              "offset": "0x20",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_SYSCLK": {
              "offset": "0x24",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_HP_REGULATOR0": {
              "offset": "0x28",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_HP_REGULATOR1": {
              "offset": "0x2C",
              "size": 32,
              "description": "need_des"
            },
            "HP_ACTIVE_XTAL": {
              "offset": "0x30",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_DIG_POWER": {
              "offset": "0x34",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_ICG_HP_FUNC": {
              "offset": "0x38",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_ICG_HP_APB": {
              "offset": "0x3C",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_ICG_MODEM": {
              "offset": "0x40",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_HP_SYS_CNTL": {
              "offset": "0x44",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_HP_CK_POWER": {
              "offset": "0x48",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_BIAS": {
              "offset": "0x4C",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_BACKUP": {
              "offset": "0x50",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_BACKUP_CLK": {
              "offset": "0x54",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_SYSCLK": {
              "offset": "0x58",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_HP_REGULATOR0": {
              "offset": "0x5C",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_HP_REGULATOR1": {
              "offset": "0x60",
              "size": 32,
              "description": "need_des"
            },
            "HP_MODEM_XTAL": {
              "offset": "0x64",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_DIG_POWER": {
              "offset": "0x68",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_ICG_HP_FUNC": {
              "offset": "0x6C",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_ICG_HP_APB": {
              "offset": "0x70",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_ICG_MODEM": {
              "offset": "0x74",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_HP_SYS_CNTL": {
              "offset": "0x78",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_HP_CK_POWER": {
              "offset": "0x7C",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_BIAS": {
              "offset": "0x80",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_BACKUP": {
              "offset": "0x84",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_BACKUP_CLK": {
              "offset": "0x88",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_SYSCLK": {
              "offset": "0x8C",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_HP_REGULATOR0": {
              "offset": "0x90",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_HP_REGULATOR1": {
              "offset": "0x94",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_XTAL": {
              "offset": "0x98",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_LP_REGULATOR0": {
              "offset": "0x9C",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_LP_REGULATOR1": {
              "offset": "0xA0",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_LP_DCDC_RESERVE": {
              "offset": "0xA4",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_LP_DIG_POWER": {
              "offset": "0xA8",
              "size": 32,
              "description": "need_des"
            },
            "HP_SLEEP_LP_CK_POWER": {
              "offset": "0xAC",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_LP_BIAS_RESERVE": {
              "offset": "0xB0",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_LP_REGULATOR0": {
              "offset": "0xB4",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_LP_REGULATOR1": {
              "offset": "0xB8",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_XTAL": {
              "offset": "0xBC",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_LP_DIG_POWER": {
              "offset": "0xC0",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_LP_CK_POWER": {
              "offset": "0xC4",
              "size": 32,
              "description": "need_des"
            },
            "LP_SLEEP_BIAS": {
              "offset": "0xC8",
              "size": 32,
              "description": "need_des"
            },
            "IMM_HP_CK_POWER": {
              "offset": "0xCC",
              "size": 32,
              "description": "need_des"
            },
            "IMM_SLEEP_SYSCLK": {
              "offset": "0xD0",
              "size": 32,
              "description": "need_des"
            },
            "IMM_HP_FUNC_ICG": {
              "offset": "0xD4",
              "size": 32,
              "description": "need_des"
            },
            "IMM_HP_APB_ICG": {
              "offset": "0xD8",
              "size": 32,
              "description": "need_des"
            },
            "IMM_MODEM_ICG": {
              "offset": "0xDC",
              "size": 32,
              "description": "need_des"
            },
            "IMM_LP_ICG": {
              "offset": "0xE0",
              "size": 32,
              "description": "need_des"
            },
            "IMM_PAD_HOLD_ALL": {
              "offset": "0xE4",
              "size": 32,
              "description": "need_des"
            },
            "IMM_I2C_ISO": {
              "offset": "0xE8",
              "size": 32,
              "description": "need_des"
            },
            "POWER_WAIT_TIMER0": {
              "offset": "0xEC",
              "size": 32,
              "description": "need_des"
            },
            "POWER_WAIT_TIMER1": {
              "offset": "0xF0",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_TOP_CNTL": {
              "offset": "0xF4",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_HPAON_CNTL": {
              "offset": "0xF8",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_HPCPU_CNTL": {
              "offset": "0xFC",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_HPPERI_RESERVE": {
              "offset": "0x100",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_HPWIFI_CNTL": {
              "offset": "0x104",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_LPPERI_CNTL": {
              "offset": "0x108",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_MEM_CNTL": {
              "offset": "0x10C",
              "size": 32,
              "description": "need_des"
            },
            "POWER_PD_MEM_MASK": {
              "offset": "0x110",
              "size": 32,
              "description": "need_des"
            },
            "POWER_HP_PAD": {
              "offset": "0x114",
              "size": 32,
              "description": "need_des"
            },
            "POWER_VDD_SPI_CNTL": {
              "offset": "0x118",
              "size": 32,
              "description": "need_des"
            },
            "POWER_CK_WAIT_CNTL": {
              "offset": "0x11C",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL0": {
              "offset": "0x120",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL1": {
              "offset": "0x124",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL2": {
              "offset": "0x128",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL3": {
              "offset": "0x12C",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL4": {
              "offset": "0x130",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL5": {
              "offset": "0x134",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL6": {
              "offset": "0x138",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_CNTL7": {
              "offset": "0x13C",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_STATUS0": {
              "offset": "0x140",
              "size": 32,
              "description": "need_des"
            },
            "SLP_WAKEUP_STATUS1": {
              "offset": "0x144",
              "size": 32,
              "description": "need_des"
            },
            "HP_CK_POWERON": {
              "offset": "0x148",
              "size": 32,
              "description": "need_des"
            },
            "HP_CK_CNTL": {
              "offset": "0x14C",
              "size": 32,
              "description": "need_des"
            },
            "POR_STATUS": {
              "offset": "0x150",
              "size": 32,
              "description": "need_des"
            },
            "RF_PWC": {
              "offset": "0x154",
              "size": 32,
              "description": "need_des"
            },
            "VDDBAT_CFG": {
              "offset": "0x158",
              "size": 32,
              "description": "need_des"
            },
            "BACKUP_CFG": {
              "offset": "0x15C",
              "size": 32,
              "description": "need_des"
            },
            "INT_RAW": {
              "offset": "0x160",
              "size": 32,
              "description": "need_des"
            },
            "HP_INT_ST": {
              "offset": "0x164",
              "size": 32,
              "description": "need_des"
            },
            "HP_INT_ENA": {
              "offset": "0x168",
              "size": 32,
              "description": "need_des"
            },
            "HP_INT_CLR": {
              "offset": "0x16C",
              "size": 32,
              "description": "need_des"
            },
            "LP_INT_RAW": {
              "offset": "0x170",
              "size": 32,
              "description": "need_des"
            },
            "LP_INT_ST": {
              "offset": "0x174",
              "size": 32,
              "description": "need_des"
            },
            "LP_INT_ENA": {
              "offset": "0x178",
              "size": 32,
              "description": "need_des"
            },
            "LP_INT_CLR": {
              "offset": "0x17C",
              "size": 32,
              "description": "need_des"
            },
            "LP_CPU_PWR0": {
              "offset": "0x180",
              "size": 32,
              "description": "need_des"
            },
            "LP_CPU_PWR1": {
              "offset": "0x184",
              "size": 32,
              "description": "need_des"
            },
            "HP_LP_CPU_COMM": {
              "offset": "0x188",
              "size": 32,
              "description": "need_des"
            },
            "HP_REGULATOR_CFG": {
              "offset": "0x18C",
              "size": 32,
              "description": "need_des"
            },
            "MAIN_STATE": {
              "offset": "0x190",
              "size": 32,
              "description": "need_des"
            },
            "PWR_STATE": {
              "offset": "0x194",
              "size": 32,
              "description": "need_des"
            },
            "CLK_STATE0": {
              "offset": "0x198",
              "size": 32,
              "description": "need_des"
            },
            "CLK_STATE1": {
              "offset": "0x19C",
              "size": 32,
              "description": "need_des"
            },
            "CLK_STATE2": {
              "offset": "0x1A0",
              "size": 32,
              "description": "need_des"
            },
            "VDD_SPI_STATUS": {
              "offset": "0x1A4",
              "size": 32,
              "description": "need_des"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "need_des"
            }
          },
          "bits": {
            "HP_ACTIVE_DIG_POWER": {
              "HP_ACTIVE_VDD_SPI_PD_EN": {
                "bit": 21,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_MEM_DSLP": {
                "bit": 22,
                "description": "need_des"
              },
              "HP_ACTIVE_PD_HP_MEM_PD_EN": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_ACTIVE_PD_HP_WIFI_PD_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_ACTIVE_PD_HP_CPU_PD_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_ACTIVE_PD_HP_AON_PD_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_ACTIVE_PD_TOP_PD_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_ACTIVE_ICG_HP_FUNC": {
              "HP_ACTIVE_DIG_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_ACTIVE_ICG_HP_APB": {
              "HP_ACTIVE_DIG_ICG_APB_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_ACTIVE_ICG_MODEM": {
              "HP_ACTIVE_DIG_ICG_MODEM_CODE": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_ACTIVE_HP_SYS_CNTL": {
              "HP_ACTIVE_UART_WAKEUP_EN": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_ACTIVE_LP_PAD_HOLD_ALL": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_PAD_HOLD_ALL": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_ACTIVE_DIG_PAD_SLP_SEL": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_ACTIVE_DIG_PAUSE_WDT": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_ACTIVE_DIG_CPU_STALL": {
                "bit": 29,
                "description": "need_des"
              }
            },
            "HP_ACTIVE_HP_CK_POWER": {
              "HP_ACTIVE_I2C_ISO_EN": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_ACTIVE_I2C_RETENTION": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_ACTIVE_XPD_BB_I2C": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_ACTIVE_XPD_BBPLL_I2C": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_ACTIVE_XPD_BBPLL": {
                "bit": 30,
                "description": "need_des"
              }
            },
            "HP_ACTIVE_BIAS": {
              "HP_ACTIVE_XPD_TRX": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_ACTIVE_XPD_BIAS": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_ACTIVE_PD_CUR": {
                "bit": 30,
                "description": "need_des"
              },
              "SLEEP": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_ACTIVE_BACKUP": {
              "HP_SLEEP2ACTIVE_BACKUP_MODEM_CLK_CODE": {
                "bit": 4,
                "description": "need_des",
                "width": 2
              },
              "HP_MODEM2ACTIVE_BACKUP_MODEM_CLK_CODE": {
                "bit": 6,
                "description": "need_des",
                "width": 2
              },
              "HP_ACTIVE_RETENTION_MODE": {
                "bit": 10,
                "description": "need_des"
              },
              "HP_SLEEP2ACTIVE_RETENTION_EN": {
                "bit": 11,
                "description": "need_des"
              },
              "HP_MODEM2ACTIVE_RETENTION_EN": {
                "bit": 12,
                "description": "need_des"
              },
              "HP_SLEEP2ACTIVE_BACKUP_CLK_SEL": {
                "bit": 14,
                "description": "need_des",
                "width": 2
              },
              "HP_MODEM2ACTIVE_BACKUP_CLK_SEL": {
                "bit": 16,
                "description": "need_des",
                "width": 2
              },
              "HP_SLEEP2ACTIVE_BACKUP_MODE": {
                "bit": 20,
                "description": "need_des",
                "width": 3
              },
              "HP_MODEM2ACTIVE_BACKUP_MODE": {
                "bit": 23,
                "description": "need_des",
                "width": 3
              },
              "HP_SLEEP2ACTIVE_BACKUP_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_MODEM2ACTIVE_BACKUP_EN": {
                "bit": 30,
                "description": "need_des"
              }
            },
            "HP_ACTIVE_BACKUP_CLK": {
              "HP_ACTIVE_BACKUP_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_ACTIVE_SYSCLK": {
              "HP_ACTIVE_DIG_SYS_CLK_NO_DIV": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_ACTIVE_ICG_SYS_CLOCK_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_ACTIVE_SYS_CLK_SLP_SEL": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_ACTIVE_ICG_SLP_SEL": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_ACTIVE_DIG_SYS_CLK_SEL": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_ACTIVE_HP_REGULATOR0": {
              "HP_ACTIVE_HP_POWER_DET_BYPASS": {
                "bit": 0,
                "description": "need_des"
              },
              "LP_DBIAS_VOL": {
                "bit": 4,
                "description": "need_des",
                "width": 5
              },
              "HP_DBIAS_VOL": {
                "bit": 9,
                "description": "need_des",
                "width": 5
              },
              "DIG_REGULATOR0_DBIAS_SEL": {
                "bit": 14,
                "description": "need_des"
              },
              "DIG_DBIAS_INIT": {
                "bit": 15,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_REGULATOR_SLP_MEM_XPD": {
                "bit": 16,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_REGULATOR_SLP_LOGIC_XPD": {
                "bit": 17,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_REGULATOR_XPD": {
                "bit": 18,
                "description": "need_des"
              },
              "HP_ACTIVE_HP_REGULATOR_SLP_MEM_DBIAS": {
                "bit": 19,
                "description": "need_des",
                "width": 4
              },
              "HP_ACTIVE_HP_REGULATOR_SLP_LOGIC_DBIAS": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_ACTIVE_HP_REGULATOR_DBIAS": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "HP_ACTIVE_HP_REGULATOR1": {
              "HP_ACTIVE_HP_REGULATOR_DRV_B": {
                "bit": 8,
                "description": "need_des",
                "width": 24
              }
            },
            "HP_ACTIVE_XTAL": {
              "HP_ACTIVE_XPD_XTAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_MODEM_DIG_POWER": {
              "HP_MODEM_VDD_SPI_PD_EN": {
                "bit": 21,
                "description": "need_des"
              },
              "HP_MODEM_HP_MEM_DSLP": {
                "bit": 22,
                "description": "need_des"
              },
              "HP_MODEM_PD_HP_MEM_PD_EN": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_MODEM_PD_HP_WIFI_PD_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_MODEM_PD_HP_CPU_PD_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_MODEM_PD_HP_AON_PD_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_MODEM_PD_TOP_PD_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_MODEM_ICG_HP_FUNC": {
              "HP_MODEM_DIG_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_MODEM_ICG_HP_APB": {
              "HP_MODEM_DIG_ICG_APB_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_MODEM_ICG_MODEM": {
              "HP_MODEM_DIG_ICG_MODEM_CODE": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_MODEM_HP_SYS_CNTL": {
              "HP_MODEM_UART_WAKEUP_EN": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_MODEM_LP_PAD_HOLD_ALL": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_MODEM_HP_PAD_HOLD_ALL": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_MODEM_DIG_PAD_SLP_SEL": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_MODEM_DIG_PAUSE_WDT": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_MODEM_DIG_CPU_STALL": {
                "bit": 29,
                "description": "need_des"
              }
            },
            "HP_MODEM_HP_CK_POWER": {
              "HP_MODEM_I2C_ISO_EN": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_MODEM_I2C_RETENTION": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_MODEM_XPD_BB_I2C": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_MODEM_XPD_BBPLL_I2C": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_MODEM_XPD_BBPLL": {
                "bit": 30,
                "description": "need_des"
              }
            },
            "HP_MODEM_BIAS": {
              "HP_MODEM_XPD_TRX": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_MODEM_XPD_BIAS": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_MODEM_PD_CUR": {
                "bit": 30,
                "description": "need_des"
              },
              "SLEEP": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_MODEM_BACKUP": {
              "HP_SLEEP2MODEM_BACKUP_MODEM_CLK_CODE": {
                "bit": 4,
                "description": "need_des",
                "width": 2
              },
              "HP_MODEM_RETENTION_MODE": {
                "bit": 10,
                "description": "need_des"
              },
              "HP_SLEEP2MODEM_RETENTION_EN": {
                "bit": 11,
                "description": "need_des"
              },
              "HP_SLEEP2MODEM_BACKUP_CLK_SEL": {
                "bit": 14,
                "description": "need_des",
                "width": 2
              },
              "HP_SLEEP2MODEM_BACKUP_MODE": {
                "bit": 20,
                "description": "need_des",
                "width": 3
              },
              "HP_SLEEP2MODEM_BACKUP_EN": {
                "bit": 29,
                "description": "need_des"
              }
            },
            "HP_MODEM_BACKUP_CLK": {
              "HP_MODEM_BACKUP_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_MODEM_SYSCLK": {
              "HP_MODEM_DIG_SYS_CLK_NO_DIV": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_MODEM_ICG_SYS_CLOCK_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_MODEM_SYS_CLK_SLP_SEL": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_MODEM_ICG_SLP_SEL": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_MODEM_DIG_SYS_CLK_SEL": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_MODEM_HP_REGULATOR0": {
              "HP_MODEM_HP_POWER_DET_BYPASS": {
                "bit": 0,
                "description": "need_des"
              },
              "HP_MODEM_HP_REGULATOR_SLP_MEM_XPD": {
                "bit": 16,
                "description": "need_des"
              },
              "HP_MODEM_HP_REGULATOR_SLP_LOGIC_XPD": {
                "bit": 17,
                "description": "need_des"
              },
              "HP_MODEM_HP_REGULATOR_XPD": {
                "bit": 18,
                "description": "need_des"
              },
              "HP_MODEM_HP_REGULATOR_SLP_MEM_DBIAS": {
                "bit": 19,
                "description": "need_des",
                "width": 4
              },
              "HP_MODEM_HP_REGULATOR_SLP_LOGIC_DBIAS": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_MODEM_HP_REGULATOR_DBIAS": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "HP_MODEM_HP_REGULATOR1": {
              "HP_MODEM_HP_REGULATOR_DRV_B": {
                "bit": 8,
                "description": "need_des",
                "width": 24
              }
            },
            "HP_MODEM_XTAL": {
              "HP_MODEM_XPD_XTAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_DIG_POWER": {
              "HP_SLEEP_VDD_SPI_PD_EN": {
                "bit": 21,
                "description": "need_des"
              },
              "HP_SLEEP_HP_MEM_DSLP": {
                "bit": 22,
                "description": "need_des"
              },
              "HP_SLEEP_PD_HP_MEM_PD_EN": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_SLEEP_PD_HP_WIFI_PD_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_PD_HP_CPU_PD_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_SLEEP_PD_HP_AON_PD_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SLEEP_PD_TOP_PD_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_ICG_HP_FUNC": {
              "HP_SLEEP_DIG_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_SLEEP_ICG_HP_APB": {
              "HP_SLEEP_DIG_ICG_APB_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_SLEEP_ICG_MODEM": {
              "HP_SLEEP_DIG_ICG_MODEM_CODE": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_SLEEP_HP_SYS_CNTL": {
              "HP_SLEEP_UART_WAKEUP_EN": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_SLEEP_LP_PAD_HOLD_ALL": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_SLEEP_HP_PAD_HOLD_ALL": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_SLEEP_DIG_PAD_SLP_SEL": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_DIG_PAUSE_WDT": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_SLEEP_DIG_CPU_STALL": {
                "bit": 29,
                "description": "need_des"
              }
            },
            "HP_SLEEP_HP_CK_POWER": {
              "HP_SLEEP_I2C_ISO_EN": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_SLEEP_I2C_RETENTION": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_BB_I2C": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_BBPLL_I2C": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_BBPLL": {
                "bit": 30,
                "description": "need_des"
              }
            },
            "HP_SLEEP_BIAS": {
              "HP_SLEEP_XPD_TRX": {
                "bit": 24,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_BIAS": {
                "bit": 25,
                "description": "need_des"
              },
              "HP_SLEEP_PD_CUR": {
                "bit": 30,
                "description": "need_des"
              },
              "SLEEP": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_BACKUP": {
              "HP_MODEM2SLEEP_BACKUP_MODEM_CLK_CODE": {
                "bit": 6,
                "description": "need_des",
                "width": 2
              },
              "HP_ACTIVE2SLEEP_BACKUP_MODEM_CLK_CODE": {
                "bit": 8,
                "description": "need_des",
                "width": 2
              },
              "HP_SLEEP_RETENTION_MODE": {
                "bit": 10,
                "description": "need_des"
              },
              "HP_MODEM2SLEEP_RETENTION_EN": {
                "bit": 12,
                "description": "need_des"
              },
              "HP_ACTIVE2SLEEP_RETENTION_EN": {
                "bit": 13,
                "description": "need_des"
              },
              "HP_MODEM2SLEEP_BACKUP_CLK_SEL": {
                "bit": 16,
                "description": "need_des",
                "width": 2
              },
              "HP_ACTIVE2SLEEP_BACKUP_CLK_SEL": {
                "bit": 18,
                "description": "need_des",
                "width": 2
              },
              "HP_MODEM2SLEEP_BACKUP_MODE": {
                "bit": 23,
                "description": "need_des",
                "width": 3
              },
              "HP_ACTIVE2SLEEP_BACKUP_MODE": {
                "bit": 26,
                "description": "need_des",
                "width": 3
              },
              "HP_MODEM2SLEEP_BACKUP_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_ACTIVE2SLEEP_BACKUP_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_BACKUP_CLK": {
              "HP_SLEEP_BACKUP_ICG_FUNC_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_SLEEP_SYSCLK": {
              "HP_SLEEP_DIG_SYS_CLK_NO_DIV": {
                "bit": 26,
                "description": "need_des"
              },
              "HP_SLEEP_ICG_SYS_CLOCK_EN": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_SYS_CLK_SLP_SEL": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_SLEEP_ICG_SLP_SEL": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_SLEEP_DIG_SYS_CLK_SEL": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "HP_SLEEP_HP_REGULATOR0": {
              "HP_SLEEP_HP_POWER_DET_BYPASS": {
                "bit": 0,
                "description": "need_des"
              },
              "HP_SLEEP_HP_REGULATOR_SLP_MEM_XPD": {
                "bit": 16,
                "description": "need_des"
              },
              "HP_SLEEP_HP_REGULATOR_SLP_LOGIC_XPD": {
                "bit": 17,
                "description": "need_des"
              },
              "HP_SLEEP_HP_REGULATOR_XPD": {
                "bit": 18,
                "description": "need_des"
              },
              "HP_SLEEP_HP_REGULATOR_SLP_MEM_DBIAS": {
                "bit": 19,
                "description": "need_des",
                "width": 4
              },
              "HP_SLEEP_HP_REGULATOR_SLP_LOGIC_DBIAS": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_SLEEP_HP_REGULATOR_DBIAS": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "HP_SLEEP_HP_REGULATOR1": {
              "HP_SLEEP_HP_REGULATOR_DRV_B": {
                "bit": 8,
                "description": "need_des",
                "width": 24
              }
            },
            "HP_SLEEP_XTAL": {
              "HP_SLEEP_XPD_XTAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_LP_REGULATOR0": {
              "HP_SLEEP_LP_REGULATOR_SLP_XPD": {
                "bit": 21,
                "description": "need_des"
              },
              "HP_SLEEP_LP_REGULATOR_XPD": {
                "bit": 22,
                "description": "need_des"
              },
              "HP_SLEEP_LP_REGULATOR_SLP_DBIAS": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "HP_SLEEP_LP_REGULATOR_DBIAS": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "HP_SLEEP_LP_REGULATOR1": {
              "HP_SLEEP_LP_REGULATOR_DRV_B": {
                "bit": 28,
                "description": "need_des",
                "width": 4
              }
            },
            "HP_SLEEP_LP_DCDC_RESERVE": {
              "HP_SLEEP_LP_DCDC_RESERVE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_SLEEP_LP_DIG_POWER": {
              "HP_SLEEP_BOD_SOURCE_SEL": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_VDDBAT_MODE": {
                "bit": 28,
                "description": "need_des",
                "width": 2
              },
              "HP_SLEEP_LP_MEM_DSLP": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SLEEP_PD_LP_PERI_PD_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_SLEEP_LP_CK_POWER": {
              "HP_SLEEP_XPD_LPPLL": {
                "bit": 27,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_XTAL32K": {
                "bit": 28,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_RC32K": {
                "bit": 29,
                "description": "need_des"
              },
              "HP_SLEEP_XPD_FOSC_CLK": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SLEEP_PD_OSC_CLK": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_SLEEP_LP_BIAS_RESERVE": {
              "LP_SLEEP_LP_BIAS_RESERVE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "LP_SLEEP_LP_REGULATOR0": {
              "LP_SLEEP_LP_REGULATOR_SLP_XPD": {
                "bit": 21,
                "description": "need_des"
              },
              "LP_SLEEP_LP_REGULATOR_XPD": {
                "bit": 22,
                "description": "need_des"
              },
              "LP_SLEEP_LP_REGULATOR_SLP_DBIAS": {
                "bit": 23,
                "description": "need_des",
                "width": 4
              },
              "LP_SLEEP_LP_REGULATOR_DBIAS": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "LP_SLEEP_LP_REGULATOR1": {
              "LP_SLEEP_LP_REGULATOR_DRV_B": {
                "bit": 28,
                "description": "need_des",
                "width": 4
              }
            },
            "LP_SLEEP_XTAL": {
              "LP_SLEEP_XPD_XTAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_SLEEP_LP_DIG_POWER": {
              "LP_SLEEP_BOD_SOURCE_SEL": {
                "bit": 27,
                "description": "need_des"
              },
              "LP_SLEEP_VDDBAT_MODE": {
                "bit": 28,
                "description": "need_des",
                "width": 2
              },
              "LP_SLEEP_LP_MEM_DSLP": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_SLEEP_PD_LP_PERI_PD_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_SLEEP_LP_CK_POWER": {
              "LP_SLEEP_XPD_LPPLL": {
                "bit": 27,
                "description": "need_des"
              },
              "LP_SLEEP_XPD_XTAL32K": {
                "bit": 28,
                "description": "need_des"
              },
              "LP_SLEEP_XPD_RC32K": {
                "bit": 29,
                "description": "need_des"
              },
              "LP_SLEEP_XPD_FOSC_CLK": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_SLEEP_PD_OSC_CLK": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_SLEEP_BIAS": {
              "LP_SLEEP_XPD_BIAS": {
                "bit": 25,
                "description": "need_des"
              },
              "LP_SLEEP_PD_CUR": {
                "bit": 30,
                "description": "need_des"
              },
              "SLEEP": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_HP_CK_POWER": {
              "TIE_LOW_GLOBAL_BBPLL_ICG": {
                "bit": 0,
                "description": "need_des"
              },
              "TIE_LOW_GLOBAL_XTAL_ICG": {
                "bit": 1,
                "description": "need_des"
              },
              "TIE_LOW_I2C_RETENTION": {
                "bit": 2,
                "description": "need_des"
              },
              "TIE_LOW_XPD_BB_I2C": {
                "bit": 3,
                "description": "need_des"
              },
              "TIE_LOW_XPD_BBPLL_I2C": {
                "bit": 4,
                "description": "need_des"
              },
              "TIE_LOW_XPD_BBPLL": {
                "bit": 5,
                "description": "need_des"
              },
              "TIE_LOW_XPD_XTAL": {
                "bit": 6,
                "description": "need_des"
              },
              "TIE_HIGH_GLOBAL_BBPLL_ICG": {
                "bit": 25,
                "description": "need_des"
              },
              "TIE_HIGH_GLOBAL_XTAL_ICG": {
                "bit": 26,
                "description": "need_des"
              },
              "TIE_HIGH_I2C_RETENTION": {
                "bit": 27,
                "description": "need_des"
              },
              "TIE_HIGH_XPD_BB_I2C": {
                "bit": 28,
                "description": "need_des"
              },
              "TIE_HIGH_XPD_BBPLL_I2C": {
                "bit": 29,
                "description": "need_des"
              },
              "TIE_HIGH_XPD_BBPLL": {
                "bit": 30,
                "description": "need_des"
              },
              "TIE_HIGH_XPD_XTAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_SLEEP_SYSCLK": {
              "UPDATE_DIG_ICG_SWITCH": {
                "bit": 28,
                "description": "need_des"
              },
              "TIE_LOW_ICG_SLP_SEL": {
                "bit": 29,
                "description": "need_des"
              },
              "TIE_HIGH_ICG_SLP_SEL": {
                "bit": 30,
                "description": "need_des"
              },
              "UPDATE_DIG_SYS_CLK_SEL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_HP_FUNC_ICG": {
              "UPDATE_DIG_ICG_FUNC_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_HP_APB_ICG": {
              "UPDATE_DIG_ICG_APB_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_MODEM_ICG": {
              "UPDATE_DIG_ICG_MODEM_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_LP_ICG": {
              "TIE_LOW_LP_ROOTCLK_SEL": {
                "bit": 30,
                "description": "need_des"
              },
              "TIE_HIGH_LP_ROOTCLK_SEL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_PAD_HOLD_ALL": {
              "TIE_HIGH_LP_PAD_HOLD_ALL": {
                "bit": 28,
                "description": "need_des"
              },
              "TIE_LOW_LP_PAD_HOLD_ALL": {
                "bit": 29,
                "description": "need_des"
              },
              "TIE_HIGH_HP_PAD_HOLD_ALL": {
                "bit": 30,
                "description": "need_des"
              },
              "TIE_LOW_HP_PAD_HOLD_ALL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "IMM_I2C_ISO": {
              "TIE_HIGH_I2C_ISO_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "TIE_LOW_I2C_ISO_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "POWER_WAIT_TIMER0": {
              "DG_HP_POWERDOWN_TIMER": {
                "bit": 5,
                "description": "need_des",
                "width": 9
              },
              "DG_HP_POWERUP_TIMER": {
                "bit": 14,
                "description": "need_des",
                "width": 9
              },
              "DG_HP_WAIT_TIMER": {
                "bit": 23,
                "description": "need_des",
                "width": 9
              }
            },
            "POWER_WAIT_TIMER1": {
              "DG_LP_POWERDOWN_TIMER": {
                "bit": 9,
                "description": "need_des",
                "width": 7
              },
              "DG_LP_POWERUP_TIMER": {
                "bit": 16,
                "description": "need_des",
                "width": 7
              },
              "DG_LP_WAIT_TIMER": {
                "bit": 23,
                "description": "need_des",
                "width": 9
              }
            },
            "POWER_PD_TOP_CNTL": {
              "FORCE_TOP_RESET": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_TOP_ISO": {
                "bit": 1,
                "description": "need_des"
              },
              "FORCE_TOP_PU": {
                "bit": 2,
                "description": "need_des"
              },
              "FORCE_TOP_NO_RESET": {
                "bit": 3,
                "description": "need_des"
              },
              "FORCE_TOP_NO_ISO": {
                "bit": 4,
                "description": "need_des"
              },
              "FORCE_TOP_PD": {
                "bit": 5,
                "description": "need_des"
              },
              "PD_TOP_MASK": {
                "bit": 6,
                "description": "need_des",
                "width": 5
              },
              "PD_TOP_PD_MASK": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "POWER_PD_HPAON_CNTL": {
              "FORCE_HP_AON_RESET": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_HP_AON_ISO": {
                "bit": 1,
                "description": "need_des"
              },
              "FORCE_HP_AON_PU": {
                "bit": 2,
                "description": "need_des"
              },
              "FORCE_HP_AON_NO_RESET": {
                "bit": 3,
                "description": "need_des"
              },
              "FORCE_HP_AON_NO_ISO": {
                "bit": 4,
                "description": "need_des"
              },
              "FORCE_HP_AON_PD": {
                "bit": 5,
                "description": "need_des"
              },
              "PD_HP_AON_MASK": {
                "bit": 6,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_AON_PD_MASK": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "POWER_PD_HPCPU_CNTL": {
              "FORCE_HP_CPU_RESET": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_HP_CPU_ISO": {
                "bit": 1,
                "description": "need_des"
              },
              "FORCE_HP_CPU_PU": {
                "bit": 2,
                "description": "need_des"
              },
              "FORCE_HP_CPU_NO_RESET": {
                "bit": 3,
                "description": "need_des"
              },
              "FORCE_HP_CPU_NO_ISO": {
                "bit": 4,
                "description": "need_des"
              },
              "FORCE_HP_CPU_PD": {
                "bit": 5,
                "description": "need_des"
              },
              "PD_HP_CPU_MASK": {
                "bit": 6,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_CPU_PD_MASK": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "POWER_PD_HPPERI_RESERVE": {
              "HP_PERI_RESERVE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "POWER_PD_HPWIFI_CNTL": {
              "FORCE_HP_WIFI_RESET": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_HP_WIFI_ISO": {
                "bit": 1,
                "description": "need_des"
              },
              "FORCE_HP_WIFI_PU": {
                "bit": 2,
                "description": "need_des"
              },
              "FORCE_HP_WIFI_NO_RESET": {
                "bit": 3,
                "description": "need_des"
              },
              "FORCE_HP_WIFI_NO_ISO": {
                "bit": 4,
                "description": "need_des"
              },
              "FORCE_HP_WIFI_PD": {
                "bit": 5,
                "description": "need_des"
              },
              "PD_HP_WIFI_MASK": {
                "bit": 6,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_WIFI_PD_MASK": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "POWER_PD_LPPERI_CNTL": {
              "FORCE_LP_PERI_RESET": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_LP_PERI_ISO": {
                "bit": 1,
                "description": "need_des"
              },
              "FORCE_LP_PERI_PU": {
                "bit": 2,
                "description": "need_des"
              },
              "FORCE_LP_PERI_NO_RESET": {
                "bit": 3,
                "description": "need_des"
              },
              "FORCE_LP_PERI_NO_ISO": {
                "bit": 4,
                "description": "need_des"
              },
              "FORCE_LP_PERI_PD": {
                "bit": 5,
                "description": "need_des"
              }
            },
            "POWER_PD_MEM_CNTL": {
              "FORCE_HP_MEM_ISO": {
                "bit": 0,
                "description": "need_des",
                "width": 4
              },
              "FORCE_HP_MEM_PD": {
                "bit": 4,
                "description": "need_des",
                "width": 4
              },
              "FORCE_HP_MEM_NO_ISO": {
                "bit": 24,
                "description": "need_des",
                "width": 4
              },
              "FORCE_HP_MEM_PU": {
                "bit": 28,
                "description": "need_des",
                "width": 4
              }
            },
            "POWER_PD_MEM_MASK": {
              "PD_HP_MEM2_PD_MASK": {
                "bit": 0,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_MEM1_PD_MASK": {
                "bit": 5,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_MEM0_PD_MASK": {
                "bit": 10,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_MEM2_MASK": {
                "bit": 17,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_MEM1_MASK": {
                "bit": 22,
                "description": "need_des",
                "width": 5
              },
              "PD_HP_MEM0_MASK": {
                "bit": 27,
                "description": "need_des",
                "width": 5
              }
            },
            "POWER_HP_PAD": {
              "FORCE_HP_PAD_NO_ISO_ALL": {
                "bit": 0,
                "description": "need_des"
              },
              "FORCE_HP_PAD_ISO_ALL": {
                "bit": 1,
                "description": "need_des"
              }
            },
            "POWER_VDD_SPI_CNTL": {
              "VDD_SPI_PWR_WAIT": {
                "bit": 18,
                "description": "need_des",
                "width": 11
              },
              "VDD_SPI_PWR_SW": {
                "bit": 29,
                "description": "need_des",
                "width": 2
              },
              "VDD_SPI_PWR_SEL_SW": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "POWER_CK_WAIT_CNTL": {
              "WAIT_XTL_STABLE": {
                "bit": 0,
                "description": "need_des",
                "width": 16
              },
              "WAIT_PLL_STABLE": {
                "bit": 16,
                "description": "need_des",
                "width": 16
              }
            },
            "SLP_WAKEUP_CNTL0": {
              "SLEEP_REQ": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "SLP_WAKEUP_CNTL1": {
              "SLEEP_REJECT_ENA": {
                "bit": 0,
                "description": "need_des",
                "width": 31
              },
              "SLP_REJECT_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "SLP_WAKEUP_CNTL2": {
              "WAKEUP_ENA": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "SLP_WAKEUP_CNTL3": {
              "LP_MIN_SLP_VAL": {
                "bit": 0,
                "description": "need_des",
                "width": 8
              },
              "HP_MIN_SLP_VAL": {
                "bit": 8,
                "description": "need_des",
                "width": 8
              },
              "SLEEP_PRT_SEL": {
                "bit": 16,
                "description": "need_des",
                "width": 2
              }
            },
            "SLP_WAKEUP_CNTL4": {
              "SLP_REJECT_CAUSE_CLR": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "SLP_WAKEUP_CNTL5": {
              "MODEM_WAIT_TARGET": {
                "bit": 0,
                "description": "need_des",
                "width": 20
              },
              "LP_ANA_WAIT_TARGET": {
                "bit": 24,
                "description": "need_des",
                "width": 8
              }
            },
            "SLP_WAKEUP_CNTL6": {
              "SOC_WAKEUP_WAIT": {
                "bit": 0,
                "description": "need_des",
                "width": 20
              },
              "SOC_WAKEUP_WAIT_CFG": {
                "bit": 30,
                "description": "need_des",
                "width": 2
              }
            },
            "SLP_WAKEUP_CNTL7": {
              "ANA_WAIT_TARGET": {
                "bit": 16,
                "description": "need_des",
                "width": 16
              }
            },
            "SLP_WAKEUP_STATUS0": {
              "WAKEUP_CAUSE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "SLP_WAKEUP_STATUS1": {
              "REJECT_CAUSE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "HP_CK_POWERON": {
              "I2C_POR_WAIT_TARGET": {
                "bit": 0,
                "description": "need_des",
                "width": 8
              }
            },
            "HP_CK_CNTL": {
              "MODIFY_ICG_CNTL_WAIT": {
                "bit": 0,
                "description": "need_des",
                "width": 8
              },
              "SWITCH_ICG_CNTL_WAIT": {
                "bit": 8,
                "description": "need_des",
                "width": 8
              }
            },
            "POR_STATUS": {
              "POR_DONE": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "RF_PWC": {
              "XPD_PERIF_I2C": {
                "bit": 27,
                "description": "need_des"
              },
              "XPD_RFTX_I2C": {
                "bit": 28,
                "description": "need_des"
              },
              "XPD_RFRX_I2C": {
                "bit": 29,
                "description": "need_des"
              },
              "XPD_RFPLL": {
                "bit": 30,
                "description": "need_des"
              },
              "XPD_FORCE_RFPLL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "VDDBAT_CFG": {
              "VDDBAT_MODE": {
                "bit": 0,
                "description": "need_des",
                "width": 2
              },
              "VDDBAT_SW_UPDATE": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "BACKUP_CFG": {
              "BACKUP_SYS_CLK_NO_DIV": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "INT_RAW": {
              "LP_CPU_EXC_INT_RAW": {
                "bit": 27,
                "description": "need_des"
              },
              "SDIO_IDLE_INT_RAW": {
                "bit": 28,
                "description": "need_des"
              },
              "SW_INT_RAW": {
                "bit": 29,
                "description": "need_des"
              },
              "SOC_SLEEP_REJECT_INT_RAW": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_RAW": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_INT_ST": {
              "LP_CPU_EXC_INT_ST": {
                "bit": 27,
                "description": "need_des"
              },
              "SDIO_IDLE_INT_ST": {
                "bit": 28,
                "description": "need_des"
              },
              "SW_INT_ST": {
                "bit": 29,
                "description": "need_des"
              },
              "SOC_SLEEP_REJECT_INT_ST": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_ST": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_INT_ENA": {
              "LP_CPU_EXC_INT_ENA": {
                "bit": 27,
                "description": "need_des"
              },
              "SDIO_IDLE_INT_ENA": {
                "bit": 28,
                "description": "need_des"
              },
              "SW_INT_ENA": {
                "bit": 29,
                "description": "need_des"
              },
              "SOC_SLEEP_REJECT_INT_ENA": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_ENA": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_INT_CLR": {
              "LP_CPU_EXC_INT_CLR": {
                "bit": 27,
                "description": "need_des"
              },
              "SDIO_IDLE_INT_CLR": {
                "bit": 28,
                "description": "need_des"
              },
              "SW_INT_CLR": {
                "bit": 29,
                "description": "need_des"
              },
              "SOC_SLEEP_REJECT_INT_CLR": {
                "bit": 30,
                "description": "need_des"
              },
              "SOC_WAKEUP_INT_CLR": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_INT_RAW": {
              "LP_CPU_WAKEUP_INT_RAW": {
                "bit": 20,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_END_INT_RAW": {
                "bit": 21,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_END_INT_RAW": {
                "bit": 22,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_END_INT_RAW": {
                "bit": 23,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_END_INT_RAW": {
                "bit": 24,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_END_INT_RAW": {
                "bit": 25,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_START_INT_RAW": {
                "bit": 26,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_START_INT_RAW": {
                "bit": 27,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_START_INT_RAW": {
                "bit": 28,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_START_INT_RAW": {
                "bit": 29,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_START_INT_RAW": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SW_TRIGGER_INT_RAW": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_INT_ST": {
              "LP_CPU_WAKEUP_INT_ST": {
                "bit": 20,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_END_INT_ST": {
                "bit": 21,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_END_INT_ST": {
                "bit": 22,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_END_INT_ST": {
                "bit": 23,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_END_INT_ST": {
                "bit": 24,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_END_INT_ST": {
                "bit": 25,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_START_INT_ST": {
                "bit": 26,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_START_INT_ST": {
                "bit": 27,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_START_INT_ST": {
                "bit": 28,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_START_INT_ST": {
                "bit": 29,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_START_INT_ST": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SW_TRIGGER_INT_ST": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_INT_ENA": {
              "LP_CPU_WAKEUP_INT_ENA": {
                "bit": 20,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_END_INT_ENA": {
                "bit": 21,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_END_INT_ENA": {
                "bit": 22,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_END_INT_ENA": {
                "bit": 23,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_END_INT_ENA": {
                "bit": 24,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_END_INT_ENA": {
                "bit": 25,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_START_INT_ENA": {
                "bit": 26,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_START_INT_ENA": {
                "bit": 27,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_START_INT_ENA": {
                "bit": 28,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_START_INT_ENA": {
                "bit": 29,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_START_INT_ENA": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SW_TRIGGER_INT_ENA": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_INT_CLR": {
              "LP_CPU_WAKEUP_INT_CLR": {
                "bit": 20,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_END_INT_CLR": {
                "bit": 21,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_END_INT_CLR": {
                "bit": 22,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_END_INT_CLR": {
                "bit": 23,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_END_INT_CLR": {
                "bit": 24,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_END_INT_CLR": {
                "bit": 25,
                "description": "need_des"
              },
              "MODEM_SWITCH_ACTIVE_START_INT_CLR": {
                "bit": 26,
                "description": "need_des"
              },
              "SLEEP_SWITCH_ACTIVE_START_INT_CLR": {
                "bit": 27,
                "description": "need_des"
              },
              "SLEEP_SWITCH_MODEM_START_INT_CLR": {
                "bit": 28,
                "description": "need_des"
              },
              "MODEM_SWITCH_SLEEP_START_INT_CLR": {
                "bit": 29,
                "description": "need_des"
              },
              "ACTIVE_SWITCH_SLEEP_START_INT_CLR": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_SW_TRIGGER_INT_CLR": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_CPU_PWR0": {
              "LP_CPU_WAITI_RDY": {
                "bit": 0,
                "description": "need_des"
              },
              "LP_CPU_STALL_RDY": {
                "bit": 1,
                "description": "need_des"
              },
              "LP_CPU_FORCE_STALL": {
                "bit": 18,
                "description": "need_des"
              },
              "LP_CPU_SLP_WAITI_FLAG_EN": {
                "bit": 19,
                "description": "need_des"
              },
              "LP_CPU_SLP_STALL_FLAG_EN": {
                "bit": 20,
                "description": "need_des"
              },
              "LP_CPU_SLP_STALL_WAIT": {
                "bit": 21,
                "description": "need_des",
                "width": 8
              },
              "LP_CPU_SLP_STALL_EN": {
                "bit": 29,
                "description": "need_des"
              },
              "LP_CPU_SLP_RESET_EN": {
                "bit": 30,
                "description": "need_des"
              },
              "LP_CPU_SLP_BYPASS_INTR_EN": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "LP_CPU_PWR1": {
              "LP_CPU_WAKEUP_EN": {
                "bit": 0,
                "description": "need_des",
                "width": 16
              },
              "LP_CPU_SLEEP_REQ": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_LP_CPU_COMM": {
              "LP_TRIGGER_HP": {
                "bit": 30,
                "description": "need_des"
              },
              "HP_TRIGGER_LP": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "HP_REGULATOR_CFG": {
              "DIG_REGULATOR_EN_CAL": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "MAIN_STATE": {
              "MAIN_LAST_ST_STATE": {
                "bit": 11,
                "description": "need_des",
                "width": 7
              },
              "MAIN_TAR_ST_STATE": {
                "bit": 18,
                "description": "need_des",
                "width": 7
              },
              "MAIN_CUR_ST_STATE": {
                "bit": 25,
                "description": "need_des",
                "width": 7
              }
            },
            "PWR_STATE": {
              "BACKUP_ST_STATE": {
                "bit": 13,
                "description": "need_des",
                "width": 5
              },
              "LP_PWR_ST_STATE": {
                "bit": 18,
                "description": "need_des",
                "width": 5
              },
              "HP_PWR_ST_STATE": {
                "bit": 23,
                "description": "need_des",
                "width": 9
              }
            },
            "CLK_STATE0": {
              "STABLE_XPD_BBPLL_STATE": {
                "bit": 0,
                "description": "need_des"
              },
              "STABLE_XPD_XTAL_STATE": {
                "bit": 1,
                "description": "need_des"
              },
              "SYS_CLK_SLP_SEL_STATE": {
                "bit": 15,
                "description": "need_des"
              },
              "SYS_CLK_SEL_STATE": {
                "bit": 16,
                "description": "need_des",
                "width": 2
              },
              "SYS_CLK_NO_DIV_STATE": {
                "bit": 18,
                "description": "need_des"
              },
              "ICG_SYS_CLK_EN_STATE": {
                "bit": 19,
                "description": "need_des"
              },
              "ICG_MODEM_SWITCH_STATE": {
                "bit": 20,
                "description": "need_des"
              },
              "ICG_MODEM_CODE_STATE": {
                "bit": 21,
                "description": "need_des",
                "width": 2
              },
              "ICG_SLP_SEL_STATE": {
                "bit": 23,
                "description": "need_des"
              },
              "ICG_GLOBAL_XTAL_STATE": {
                "bit": 24,
                "description": "need_des"
              },
              "ICG_GLOBAL_PLL_STATE": {
                "bit": 25,
                "description": "need_des"
              },
              "ANA_I2C_ISO_EN_STATE": {
                "bit": 26,
                "description": "need_des"
              },
              "ANA_I2C_RETENTION_STATE": {
                "bit": 27,
                "description": "need_des"
              },
              "ANA_XPD_BB_I2C_STATE": {
                "bit": 28,
                "description": "need_des"
              },
              "ANA_XPD_BBPLL_I2C_STATE": {
                "bit": 29,
                "description": "need_des"
              },
              "ANA_XPD_BBPLL_STATE": {
                "bit": 30,
                "description": "need_des"
              },
              "ANA_XPD_XTAL_STATE": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "CLK_STATE1": {
              "ICG_FUNC_EN_STATE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "CLK_STATE2": {
              "ICG_APB_EN_STATE": {
                "bit": 0,
                "description": "need_des",
                "width": 32
              }
            },
            "VDD_SPI_STATUS": {
              "STABLE_VDD_SPI_PWR_DRV": {
                "bit": 31,
                "description": "need_des"
              }
            },
            "DATE": {
              "PMU_DATE": {
                "bit": 0,
                "description": "need_des",
                "width": 31
              },
              "CLK_EN": {
                "bit": 31,
                "description": "need_des"
              }
            }
          }
        },
        "RMT": {
          "instances": [
            {
              "name": "RMT",
              "base": "0x60007000",
              "irq": 38
            }
          ],
          "registers": {
            "CH%sDATA": {
              "offset": "0x00",
              "size": 32,
              "description": "The read and write  data register for CHANNEL%s by apb fifo access."
            },
            "CH%s_TX_CONF0": {
              "offset": "0x10",
              "size": 32,
              "description": "Channel %s configure register 0"
            },
            "CH%s_RX_CONF0": {
              "offset": "0x18",
              "size": 32,
              "description": "Channel %s configure register 0"
            },
            "CH%s_RX_CONF1": {
              "offset": "0x1C",
              "size": 32,
              "description": "Channel %s configure register 1"
            },
            "CH%s_TX_STATUS": {
              "offset": "0x28",
              "size": 32,
              "description": "Channel %s status register"
            },
            "CH%s_RX_STATUS": {
              "offset": "0x30",
              "size": 32,
              "description": "Channel %s status register"
            },
            "INT_RAW": {
              "offset": "0x38",
              "size": 32,
              "description": "Raw interrupt status"
            },
            "INT_ST": {
              "offset": "0x3C",
              "size": 32,
              "description": "Masked interrupt status"
            },
            "INT_ENA": {
              "offset": "0x40",
              "size": 32,
              "description": "Interrupt enable bits"
            },
            "INT_CLR": {
              "offset": "0x44",
              "size": 32,
              "description": "Interrupt clear bits"
            },
            "CH%sCARRIER_DUTY": {
              "offset": "0x48",
              "size": 32,
              "description": "Channel %s duty cycle configuration register"
            },
            "CH%s_RX_CARRIER_RM": {
              "offset": "0x50",
              "size": 32,
              "description": "Channel %s carrier remove register"
            },
            "CH%s_TX_LIM": {
              "offset": "0x58",
              "size": 32,
              "description": "Channel %s Tx event configuration register"
            },
            "CH%s_RX_LIM": {
              "offset": "0x60",
              "size": 32,
              "description": "Channel %s Rx event configuration register"
            },
            "SYS_CONF": {
              "offset": "0x68",
              "size": 32,
              "description": "RMT apb configuration register"
            },
            "TX_SIM": {
              "offset": "0x6C",
              "size": 32,
              "description": "RMT TX synchronous register"
            },
            "REF_CNT_RST": {
              "offset": "0x70",
              "size": 32,
              "description": "RMT clock divider reset register"
            },
            "DATE": {
              "offset": "0xCC",
              "size": 32,
              "description": "RMT version register"
            }
          },
          "bits": {
            "CH%sDATA": {
              "DATA": {
                "bit": 0,
                "description": "Read and write data for channel %s via APB FIFO.",
                "width": 32
              }
            },
            "CH%s_TX_CONF0": {
              "TX_START": {
                "bit": 0,
                "description": "Set this bit to start sending data on CHANNEL%s."
              },
              "MEM_RD_RST": {
                "bit": 1,
                "description": "Set this bit to reset read ram address for CHANNEL%s by accessing transmitter."
              },
              "APB_MEM_RST": {
                "bit": 2,
                "description": "Set this bit to reset W/R ram address for CHANNEL%s by accessing apb fifo."
              },
              "TX_CONTI_MODE": {
                "bit": 3,
                "description": "Set this bit to restart transmission  from the first data to the last data in CHANNEL%s."
              },
              "MEM_TX_WRAP_EN": {
                "bit": 4,
                "description": "This is the channel %s enable bit for wraparound mode: it will resume sending at the start when the data to be sent is more than its memory size."
              },
              "IDLE_OUT_LV": {
                "bit": 5,
                "description": "This bit configures the level of output signal in CHANNEL%s when the latter is in IDLE state."
              },
              "IDLE_OUT_EN": {
                "bit": 6,
                "description": "This is the output enable-control bit for CHANNEL%s in IDLE state."
              },
              "TX_STOP": {
                "bit": 7,
                "description": "Set this bit to stop the transmitter of CHANNEL%s sending data out."
              },
              "DIV_CNT": {
                "bit": 8,
                "description": "This register is used to configure the divider for clock of CHANNEL%s.",
                "width": 8
              },
              "MEM_SIZE": {
                "bit": 16,
                "description": "This register is used to configure the maximum size of memory allocated to CHANNEL%s.",
                "width": 3
              },
              "CARRIER_EFF_EN": {
                "bit": 20,
                "description": "1: Add carrier modulation on the output signal only at the send data state for CHANNEL%s. 0: Add carrier modulation on the output signal at all state for CHANNEL%s. Only valid when RMT_CARRIER_EN_CH%s is 1."
              },
              "CARRIER_EN": {
                "bit": 21,
                "description": "This is the carrier modulation enable-control bit for CHANNEL%s. 1: Add carrier modulation in the output signal. 0: No carrier modulation in sig_out."
              },
              "CARRIER_OUT_LV": {
                "bit": 22,
                "description": "This bit is used to configure the position of carrier wave for CHANNEL%s.\n\n1'h0: add carrier wave on low level.\n\n1'h1: add carrier wave on high level."
              },
              "AFIFO_RST": {
                "bit": 23,
                "description": "Reserved"
              },
              "CONF_UPDATE": {
                "bit": 24,
                "description": "synchronization bit for CHANNEL%s"
              }
            },
            "CH%s_RX_CONF0": {
              "DIV_CNT": {
                "bit": 0,
                "description": "This register is used to configure the divider for clock of CHANNEL%s.",
                "width": 8
              },
              "IDLE_THRES": {
                "bit": 8,
                "description": "When no edge is detected on the input signal and continuous clock cycles is longer than this register value, received process is finished.",
                "width": 15
              },
              "MEM_SIZE": {
                "bit": 23,
                "description": "This register is used to configure the maximum size of memory allocated to CHANNEL%s.",
                "width": 3
              },
              "CARRIER_EN": {
                "bit": 28,
                "description": "This is the carrier modulation enable-control bit for CHANNEL%s. 1: Add carrier modulation in the output signal. 0: No carrier modulation in sig_out."
              },
              "CARRIER_OUT_LV": {
                "bit": 29,
                "description": "This bit is used to configure the position of carrier wave for CHANNEL%s.\n\n1'h0: add carrier wave on low level.\n\n1'h1: add carrier wave on high level."
              }
            },
            "CH%s_RX_CONF1": {
              "RX_EN": {
                "bit": 0,
                "description": "Set this bit to enable receiver to receive data on CHANNEL%s."
              },
              "MEM_WR_RST": {
                "bit": 1,
                "description": "Set this bit to reset write ram address for CHANNEL%s by accessing receiver."
              },
              "APB_MEM_RST": {
                "bit": 2,
                "description": "Set this bit to reset W/R ram address for CHANNEL%s by accessing apb fifo."
              },
              "MEM_OWNER": {
                "bit": 3,
                "description": "This register marks the ownership of CHANNEL%s's ram block.\n\n1'h1: Receiver is using the ram. \n\n1'h0: APB bus is using the ram."
              },
              "RX_FILTER_EN": {
                "bit": 4,
                "description": "This is the receive filter's enable bit for CHANNEL%s."
              },
              "RX_FILTER_THRES": {
                "bit": 5,
                "description": "Ignores the input pulse when its width is smaller than this register value in APB clock periods (in receive mode).",
                "width": 8
              },
              "MEM_RX_WRAP_EN": {
                "bit": 13,
                "description": "This is the channel %s enable bit for wraparound mode: it will resume receiving at the start when the data to be received is more than its memory size."
              },
              "AFIFO_RST": {
                "bit": 14,
                "description": "Reserved"
              },
              "CONF_UPDATE": {
                "bit": 15,
                "description": "synchronization bit for CHANNEL%s"
              }
            },
            "CH%s_TX_STATUS": {
              "MEM_RADDR_EX": {
                "bit": 0,
                "description": "This register records the memory address offset when transmitter of CHANNEL%s is using the RAM.",
                "width": 9
              },
              "STATE": {
                "bit": 9,
                "description": "This register records the FSM status of CHANNEL%s.",
                "width": 3
              },
              "APB_MEM_WADDR": {
                "bit": 12,
                "description": "This register records the memory address offset when writes RAM over APB bus.",
                "width": 9
              },
              "APB_MEM_RD_ERR": {
                "bit": 21,
                "description": "This status bit will be set if the offset address out of memory size when reading via APB bus."
              },
              "MEM_EMPTY": {
                "bit": 22,
                "description": "This status bit will be set when the data to be set is more than memory size and the wraparound mode is disabled."
              },
              "APB_MEM_WR_ERR": {
                "bit": 23,
                "description": "This status bit will be set if the offset address out of memory size when writes via APB bus."
              },
              "APB_MEM_RADDR": {
                "bit": 24,
                "description": "This register records the memory address offset when reading RAM over APB bus.",
                "width": 8
              }
            },
            "CH%s_RX_STATUS": {
              "MEM_WADDR_EX": {
                "bit": 0,
                "description": "This register records the memory address offset when receiver of CHANNEL%s is using the RAM.",
                "width": 9
              },
              "APB_MEM_RADDR": {
                "bit": 12,
                "description": "This register records the memory address offset when reads RAM over APB bus.",
                "width": 9
              },
              "STATE": {
                "bit": 22,
                "description": "This register records the FSM status of CHANNEL%s.",
                "width": 3
              },
              "MEM_OWNER_ERR": {
                "bit": 25,
                "description": "This status bit will be set when the ownership of memory block is wrong."
              },
              "MEM_FULL": {
                "bit": 26,
                "description": "This status bit will be set if the receiver receives more data than the memory size."
              },
              "APB_MEM_RD_ERR": {
                "bit": 27,
                "description": "This status bit will be set if the offset address out of memory size when reads via APB bus."
              }
            },
            "INT_RAW": {
              "CH%s_TX_END": {
                "bit": 0,
                "description": "The interrupt raw bit for CHANNEL%s. Triggered when transmission done."
              },
              "CH%s_RX_END": {
                "bit": 2,
                "description": "The interrupt raw bit for CHANNEL2. Triggered when reception done."
              },
              "CH%s_TX_ERR": {
                "bit": 4,
                "description": "The interrupt raw bit for CHANNEL4. Triggered when error occurs."
              },
              "CH%s_RX_ERR": {
                "bit": 6,
                "description": "The interrupt raw bit for CHANNEL6. Triggered when error occurs."
              },
              "CH%s_TX_THR_EVENT": {
                "bit": 8,
                "description": "The interrupt raw bit for CHANNEL%s. Triggered when transmitter sent more data than configured value."
              },
              "CH%s_RX_THR_EVENT": {
                "bit": 10,
                "description": "The interrupt raw bit for CHANNEL2. Triggered when receiver receive more data than configured value."
              },
              "CH%s_TX_LOOP": {
                "bit": 12,
                "description": "The interrupt raw bit for CHANNEL%s. Triggered when the loop count reaches the configured threshold value."
              }
            },
            "INT_ST": {
              "CH%s_TX_END": {
                "bit": 0,
                "description": "The masked interrupt status bit for CH%s_TX_END_INT."
              },
              "CH%s_RX_END": {
                "bit": 2,
                "description": "The masked interrupt status bit for CH2_RX_END_INT."
              },
              "CH%s_TX_ERR": {
                "bit": 4,
                "description": "The masked interrupt status bit for CH4_ERR_INT."
              },
              "CH%s_RX_ERR": {
                "bit": 6,
                "description": "The masked interrupt status bit for CH6_ERR_INT."
              },
              "CH%s_TX_THR_EVENT": {
                "bit": 8,
                "description": "The masked interrupt status bit for CH%s_TX_THR_EVENT_INT."
              },
              "CH%s_RX_THR_EVENT": {
                "bit": 10,
                "description": "The masked interrupt status bit for CH2_RX_THR_EVENT_INT."
              },
              "CH%s_X_LOOP": {
                "bit": 12,
                "description": "The masked interrupt status bit for CH%s_TX_LOOP_INT."
              }
            },
            "INT_ENA": {
              "CH%s_TX_END": {
                "bit": 0,
                "description": "The interrupt enable bit for CH%s_TX_END_INT."
              },
              "CH%s_RX_END": {
                "bit": 2,
                "description": "The interrupt enable bit for CH2_RX_END_INT."
              },
              "CH%s_TX_ERR": {
                "bit": 4,
                "description": "The interrupt enable bit for CH4_ERR_INT."
              },
              "CH%s_RX_ERR": {
                "bit": 6,
                "description": "The interrupt enable bit for CH6_ERR_INT."
              },
              "CH%s_TX_THR_EVENT": {
                "bit": 8,
                "description": "The interrupt enable bit for CH%s_TX_THR_EVENT_INT."
              },
              "CH%s_RX_THR_EVENT": {
                "bit": 10,
                "description": "The interrupt enable bit for CH2_RX_THR_EVENT_INT."
              },
              "CH%s_X_LOOP": {
                "bit": 12,
                "description": "The interrupt enable bit for CH%s_TX_LOOP_INT."
              }
            },
            "INT_CLR": {
              "CH%s_TX_END": {
                "bit": 0,
                "description": "Set this bit to clear theCH%s_TX_END_INT interrupt."
              },
              "CH%s_RX_END": {
                "bit": 2,
                "description": "Set this bit to clear theCH2_RX_END_INT interrupt."
              },
              "CH%s_TX_ERR": {
                "bit": 4,
                "description": "Set this bit to clear theCH4_ERR_INT interrupt."
              },
              "CH%s_RX_ERR": {
                "bit": 6,
                "description": "Set this bit to clear theCH6_ERR_INT interrupt."
              },
              "CH%s_TX_THR_EVENT": {
                "bit": 8,
                "description": "Set this bit to clear theCH%s_TX_THR_EVENT_INT interrupt."
              },
              "CH%s_RX_THR_EVENT": {
                "bit": 10,
                "description": "Set this bit to clear theCH2_RX_THR_EVENT_INT interrupt."
              },
              "CH%s_TX_LOOP": {
                "bit": 12,
                "description": "Set this bit to clear theCH%s_TX_LOOP_INT interrupt."
              }
            },
            "CH%sCARRIER_DUTY": {
              "CARRIER_LOW": {
                "bit": 0,
                "description": "This register is used to configure carrier wave 's low level clock period for CHANNEL%s.",
                "width": 16
              },
              "CARRIER_HIGH": {
                "bit": 16,
                "description": "This register is used to configure carrier wave 's high level clock period for CHANNEL%s.",
                "width": 16
              }
            },
            "CH%s_RX_CARRIER_RM": {
              "CARRIER_LOW_THRES": {
                "bit": 0,
                "description": "The low level period in a carrier modulation mode is (REG_RMT_REG_CARRIER_LOW_THRES_CH%s + 1) for channel %s.",
                "width": 16
              },
              "CARRIER_HIGH_THRES": {
                "bit": 16,
                "description": "The high level period in a carrier modulation mode is (REG_RMT_REG_CARRIER_HIGH_THRES_CH%s + 1) for channel %s.",
                "width": 16
              }
            },
            "CH%s_TX_LIM": {
              "TX_LIM": {
                "bit": 0,
                "description": "This register is used to configure the maximum entries that CHANNEL%s can send out.",
                "width": 9
              },
              "TX_LOOP_NUM": {
                "bit": 9,
                "description": "This register is used to configure the maximum loop count when tx_conti_mode is valid.",
                "width": 10
              },
              "TX_LOOP_CNT_EN": {
                "bit": 19,
                "description": "This register is the enabled bit for loop count."
              },
              "LOOP_COUNT_RESET": {
                "bit": 20,
                "description": "This register is used to reset the loop count when tx_conti_mode is valid."
              },
              "LOOP_STOP_EN": {
                "bit": 21,
                "description": "This bit is used to enable the loop send stop function after the loop counter counts to  loop number for CHANNEL%s."
              }
            },
            "CH%s_RX_LIM": {
              "RMT_RX_LIM": {
                "bit": 0,
                "description": "This register is used to configure the maximum entries that CHANNEL%s can receive.",
                "width": 9
              }
            },
            "SYS_CONF": {
              "APB_FIFO_MASK": {
                "bit": 0,
                "description": "1'h1: access memory directly.   1'h0: access memory by FIFO."
              },
              "MEM_CLK_FORCE_ON": {
                "bit": 1,
                "description": "Set this bit to enable the clock for RMT memory."
              },
              "MEM_FORCE_PD": {
                "bit": 2,
                "description": "Set this bit to power down RMT memory."
              },
              "MEM_FORCE_PU": {
                "bit": 3,
                "description": "1: Disable RMT memory light sleep power down function. 0: Power down RMT memory when RMT is in light sleep mode."
              },
              "SCLK_DIV_NUM": {
                "bit": 4,
                "description": "the integral part of the fractional divisor",
                "width": 8
              },
              "SCLK_DIV_A": {
                "bit": 12,
                "description": "the numerator of the fractional part of the fractional divisor",
                "width": 6
              },
              "SCLK_DIV_B": {
                "bit": 18,
                "description": "the denominator of the fractional part of the fractional divisor",
                "width": 6
              },
              "SCLK_SEL": {
                "bit": 24,
                "description": "choose the clock source of rmt_sclk. 1:CLK_80Mhz,2:CLK_FOSC, 3:XTAL",
                "width": 2
              },
              "SCLK_ACTIVE": {
                "bit": 26,
                "description": "rmt_sclk switch"
              },
              "CLK_EN": {
                "bit": 31,
                "description": "RMT register clock gate enable signal. 1: Power up the drive clock of registers. 0: Power down the drive clock of registers"
              }
            },
            "TX_SIM": {
              "CH0": {
                "bit": 0,
                "description": "Set this bit to enable CHANNEL0 to start sending data synchronously with other enabled channels."
              },
              "CH1": {
                "bit": 1,
                "description": "Set this bit to enable CHANNEL1 to start sending data synchronously with other enabled channels."
              },
              "EN": {
                "bit": 2,
                "description": "This register is used to enable multiple of channels to start sending data synchronously."
              }
            },
            "REF_CNT_RST": {
              "TX_REF_CNT_RST": {
                "bit": 0,
                "description": "This register is used to reset the clock divider of CHANNEL0."
              },
              "TX_REF_CNT_RST_CH1": {
                "bit": 1,
                "description": "This register is used to reset the clock divider of CHANNEL1."
              },
              "RX_REF_CNT_RST_CH2": {
                "bit": 2,
                "description": "This register is used to reset the clock divider of CHANNEL2."
              },
              "RX_REF_CNT_RST_CH3": {
                "bit": 3,
                "description": "This register is used to reset the clock divider of CHANNEL3."
              }
            },
            "DATE": {
              "RMT_DATE": {
                "bit": 0,
                "description": "This is the version register.",
                "width": 28
              }
            }
          }
        },
        "RNG": {
          "instances": [
            {
              "name": "RNG",
              "base": "0x600B2800"
            }
          ],
          "registers": {
            "DATA": {
              "offset": "0x08",
              "size": 32,
              "description": "Random number data"
            }
          }
        },
        "SOC": {
          "instances": [
            {
              "name": "SOC_ETM",
              "base": "0x60013000"
            }
          ],
          "registers": {
            "CH_ENA_AD0": {
              "offset": "0x00",
              "size": 32,
              "description": "channel enable register"
            },
            "CH_ENA_AD0_SET": {
              "offset": "0x04",
              "size": 32,
              "description": "channel enable set register"
            },
            "CH_ENA_AD0_CLR": {
              "offset": "0x08",
              "size": 32,
              "description": "channel enable clear register"
            },
            "CH_ENA_AD1": {
              "offset": "0x0C",
              "size": 32,
              "description": "channel enable register"
            },
            "CH_ENA_AD1_SET": {
              "offset": "0x10",
              "size": 32,
              "description": "channel enable set register"
            },
            "CH_ENA_AD1_CLR": {
              "offset": "0x14",
              "size": 32,
              "description": "channel enable clear register"
            },
            "CH0_EVT_ID": {
              "offset": "0x18",
              "size": 32,
              "description": "channel0 event id register"
            },
            "CH0_TASK_ID": {
              "offset": "0x1C",
              "size": 32,
              "description": "channel0 task id register"
            },
            "CH1_EVT_ID": {
              "offset": "0x20",
              "size": 32,
              "description": "channel1 event id register"
            },
            "CH1_TASK_ID": {
              "offset": "0x24",
              "size": 32,
              "description": "channel1 task id register"
            },
            "CH2_EVT_ID": {
              "offset": "0x28",
              "size": 32,
              "description": "channel2 event id register"
            },
            "CH2_TASK_ID": {
              "offset": "0x2C",
              "size": 32,
              "description": "channel2 task id register"
            },
            "CH3_EVT_ID": {
              "offset": "0x30",
              "size": 32,
              "description": "channel3 event id register"
            },
            "CH3_TASK_ID": {
              "offset": "0x34",
              "size": 32,
              "description": "channel3 task id register"
            },
            "CH4_EVT_ID": {
              "offset": "0x38",
              "size": 32,
              "description": "channel4 event id register"
            },
            "CH4_TASK_ID": {
              "offset": "0x3C",
              "size": 32,
              "description": "channel4 task id register"
            },
            "CH5_EVT_ID": {
              "offset": "0x40",
              "size": 32,
              "description": "channel5 event id register"
            },
            "CH5_TASK_ID": {
              "offset": "0x44",
              "size": 32,
              "description": "channel5 task id register"
            },
            "CH6_EVT_ID": {
              "offset": "0x48",
              "size": 32,
              "description": "channel6 event id register"
            },
            "CH6_TASK_ID": {
              "offset": "0x4C",
              "size": 32,
              "description": "channel6 task id register"
            },
            "CH7_EVT_ID": {
              "offset": "0x50",
              "size": 32,
              "description": "channel7 event id register"
            },
            "CH7_TASK_ID": {
              "offset": "0x54",
              "size": 32,
              "description": "channel7 task id register"
            },
            "CH8_EVT_ID": {
              "offset": "0x58",
              "size": 32,
              "description": "channel8 event id register"
            },
            "CH8_TASK_ID": {
              "offset": "0x5C",
              "size": 32,
              "description": "channel8 task id register"
            },
            "CH9_EVT_ID": {
              "offset": "0x60",
              "size": 32,
              "description": "channel9 event id register"
            },
            "CH9_TASK_ID": {
              "offset": "0x64",
              "size": 32,
              "description": "channel9 task id register"
            },
            "CH10_EVT_ID": {
              "offset": "0x68",
              "size": 32,
              "description": "channel10 event id register"
            },
            "CH10_TASK_ID": {
              "offset": "0x6C",
              "size": 32,
              "description": "channel10 task id register"
            },
            "CH11_EVT_ID": {
              "offset": "0x70",
              "size": 32,
              "description": "channel11 event id register"
            },
            "CH11_TASK_ID": {
              "offset": "0x74",
              "size": 32,
              "description": "channel11 task id register"
            },
            "CH12_EVT_ID": {
              "offset": "0x78",
              "size": 32,
              "description": "channel12 event id register"
            },
            "CH12_TASK_ID": {
              "offset": "0x7C",
              "size": 32,
              "description": "channel12 task id register"
            },
            "CH13_EVT_ID": {
              "offset": "0x80",
              "size": 32,
              "description": "channel13 event id register"
            },
            "CH13_TASK_ID": {
              "offset": "0x84",
              "size": 32,
              "description": "channel13 task id register"
            },
            "CH14_EVT_ID": {
              "offset": "0x88",
              "size": 32,
              "description": "channel14 event id register"
            },
            "CH14_TASK_ID": {
              "offset": "0x8C",
              "size": 32,
              "description": "channel14 task id register"
            },
            "CH15_EVT_ID": {
              "offset": "0x90",
              "size": 32,
              "description": "channel15 event id register"
            },
            "CH15_TASK_ID": {
              "offset": "0x94",
              "size": 32,
              "description": "channel15 task id register"
            },
            "CH16_EVT_ID": {
              "offset": "0x98",
              "size": 32,
              "description": "channel16 event id register"
            },
            "CH16_TASK_ID": {
              "offset": "0x9C",
              "size": 32,
              "description": "channel16 task id register"
            },
            "CH17_EVT_ID": {
              "offset": "0xA0",
              "size": 32,
              "description": "channel17 event id register"
            },
            "CH17_TASK_ID": {
              "offset": "0xA4",
              "size": 32,
              "description": "channel17 task id register"
            },
            "CH18_EVT_ID": {
              "offset": "0xA8",
              "size": 32,
              "description": "channel18 event id register"
            },
            "CH18_TASK_ID": {
              "offset": "0xAC",
              "size": 32,
              "description": "channel18 task id register"
            },
            "CH19_EVT_ID": {
              "offset": "0xB0",
              "size": 32,
              "description": "channel19 event id register"
            },
            "CH19_TASK_ID": {
              "offset": "0xB4",
              "size": 32,
              "description": "channel19 task id register"
            },
            "CH20_EVT_ID": {
              "offset": "0xB8",
              "size": 32,
              "description": "channel20 event id register"
            },
            "CH20_TASK_ID": {
              "offset": "0xBC",
              "size": 32,
              "description": "channel20 task id register"
            },
            "CH21_EVT_ID": {
              "offset": "0xC0",
              "size": 32,
              "description": "channel21 event id register"
            },
            "CH21_TASK_ID": {
              "offset": "0xC4",
              "size": 32,
              "description": "channel21 task id register"
            },
            "CH22_EVT_ID": {
              "offset": "0xC8",
              "size": 32,
              "description": "channel22 event id register"
            },
            "CH22_TASK_ID": {
              "offset": "0xCC",
              "size": 32,
              "description": "channel22 task id register"
            },
            "CH23_EVT_ID": {
              "offset": "0xD0",
              "size": 32,
              "description": "channel23 event id register"
            },
            "CH23_TASK_ID": {
              "offset": "0xD4",
              "size": 32,
              "description": "channel23 task id register"
            },
            "CH24_EVT_ID": {
              "offset": "0xD8",
              "size": 32,
              "description": "channel24 event id register"
            },
            "CH24_TASK_ID": {
              "offset": "0xDC",
              "size": 32,
              "description": "channel24 task id register"
            },
            "CH25_EVT_ID": {
              "offset": "0xE0",
              "size": 32,
              "description": "channel25 event id register"
            },
            "CH25_TASK_ID": {
              "offset": "0xE4",
              "size": 32,
              "description": "channel25 task id register"
            },
            "CH26_EVT_ID": {
              "offset": "0xE8",
              "size": 32,
              "description": "channel26 event id register"
            },
            "CH26_TASK_ID": {
              "offset": "0xEC",
              "size": 32,
              "description": "channel26 task id register"
            },
            "CH27_EVT_ID": {
              "offset": "0xF0",
              "size": 32,
              "description": "channel27 event id register"
            },
            "CH27_TASK_ID": {
              "offset": "0xF4",
              "size": 32,
              "description": "channel27 task id register"
            },
            "CH28_EVT_ID": {
              "offset": "0xF8",
              "size": 32,
              "description": "channel28 event id register"
            },
            "CH28_TASK_ID": {
              "offset": "0xFC",
              "size": 32,
              "description": "channel28 task id register"
            },
            "CH29_EVT_ID": {
              "offset": "0x100",
              "size": 32,
              "description": "channel29 event id register"
            },
            "CH29_TASK_ID": {
              "offset": "0x104",
              "size": 32,
              "description": "channel29 task id register"
            },
            "CH30_EVT_ID": {
              "offset": "0x108",
              "size": 32,
              "description": "channel30 event id register"
            },
            "CH30_TASK_ID": {
              "offset": "0x10C",
              "size": 32,
              "description": "channel30 task id register"
            },
            "CH31_EVT_ID": {
              "offset": "0x110",
              "size": 32,
              "description": "channel31 event id register"
            },
            "CH31_TASK_ID": {
              "offset": "0x114",
              "size": 32,
              "description": "channel31 task id register"
            },
            "CH32_EVT_ID": {
              "offset": "0x118",
              "size": 32,
              "description": "channel32 event id register"
            },
            "CH32_TASK_ID": {
              "offset": "0x11C",
              "size": 32,
              "description": "channel32 task id register"
            },
            "CH33_EVT_ID": {
              "offset": "0x120",
              "size": 32,
              "description": "channel33 event id register"
            },
            "CH33_TASK_ID": {
              "offset": "0x124",
              "size": 32,
              "description": "channel33 task id register"
            },
            "CH34_EVT_ID": {
              "offset": "0x128",
              "size": 32,
              "description": "channel34 event id register"
            },
            "CH34_TASK_ID": {
              "offset": "0x12C",
              "size": 32,
              "description": "channel34 task id register"
            },
            "CH35_EVT_ID": {
              "offset": "0x130",
              "size": 32,
              "description": "channel35 event id register"
            },
            "CH35_TASK_ID": {
              "offset": "0x134",
              "size": 32,
              "description": "channel35 task id register"
            },
            "CH36_EVT_ID": {
              "offset": "0x138",
              "size": 32,
              "description": "channel36 event id register"
            },
            "CH36_TASK_ID": {
              "offset": "0x13C",
              "size": 32,
              "description": "channel36 task id register"
            },
            "CH37_EVT_ID": {
              "offset": "0x140",
              "size": 32,
              "description": "channel37 event id register"
            },
            "CH37_TASK_ID": {
              "offset": "0x144",
              "size": 32,
              "description": "channel37 task id register"
            },
            "CH38_EVT_ID": {
              "offset": "0x148",
              "size": 32,
              "description": "channel38 event id register"
            },
            "CH38_TASK_ID": {
              "offset": "0x14C",
              "size": 32,
              "description": "channel38 task id register"
            },
            "CH39_EVT_ID": {
              "offset": "0x150",
              "size": 32,
              "description": "channel39 event id register"
            },
            "CH39_TASK_ID": {
              "offset": "0x154",
              "size": 32,
              "description": "channel39 task id register"
            },
            "CH40_EVT_ID": {
              "offset": "0x158",
              "size": 32,
              "description": "channel40 event id register"
            },
            "CH40_TASK_ID": {
              "offset": "0x15C",
              "size": 32,
              "description": "channel40 task id register"
            },
            "CH41_EVT_ID": {
              "offset": "0x160",
              "size": 32,
              "description": "channel41 event id register"
            },
            "CH41_TASK_ID": {
              "offset": "0x164",
              "size": 32,
              "description": "channel41 task id register"
            },
            "CH42_EVT_ID": {
              "offset": "0x168",
              "size": 32,
              "description": "channel42 event id register"
            },
            "CH42_TASK_ID": {
              "offset": "0x16C",
              "size": 32,
              "description": "channel42 task id register"
            },
            "CH43_EVT_ID": {
              "offset": "0x170",
              "size": 32,
              "description": "channel43 event id register"
            },
            "CH43_TASK_ID": {
              "offset": "0x174",
              "size": 32,
              "description": "channel43 task id register"
            },
            "CH44_EVT_ID": {
              "offset": "0x178",
              "size": 32,
              "description": "channel44 event id register"
            },
            "CH44_TASK_ID": {
              "offset": "0x17C",
              "size": 32,
              "description": "channel44 task id register"
            },
            "CH45_EVT_ID": {
              "offset": "0x180",
              "size": 32,
              "description": "channel45 event id register"
            },
            "CH45_TASK_ID": {
              "offset": "0x184",
              "size": 32,
              "description": "channel45 task id register"
            },
            "CH46_EVT_ID": {
              "offset": "0x188",
              "size": 32,
              "description": "channel46 event id register"
            },
            "CH46_TASK_ID": {
              "offset": "0x18C",
              "size": 32,
              "description": "channel46 task id register"
            },
            "CH47_EVT_ID": {
              "offset": "0x190",
              "size": 32,
              "description": "channel47 event id register"
            },
            "CH47_TASK_ID": {
              "offset": "0x194",
              "size": 32,
              "description": "channel47 task id register"
            },
            "CH48_EVT_ID": {
              "offset": "0x198",
              "size": 32,
              "description": "channel48 event id register"
            },
            "CH48_TASK_ID": {
              "offset": "0x19C",
              "size": 32,
              "description": "channel48 task id register"
            },
            "CH49_EVT_ID": {
              "offset": "0x1A0",
              "size": 32,
              "description": "channel49 event id register"
            },
            "CH49_TASK_ID": {
              "offset": "0x1A4",
              "size": 32,
              "description": "channel49 task id register"
            },
            "CLK_EN": {
              "offset": "0x1A8",
              "size": 32,
              "description": "etm clock enable register"
            },
            "DATE": {
              "offset": "0x1AC",
              "size": 32,
              "description": "etm date register"
            }
          },
          "bits": {
            "CH_ENA_AD0": {
              "CH_ENA0": {
                "bit": 0,
                "description": "ch0 enable"
              },
              "CH_ENA1": {
                "bit": 1,
                "description": "ch1 enable"
              },
              "CH_ENA2": {
                "bit": 2,
                "description": "ch2 enable"
              },
              "CH_ENA3": {
                "bit": 3,
                "description": "ch3 enable"
              },
              "CH_ENA4": {
                "bit": 4,
                "description": "ch4 enable"
              },
              "CH_ENA5": {
                "bit": 5,
                "description": "ch5 enable"
              },
              "CH_ENA6": {
                "bit": 6,
                "description": "ch6 enable"
              },
              "CH_ENA7": {
                "bit": 7,
                "description": "ch7 enable"
              },
              "CH_ENA8": {
                "bit": 8,
                "description": "ch8 enable"
              },
              "CH_ENA9": {
                "bit": 9,
                "description": "ch9 enable"
              },
              "CH_ENA10": {
                "bit": 10,
                "description": "ch10 enable"
              },
              "CH_ENA11": {
                "bit": 11,
                "description": "ch11 enable"
              },
              "CH_ENA12": {
                "bit": 12,
                "description": "ch12 enable"
              },
              "CH_ENA13": {
                "bit": 13,
                "description": "ch13 enable"
              },
              "CH_ENA14": {
                "bit": 14,
                "description": "ch14 enable"
              },
              "CH_ENA15": {
                "bit": 15,
                "description": "ch15 enable"
              },
              "CH_ENA16": {
                "bit": 16,
                "description": "ch16 enable"
              },
              "CH_ENA17": {
                "bit": 17,
                "description": "ch17 enable"
              },
              "CH_ENA18": {
                "bit": 18,
                "description": "ch18 enable"
              },
              "CH_ENA19": {
                "bit": 19,
                "description": "ch19 enable"
              },
              "CH_ENA20": {
                "bit": 20,
                "description": "ch20 enable"
              },
              "CH_ENA21": {
                "bit": 21,
                "description": "ch21 enable"
              },
              "CH_ENA22": {
                "bit": 22,
                "description": "ch22 enable"
              },
              "CH_ENA23": {
                "bit": 23,
                "description": "ch23 enable"
              },
              "CH_ENA24": {
                "bit": 24,
                "description": "ch24 enable"
              },
              "CH_ENA25": {
                "bit": 25,
                "description": "ch25 enable"
              },
              "CH_ENA26": {
                "bit": 26,
                "description": "ch26 enable"
              },
              "CH_ENA27": {
                "bit": 27,
                "description": "ch27 enable"
              },
              "CH_ENA28": {
                "bit": 28,
                "description": "ch28 enable"
              },
              "CH_ENA29": {
                "bit": 29,
                "description": "ch29 enable"
              },
              "CH_ENA30": {
                "bit": 30,
                "description": "ch30 enable"
              },
              "CH_ENA31": {
                "bit": 31,
                "description": "ch31 enable"
              }
            },
            "CH_ENA_AD0_SET": {
              "CH_SET0": {
                "bit": 0,
                "description": "ch0 set"
              },
              "CH_SET1": {
                "bit": 1,
                "description": "ch1 set"
              },
              "CH_SET2": {
                "bit": 2,
                "description": "ch2 set"
              },
              "CH_SET3": {
                "bit": 3,
                "description": "ch3 set"
              },
              "CH_SET4": {
                "bit": 4,
                "description": "ch4 set"
              },
              "CH_SET5": {
                "bit": 5,
                "description": "ch5 set"
              },
              "CH_SET6": {
                "bit": 6,
                "description": "ch6 set"
              },
              "CH_SET7": {
                "bit": 7,
                "description": "ch7 set"
              },
              "CH_SET8": {
                "bit": 8,
                "description": "ch8 set"
              },
              "CH_SET9": {
                "bit": 9,
                "description": "ch9 set"
              },
              "CH_SET10": {
                "bit": 10,
                "description": "ch10 set"
              },
              "CH_SET11": {
                "bit": 11,
                "description": "ch11 set"
              },
              "CH_SET12": {
                "bit": 12,
                "description": "ch12 set"
              },
              "CH_SET13": {
                "bit": 13,
                "description": "ch13 set"
              },
              "CH_SET14": {
                "bit": 14,
                "description": "ch14 set"
              },
              "CH_SET15": {
                "bit": 15,
                "description": "ch15 set"
              },
              "CH_SET16": {
                "bit": 16,
                "description": "ch16 set"
              },
              "CH_SET17": {
                "bit": 17,
                "description": "ch17 set"
              },
              "CH_SET18": {
                "bit": 18,
                "description": "ch18 set"
              },
              "CH_SET19": {
                "bit": 19,
                "description": "ch19 set"
              },
              "CH_SET20": {
                "bit": 20,
                "description": "ch20 set"
              },
              "CH_SET21": {
                "bit": 21,
                "description": "ch21 set"
              },
              "CH_SET22": {
                "bit": 22,
                "description": "ch22 set"
              },
              "CH_SET23": {
                "bit": 23,
                "description": "ch23 set"
              },
              "CH_SET24": {
                "bit": 24,
                "description": "ch24 set"
              },
              "CH_SET25": {
                "bit": 25,
                "description": "ch25 set"
              },
              "CH_SET26": {
                "bit": 26,
                "description": "ch26 set"
              },
              "CH_SET27": {
                "bit": 27,
                "description": "ch27 set"
              },
              "CH_SET28": {
                "bit": 28,
                "description": "ch28 set"
              },
              "CH_SET29": {
                "bit": 29,
                "description": "ch29 set"
              },
              "CH_SET30": {
                "bit": 30,
                "description": "ch30 set"
              },
              "CH_SET31": {
                "bit": 31,
                "description": "ch31 set"
              }
            },
            "CH_ENA_AD0_CLR": {
              "CH_CLR0": {
                "bit": 0,
                "description": "ch0 clear"
              },
              "CH_CLR1": {
                "bit": 1,
                "description": "ch1 clear"
              },
              "CH_CLR2": {
                "bit": 2,
                "description": "ch2 clear"
              },
              "CH_CLR3": {
                "bit": 3,
                "description": "ch3 clear"
              },
              "CH_CLR4": {
                "bit": 4,
                "description": "ch4 clear"
              },
              "CH_CLR5": {
                "bit": 5,
                "description": "ch5 clear"
              },
              "CH_CLR6": {
                "bit": 6,
                "description": "ch6 clear"
              },
              "CH_CLR7": {
                "bit": 7,
                "description": "ch7 clear"
              },
              "CH_CLR8": {
                "bit": 8,
                "description": "ch8 clear"
              },
              "CH_CLR9": {
                "bit": 9,
                "description": "ch9 clear"
              },
              "CH_CLR10": {
                "bit": 10,
                "description": "ch10 clear"
              },
              "CH_CLR11": {
                "bit": 11,
                "description": "ch11 clear"
              },
              "CH_CLR12": {
                "bit": 12,
                "description": "ch12 clear"
              },
              "CH_CLR13": {
                "bit": 13,
                "description": "ch13 clear"
              },
              "CH_CLR14": {
                "bit": 14,
                "description": "ch14 clear"
              },
              "CH_CLR15": {
                "bit": 15,
                "description": "ch15 clear"
              },
              "CH_CLR16": {
                "bit": 16,
                "description": "ch16 clear"
              },
              "CH_CLR17": {
                "bit": 17,
                "description": "ch17 clear"
              },
              "CH_CLR18": {
                "bit": 18,
                "description": "ch18 clear"
              },
              "CH_CLR19": {
                "bit": 19,
                "description": "ch19 clear"
              },
              "CH_CLR20": {
                "bit": 20,
                "description": "ch20 clear"
              },
              "CH_CLR21": {
                "bit": 21,
                "description": "ch21 clear"
              },
              "CH_CLR22": {
                "bit": 22,
                "description": "ch22 clear"
              },
              "CH_CLR23": {
                "bit": 23,
                "description": "ch23 clear"
              },
              "CH_CLR24": {
                "bit": 24,
                "description": "ch24 clear"
              },
              "CH_CLR25": {
                "bit": 25,
                "description": "ch25 clear"
              },
              "CH_CLR26": {
                "bit": 26,
                "description": "ch26 clear"
              },
              "CH_CLR27": {
                "bit": 27,
                "description": "ch27 clear"
              },
              "CH_CLR28": {
                "bit": 28,
                "description": "ch28 clear"
              },
              "CH_CLR29": {
                "bit": 29,
                "description": "ch29 clear"
              },
              "CH_CLR30": {
                "bit": 30,
                "description": "ch30 clear"
              },
              "CH_CLR31": {
                "bit": 31,
                "description": "ch31 clear"
              }
            },
            "CH_ENA_AD1": {
              "CH_ENA32": {
                "bit": 0,
                "description": "ch32 enable"
              },
              "CH_ENA33": {
                "bit": 1,
                "description": "ch33 enable"
              },
              "CH_ENA34": {
                "bit": 2,
                "description": "ch34 enable"
              },
              "CH_ENA35": {
                "bit": 3,
                "description": "ch35 enable"
              },
              "CH_ENA36": {
                "bit": 4,
                "description": "ch36 enable"
              },
              "CH_ENA37": {
                "bit": 5,
                "description": "ch37 enable"
              },
              "CH_ENA38": {
                "bit": 6,
                "description": "ch38 enable"
              },
              "CH_ENA39": {
                "bit": 7,
                "description": "ch39 enable"
              },
              "CH_ENA40": {
                "bit": 8,
                "description": "ch40 enable"
              },
              "CH_ENA41": {
                "bit": 9,
                "description": "ch41 enable"
              },
              "CH_ENA42": {
                "bit": 10,
                "description": "ch42 enable"
              },
              "CH_ENA43": {
                "bit": 11,
                "description": "ch43 enable"
              },
              "CH_ENA44": {
                "bit": 12,
                "description": "ch44 enable"
              },
              "CH_ENA45": {
                "bit": 13,
                "description": "ch45 enable"
              },
              "CH_ENA46": {
                "bit": 14,
                "description": "ch46 enable"
              },
              "CH_ENA47": {
                "bit": 15,
                "description": "ch47 enable"
              },
              "CH_ENA48": {
                "bit": 16,
                "description": "ch48 enable"
              },
              "CH_ENA49": {
                "bit": 17,
                "description": "ch49 enable"
              }
            },
            "CH_ENA_AD1_SET": {
              "CH_SET32": {
                "bit": 0,
                "description": "ch32 set"
              },
              "CH_SET33": {
                "bit": 1,
                "description": "ch33 set"
              },
              "CH_SET34": {
                "bit": 2,
                "description": "ch34 set"
              },
              "CH_SET35": {
                "bit": 3,
                "description": "ch35 set"
              },
              "CH_SET36": {
                "bit": 4,
                "description": "ch36 set"
              },
              "CH_SET37": {
                "bit": 5,
                "description": "ch37 set"
              },
              "CH_SET38": {
                "bit": 6,
                "description": "ch38 set"
              },
              "CH_SET39": {
                "bit": 7,
                "description": "ch39 set"
              },
              "CH_SET40": {
                "bit": 8,
                "description": "ch40 set"
              },
              "CH_SET41": {
                "bit": 9,
                "description": "ch41 set"
              },
              "CH_SET42": {
                "bit": 10,
                "description": "ch42 set"
              },
              "CH_SET43": {
                "bit": 11,
                "description": "ch43 set"
              },
              "CH_SET44": {
                "bit": 12,
                "description": "ch44 set"
              },
              "CH_SET45": {
                "bit": 13,
                "description": "ch45 set"
              },
              "CH_SET46": {
                "bit": 14,
                "description": "ch46 set"
              },
              "CH_SET47": {
                "bit": 15,
                "description": "ch47 set"
              },
              "CH_SET48": {
                "bit": 16,
                "description": "ch48 set"
              },
              "CH_SET49": {
                "bit": 17,
                "description": "ch49 set"
              }
            },
            "CH_ENA_AD1_CLR": {
              "CH_CLR32": {
                "bit": 0,
                "description": "ch32 clear"
              },
              "CH_CLR33": {
                "bit": 1,
                "description": "ch33 clear"
              },
              "CH_CLR34": {
                "bit": 2,
                "description": "ch34 clear"
              },
              "CH_CLR35": {
                "bit": 3,
                "description": "ch35 clear"
              },
              "CH_CLR36": {
                "bit": 4,
                "description": "ch36 clear"
              },
              "CH_CLR37": {
                "bit": 5,
                "description": "ch37 clear"
              },
              "CH_CLR38": {
                "bit": 6,
                "description": "ch38 clear"
              },
              "CH_CLR39": {
                "bit": 7,
                "description": "ch39 clear"
              },
              "CH_CLR40": {
                "bit": 8,
                "description": "ch40 clear"
              },
              "CH_CLR41": {
                "bit": 9,
                "description": "ch41 clear"
              },
              "CH_CLR42": {
                "bit": 10,
                "description": "ch42 clear"
              },
              "CH_CLR43": {
                "bit": 11,
                "description": "ch43 clear"
              },
              "CH_CLR44": {
                "bit": 12,
                "description": "ch44 clear"
              },
              "CH_CLR45": {
                "bit": 13,
                "description": "ch45 clear"
              },
              "CH_CLR46": {
                "bit": 14,
                "description": "ch46 clear"
              },
              "CH_CLR47": {
                "bit": 15,
                "description": "ch47 clear"
              },
              "CH_CLR48": {
                "bit": 16,
                "description": "ch48 clear"
              },
              "CH_CLR49": {
                "bit": 17,
                "description": "ch49 clear"
              }
            },
            "CH0_EVT_ID": {
              "CH0_EVT_ID": {
                "bit": 0,
                "description": "ch0_evt_id",
                "width": 8
              }
            },
            "CH0_TASK_ID": {
              "CH0_TASK_ID": {
                "bit": 0,
                "description": "ch0_task_id",
                "width": 8
              }
            },
            "CH1_EVT_ID": {
              "CH1_EVT_ID": {
                "bit": 0,
                "description": "ch1_evt_id",
                "width": 8
              }
            },
            "CH1_TASK_ID": {
              "CH1_TASK_ID": {
                "bit": 0,
                "description": "ch1_task_id",
                "width": 8
              }
            },
            "CH2_EVT_ID": {
              "CH2_EVT_ID": {
                "bit": 0,
                "description": "ch2_evt_id",
                "width": 8
              }
            },
            "CH2_TASK_ID": {
              "CH2_TASK_ID": {
                "bit": 0,
                "description": "ch2_task_id",
                "width": 8
              }
            },
            "CH3_EVT_ID": {
              "CH3_EVT_ID": {
                "bit": 0,
                "description": "ch3_evt_id",
                "width": 8
              }
            },
            "CH3_TASK_ID": {
              "CH3_TASK_ID": {
                "bit": 0,
                "description": "ch3_task_id",
                "width": 8
              }
            },
            "CH4_EVT_ID": {
              "CH4_EVT_ID": {
                "bit": 0,
                "description": "ch4_evt_id",
                "width": 8
              }
            },
            "CH4_TASK_ID": {
              "CH4_TASK_ID": {
                "bit": 0,
                "description": "ch4_task_id",
                "width": 8
              }
            },
            "CH5_EVT_ID": {
              "CH5_EVT_ID": {
                "bit": 0,
                "description": "ch5_evt_id",
                "width": 8
              }
            },
            "CH5_TASK_ID": {
              "CH5_TASK_ID": {
                "bit": 0,
                "description": "ch5_task_id",
                "width": 8
              }
            },
            "CH6_EVT_ID": {
              "CH6_EVT_ID": {
                "bit": 0,
                "description": "ch6_evt_id",
                "width": 8
              }
            },
            "CH6_TASK_ID": {
              "CH6_TASK_ID": {
                "bit": 0,
                "description": "ch6_task_id",
                "width": 8
              }
            },
            "CH7_EVT_ID": {
              "CH7_EVT_ID": {
                "bit": 0,
                "description": "ch7_evt_id",
                "width": 8
              }
            },
            "CH7_TASK_ID": {
              "CH7_TASK_ID": {
                "bit": 0,
                "description": "ch7_task_id",
                "width": 8
              }
            },
            "CH8_EVT_ID": {
              "CH8_EVT_ID": {
                "bit": 0,
                "description": "ch8_evt_id",
                "width": 8
              }
            },
            "CH8_TASK_ID": {
              "CH8_TASK_ID": {
                "bit": 0,
                "description": "ch8_task_id",
                "width": 8
              }
            },
            "CH9_EVT_ID": {
              "CH9_EVT_ID": {
                "bit": 0,
                "description": "ch9_evt_id",
                "width": 8
              }
            },
            "CH9_TASK_ID": {
              "CH9_TASK_ID": {
                "bit": 0,
                "description": "ch9_task_id",
                "width": 8
              }
            },
            "CH10_EVT_ID": {
              "CH10_EVT_ID": {
                "bit": 0,
                "description": "ch10_evt_id",
                "width": 8
              }
            },
            "CH10_TASK_ID": {
              "CH10_TASK_ID": {
                "bit": 0,
                "description": "ch10_task_id",
                "width": 8
              }
            },
            "CH11_EVT_ID": {
              "CH11_EVT_ID": {
                "bit": 0,
                "description": "ch11_evt_id",
                "width": 8
              }
            },
            "CH11_TASK_ID": {
              "CH11_TASK_ID": {
                "bit": 0,
                "description": "ch11_task_id",
                "width": 8
              }
            },
            "CH12_EVT_ID": {
              "CH12_EVT_ID": {
                "bit": 0,
                "description": "ch12_evt_id",
                "width": 8
              }
            },
            "CH12_TASK_ID": {
              "CH12_TASK_ID": {
                "bit": 0,
                "description": "ch12_task_id",
                "width": 8
              }
            },
            "CH13_EVT_ID": {
              "CH13_EVT_ID": {
                "bit": 0,
                "description": "ch13_evt_id",
                "width": 8
              }
            },
            "CH13_TASK_ID": {
              "CH13_TASK_ID": {
                "bit": 0,
                "description": "ch13_task_id",
                "width": 8
              }
            },
            "CH14_EVT_ID": {
              "CH14_EVT_ID": {
                "bit": 0,
                "description": "ch14_evt_id",
                "width": 8
              }
            },
            "CH14_TASK_ID": {
              "CH14_TASK_ID": {
                "bit": 0,
                "description": "ch14_task_id",
                "width": 8
              }
            },
            "CH15_EVT_ID": {
              "CH15_EVT_ID": {
                "bit": 0,
                "description": "ch15_evt_id",
                "width": 8
              }
            },
            "CH15_TASK_ID": {
              "CH15_TASK_ID": {
                "bit": 0,
                "description": "ch15_task_id",
                "width": 8
              }
            },
            "CH16_EVT_ID": {
              "CH16_EVT_ID": {
                "bit": 0,
                "description": "ch16_evt_id",
                "width": 8
              }
            },
            "CH16_TASK_ID": {
              "CH16_TASK_ID": {
                "bit": 0,
                "description": "ch16_task_id",
                "width": 8
              }
            },
            "CH17_EVT_ID": {
              "CH17_EVT_ID": {
                "bit": 0,
                "description": "ch17_evt_id",
                "width": 8
              }
            },
            "CH17_TASK_ID": {
              "CH17_TASK_ID": {
                "bit": 0,
                "description": "ch17_task_id",
                "width": 8
              }
            },
            "CH18_EVT_ID": {
              "CH18_EVT_ID": {
                "bit": 0,
                "description": "ch18_evt_id",
                "width": 8
              }
            },
            "CH18_TASK_ID": {
              "CH18_TASK_ID": {
                "bit": 0,
                "description": "ch18_task_id",
                "width": 8
              }
            },
            "CH19_EVT_ID": {
              "CH19_EVT_ID": {
                "bit": 0,
                "description": "ch19_evt_id",
                "width": 8
              }
            },
            "CH19_TASK_ID": {
              "CH19_TASK_ID": {
                "bit": 0,
                "description": "ch19_task_id",
                "width": 8
              }
            },
            "CH20_EVT_ID": {
              "CH20_EVT_ID": {
                "bit": 0,
                "description": "ch20_evt_id",
                "width": 8
              }
            },
            "CH20_TASK_ID": {
              "CH20_TASK_ID": {
                "bit": 0,
                "description": "ch20_task_id",
                "width": 8
              }
            },
            "CH21_EVT_ID": {
              "CH21_EVT_ID": {
                "bit": 0,
                "description": "ch21_evt_id",
                "width": 8
              }
            },
            "CH21_TASK_ID": {
              "CH21_TASK_ID": {
                "bit": 0,
                "description": "ch21_task_id",
                "width": 8
              }
            },
            "CH22_EVT_ID": {
              "CH22_EVT_ID": {
                "bit": 0,
                "description": "ch22_evt_id",
                "width": 8
              }
            },
            "CH22_TASK_ID": {
              "CH22_TASK_ID": {
                "bit": 0,
                "description": "ch22_task_id",
                "width": 8
              }
            },
            "CH23_EVT_ID": {
              "CH23_EVT_ID": {
                "bit": 0,
                "description": "ch23_evt_id",
                "width": 8
              }
            },
            "CH23_TASK_ID": {
              "CH23_TASK_ID": {
                "bit": 0,
                "description": "ch23_task_id",
                "width": 8
              }
            },
            "CH24_EVT_ID": {
              "CH24_EVT_ID": {
                "bit": 0,
                "description": "ch24_evt_id",
                "width": 8
              }
            },
            "CH24_TASK_ID": {
              "CH24_TASK_ID": {
                "bit": 0,
                "description": "ch24_task_id",
                "width": 8
              }
            },
            "CH25_EVT_ID": {
              "CH25_EVT_ID": {
                "bit": 0,
                "description": "ch25_evt_id",
                "width": 8
              }
            },
            "CH25_TASK_ID": {
              "CH25_TASK_ID": {
                "bit": 0,
                "description": "ch25_task_id",
                "width": 8
              }
            },
            "CH26_EVT_ID": {
              "CH26_EVT_ID": {
                "bit": 0,
                "description": "ch26_evt_id",
                "width": 8
              }
            },
            "CH26_TASK_ID": {
              "CH26_TASK_ID": {
                "bit": 0,
                "description": "ch26_task_id",
                "width": 8
              }
            },
            "CH27_EVT_ID": {
              "CH27_EVT_ID": {
                "bit": 0,
                "description": "ch27_evt_id",
                "width": 8
              }
            },
            "CH27_TASK_ID": {
              "CH27_TASK_ID": {
                "bit": 0,
                "description": "ch27_task_id",
                "width": 8
              }
            },
            "CH28_EVT_ID": {
              "CH28_EVT_ID": {
                "bit": 0,
                "description": "ch28_evt_id",
                "width": 8
              }
            },
            "CH28_TASK_ID": {
              "CH28_TASK_ID": {
                "bit": 0,
                "description": "ch28_task_id",
                "width": 8
              }
            },
            "CH29_EVT_ID": {
              "CH29_EVT_ID": {
                "bit": 0,
                "description": "ch29_evt_id",
                "width": 8
              }
            },
            "CH29_TASK_ID": {
              "CH29_TASK_ID": {
                "bit": 0,
                "description": "ch29_task_id",
                "width": 8
              }
            },
            "CH30_EVT_ID": {
              "CH30_EVT_ID": {
                "bit": 0,
                "description": "ch30_evt_id",
                "width": 8
              }
            },
            "CH30_TASK_ID": {
              "CH30_TASK_ID": {
                "bit": 0,
                "description": "ch30_task_id",
                "width": 8
              }
            },
            "CH31_EVT_ID": {
              "CH31_EVT_ID": {
                "bit": 0,
                "description": "ch31_evt_id",
                "width": 8
              }
            },
            "CH31_TASK_ID": {
              "CH31_TASK_ID": {
                "bit": 0,
                "description": "ch31_task_id",
                "width": 8
              }
            },
            "CH32_EVT_ID": {
              "CH32_EVT_ID": {
                "bit": 0,
                "description": "ch32_evt_id",
                "width": 8
              }
            },
            "CH32_TASK_ID": {
              "CH32_TASK_ID": {
                "bit": 0,
                "description": "ch32_task_id",
                "width": 8
              }
            },
            "CH33_EVT_ID": {
              "CH33_EVT_ID": {
                "bit": 0,
                "description": "ch33_evt_id",
                "width": 8
              }
            },
            "CH33_TASK_ID": {
              "CH33_TASK_ID": {
                "bit": 0,
                "description": "ch33_task_id",
                "width": 8
              }
            },
            "CH34_EVT_ID": {
              "CH34_EVT_ID": {
                "bit": 0,
                "description": "ch34_evt_id",
                "width": 8
              }
            },
            "CH34_TASK_ID": {
              "CH34_TASK_ID": {
                "bit": 0,
                "description": "ch34_task_id",
                "width": 8
              }
            },
            "CH35_EVT_ID": {
              "CH35_EVT_ID": {
                "bit": 0,
                "description": "ch35_evt_id",
                "width": 8
              }
            },
            "CH35_TASK_ID": {
              "CH35_TASK_ID": {
                "bit": 0,
                "description": "ch35_task_id",
                "width": 8
              }
            },
            "CH36_EVT_ID": {
              "CH36_EVT_ID": {
                "bit": 0,
                "description": "ch36_evt_id",
                "width": 8
              }
            },
            "CH36_TASK_ID": {
              "CH36_TASK_ID": {
                "bit": 0,
                "description": "ch36_task_id",
                "width": 8
              }
            },
            "CH37_EVT_ID": {
              "CH37_EVT_ID": {
                "bit": 0,
                "description": "ch37_evt_id",
                "width": 8
              }
            },
            "CH37_TASK_ID": {
              "CH37_TASK_ID": {
                "bit": 0,
                "description": "ch37_task_id",
                "width": 8
              }
            },
            "CH38_EVT_ID": {
              "CH38_EVT_ID": {
                "bit": 0,
                "description": "ch38_evt_id",
                "width": 8
              }
            },
            "CH38_TASK_ID": {
              "CH38_TASK_ID": {
                "bit": 0,
                "description": "ch38_task_id",
                "width": 8
              }
            },
            "CH39_EVT_ID": {
              "CH39_EVT_ID": {
                "bit": 0,
                "description": "ch39_evt_id",
                "width": 8
              }
            },
            "CH39_TASK_ID": {
              "CH39_TASK_ID": {
                "bit": 0,
                "description": "ch39_task_id",
                "width": 8
              }
            },
            "CH40_EVT_ID": {
              "CH40_EVT_ID": {
                "bit": 0,
                "description": "ch40_evt_id",
                "width": 8
              }
            },
            "CH40_TASK_ID": {
              "CH40_TASK_ID": {
                "bit": 0,
                "description": "ch40_task_id",
                "width": 8
              }
            },
            "CH41_EVT_ID": {
              "CH41_EVT_ID": {
                "bit": 0,
                "description": "ch41_evt_id",
                "width": 8
              }
            },
            "CH41_TASK_ID": {
              "CH41_TASK_ID": {
                "bit": 0,
                "description": "ch41_task_id",
                "width": 8
              }
            },
            "CH42_EVT_ID": {
              "CH42_EVT_ID": {
                "bit": 0,
                "description": "ch42_evt_id",
                "width": 8
              }
            },
            "CH42_TASK_ID": {
              "CH42_TASK_ID": {
                "bit": 0,
                "description": "ch42_task_id",
                "width": 8
              }
            },
            "CH43_EVT_ID": {
              "CH43_EVT_ID": {
                "bit": 0,
                "description": "ch43_evt_id",
                "width": 8
              }
            },
            "CH43_TASK_ID": {
              "CH43_TASK_ID": {
                "bit": 0,
                "description": "ch43_task_id",
                "width": 8
              }
            },
            "CH44_EVT_ID": {
              "CH44_EVT_ID": {
                "bit": 0,
                "description": "ch44_evt_id",
                "width": 8
              }
            },
            "CH44_TASK_ID": {
              "CH44_TASK_ID": {
                "bit": 0,
                "description": "ch44_task_id",
                "width": 8
              }
            },
            "CH45_EVT_ID": {
              "CH45_EVT_ID": {
                "bit": 0,
                "description": "ch45_evt_id",
                "width": 8
              }
            },
            "CH45_TASK_ID": {
              "CH45_TASK_ID": {
                "bit": 0,
                "description": "ch45_task_id",
                "width": 8
              }
            },
            "CH46_EVT_ID": {
              "CH46_EVT_ID": {
                "bit": 0,
                "description": "ch46_evt_id",
                "width": 8
              }
            },
            "CH46_TASK_ID": {
              "CH46_TASK_ID": {
                "bit": 0,
                "description": "ch46_task_id",
                "width": 8
              }
            },
            "CH47_EVT_ID": {
              "CH47_EVT_ID": {
                "bit": 0,
                "description": "ch47_evt_id",
                "width": 8
              }
            },
            "CH47_TASK_ID": {
              "CH47_TASK_ID": {
                "bit": 0,
                "description": "ch47_task_id",
                "width": 8
              }
            },
            "CH48_EVT_ID": {
              "CH48_EVT_ID": {
                "bit": 0,
                "description": "ch48_evt_id",
                "width": 8
              }
            },
            "CH48_TASK_ID": {
              "CH48_TASK_ID": {
                "bit": 0,
                "description": "ch48_task_id",
                "width": 8
              }
            },
            "CH49_EVT_ID": {
              "CH49_EVT_ID": {
                "bit": 0,
                "description": "ch49_evt_id",
                "width": 8
              }
            },
            "CH49_TASK_ID": {
              "CH49_TASK_ID": {
                "bit": 0,
                "description": "ch49_task_id",
                "width": 8
              }
            },
            "CLK_EN": {
              "CLK_EN": {
                "bit": 0,
                "description": "clock enable"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "date",
                "width": 28
              }
            }
          }
        },
        "SPI": {
          "instances": [
            {
              "name": "SPI0",
              "base": "0x60002000"
            },
            {
              "name": "SPI1",
              "base": "0x60003000"
            },
            {
              "name": "SPI2",
              "base": "0x60081000",
              "irq": 30
            }
          ],
          "registers": {
            "SPI_MEM_CMD": {
              "offset": "0x00",
              "size": 32,
              "description": "SPI0 FSM status register"
            },
            "SPI_MEM_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "SPI0 control register."
            },
            "SPI_MEM_CTRL1": {
              "offset": "0x0C",
              "size": 32,
              "description": "SPI0 control1 register."
            },
            "SPI_MEM_CTRL2": {
              "offset": "0x10",
              "size": 32,
              "description": "SPI0 control2 register."
            },
            "SPI_MEM_CLOCK": {
              "offset": "0x14",
              "size": 32,
              "description": "SPI clock division control register."
            },
            "SPI_MEM_USER": {
              "offset": "0x18",
              "size": 32,
              "description": "SPI0 user register."
            },
            "SPI_MEM_USER1": {
              "offset": "0x1C",
              "size": 32,
              "description": "SPI0 user1 register."
            },
            "SPI_MEM_USER2": {
              "offset": "0x20",
              "size": 32,
              "description": "SPI0 user2 register."
            },
            "SPI_MEM_RD_STATUS": {
              "offset": "0x2C",
              "size": 32,
              "description": "SPI0 read control register."
            },
            "SPI_MEM_MISC": {
              "offset": "0x34",
              "size": 32,
              "description": "SPI0 misc register"
            },
            "SPI_MEM_CACHE_FCTRL": {
              "offset": "0x3C",
              "size": 32,
              "description": "SPI0 bit mode control register."
            },
            "SPI_MEM_CACHE_SCTRL": {
              "offset": "0x40",
              "size": 32,
              "description": "SPI0 external RAM control register"
            },
            "SPI_MEM_SRAM_CMD": {
              "offset": "0x44",
              "size": 32,
              "description": "SPI0 external RAM mode control register"
            },
            "SPI_MEM_SRAM_DRD_CMD": {
              "offset": "0x48",
              "size": 32,
              "description": "SPI0 external RAM DDR read command control register"
            },
            "SPI_MEM_SRAM_DWR_CMD": {
              "offset": "0x4C",
              "size": 32,
              "description": "SPI0 external RAM DDR write command control register"
            },
            "SPI_MEM_SRAM_CLK": {
              "offset": "0x50",
              "size": 32,
              "description": "SPI0 external RAM clock control register"
            },
            "SPI_MEM_FSM": {
              "offset": "0x54",
              "size": 32,
              "description": "SPI0 FSM status register"
            },
            "SPI_MEM_INT_ENA": {
              "offset": "0xC0",
              "size": 32,
              "description": "SPI0 interrupt enable register"
            },
            "SPI_MEM_INT_CLR": {
              "offset": "0xC4",
              "size": 32,
              "description": "SPI0 interrupt clear register"
            },
            "SPI_MEM_INT_RAW": {
              "offset": "0xC8",
              "size": 32,
              "description": "SPI0 interrupt raw register"
            },
            "SPI_MEM_INT_ST": {
              "offset": "0xCC",
              "size": 32,
              "description": "SPI0 interrupt status register"
            },
            "SPI_MEM_DDR": {
              "offset": "0xD4",
              "size": 32,
              "description": "SPI0 flash DDR mode control register"
            },
            "SPI_SMEM_DDR": {
              "offset": "0xD8",
              "size": 32,
              "description": "SPI0 external RAM DDR mode control register"
            },
            "SPI_FMEM_PMS%s_ATTR": {
              "offset": "0x100",
              "size": 32,
              "description": "MSPI flash ACE section %s attribute register"
            },
            "SPI_FMEM_PMS%s_ADDR": {
              "offset": "0x110",
              "size": 32,
              "description": "SPI1 flash ACE section %s start address register"
            },
            "SPI_FMEM_PMS%s_SIZE": {
              "offset": "0x120",
              "size": 32,
              "description": "SPI1 flash ACE section %s start address register"
            },
            "SPI_SMEM_PMS%s_ATTR": {
              "offset": "0x130",
              "size": 32,
              "description": "SPI1 flash ACE section %s start address register"
            },
            "SPI_SMEM_PMS%s_ADDR": {
              "offset": "0x140",
              "size": 32,
              "description": "SPI1 external RAM ACE section %s start address register"
            },
            "SPI_SMEM_PMS%s_SIZE": {
              "offset": "0x150",
              "size": 32,
              "description": "SPI1 external RAM ACE section %s start address register"
            },
            "SPI_MEM_PMS_REJECT": {
              "offset": "0x164",
              "size": 32,
              "description": "SPI1 access reject register"
            },
            "SPI_MEM_ECC_CTRL": {
              "offset": "0x168",
              "size": 32,
              "description": "MSPI ECC control register"
            },
            "SPI_MEM_ECC_ERR_ADDR": {
              "offset": "0x16C",
              "size": 32,
              "description": "MSPI ECC error address register"
            },
            "SPI_MEM_AXI_ERR_ADDR": {
              "offset": "0x170",
              "size": 32,
              "description": "SPI0 AXI request error address."
            },
            "SPI_SMEM_ECC_CTRL": {
              "offset": "0x174",
              "size": 32,
              "description": "MSPI ECC control register"
            },
            "SPI_MEM_TIMING_CALI": {
              "offset": "0x180",
              "size": 32,
              "description": "SPI0 flash timing calibration register"
            },
            "SPI_MEM_DIN_MODE": {
              "offset": "0x184",
              "size": 32,
              "description": "MSPI flash input timing delay mode control register"
            },
            "SPI_MEM_DIN_NUM": {
              "offset": "0x188",
              "size": 32,
              "description": "MSPI flash input timing delay number control register"
            },
            "SPI_MEM_DOUT_MODE": {
              "offset": "0x18C",
              "size": 32,
              "description": "MSPI flash output timing adjustment control register"
            },
            "SPI_SMEM_TIMING_CALI": {
              "offset": "0x190",
              "size": 32,
              "description": "MSPI external RAM timing calibration register"
            },
            "SPI_SMEM_DIN_MODE": {
              "offset": "0x194",
              "size": 32,
              "description": "MSPI external RAM input timing delay mode control register"
            },
            "SPI_SMEM_DIN_NUM": {
              "offset": "0x198",
              "size": 32,
              "description": "MSPI external RAM input timing delay number control register"
            },
            "SPI_SMEM_DOUT_MODE": {
              "offset": "0x19C",
              "size": 32,
              "description": "MSPI external RAM output timing adjustment control register"
            },
            "SPI_SMEM_AC": {
              "offset": "0x1A0",
              "size": 32,
              "description": "MSPI external RAM ECC and SPI CS timing control register"
            },
            "SPI_MEM_CLOCK_GATE": {
              "offset": "0x200",
              "size": 32,
              "description": "SPI0 clock gate register"
            },
            "SPI_MEM_XTS_PLAIN_BASE": {
              "offset": "0x300",
              "size": 32,
              "description": "The base address of the memory that stores plaintext in Manual Encryption"
            },
            "SPI_MEM_XTS_LINESIZE": {
              "offset": "0x340",
              "size": 32,
              "description": "Manual Encryption Line-Size register"
            },
            "SPI_MEM_XTS_DESTINATION": {
              "offset": "0x344",
              "size": 32,
              "description": "Manual Encryption destination register"
            },
            "SPI_MEM_XTS_PHYSICAL_ADDRESS": {
              "offset": "0x348",
              "size": 32,
              "description": "Manual Encryption physical address register"
            },
            "SPI_MEM_XTS_TRIGGER": {
              "offset": "0x34C",
              "size": 32,
              "description": "Manual Encryption physical address register"
            },
            "SPI_MEM_XTS_RELEASE": {
              "offset": "0x350",
              "size": 32,
              "description": "Manual Encryption physical address register"
            },
            "SPI_MEM_XTS_DESTROY": {
              "offset": "0x354",
              "size": 32,
              "description": "Manual Encryption physical address register"
            },
            "SPI_MEM_XTS_STATE": {
              "offset": "0x358",
              "size": 32,
              "description": "Manual Encryption physical address register"
            },
            "SPI_MEM_XTS_DATE": {
              "offset": "0x35C",
              "size": 32,
              "description": "Manual Encryption version register"
            },
            "SPI_MEM_MMU_ITEM_CONTENT": {
              "offset": "0x37C",
              "size": 32,
              "description": "MSPI-MMU item content register"
            },
            "SPI_MEM_MMU_ITEM_INDEX": {
              "offset": "0x380",
              "size": 32,
              "description": "MSPI-MMU item index register"
            },
            "SPI_MEM_MMU_POWER_CTRL": {
              "offset": "0x384",
              "size": 32,
              "description": "MSPI MMU power control register"
            },
            "SPI_MEM_DPA_CTRL": {
              "offset": "0x388",
              "size": 32,
              "description": "SPI memory cryption DPA register"
            },
            "SPI_MEM_REGISTERRND_ECO_HIGH": {
              "offset": "0x3F0",
              "size": 32,
              "description": "MSPI ECO high register"
            },
            "SPI_MEM_REGISTERRND_ECO_LOW": {
              "offset": "0x3F4",
              "size": 32,
              "description": "MSPI ECO low register"
            },
            "SPI_MEM_DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "SPI0 version control register"
            }
          },
          "bits": {
            "SPI_MEM_CMD": {
              "SPI_MEM_MST_ST": {
                "bit": 0,
                "description": "The current status of SPI0 master FSM: spi0_mst_st. 0: idle state, 1:SPI0_GRANT , 2: program/erase suspend state, 3: SPI0 read data state, 4: wait cache/EDMA sent data is stored in SPI0 TX FIFO, 5: SPI0 write data state.",
                "width": 4
              },
              "SPI_MEM_SLV_ST": {
                "bit": 4,
                "description": "The current status of SPI0 slave FSM: mspi_st. 0: idle state, 1: preparation state, 2: send command state, 3: send address state, 4: wait state, 5: read data state, 6:write data state, 7: done state, 8: read data end state.",
                "width": 4
              },
              "SPI_MEM_USR": {
                "bit": 18,
                "description": "SPI0 USR_CMD start bit, only used when SPI_MEM_AXI_REQ_EN is cleared.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
              }
            },
            "SPI_MEM_CTRL": {
              "SPI_MEM_WDUMMY_DQS_ALWAYS_OUT": {
                "bit": 0,
                "description": "In the dummy phase of an MSPI write data transfer when accesses to flash, the level of SPI_DQS is output by the MSPI controller."
              },
              "SPI_MEM_WDUMMY_ALWAYS_OUT": {
                "bit": 1,
                "description": "In the dummy phase of an MSPI write data transfer when accesses to flash, the level of SPI_IO[7:0] is output by the MSPI controller."
              },
              "SPI_MEM_FDUMMY_RIN": {
                "bit": 2,
                "description": "In an MSPI read data transfer when accesses to flash, the level of SPI_IO[7:0] is output by the MSPI controller in the first half part of dummy phase. It is used to mask invalid SPI_DQS in the half part of dummy phase."
              },
              "SPI_MEM_FDUMMY_WOUT": {
                "bit": 3,
                "description": "In an MSPI write data transfer when accesses to flash, the level of SPI_IO[7:0] is output by the MSPI controller in the second half part of dummy phase. It is used to pre-drive flash."
              },
              "SPI_MEM_FDOUT_OCT": {
                "bit": 4,
                "description": "Apply 8 signals during write-data phase 1:enable 0: disable"
              },
              "SPI_MEM_FDIN_OCT": {
                "bit": 5,
                "description": "Apply 8 signals during read-data phase 1:enable 0: disable"
              },
              "SPI_MEM_FADDR_OCT": {
                "bit": 6,
                "description": "Apply 8 signals during address phase 1:enable 0: disable"
              },
              "SPI_MEM_FCMD_QUAD": {
                "bit": 8,
                "description": "Apply 4 signals during command phase 1:enable 0: disable"
              },
              "SPI_MEM_FCMD_OCT": {
                "bit": 9,
                "description": "Apply 8 signals during command phase 1:enable 0: disable"
              },
              "SPI_MEM_FASTRD_MODE": {
                "bit": 13,
                "description": "This bit enable the bits: SPI_MEM_FREAD_QIO, SPI_MEM_FREAD_DIO, SPI_MEM_FREAD_QOUT and SPI_MEM_FREAD_DOUT. 1: enable 0: disable."
              },
              "SPI_MEM_FREAD_DUAL": {
                "bit": 14,
                "description": "In the read operations, read-data phase apply 2 signals. 1: enable 0: disable."
              },
              "SPI_MEM_Q_POL": {
                "bit": 18,
                "description": "The bit is used to set MISO line polarity, 1: high 0, low"
              },
              "SPI_MEM_D_POL": {
                "bit": 19,
                "description": "The bit is used to set MOSI line polarity, 1: high 0, low"
              },
              "SPI_MEM_FREAD_QUAD": {
                "bit": 20,
                "description": "In the read operations read-data phase apply 4 signals. 1: enable 0: disable."
              },
              "SPI_MEM_WP": {
                "bit": 21,
                "description": "Write protect signal output when SPI is idle.  1: output high, 0: output low."
              },
              "SPI_MEM_FREAD_DIO": {
                "bit": 23,
                "description": "In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable."
              },
              "SPI_MEM_FREAD_QIO": {
                "bit": 24,
                "description": "In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable."
              },
              "SPI_MEM_DQS_IE_ALWAYS_ON": {
                "bit": 30,
                "description": "When accesses to flash, 1: the IE signals of pads connected to SPI_DQS are always 1. 0: Others."
              },
              "SPI_MEM_DATA_IE_ALWAYS_ON": {
                "bit": 31,
                "description": "When accesses to flash, 1: the IE signals of pads connected to SPI_IO[7:0] are always 1. 0: Others."
              }
            },
            "SPI_MEM_CTRL1": {
              "SPI_MEM_CLK_MODE": {
                "bit": 0,
                "description": "SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on.",
                "width": 2
              },
              "SPI_AR_SIZE0_1_SUPPORT_EN": {
                "bit": 21,
                "description": "1: MSPI supports ARSIZE 0~3. When ARSIZE =0~2, MSPI read address is 4*n and reply the real AXI read data back. 0: When ARSIZE 0~1, MSPI reply SLV_ERR."
              },
              "SPI_AW_SIZE0_1_SUPPORT_EN": {
                "bit": 22,
                "description": "1: MSPI supports AWSIZE 0~3. 0: When AWSIZE 0~1, MSPI reply SLV_ERR."
              },
              "SPI_AXI_RDATA_BACK_FAST": {
                "bit": 23,
                "description": "1: Reply AXI read data to AXI bus when one AXI read beat data is available. 0: Reply AXI read data to AXI bus when all the read data is available."
              },
              "SPI_MEM_RRESP_ECC_ERR_EN": {
                "bit": 24,
                "description": "1: RRESP is SLV_ERR when there is a ECC error in AXI read data. 0: RRESP is OKAY when there is a ECC error in AXI read data. The ECC error information is recorded in SPI_MEM_ECC_ERR_ADDR_REG."
              },
              "SPI_MEM_AR_SPLICE_EN": {
                "bit": 25,
                "description": "Set this bit to enable AXI Read Splice-transfer."
              },
              "SPI_MEM_AW_SPLICE_EN": {
                "bit": 26,
                "description": "Set this bit to enable AXI Write Splice-transfer."
              },
              "SPI_MEM_RAM0_EN": {
                "bit": 27,
                "description": "When SPI_MEM_DUAL_RAM_EN is 0 and SPI_MEM_RAM0_EN is 1, only EXT_RAM0 will be accessed. When SPI_MEM_DUAL_RAM_EN is 0 and SPI_MEM_RAM0_EN is 0, only EXT_RAM1 will be accessed. When SPI_MEM_DUAL_RAM_EN is 1,  EXT_RAM0 and EXT_RAM1 will be accessed at the same time."
              },
              "SPI_MEM_DUAL_RAM_EN": {
                "bit": 28,
                "description": "Set this bit to enable DUAL-RAM mode, EXT_RAM0 and EXT_RAM1 will be accessed at the same time."
              },
              "SPI_MEM_FAST_WRITE_EN": {
                "bit": 29,
                "description": "Set this bit to write data faster, do not wait write data has been stored in tx_bus_fifo_l2. It will wait 4*T_clk_ctrl to insure the write data has been stored in  tx_bus_fifo_l2."
              },
              "SPI_MEM_RXFIFO_RST": {
                "bit": 30,
                "description": "The synchronous reset signal for SPI0 RX AFIFO and all the AES_MSPI SYNC FIFO to receive signals from AXI.  Set this bit to reset these FIFO."
              },
              "SPI_MEM_TXFIFO_RST": {
                "bit": 31,
                "description": "The synchronous reset signal for SPI0 TX AFIFO and all the AES_MSPI SYNC FIFO to send signals to AXI. Set this bit to reset these FIFO."
              }
            },
            "SPI_MEM_CTRL2": {
              "SPI_MEM_CS_SETUP_TIME": {
                "bit": 0,
                "description": "(cycles-1) of prepare phase by SPI Bus clock, this bits are combined with SPI_MEM_CS_SETUP bit.",
                "width": 5
              },
              "SPI_MEM_CS_HOLD_TIME": {
                "bit": 5,
                "description": "SPI CS signal is delayed to inactive by SPI bus clock, this bits are combined with SPI_MEM_CS_HOLD bit.",
                "width": 5
              },
              "SPI_MEM_ECC_CS_HOLD_TIME": {
                "bit": 10,
                "description": "SPI_MEM_CS_HOLD_TIME + SPI_MEM_ECC_CS_HOLD_TIME is the SPI0 CS hold cycle in ECC mode when accessed flash.",
                "width": 3
              },
              "SPI_MEM_ECC_SKIP_PAGE_CORNER": {
                "bit": 13,
                "description": "1: SPI0 and SPI1 skip page corner when accesses flash. 0: Not skip page corner when accesses flash."
              },
              "SPI_MEM_ECC_16TO18_BYTE_EN": {
                "bit": 14,
                "description": "Set this bit to enable SPI0 and SPI1 ECC 16 bytes data with 2 ECC bytes mode when accesses flash."
              },
              "SPI_MEM_SPLIT_TRANS_EN": {
                "bit": 24,
                "description": "Set this bit to enable SPI0 split one AXI read flash transfer into two SPI transfers when one transfer will cross flash or EXT_RAM page corner, valid no matter whether there is an ECC region or not."
              },
              "SPI_MEM_CS_HOLD_DELAY": {
                "bit": 25,
                "description": "These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to flash. tSHSL is (SPI_MEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles.",
                "width": 6
              },
              "SPI_MEM_SYNC_RESET": {
                "bit": 31,
                "description": "The spi0_mst_st and spi0_slv_st will be reset."
              }
            },
            "SPI_MEM_CLOCK": {
              "SPI_MEM_CLKCNT_L": {
                "bit": 0,
                "description": "In the master mode it must be equal to spi_mem_clkcnt_N.",
                "width": 8
              },
              "SPI_MEM_CLKCNT_H": {
                "bit": 8,
                "description": "In the master mode it must be floor((spi_mem_clkcnt_N+1)/2-1).",
                "width": 8
              },
              "SPI_MEM_CLKCNT_N": {
                "bit": 16,
                "description": "In the master mode it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)",
                "width": 8
              },
              "SPI_MEM_CLK_EQU_SYSCLK": {
                "bit": 31,
                "description": "1: 1-division mode, the frequency of SPI bus clock equals to that of MSPI module clock."
              }
            },
            "SPI_MEM_USER": {
              "SPI_MEM_CS_HOLD": {
                "bit": 6,
                "description": "spi cs keep low when spi is in  done  phase. 1: enable 0: disable."
              },
              "SPI_MEM_CS_SETUP": {
                "bit": 7,
                "description": "spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable."
              },
              "SPI_MEM_CK_OUT_EDGE": {
                "bit": 9,
                "description": "The bit combined with SPI_MEM_CK_IDLE_EDGE bit to control SPI clock mode 0~3."
              },
              "SPI_MEM_USR_DUMMY_IDLE": {
                "bit": 26,
                "description": "spi clock is disable in dummy phase when the bit is enable."
              },
              "SPI_MEM_USR_DUMMY": {
                "bit": 29,
                "description": "This bit enable the dummy phase of an operation."
              }
            },
            "SPI_MEM_USER1": {
              "SPI_MEM_USR_DUMMY_CYCLELEN": {
                "bit": 0,
                "description": "The length in spi_mem_clk cycles of dummy phase. The register value shall be (cycle_num-1).",
                "width": 6
              },
              "SPI_MEM_USR_DBYTELEN": {
                "bit": 6,
                "description": "SPI0 USR_CMD read or write data byte length -1",
                "width": 3
              },
              "SPI_MEM_USR_ADDR_BITLEN": {
                "bit": 26,
                "description": "The length in bits of address phase. The register value shall be (bit_num-1).",
                "width": 6
              }
            },
            "SPI_MEM_USER2": {
              "SPI_MEM_USR_COMMAND_VALUE": {
                "bit": 0,
                "description": "The value of  command.",
                "width": 16
              },
              "SPI_MEM_USR_COMMAND_BITLEN": {
                "bit": 28,
                "description": "The length in bits of command phase. The register value shall be (bit_num-1)",
                "width": 4
              }
            },
            "SPI_MEM_RD_STATUS": {
              "SPI_MEM_WB_MODE": {
                "bit": 16,
                "description": "Mode bits in the flash fast read mode  it is combined with spi_mem_fastrd_mode bit.",
                "width": 8
              }
            },
            "SPI_MEM_MISC": {
              "SPI_MEM_FSUB_PIN": {
                "bit": 7,
                "description": "For SPI0,  flash is connected to SUBPINs."
              },
              "SPI_MEM_SSUB_PIN": {
                "bit": 8,
                "description": "For SPI0,  sram is connected to SUBPINs."
              },
              "SPI_MEM_CK_IDLE_EDGE": {
                "bit": 9,
                "description": "1: SPI_CLK line is high when idle     0: spi clk line is low when idle"
              },
              "SPI_MEM_CS_KEEP_ACTIVE": {
                "bit": 10,
                "description": "SPI_CS line keep low when the bit is set."
              }
            },
            "SPI_MEM_CACHE_FCTRL": {
              "SPI_MEM_AXI_REQ_EN": {
                "bit": 0,
                "description": "For SPI0, AXI master access enable, 1: enable, 0:disable."
              },
              "SPI_MEM_CACHE_USR_ADDR_4BYTE": {
                "bit": 1,
                "description": "For SPI0,  cache  read flash with 4 bytes address, 1: enable, 0:disable."
              },
              "SPI_MEM_CACHE_FLASH_USR_CMD": {
                "bit": 2,
                "description": "For SPI0,  cache  read flash for user define command, 1: enable, 0:disable."
              },
              "SPI_MEM_FDIN_DUAL": {
                "bit": 3,
                "description": "For SPI0 flash, din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
              },
              "SPI_MEM_FDOUT_DUAL": {
                "bit": 4,
                "description": "For SPI0 flash, dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
              },
              "SPI_MEM_FADDR_DUAL": {
                "bit": 5,
                "description": "For SPI0 flash, address phase apply 2 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_dio."
              },
              "SPI_MEM_FDIN_QUAD": {
                "bit": 6,
                "description": "For SPI0 flash, din phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
              },
              "SPI_MEM_FDOUT_QUAD": {
                "bit": 7,
                "description": "For SPI0 flash, dout phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
              },
              "SPI_MEM_FADDR_QUAD": {
                "bit": 8,
                "description": "For SPI0 flash, address phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
              },
              "SPI_SAME_AW_AR_ADDR_CHK_EN": {
                "bit": 30,
                "description": "Set this bit to check AXI read/write the same address region."
              },
              "SPI_CLOSE_AXI_INF_EN": {
                "bit": 31,
                "description": "Set this bit to close AXI read/write transfer to MSPI, which means that only SLV_ERR will be replied to BRESP/RRESP."
              }
            },
            "SPI_MEM_CACHE_SCTRL": {
              "SPI_MEM_CACHE_USR_SADDR_4BYTE": {
                "bit": 0,
                "description": "For SPI0, In the external RAM mode, cache read flash with 4 bytes command, 1: enable, 0:disable."
              },
              "SPI_MEM_USR_SRAM_DIO": {
                "bit": 1,
                "description": "For SPI0, In the external RAM mode, spi dual I/O mode enable, 1: enable, 0:disable"
              },
              "SPI_MEM_USR_SRAM_QIO": {
                "bit": 2,
                "description": "For SPI0, In the external RAM mode, spi quad I/O mode enable, 1: enable, 0:disable"
              },
              "SPI_MEM_USR_WR_SRAM_DUMMY": {
                "bit": 3,
                "description": "For SPI0, In the external RAM mode, it is the enable bit of dummy phase for write operations."
              },
              "SPI_MEM_USR_RD_SRAM_DUMMY": {
                "bit": 4,
                "description": "For SPI0, In the external RAM mode, it is the enable bit of dummy phase for read operations."
              },
              "SPI_MEM_CACHE_SRAM_USR_RCMD": {
                "bit": 5,
                "description": "For SPI0, In the external RAM mode cache read external RAM for user define command."
              },
              "SPI_MEM_SRAM_RDUMMY_CYCLELEN": {
                "bit": 6,
                "description": "For SPI0, In the external RAM mode, it is the length in bits of read dummy phase. The register value shall be (bit_num-1).",
                "width": 6
              },
              "SPI_MEM_SRAM_ADDR_BITLEN": {
                "bit": 14,
                "description": "For SPI0, In the external RAM mode, it is the length in bits of address phase. The register value shall be (bit_num-1).",
                "width": 6
              },
              "SPI_MEM_CACHE_SRAM_USR_WCMD": {
                "bit": 20,
                "description": "For SPI0, In the external RAM mode cache write sram for user define command"
              },
              "SPI_MEM_SRAM_OCT": {
                "bit": 21,
                "description": "reserved"
              },
              "SPI_MEM_SRAM_WDUMMY_CYCLELEN": {
                "bit": 22,
                "description": "For SPI0, In the external RAM mode, it is the length in bits of write dummy phase. The register value shall be (bit_num-1).",
                "width": 6
              }
            },
            "SPI_MEM_SRAM_CMD": {
              "SPI_MEM_SCLK_MODE": {
                "bit": 0,
                "description": "SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is always on.",
                "width": 2
              },
              "SPI_MEM_SWB_MODE": {
                "bit": 2,
                "description": "Mode bits in the external RAM fast read mode  it is combined with spi_mem_fastrd_mode bit.",
                "width": 8
              },
              "SPI_MEM_SDIN_DUAL": {
                "bit": 10,
                "description": "For SPI0 external RAM , din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_dio."
              },
              "SPI_MEM_SDOUT_DUAL": {
                "bit": 11,
                "description": "For SPI0 external RAM , dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_dio."
              },
              "SPI_MEM_SADDR_DUAL": {
                "bit": 12,
                "description": "For SPI0 external RAM , address phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_dio."
              },
              "SPI_MEM_SDIN_QUAD": {
                "bit": 14,
                "description": "For SPI0 external RAM , din phase apply 4 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_qio."
              },
              "SPI_MEM_SDOUT_QUAD": {
                "bit": 15,
                "description": "For SPI0 external RAM , dout phase apply 4 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_qio."
              },
              "SPI_MEM_SADDR_QUAD": {
                "bit": 16,
                "description": "For SPI0 external RAM , address phase apply 4 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_qio."
              },
              "SPI_MEM_SCMD_QUAD": {
                "bit": 17,
                "description": "For SPI0 external RAM , cmd phase apply 4 signals. 1: enable 0: disable. The bit is the same with spi_mem_usr_sram_qio."
              },
              "SPI_MEM_SDIN_OCT": {
                "bit": 18,
                "description": "For SPI0 external RAM , din phase apply 8 signals. 1: enable 0: disable."
              },
              "SPI_MEM_SDOUT_OCT": {
                "bit": 19,
                "description": "For SPI0 external RAM , dout phase apply 8 signals. 1: enable 0: disable."
              },
              "SPI_MEM_SADDR_OCT": {
                "bit": 20,
                "description": "For SPI0 external RAM , address phase apply 4 signals. 1: enable 0: disable."
              },
              "SPI_MEM_SCMD_OCT": {
                "bit": 21,
                "description": "For SPI0 external RAM , cmd phase apply 8 signals. 1: enable 0: disable."
              },
              "SPI_MEM_SDUMMY_RIN": {
                "bit": 22,
                "description": "In the dummy phase of a MSPI read data transfer when accesses to external RAM, the signal level of SPI bus is output by the MSPI controller."
              },
              "SPI_MEM_SDUMMY_WOUT": {
                "bit": 23,
                "description": "In the dummy phase of a MSPI write data transfer when accesses to external RAM, the signal level of SPI bus is output by the MSPI controller."
              },
              "SPI_SMEM_WDUMMY_DQS_ALWAYS_OUT": {
                "bit": 24,
                "description": "In the dummy phase of an MSPI write data transfer when accesses to external RAM, the level of SPI_DQS is output by the MSPI controller."
              },
              "SPI_SMEM_WDUMMY_ALWAYS_OUT": {
                "bit": 25,
                "description": "In the dummy phase of an MSPI write data transfer when accesses to external RAM, the level of SPI_IO[7:0] is output by the MSPI controller."
              },
              "SPI_SMEM_DQS_IE_ALWAYS_ON": {
                "bit": 30,
                "description": "When accesses to external RAM, 1: the IE signals of pads connected to SPI_DQS are always 1. 0: Others."
              },
              "SPI_SMEM_DATA_IE_ALWAYS_ON": {
                "bit": 31,
                "description": "When accesses to external RAM, 1: the IE signals of pads connected to SPI_IO[7:0] are always 1. 0: Others."
              }
            },
            "SPI_MEM_SRAM_DRD_CMD": {
              "SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE": {
                "bit": 0,
                "description": "For SPI0,When cache mode is enable it is the read command value of command phase for sram.",
                "width": 16
              },
              "SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN": {
                "bit": 28,
                "description": "For SPI0,When cache mode is enable it is the length in bits of command phase for sram. The register value shall be (bit_num-1).",
                "width": 4
              }
            },
            "SPI_MEM_SRAM_DWR_CMD": {
              "SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE": {
                "bit": 0,
                "description": "For SPI0,When cache mode is enable it is the write command value of command phase for sram.",
                "width": 16
              },
              "SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN": {
                "bit": 28,
                "description": "For SPI0,When cache mode is enable it is the in bits of command phase  for sram. The register value shall be (bit_num-1).",
                "width": 4
              }
            },
            "SPI_MEM_SRAM_CLK": {
              "SPI_MEM_SCLKCNT_L": {
                "bit": 0,
                "description": "For SPI0 external RAM  interface, it must be equal to spi_mem_clkcnt_N.",
                "width": 8
              },
              "SPI_MEM_SCLKCNT_H": {
                "bit": 8,
                "description": "For SPI0 external RAM  interface, it must be floor((spi_mem_clkcnt_N+1)/2-1).",
                "width": 8
              },
              "SPI_MEM_SCLKCNT_N": {
                "bit": 16,
                "description": "For SPI0 external RAM  interface, it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)",
                "width": 8
              },
              "SPI_MEM_SCLK_EQU_SYSCLK": {
                "bit": 31,
                "description": "For SPI0 external RAM  interface, 1: spi_mem_clk is eqaul to system 0: spi_mem_clk is divided from system clock."
              }
            },
            "SPI_MEM_FSM": {
              "SPI_MEM_LOCK_DELAY_TIME": {
                "bit": 7,
                "description": "The lock delay time of SPI0/1 arbiter by spi0_slv_st, after PER is sent by SPI1.",
                "width": 5
              }
            },
            "SPI_MEM_INT_ENA": {
              "SPI_MEM_SLV_ST_END_INT_ENA": {
                "bit": 3,
                "description": "The enable bit for SPI_MEM_SLV_ST_END_INT interrupt."
              },
              "SPI_MEM_MST_ST_END_INT_ENA": {
                "bit": 4,
                "description": "The enable bit for SPI_MEM_MST_ST_END_INT interrupt."
              },
              "SPI_MEM_ECC_ERR_INT_ENA": {
                "bit": 5,
                "description": "The enable bit for SPI_MEM_ECC_ERR_INT interrupt."
              },
              "SPI_MEM_PMS_REJECT_INT_ENA": {
                "bit": 6,
                "description": "The enable bit for SPI_MEM_PMS_REJECT_INT interrupt."
              },
              "SPI_MEM_AXI_RADDR_ERR_INT_ENA": {
                "bit": 7,
                "description": "The enable bit for SPI_MEM_AXI_RADDR_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WR_FLASH_ERR_INT_ENA": {
                "bit": 8,
                "description": "The enable bit for SPI_MEM_AXI_WR_FALSH_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WADDR_ERR_INT__ENA": {
                "bit": 9,
                "description": "The enable bit for SPI_MEM_AXI_WADDR_ERR_INT interrupt."
              }
            },
            "SPI_MEM_INT_CLR": {
              "SPI_MEM_SLV_ST_END_INT_CLR": {
                "bit": 3,
                "description": "The clear bit for SPI_MEM_SLV_ST_END_INT interrupt."
              },
              "SPI_MEM_MST_ST_END_INT_CLR": {
                "bit": 4,
                "description": "The clear bit for SPI_MEM_MST_ST_END_INT interrupt."
              },
              "SPI_MEM_ECC_ERR_INT_CLR": {
                "bit": 5,
                "description": "The clear bit for SPI_MEM_ECC_ERR_INT interrupt."
              },
              "SPI_MEM_PMS_REJECT_INT_CLR": {
                "bit": 6,
                "description": "The clear bit for SPI_MEM_PMS_REJECT_INT interrupt."
              },
              "SPI_MEM_AXI_RADDR_ERR_INT_CLR": {
                "bit": 7,
                "description": "The clear bit for SPI_MEM_AXI_RADDR_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WR_FLASH_ERR_INT_CLR": {
                "bit": 8,
                "description": "The clear bit for SPI_MEM_AXI_WR_FALSH_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WADDR_ERR_INT_CLR": {
                "bit": 9,
                "description": "The clear bit for SPI_MEM_AXI_WADDR_ERR_INT interrupt."
              }
            },
            "SPI_MEM_INT_RAW": {
              "SPI_MEM_SLV_ST_END_INT_RAW": {
                "bit": 3,
                "description": "The raw bit for SPI_MEM_SLV_ST_END_INT interrupt. 1: Triggered when spi0_slv_st is changed from non idle state to idle state. It means that SPI_CS raises high. 0: Others"
              },
              "SPI_MEM_MST_ST_END_INT_RAW": {
                "bit": 4,
                "description": "The raw bit for SPI_MEM_MST_ST_END_INT interrupt. 1: Triggered when spi0_mst_st is changed from non idle state to idle state. 0: Others."
              },
              "SPI_MEM_ECC_ERR_INT_RAW": {
                "bit": 5,
                "description": "The raw bit for SPI_MEM_ECC_ERR_INT interrupt. When SPI_FMEM_ECC_ERR_INT_EN is set and  SPI_SMEM_ECC_ERR_INT_EN is cleared, this bit is triggered when the error times of SPI0/1 ECC read flash are equal or bigger than SPI_MEM_ECC_ERR_INT_NUM. When SPI_FMEM_ECC_ERR_INT_EN is cleared and  SPI_SMEM_ECC_ERR_INT_EN is set, this bit is triggered when the error times of SPI0/1 ECC read external RAM are equal or bigger than SPI_MEM_ECC_ERR_INT_NUM. When SPI_FMEM_ECC_ERR_INT_EN and  SPI_SMEM_ECC_ERR_INT_EN are set, this bit is triggered when the total error times of SPI0/1 ECC read external RAM and flash are equal or bigger than SPI_MEM_ECC_ERR_INT_NUM. When SPI_FMEM_ECC_ERR_INT_EN and  SPI_SMEM_ECC_ERR_INT_EN are cleared, this bit will not be triggered."
              },
              "SPI_MEM_PMS_REJECT_INT_RAW": {
                "bit": 6,
                "description": "The raw bit for SPI_MEM_PMS_REJECT_INT interrupt. 1: Triggered when SPI1 access is rejected. 0: Others."
              },
              "SPI_MEM_AXI_RADDR_ERR_INT_RAW": {
                "bit": 7,
                "description": "The raw bit for SPI_MEM_AXI_RADDR_ERR_INT interrupt. 1: Triggered when AXI read address is invalid by compared to MMU configuration. 0: Others."
              },
              "SPI_MEM_AXI_WR_FLASH_ERR_INT_RAW": {
                "bit": 8,
                "description": "The raw bit for SPI_MEM_AXI_WR_FALSH_ERR_INT interrupt. 1: Triggered when AXI write flash request is received. 0: Others."
              },
              "SPI_MEM_AXI_WADDR_ERR_INT_RAW": {
                "bit": 9,
                "description": "The raw bit for SPI_MEM_AXI_WADDR_ERR_INT interrupt. 1: Triggered when AXI write address is invalid by compared to MMU configuration. 0: Others."
              }
            },
            "SPI_MEM_INT_ST": {
              "SPI_MEM_SLV_ST_END_INT_ST": {
                "bit": 3,
                "description": "The status bit for SPI_MEM_SLV_ST_END_INT interrupt."
              },
              "SPI_MEM_MST_ST_END_INT_ST": {
                "bit": 4,
                "description": "The status bit for SPI_MEM_MST_ST_END_INT interrupt."
              },
              "SPI_MEM_ECC_ERR_INT_ST": {
                "bit": 5,
                "description": "The status bit for SPI_MEM_ECC_ERR_INT interrupt."
              },
              "SPI_MEM_PMS_REJECT_INT_ST": {
                "bit": 6,
                "description": "The status bit for SPI_MEM_PMS_REJECT_INT interrupt."
              },
              "SPI_MEM_AXI_RADDR_ERR_INT_ST": {
                "bit": 7,
                "description": "The enable bit for SPI_MEM_AXI_RADDR_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WR_FLASH_ERR_INT_ST": {
                "bit": 8,
                "description": "The enable bit for SPI_MEM_AXI_WR_FALSH_ERR_INT interrupt."
              },
              "SPI_MEM_AXI_WADDR_ERR_INT_ST": {
                "bit": 9,
                "description": "The enable bit for SPI_MEM_AXI_WADDR_ERR_INT interrupt."
              }
            },
            "SPI_MEM_DDR": {
              "SPI_FMEM_DDR_EN": {
                "bit": 0,
                "description": "1: in DDR mode,  0 in SDR mode"
              },
              "SPI_FMEM_VAR_DUMMY": {
                "bit": 1,
                "description": "Set the bit to enable variable dummy cycle in spi DDR mode."
              },
              "SPI_FMEM_DDR_RDAT_SWP": {
                "bit": 2,
                "description": "Set the bit to reorder rx data of the word in spi DDR mode."
              },
              "SPI_FMEM_DDR_WDAT_SWP": {
                "bit": 3,
                "description": "Set the bit to reorder tx data of the word in spi DDR mode."
              },
              "SPI_FMEM_DDR_CMD_DIS": {
                "bit": 4,
                "description": "the bit is used to disable dual edge in command phase when DDR mode."
              },
              "SPI_FMEM_OUTMINBYTELEN": {
                "bit": 5,
                "description": "It is the minimum output data length in the panda device.",
                "width": 7
              },
              "SPI_FMEM_TX_DDR_MSK_EN": {
                "bit": 12,
                "description": "Set this bit to mask the first or the last byte in SPI0 ECC DDR write mode, when accesses to flash."
              },
              "SPI_FMEM_RX_DDR_MSK_EN": {
                "bit": 13,
                "description": "Set this bit to mask the first or the last byte in SPI0 ECC DDR read mode, when accesses to flash."
              },
              "SPI_FMEM_USR_DDR_DQS_THD": {
                "bit": 14,
                "description": "The delay number of data strobe which from memory based on SPI clock.",
                "width": 7
              },
              "SPI_FMEM_DDR_DQS_LOOP": {
                "bit": 21,
                "description": "1: Do not need the input of SPI_DQS signal, SPI0 starts to receive data when spi0_slv_st is in SPI_MEM_DIN state. It is used when there is no SPI_DQS signal or SPI_DQS signal is not stable. 0: SPI0 starts to store data at the positive and negative edge of SPI_DQS."
              },
              "SPI_FMEM_CLK_DIFF_EN": {
                "bit": 24,
                "description": "Set this bit to enable the differential SPI_CLK#."
              },
              "SPI_FMEM_DQS_CA_IN": {
                "bit": 26,
                "description": "Set this bit to enable the input of SPI_DQS signal in SPI phases of CMD and ADDR."
              },
              "SPI_FMEM_HYPERBUS_DUMMY_2X": {
                "bit": 27,
                "description": "Set this bit to enable the vary dummy function in SPI HyperBus mode, when SPI0 accesses flash or SPI1 accesses flash or sram."
              },
              "SPI_FMEM_CLK_DIFF_INV": {
                "bit": 28,
                "description": "Set this bit to invert SPI_DIFF when accesses to flash. ."
              },
              "SPI_FMEM_OCTA_RAM_ADDR": {
                "bit": 29,
                "description": "Set this bit to enable octa_ram address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[25:4], 6'd0, spi_usr_addr_value[3:1], 1'b0}."
              },
              "SPI_FMEM_HYPERBUS_CA": {
                "bit": 30,
                "description": "Set this bit to enable HyperRAM address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[19:4], 13'd0, spi_usr_addr_value[3:1]}."
              }
            },
            "SPI_SMEM_DDR": {
              "EN": {
                "bit": 0,
                "description": "1: in DDR mode,  0 in SDR mode"
              },
              "SPI_SMEM_VAR_DUMMY": {
                "bit": 1,
                "description": "Set the bit to enable variable dummy cycle in spi DDR mode."
              },
              "RDAT_SWP": {
                "bit": 2,
                "description": "Set the bit to reorder rx data of the word in spi DDR mode."
              },
              "WDAT_SWP": {
                "bit": 3,
                "description": "Set the bit to reorder tx data of the word in spi DDR mode."
              },
              "CMD_DIS": {
                "bit": 4,
                "description": "the bit is used to disable dual edge in command phase when DDR mode."
              },
              "SPI_SMEM_OUTMINBYTELEN": {
                "bit": 5,
                "description": "It is the minimum output data length in the DDR psram.",
                "width": 7
              },
              "SPI_SMEM_TX_DDR_MSK_EN": {
                "bit": 12,
                "description": "Set this bit to mask the first or the last byte in SPI0 ECC DDR write mode, when accesses to external RAM."
              },
              "SPI_SMEM_RX_DDR_MSK_EN": {
                "bit": 13,
                "description": "Set this bit to mask the first or the last byte in SPI0 ECC DDR read mode, when accesses to external RAM."
              },
              "SPI_SMEM_USR_DDR_DQS_THD": {
                "bit": 14,
                "description": "The delay number of data strobe which from memory based on SPI clock.",
                "width": 7
              },
              "DQS_LOOP": {
                "bit": 21,
                "description": "1: Do not need the input of SPI_DQS signal, SPI0 starts to receive data when spi0_slv_st is in SPI_MEM_DIN state. It is used when there is no SPI_DQS signal or SPI_DQS signal is not stable. 0: SPI0 starts to store data at the positive and negative edge of SPI_DQS."
              },
              "SPI_SMEM_CLK_DIFF_EN": {
                "bit": 24,
                "description": "Set this bit to enable the differential SPI_CLK#."
              },
              "SPI_SMEM_DQS_CA_IN": {
                "bit": 26,
                "description": "Set this bit to enable the input of SPI_DQS signal in SPI phases of CMD and ADDR."
              },
              "SPI_SMEM_HYPERBUS_DUMMY_2X": {
                "bit": 27,
                "description": "Set this bit to enable the vary dummy function in SPI HyperBus mode, when SPI0 accesses flash or SPI1 accesses flash or sram."
              },
              "SPI_SMEM_CLK_DIFF_INV": {
                "bit": 28,
                "description": "Set this bit to invert SPI_DIFF when accesses to external RAM. ."
              },
              "SPI_SMEM_OCTA_RAM_ADDR": {
                "bit": 29,
                "description": "Set this bit to enable octa_ram address out when accesses to external RAM, which means ADDR_OUT[31:0] = {spi_usr_addr_value[25:4], 6'd0, spi_usr_addr_value[3:1], 1'b0}."
              },
              "SPI_SMEM_HYPERBUS_CA": {
                "bit": 30,
                "description": "Set this bit to enable HyperRAM address out when accesses to external RAM, which means ADDR_OUT[31:0] = {spi_usr_addr_value[19:4], 13'd0, spi_usr_addr_value[3:1]}."
              }
            },
            "SPI_FMEM_PMS%s_ATTR": {
              "SPI_FMEM_PMS_RD_ATTR": {
                "bit": 0,
                "description": "1: SPI1 flash ACE section %s read accessible. 0: Not allowed."
              },
              "SPI_FMEM_PMS_WR_ATTR": {
                "bit": 1,
                "description": "1: SPI1 flash ACE section %s write accessible. 0: Not allowed."
              },
              "SPI_FMEM_PMS_ECC": {
                "bit": 2,
                "description": "SPI1 flash ACE section %s ECC mode, 1: enable ECC mode. 0: Disable it. The flash ACE section %s is configured by registers SPI_FMEM_PMS%s_ADDR_REG and SPI_FMEM_PMS%s_SIZE_REG."
              }
            },
            "SPI_FMEM_PMS%s_ADDR": {
              "S": {
                "bit": 0,
                "description": "SPI1 flash ACE section %s start address value",
                "width": 26
              }
            },
            "SPI_FMEM_PMS%s_SIZE": {
              "SPI_FMEM_PMS_SIZE": {
                "bit": 0,
                "description": "SPI1 flash ACE section %s address region is (SPI_FMEM_PMS%s_ADDR_S, SPI_FMEM_PMS%s_ADDR_S + SPI_FMEM_PMS%s_SIZE)",
                "width": 14
              }
            },
            "SPI_SMEM_PMS%s_ATTR": {
              "SPI_SMEM_PMS_RD_ATTR": {
                "bit": 0,
                "description": "1: SPI1 external RAM ACE section %s read accessible. 0: Not allowed."
              },
              "SPI_SMEM_PMS_WR_ATTR": {
                "bit": 1,
                "description": "1: SPI1 external RAM ACE section %s write accessible. 0: Not allowed."
              },
              "SPI_SMEM_PMS_ECC": {
                "bit": 2,
                "description": "SPI1 external RAM ACE section %s ECC mode, 1: enable ECC mode. 0: Disable it. The external RAM ACE section %s is configured by registers SPI_SMEM_PMS%s_ADDR_REG and SPI_SMEM_PMS%s_SIZE_REG."
              }
            },
            "SPI_SMEM_PMS%s_ADDR": {
              "S": {
                "bit": 0,
                "description": "SPI1 external RAM ACE section %s start address value",
                "width": 26
              }
            },
            "SPI_SMEM_PMS%s_SIZE": {
              "SPI_SMEM_PMS_SIZE": {
                "bit": 0,
                "description": "SPI1 external RAM ACE section %s address region is (SPI_SMEM_PMS%s_ADDR_S, SPI_SMEM_PMS%s_ADDR_S + SPI_SMEM_PMS%s_SIZE)",
                "width": 14
              }
            },
            "SPI_MEM_PMS_REJECT": {
              "SPI_MEM_REJECT_ADDR": {
                "bit": 0,
                "description": "This bits show the first SPI1 access error address. It is cleared by when  SPI_MEM_PMS_REJECT_INT_CLR bit is set.",
                "width": 26
              },
              "SPI_MEM_PM_EN": {
                "bit": 26,
                "description": "Set this bit to enable SPI0/1 transfer permission control function."
              },
              "SPI_MEM_PMS_LD": {
                "bit": 28,
                "description": "1: SPI1 write access error. 0: No write access error. It is cleared by when  SPI_MEM_PMS_REJECT_INT_CLR bit is set."
              },
              "SPI_MEM_PMS_ST": {
                "bit": 29,
                "description": "1: SPI1 read access error. 0: No read access error. It is cleared by when  SPI_MEM_PMS_REJECT_INT_CLR bit is set."
              },
              "SPI_MEM_PMS_MULTI_HIT": {
                "bit": 30,
                "description": "1: SPI1 access is rejected because of address miss. 0: No address miss error. It is cleared by when  SPI_MEM_PMS_REJECT_INT_CLR bit is set."
              },
              "SPI_MEM_PMS_IVD": {
                "bit": 31,
                "description": "1: SPI1 access is rejected because of address multi-hit. 0: No address multi-hit error. It is cleared by when  SPI_MEM_PMS_REJECT_INT_CLR bit is set."
              }
            },
            "SPI_MEM_ECC_CTRL": {
              "SPI_FMEM_ECC_ERR_INT_NUM": {
                "bit": 11,
                "description": "Set the error times of MSPI ECC read to generate MSPI SPI_MEM_ECC_ERR_INT interrupt.",
                "width": 6
              },
              "SPI_FMEM_ECC_ERR_INT_EN": {
                "bit": 17,
                "description": "Set this bit to calculate the error times of MSPI ECC read when accesses to flash."
              },
              "SPI_FMEM_PAGE_SIZE": {
                "bit": 18,
                "description": "Set the page size of the flash accessed by MSPI. 0: 256 bytes. 1: 512 bytes. 2: 1024 bytes. 3: 2048 bytes.",
                "width": 2
              },
              "SPI_FMEM_ECC_ADDR_EN": {
                "bit": 20,
                "description": "Set this bit to enable MSPI ECC address conversion, no matter MSPI accesses to the ECC region or non-ECC region of flash. If there is no ECC region in flash, this bit should be 0. Otherwise, this bit should be 1."
              },
              "SPI_MEM_USR_ECC_ADDR_EN": {
                "bit": 21,
                "description": "Set this bit to enable ECC address convert in SPI0/1 USR_CMD transfer."
              },
              "SPI_MEM_ECC_CONTINUE_RECORD_ERR_EN": {
                "bit": 24,
                "description": "1: The error information in SPI_MEM_ECC_ERR_BITS and SPI_MEM_ECC_ERR_ADDR is updated when there is an ECC error. 0: SPI_MEM_ECC_ERR_BITS and SPI_MEM_ECC_ERR_ADDR record the first ECC error information."
              },
              "SPI_MEM_ECC_ERR_BITS": {
                "bit": 25,
                "description": "Records the first ECC error bit number in the 16 bytes(From 0~127, corresponding to byte 0 bit 0 to byte 15 bit 7)",
                "width": 7
              }
            },
            "SPI_MEM_ECC_ERR_ADDR": {
              "SPI_MEM_ECC_ERR_ADDR": {
                "bit": 0,
                "description": "This bits show the first MSPI ECC error address. It is cleared by when  SPI_MEM_ECC_ERR_INT_CLR bit is set.",
                "width": 26
              },
              "SPI_MEM_ECC_ERR_CNT": {
                "bit": 26,
                "description": "This bits show the error times of MSPI ECC read. It is cleared by when  SPI_MEM_ECC_ERR_INT_CLR bit is set.",
                "width": 6
              }
            },
            "SPI_MEM_AXI_ERR_ADDR": {
              "SPI_MEM_AXI_ERR_ADDR": {
                "bit": 0,
                "description": "This bits show the first AXI write/read invalid error or AXI write flash error address. It is cleared by when SPI_MEM_AXI_WADDR_ERR_INT_CLR, SPI_MEM_AXI_WR_FLASH_ERR_IN_CLR or SPI_MEM_AXI_RADDR_ERR_IN_CLR bit is set.",
                "width": 26
              },
              "SPI_MEM_ALL_FIFO_EMPTY": {
                "bit": 26,
                "description": "The empty status of all AFIFO and SYNC_FIFO in MSPI module. 1: All AXI transfers and SPI0 transfers are done. 0: Others."
              },
              "SPI_RDATA_AFIFO_REMPTY": {
                "bit": 27,
                "description": "1: RDATA_AFIFO is empty. 0: At least one AXI read transfer is pending."
              },
              "SPI_RADDR_AFIFO_REMPTY": {
                "bit": 28,
                "description": "1: AXI_RADDR_CTL_AFIFO is empty. 0: At least one AXI read transfer is pending."
              },
              "SPI_WDATA_AFIFO_REMPTY": {
                "bit": 29,
                "description": "1: WDATA_AFIFO is empty. 0: At least one AXI write transfer is pending."
              },
              "SPI_WBLEN_AFIFO_REMPTY": {
                "bit": 30,
                "description": "1: WBLEN_AFIFO is empty. 0: At least one AXI write transfer is pending."
              },
              "SPI_ALL_AXI_TRANS_AFIFO_EMPTY": {
                "bit": 31,
                "description": "This bit is set when WADDR_AFIFO, WBLEN_AFIFO, WDATA_AFIFO, AXI_RADDR_CTL_AFIFO and RDATA_AFIFO are empty and spi0_mst_st is IDLE."
              }
            },
            "SPI_SMEM_ECC_CTRL": {
              "SPI_SMEM_ECC_ERR_INT_EN": {
                "bit": 17,
                "description": "Set this bit to calculate the error times of MSPI ECC read when accesses to external RAM."
              },
              "SPI_SMEM_PAGE_SIZE": {
                "bit": 18,
                "description": "Set the page size of the external RAM accessed by MSPI. 0: 256 bytes. 1: 512 bytes. 2: 1024 bytes. 3: 2048 bytes.",
                "width": 2
              },
              "SPI_SMEM_ECC_ADDR_EN": {
                "bit": 20,
                "description": "Set this bit to enable MSPI ECC address conversion, no matter MSPI accesses to the ECC region or non-ECC region of external RAM. If there is no ECC region in external RAM, this bit should be 0. Otherwise, this bit should be 1."
              }
            },
            "SPI_MEM_TIMING_CALI": {
              "SPI_MEM_TIMING_CLK_ENA": {
                "bit": 0,
                "description": "The bit is used to enable timing adjust clock for all reading operations."
              },
              "SPI_MEM_TIMING_CALI": {
                "bit": 1,
                "description": "The bit is used to enable timing auto-calibration for all reading operations."
              },
              "SPI_MEM_EXTRA_DUMMY_CYCLELEN": {
                "bit": 2,
                "description": "add extra dummy spi clock cycle length for spi clock calibration.",
                "width": 3
              },
              "SPI_MEM_DLL_TIMING_CALI": {
                "bit": 5,
                "description": "Set this bit to enable DLL for timing calibration in DDR mode when accessed to flash."
              },
              "UPDATE": {
                "bit": 6,
                "description": "Set this bit to update delay mode, delay num and extra dummy in MSPI."
              }
            },
            "SPI_MEM_DIN_MODE": {
              "SPI_MEM_DIN0_MODE": {
                "bit": 0,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_MEM_DIN1_MODE": {
                "bit": 3,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_MEM_DIN2_MODE": {
                "bit": 6,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_MEM_DIN3_MODE": {
                "bit": 9,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_MEM_DIN4_MODE": {
                "bit": 12,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk",
                "width": 3
              },
              "SPI_MEM_DIN5_MODE": {
                "bit": 15,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk",
                "width": 3
              },
              "SPI_MEM_DIN6_MODE": {
                "bit": 18,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk",
                "width": 3
              },
              "SPI_MEM_DIN7_MODE": {
                "bit": 21,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk",
                "width": 3
              },
              "SPI_MEM_DINS_MODE": {
                "bit": 24,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk",
                "width": 3
              }
            },
            "SPI_MEM_DIN_NUM": {
              "SPI_MEM_DIN0_NUM": {
                "bit": 0,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN1_NUM": {
                "bit": 2,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN2_NUM": {
                "bit": 4,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN3_NUM": {
                "bit": 6,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN4_NUM": {
                "bit": 8,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN5_NUM": {
                "bit": 10,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN6_NUM": {
                "bit": 12,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DIN7_NUM": {
                "bit": 14,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_MEM_DINS_NUM": {
                "bit": 16,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              }
            },
            "SPI_MEM_DOUT_MODE": {
              "SPI_MEM_DOUT0_MODE": {
                "bit": 0,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_MEM_DOUT1_MODE": {
                "bit": 1,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_MEM_DOUT2_MODE": {
                "bit": 2,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_MEM_DOUT3_MODE": {
                "bit": 3,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_MEM_DOUT4_MODE": {
                "bit": 4,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the spi_clk"
              },
              "SPI_MEM_DOUT5_MODE": {
                "bit": 5,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the spi_clk"
              },
              "SPI_MEM_DOUT6_MODE": {
                "bit": 6,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the spi_clk"
              },
              "SPI_MEM_DOUT7_MODE": {
                "bit": 7,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the spi_clk"
              },
              "SPI_MEM_DOUTS_MODE": {
                "bit": 8,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the spi_clk"
              }
            },
            "SPI_SMEM_TIMING_CALI": {
              "SPI_SMEM_TIMING_CLK_ENA": {
                "bit": 0,
                "description": "For sram, the bit is used to enable timing adjust clock for all reading operations."
              },
              "SPI_SMEM_TIMING_CALI": {
                "bit": 1,
                "description": "For sram, the bit is used to enable timing auto-calibration for all reading operations."
              },
              "SPI_SMEM_EXTRA_DUMMY_CYCLELEN": {
                "bit": 2,
                "description": "For sram, add extra dummy spi clock cycle length for spi clock calibration.",
                "width": 3
              },
              "SPI_SMEM_DLL_TIMING_CALI": {
                "bit": 5,
                "description": "Set this bit to enable DLL for timing calibration in DDR mode when accessed to EXT_RAM."
              }
            },
            "SPI_SMEM_DIN_MODE": {
              "SPI_SMEM_DIN0_MODE": {
                "bit": 0,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN1_MODE": {
                "bit": 3,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN2_MODE": {
                "bit": 6,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN3_MODE": {
                "bit": 9,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN4_MODE": {
                "bit": 12,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN5_MODE": {
                "bit": 15,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN6_MODE": {
                "bit": 18,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DIN7_MODE": {
                "bit": 21,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              },
              "SPI_SMEM_DINS_MODE": {
                "bit": 24,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 3
              }
            },
            "SPI_SMEM_DIN_NUM": {
              "SPI_SMEM_DIN0_NUM": {
                "bit": 0,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN1_NUM": {
                "bit": 2,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN2_NUM": {
                "bit": 4,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN3_NUM": {
                "bit": 6,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN4_NUM": {
                "bit": 8,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN5_NUM": {
                "bit": 10,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN6_NUM": {
                "bit": 12,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DIN7_NUM": {
                "bit": 14,
                "description": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...",
                "width": 2
              },
              "SPI_SMEM_DINS_NUM": {
                "bit": 16,
                "description": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge",
                "width": 2
              }
            },
            "SPI_SMEM_DOUT_MODE": {
              "SPI_SMEM_DOUT0_MODE": {
                "bit": 0,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT1_MODE": {
                "bit": 1,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT2_MODE": {
                "bit": 2,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT3_MODE": {
                "bit": 3,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT4_MODE": {
                "bit": 4,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT5_MODE": {
                "bit": 5,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT6_MODE": {
                "bit": 6,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUT7_MODE": {
                "bit": 7,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              },
              "SPI_SMEM_DOUTS_MODE": {
                "bit": 8,
                "description": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
              }
            },
            "SPI_SMEM_AC": {
              "SPI_SMEM_CS_SETUP": {
                "bit": 0,
                "description": "For SPI0 and SPI1, spi cs is enable when spi is in prepare phase. 1: enable 0: disable."
              },
              "SPI_SMEM_CS_HOLD": {
                "bit": 1,
                "description": "For SPI0 and SPI1, spi cs keep low when spi is in done phase. 1: enable 0: disable."
              },
              "SPI_SMEM_CS_SETUP_TIME": {
                "bit": 2,
                "description": "For spi0, (cycles-1) of prepare phase by spi clock this bits are combined with spi_mem_cs_setup bit.",
                "width": 5
              },
              "SPI_SMEM_CS_HOLD_TIME": {
                "bit": 7,
                "description": "For SPI0 and SPI1, spi cs signal is delayed to inactive by spi clock this bits are combined with spi_mem_cs_hold bit.",
                "width": 5
              },
              "SPI_SMEM_ECC_CS_HOLD_TIME": {
                "bit": 12,
                "description": "SPI_SMEM_CS_HOLD_TIME + SPI_SMEM_ECC_CS_HOLD_TIME is the SPI0 and SPI1 CS hold cycles in ECC mode when accessed external RAM.",
                "width": 3
              },
              "SPI_SMEM_ECC_SKIP_PAGE_CORNER": {
                "bit": 15,
                "description": "1: SPI0 skips page corner when accesses external RAM. 0: Not skip page corner when accesses external RAM."
              },
              "SPI_SMEM_ECC_16TO18_BYTE_EN": {
                "bit": 16,
                "description": "Set this bit to enable SPI0 and SPI1 ECC 16 bytes data with 2 ECC bytes mode when accesses external RAM."
              },
              "SPI_SMEM_CS_HOLD_DELAY": {
                "bit": 25,
                "description": "These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to external RAM. tSHSL is (SPI_SMEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles.",
                "width": 6
              },
              "SPI_SMEM_SPLIT_TRANS_EN": {
                "bit": 31,
                "description": "Set this bit to enable SPI0 split one AXI accesses EXT_RAM transfer into two SPI transfers when one transfer will cross flash/EXT_RAM page corner, valid no matter whether there is an ECC region or not."
              }
            },
            "SPI_MEM_CLOCK_GATE": {
              "SPI_CLK_EN": {
                "bit": 0,
                "description": "Register clock gate enable signal. 1: Enable. 0: Disable."
              }
            },
            "SPI_MEM_XTS_PLAIN_BASE": {
              "SPI_XTS_PLAIN": {
                "bit": 0,
                "description": "This field is only used to generate include file in c case. This field is useless. Please do not use this field.",
                "width": 32
              }
            },
            "SPI_MEM_XTS_LINESIZE": {
              "SPI_XTS_LINESIZE": {
                "bit": 0,
                "description": "This bits stores the line-size parameter which will be used in manual encryption calculation. It decides how many bytes will be encrypted one time. 0: 16-bytes, 1: 32-bytes, 2: 64-bytes, 3:reserved.",
                "width": 2
              }
            },
            "SPI_MEM_XTS_DESTINATION": {
              "SPI_XTS_DESTINATION": {
                "bit": 0,
                "description": "This bit stores the destination parameter which will be used in manual encryption calculation. 0: flash(default), 1: psram(reserved). Only default value can be used."
              }
            },
            "SPI_MEM_XTS_PHYSICAL_ADDRESS": {
              "SPI_XTS_PHYSICAL_ADDRESS": {
                "bit": 0,
                "description": "This bits stores the physical-address parameter which will be used in manual encryption calculation. This value should aligned with byte number decided by line-size parameter.",
                "width": 26
              }
            },
            "SPI_MEM_XTS_TRIGGER": {
              "SPI_XTS_TRIGGER": {
                "bit": 0,
                "description": "Set this bit to trigger the process of manual encryption calculation. This action should only be asserted when manual encryption status is 0. After this action, manual encryption status becomes 1. After calculation is done, manual encryption status becomes 2."
              }
            },
            "SPI_MEM_XTS_RELEASE": {
              "SPI_XTS_RELEASE": {
                "bit": 0,
                "description": "Set this bit to release encrypted result to mspi. This action should only be asserted when manual encryption status is 2. After this action, manual encryption status will become 3."
              }
            },
            "SPI_MEM_XTS_DESTROY": {
              "SPI_XTS_DESTROY": {
                "bit": 0,
                "description": "Set this bit to destroy encrypted result. This action should be asserted only when manual encryption status is 3. After this action, manual encryption status will become 0."
              }
            },
            "SPI_MEM_XTS_STATE": {
              "SPI_XTS_STATE": {
                "bit": 0,
                "description": "This bits stores the status of manual encryption. 0: idle, 1: busy of encryption calculation, 2: encryption calculation is done but the encrypted result is invisible to mspi, 3: the encrypted result is visible to mspi.",
                "width": 2
              }
            },
            "SPI_MEM_XTS_DATE": {
              "SPI_XTS_DATE": {
                "bit": 0,
                "description": "This bits stores the last modified-time of manual encryption feature.",
                "width": 30
              }
            },
            "SPI_MEM_MMU_ITEM_CONTENT": {
              "SPI_MMU_ITEM_CONTENT": {
                "bit": 0,
                "description": "MSPI-MMU item content",
                "width": 32
              }
            },
            "SPI_MEM_MMU_ITEM_INDEX": {
              "SPI_MMU_ITEM_INDEX": {
                "bit": 0,
                "description": "MSPI-MMU item index",
                "width": 32
              }
            },
            "SPI_MEM_MMU_POWER_CTRL": {
              "SPI_MMU_MEM_FORCE_ON": {
                "bit": 0,
                "description": "Set this bit to enable mmu-memory clock force on"
              },
              "SPI_MMU_MEM_FORCE_PD": {
                "bit": 1,
                "description": "Set this bit to force mmu-memory powerdown"
              },
              "SPI_MMU_MEM_FORCE_PU": {
                "bit": 2,
                "description": "Set this bit to force mmu-memory powerup, in this case, the power should also be controlled by rtc."
              },
              "SPI_MMU_PAGE_SIZE": {
                "bit": 3,
                "description": "0: Max page size , 1: Max page size/2 , 2: Max page size/4, 3: Max page size/8",
                "width": 2
              },
              "SPI_MEM_AUX_CTRL": {
                "bit": 16,
                "description": "MMU PSRAM aux control register",
                "width": 14
              },
              "SPI_MEM_RDN_ENA": {
                "bit": 30,
                "description": "ECO register enable bit"
              },
              "SPI_MEM_RDN_RESULT": {
                "bit": 31,
                "description": "MSPI module clock domain and AXI clock domain ECO register result register"
              }
            },
            "SPI_MEM_DPA_CTRL": {
              "SPI_CRYPT_SECURITY_LEVEL": {
                "bit": 0,
                "description": "Set the security level of spi mem cryption. 0: Shut off cryption DPA funtion. 1-7: The bigger the number is, the more secure the cryption is. (Note that the performance of cryption will decrease together with this number increasing)",
                "width": 3
              },
              "SPI_CRYPT_CALC_D_DPA_EN": {
                "bit": 3,
                "description": "Only available when SPI_CRYPT_SECURITY_LEVEL is not 0. 1: Enable DPA in the calculation that using key 1 or key 2. 0: Enable DPA only in the calculation that using key 1."
              },
              "SPI_CRYPT_DPA_SELECT_REGISTER": {
                "bit": 4,
                "description": "1: MSPI XTS DPA clock gate is controlled by SPI_CRYPT_CALC_D_DPA_EN and SPI_CRYPT_SECURITY_LEVEL. 0: Controlled by efuse bits."
              }
            },
            "SPI_MEM_REGISTERRND_ECO_HIGH": {
              "SPI_MEM_REGISTERRND_ECO_HIGH": {
                "bit": 0,
                "description": "ECO high register",
                "width": 32
              }
            },
            "SPI_MEM_REGISTERRND_ECO_LOW": {
              "SPI_MEM_REGISTERRND_ECO_LOW": {
                "bit": 0,
                "description": "ECO low register",
                "width": 32
              }
            },
            "SPI_MEM_DATE": {
              "SPI_MEM_DATE": {
                "bit": 0,
                "description": "SPI0 register version.",
                "width": 28
              }
            }
          }
        },
        "TEE": {
          "instances": [
            {
              "name": "TEE",
              "base": "0x60098000"
            }
          ],
          "registers": {
            "M0_MODE_CTRL": {
              "offset": "0x00",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M1_MODE_CTRL": {
              "offset": "0x04",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M2_MODE_CTRL": {
              "offset": "0x08",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M3_MODE_CTRL": {
              "offset": "0x0C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M4_MODE_CTRL": {
              "offset": "0x10",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M5_MODE_CTRL": {
              "offset": "0x14",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M6_MODE_CTRL": {
              "offset": "0x18",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M7_MODE_CTRL": {
              "offset": "0x1C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M8_MODE_CTRL": {
              "offset": "0x20",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M9_MODE_CTRL": {
              "offset": "0x24",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M10_MODE_CTRL": {
              "offset": "0x28",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M11_MODE_CTRL": {
              "offset": "0x2C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M12_MODE_CTRL": {
              "offset": "0x30",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M13_MODE_CTRL": {
              "offset": "0x34",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M14_MODE_CTRL": {
              "offset": "0x38",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M15_MODE_CTRL": {
              "offset": "0x3C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M16_MODE_CTRL": {
              "offset": "0x40",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M17_MODE_CTRL": {
              "offset": "0x44",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M18_MODE_CTRL": {
              "offset": "0x48",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M19_MODE_CTRL": {
              "offset": "0x4C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M20_MODE_CTRL": {
              "offset": "0x50",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M21_MODE_CTRL": {
              "offset": "0x54",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M22_MODE_CTRL": {
              "offset": "0x58",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M23_MODE_CTRL": {
              "offset": "0x5C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M24_MODE_CTRL": {
              "offset": "0x60",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M25_MODE_CTRL": {
              "offset": "0x64",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M26_MODE_CTRL": {
              "offset": "0x68",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M27_MODE_CTRL": {
              "offset": "0x6C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M28_MODE_CTRL": {
              "offset": "0x70",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M29_MODE_CTRL": {
              "offset": "0x74",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M30_MODE_CTRL": {
              "offset": "0x78",
              "size": 32,
              "description": "Tee mode control register"
            },
            "M31_MODE_CTRL": {
              "offset": "0x7C",
              "size": 32,
              "description": "Tee mode control register"
            },
            "CLOCK_GATE": {
              "offset": "0x80",
              "size": 32,
              "description": "Clock gating register"
            },
            "DATE": {
              "offset": "0xFFC",
              "size": 32,
              "description": "Version register"
            }
          },
          "bits": {
            "M0_MODE_CTRL": {
              "M0_MODE": {
                "bit": 0,
                "description": "M0 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M1_MODE_CTRL": {
              "M1_MODE": {
                "bit": 0,
                "description": "M1 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M2_MODE_CTRL": {
              "M2_MODE": {
                "bit": 0,
                "description": "M2 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M3_MODE_CTRL": {
              "M3_MODE": {
                "bit": 0,
                "description": "M3 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M4_MODE_CTRL": {
              "M4_MODE": {
                "bit": 0,
                "description": "M4 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M5_MODE_CTRL": {
              "M5_MODE": {
                "bit": 0,
                "description": "M5 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M6_MODE_CTRL": {
              "M6_MODE": {
                "bit": 0,
                "description": "M6 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M7_MODE_CTRL": {
              "M7_MODE": {
                "bit": 0,
                "description": "M7 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M8_MODE_CTRL": {
              "M8_MODE": {
                "bit": 0,
                "description": "M8 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M9_MODE_CTRL": {
              "M9_MODE": {
                "bit": 0,
                "description": "M9 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M10_MODE_CTRL": {
              "M10_MODE": {
                "bit": 0,
                "description": "M10 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M11_MODE_CTRL": {
              "M11_MODE": {
                "bit": 0,
                "description": "M11 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M12_MODE_CTRL": {
              "M12_MODE": {
                "bit": 0,
                "description": "M12 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M13_MODE_CTRL": {
              "M13_MODE": {
                "bit": 0,
                "description": "M13 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M14_MODE_CTRL": {
              "M14_MODE": {
                "bit": 0,
                "description": "M14 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M15_MODE_CTRL": {
              "M15_MODE": {
                "bit": 0,
                "description": "M15 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M16_MODE_CTRL": {
              "M16_MODE": {
                "bit": 0,
                "description": "M16 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M17_MODE_CTRL": {
              "M17_MODE": {
                "bit": 0,
                "description": "M17 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M18_MODE_CTRL": {
              "M18_MODE": {
                "bit": 0,
                "description": "M18 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M19_MODE_CTRL": {
              "M19_MODE": {
                "bit": 0,
                "description": "M19 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M20_MODE_CTRL": {
              "M20_MODE": {
                "bit": 0,
                "description": "M20 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M21_MODE_CTRL": {
              "M21_MODE": {
                "bit": 0,
                "description": "M21 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M22_MODE_CTRL": {
              "M22_MODE": {
                "bit": 0,
                "description": "M22 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M23_MODE_CTRL": {
              "M23_MODE": {
                "bit": 0,
                "description": "M23 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M24_MODE_CTRL": {
              "M24_MODE": {
                "bit": 0,
                "description": "M24 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M25_MODE_CTRL": {
              "M25_MODE": {
                "bit": 0,
                "description": "M25 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M26_MODE_CTRL": {
              "M26_MODE": {
                "bit": 0,
                "description": "M26 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M27_MODE_CTRL": {
              "M27_MODE": {
                "bit": 0,
                "description": "M27 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M28_MODE_CTRL": {
              "M28_MODE": {
                "bit": 0,
                "description": "M28 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M29_MODE_CTRL": {
              "M29_MODE": {
                "bit": 0,
                "description": "M29 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M30_MODE_CTRL": {
              "M30_MODE": {
                "bit": 0,
                "description": "M30 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "M31_MODE_CTRL": {
              "M31_MODE": {
                "bit": 0,
                "description": "M31 security level mode: 2'd3: ree_mode2. 2'd2: ree_mode1. 2'd1: ree_mode0. 2'd0: tee_mode",
                "width": 2
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "reg_clk_en"
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "reg_tee_date",
                "width": 28
              }
            }
          }
        },
        "TRACE": {
          "instances": [
            {
              "name": "TRACE",
              "base": "0x600C0000",
              "irq": 12
            }
          ],
          "registers": {
            "MEM_START_ADDR": {
              "offset": "0x00",
              "size": 32,
              "description": "mem start addr"
            },
            "MEM_END_ADDR": {
              "offset": "0x04",
              "size": 32,
              "description": "mem end addr"
            },
            "MEM_CURRENT_ADDR": {
              "offset": "0x08",
              "size": 32,
              "description": "mem current addr"
            },
            "MEM_ADDR_UPDATE": {
              "offset": "0x0C",
              "size": 32,
              "description": "mem addr update"
            },
            "FIFO_STATUS": {
              "offset": "0x10",
              "size": 32,
              "description": "fifo status register"
            },
            "INTR_ENA": {
              "offset": "0x14",
              "size": 32,
              "description": "interrupt enable register"
            },
            "INTR_RAW": {
              "offset": "0x18",
              "size": 32,
              "description": "interrupt status register"
            },
            "INTR_CLR": {
              "offset": "0x1C",
              "size": 32,
              "description": "interrupt clear register"
            },
            "TRIGGER": {
              "offset": "0x20",
              "size": 32,
              "description": "trigger register"
            },
            "RESYNC_PROLONGED": {
              "offset": "0x24",
              "size": 32,
              "description": "resync configuration register"
            },
            "CLOCK_GATE": {
              "offset": "0x28",
              "size": 32,
              "description": "Clock gate control register"
            },
            "DATE": {
              "offset": "0x3FC",
              "size": 32,
              "description": "Version control register"
            }
          },
          "bits": {
            "MEM_START_ADDR": {
              "MEM_STAET_ADDR": {
                "bit": 0,
                "description": "The start address of trace memory",
                "width": 32
              }
            },
            "MEM_END_ADDR": {
              "MEM_END_ADDR": {
                "bit": 0,
                "description": "The end address of trace memory",
                "width": 32
              }
            },
            "MEM_CURRENT_ADDR": {
              "MEM_CURRENT_ADDR": {
                "bit": 0,
                "description": "current_mem_addr,indicate that next writing addr",
                "width": 32
              }
            },
            "MEM_ADDR_UPDATE": {
              "MEM_CURRENT_ADDR_UPDATE": {
                "bit": 0,
                "description": "when set this reg, the current_mem_addr will update to start_addr"
              }
            },
            "FIFO_STATUS": {
              "FIFO_EMPTY": {
                "bit": 0,
                "description": "1 indicate that fifo is empty"
              },
              "WORK_STATUS": {
                "bit": 1,
                "description": "mem_full interrupt status"
              }
            },
            "INTR_ENA": {
              "FIFO_OVERFLOW_INTR_ENA": {
                "bit": 0,
                "description": "Set 1 enable fifo_overflow interrupt"
              },
              "MEM_FULL_INTR_ENA": {
                "bit": 1,
                "description": "Set 1 enable mem_full interrupt"
              }
            },
            "INTR_RAW": {
              "FIFO_OVERFLOW_INTR_RAW": {
                "bit": 0,
                "description": "fifo_overflow interrupt status"
              },
              "MEM_FULL_INTR_RAW": {
                "bit": 1,
                "description": "mem_full interrupt status"
              }
            },
            "INTR_CLR": {
              "FIFO_OVERFLOW_INTR_CLR": {
                "bit": 0,
                "description": "Set 1 clr fifo overflow interrupt"
              },
              "MEM_FULL_INTR_CLR": {
                "bit": 1,
                "description": "Set 1 clr mem full interrupt"
              }
            },
            "TRIGGER": {
              "ON": {
                "bit": 0,
                "description": "[0] set 1 start trace."
              },
              "OFF": {
                "bit": 1,
                "description": "set 1 stop trace."
              },
              "MEM_LOOP": {
                "bit": 2,
                "description": "if this reg is 1, trace will loop wrtie trace_mem.  If is 0, when mem_current_addr at mem_end_addr, it will stop at the mem_end_addr"
              },
              "RESTART_ENA": {
                "bit": 3,
                "description": "enable encoder auto-restart, when lost package, the encoder will end, if enable auto-restart, when fifo empty, encoder will restart and send a sync package."
              }
            },
            "RESYNC_PROLONGED": {
              "RESYNC_PROLONGED": {
                "bit": 0,
                "description": "count number, when count to this value, send a sync package",
                "width": 24
              },
              "RESYNC_MODE": {
                "bit": 24,
                "description": "resyc mode sel: 0: default, cycle count   1: package num count"
              }
            },
            "CLOCK_GATE": {
              "CLK_EN": {
                "bit": 0,
                "description": "The bit is used to enable clock gate when access all registers in this module."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "version control register. Note that this default value stored is the latest date when the hardware logic was updated.",
                "width": 28
              }
            }
          }
        },
        "CAN": {
          "instances": [
            {
              "name": "TWAI0",
              "base": "0x6000C000",
              "irq": 36
            }
          ],
          "registers": {
            "MODE": {
              "offset": "0x00",
              "size": 32,
              "description": "TWAI mode register."
            },
            "CMD": {
              "offset": "0x04",
              "size": 32,
              "description": "TWAI command register."
            },
            "STATUS": {
              "offset": "0x08",
              "size": 32,
              "description": "TWAI status register."
            },
            "INTERRUPT": {
              "offset": "0x0C",
              "size": 32,
              "description": "Interrupt signals' register."
            },
            "INTERRUPT_ENABLE": {
              "offset": "0x10",
              "size": 32,
              "description": "Interrupt enable register."
            },
            "BUS_TIMING_0": {
              "offset": "0x18",
              "size": 32,
              "description": "Bit timing configuration register 0."
            },
            "BUS_TIMING_1": {
              "offset": "0x1C",
              "size": 32,
              "description": "Bit timing configuration register 1."
            },
            "ARB_LOST_CAP": {
              "offset": "0x2C",
              "size": 32,
              "description": "TWAI arbiter lost capture register."
            },
            "ERR_CODE_CAP": {
              "offset": "0x30",
              "size": 32,
              "description": "TWAI error info capture register."
            },
            "ERR_WARNING_LIMIT": {
              "offset": "0x34",
              "size": 32,
              "description": "TWAI error threshold configuration register."
            },
            "RX_ERR_CNT": {
              "offset": "0x38",
              "size": 32,
              "description": "Rx error counter register."
            },
            "TX_ERR_CNT": {
              "offset": "0x3C",
              "size": 32,
              "description": "Tx error counter register."
            },
            "DATA_0": {
              "offset": "0x40",
              "size": 32,
              "description": "Data register 0."
            },
            "DATA_1": {
              "offset": "0x44",
              "size": 32,
              "description": "Data register 1."
            },
            "DATA_2": {
              "offset": "0x48",
              "size": 32,
              "description": "Data register 2."
            },
            "DATA_3": {
              "offset": "0x4C",
              "size": 32,
              "description": "Data register 3."
            },
            "DATA_4": {
              "offset": "0x50",
              "size": 32,
              "description": "Data register 4."
            },
            "DATA_5": {
              "offset": "0x54",
              "size": 32,
              "description": "Data register 5."
            },
            "DATA_6": {
              "offset": "0x58",
              "size": 32,
              "description": "Data register 6."
            },
            "DATA_7": {
              "offset": "0x5C",
              "size": 32,
              "description": "Data register 7."
            },
            "DATA_8": {
              "offset": "0x60",
              "size": 32,
              "description": "Data register 8."
            },
            "DATA_9": {
              "offset": "0x64",
              "size": 32,
              "description": "Data register 9."
            },
            "DATA_10": {
              "offset": "0x68",
              "size": 32,
              "description": "Data register 10."
            },
            "DATA_11": {
              "offset": "0x6C",
              "size": 32,
              "description": "Data register 11."
            },
            "DATA_12": {
              "offset": "0x70",
              "size": 32,
              "description": "Data register 12."
            },
            "RX_MESSAGE_COUNTER": {
              "offset": "0x74",
              "size": 32,
              "description": "Received message counter register."
            },
            "CLOCK_DIVIDER": {
              "offset": "0x7C",
              "size": 32,
              "description": "Clock divider register."
            },
            "SW_STANDBY_CFG": {
              "offset": "0x80",
              "size": 32,
              "description": "Software configure standby pin directly."
            },
            "HW_CFG": {
              "offset": "0x84",
              "size": 32,
              "description": "Hardware configure standby pin."
            },
            "HW_STANDBY_CNT": {
              "offset": "0x88",
              "size": 32,
              "description": "Configure standby counter."
            },
            "IDLE_INTR_CNT": {
              "offset": "0x8C",
              "size": 32,
              "description": "Configure idle interrupt counter."
            },
            "ECO_CFG": {
              "offset": "0x90",
              "size": 32,
              "description": "ECO configuration register."
            }
          },
          "bits": {
            "MODE": {
              "RESET_MODE": {
                "bit": 0,
                "description": "1: reset, detection of a set reset mode bit results in aborting the current transmission/reception of a message and entering the reset mode. 0: normal, on the '1-to-0' transition of the reset mode bit, the TWAI controller returns to the operating mode."
              },
              "LISTEN_ONLY_MODE": {
                "bit": 1,
                "description": "1: listen only, in this mode the TWAI controller would give no acknowledge to the TWAI-bus, even if a message is received successfully. The error counters are stopped at the current value. 0: normal."
              },
              "SELF_TEST_MODE": {
                "bit": 2,
                "description": "1: self test, in this mode a full node test is possible without any other active node on the bus using the self reception request command. The TWAI controller will perform a successful transmission, even if there is no acknowledge received. 0: normal, an acknowledge is required for successful transmission."
              },
              "ACCEPTANCE_FILTER_MODE": {
                "bit": 3,
                "description": "1:single, the single acceptance filter option is enabled (one filter with the length of 32 bit is active). 0:dual, the dual acceptance filter option is enabled (two filters, each with the length of 16 bit are active)."
              }
            },
            "CMD": {
              "TX_REQUEST": {
                "bit": 0,
                "description": "1: present, a message shall be transmitted. 0: absent"
              },
              "ABORT_TX": {
                "bit": 1,
                "description": "1: present, if not already in progress, a pending transmission request is cancelled. 0: absent"
              },
              "RELEASE_BUFFER": {
                "bit": 2,
                "description": "1: released, the receive buffer, representing the message memory space in the RXFIFO is released. 0: no action"
              },
              "CLEAR_DATA_OVERRUN": {
                "bit": 3,
                "description": "1: clear, the data overrun status bit is cleared. 0: no action."
              },
              "SELF_RX_REQUEST": {
                "bit": 4,
                "description": "1: present, a message shall be transmitted and received simultaneously. 0: absent."
              }
            },
            "STATUS": {
              "RECEIVE_BUFFER": {
                "bit": 0,
                "description": "1: full, one or more complete messages are available in the RXFIFO. 0: empty, no message is available"
              },
              "OVERRUN": {
                "bit": 1,
                "description": "1: overrun, a message was lost because there was not enough space for that message in the RXFIFO. 0: absent, no data overrun has occurred since the last clear data overrun command was given"
              },
              "TRANSMIT_BUFFER": {
                "bit": 2,
                "description": "1: released, the CPU may write a message into the transmit buffer. 0: locked, the CPU cannot access the transmit buffer, a message is either waiting for transmission or is in the process of being transmitted"
              },
              "TRANSMISSION_COMPLETE": {
                "bit": 3,
                "description": "1: complete, last requested transmission has been successfully completed. 0: incomplete, previously requested transmission is not yet completed"
              },
              "RECEIVE": {
                "bit": 4,
                "description": "1: receive, the TWAI controller is receiving a message. 0: idle"
              },
              "TRANSMIT": {
                "bit": 5,
                "description": "1: transmit, the TWAI controller is transmitting a message. 0: idle"
              },
              "ERR": {
                "bit": 6,
                "description": "1: error, at least one of the error counters has reached or exceeded the CPU warning limit defined by the Error Warning Limit Register (EWLR). 0: ok, both error counters are below the warning limit"
              },
              "NODE_BUS_OFF": {
                "bit": 7,
                "description": "1: bus-off, the TWAI controller is not involved in bus activities. 0: bus-on, the TWAI controller is involved in bus activities"
              },
              "MISS": {
                "bit": 8,
                "description": "1: current message is destroyed because of FIFO overflow."
              }
            },
            "INTERRUPT": {
              "RECEIVE_INT_ST": {
                "bit": 0,
                "description": "1: this bit is set while the receive FIFO is not empty and the RIE bit is set within the interrupt enable register. 0: reset"
              },
              "TRANSMIT_INT_ST": {
                "bit": 1,
                "description": "1: this bit is set whenever the transmit buffer status changes from '0-to-1' (released) and the TIE bit is set within the interrupt enable register. 0: reset"
              },
              "ERR_WARNING_INT_ST": {
                "bit": 2,
                "description": "1: this bit is set on every change (set and clear) of either the error status or bus status bits and the EIE bit is set within the interrupt enable register. 0: reset"
              },
              "DATA_OVERRUN_INT_ST": {
                "bit": 3,
                "description": "1: this bit is set on a '0-to-1' transition of the data overrun status bit and the DOIE bit is set within the interrupt enable register. 0: reset"
              },
              "ERR_PASSIVE_INT_ST": {
                "bit": 5,
                "description": "1: this bit is set whenever the TWAI controller has reached the error passive status (at least one error counter exceeds the protocol-defined level of 127) or if the TWAI controller is in the error passive status and enters the error active status again and the EPIE bit is set within the interrupt enable register. 0: reset"
              },
              "ARBITRATION_LOST_INT_ST": {
                "bit": 6,
                "description": "1: this bit is set when the TWAI controller lost the arbitration and becomes a receiver and the ALIE bit is set within the interrupt enable register. 0: reset"
              },
              "BUS_ERR_INT_ST": {
                "bit": 7,
                "description": "1: this bit is set when the TWAI controller detects an error on the TWAI-bus and the BEIE bit is set within the interrupt enable register. 0: reset"
              },
              "IDLE_INT_ST": {
                "bit": 8,
                "description": "1: this bit is set when the TWAI controller detects state of TWAI become IDLE and this interrupt enable bit is set within the interrupt enable register. 0: reset"
              }
            },
            "INTERRUPT_ENABLE": {
              "EXT_RECEIVE_INT_ENA": {
                "bit": 0,
                "description": "1: enabled, when the receive buffer status is 'full' the TWAI controller requests the respective interrupt. 0: disable"
              },
              "EXT_TRANSMIT_INT_ENA": {
                "bit": 1,
                "description": "1: enabled, when a message has been successfully transmitted or the transmit buffer is accessible again (e.g. after an abort transmission command), the TWAI controller requests the respective interrupt. 0: disable"
              },
              "EXT_ERR_WARNING_INT_ENA": {
                "bit": 2,
                "description": "1: enabled, if the error or bus status change (see status register. Table 14), the TWAI controllerrequests the respective interrupt. 0: disable"
              },
              "EXT_DATA_OVERRUN_INT_ENA": {
                "bit": 3,
                "description": "1: enabled, if the data overrun status bit is set (see status register. Table 14), the TWAI controllerrequests the respective interrupt. 0: disable"
              },
              "ERR_PASSIVE_INT_ENA": {
                "bit": 5,
                "description": "1: enabled, if the error status of the TWAI controller changes from error active to error passive or vice versa, the respective interrupt is requested. 0: disable"
              },
              "ARBITRATION_LOST_INT_ENA": {
                "bit": 6,
                "description": "1: enabled, if the TWAI controller has lost arbitration, the respective interrupt is requested. 0: disable"
              },
              "BUS_ERR_INT_ENA": {
                "bit": 7,
                "description": "1: enabled, if an bus error has been detected, the TWAI controller requests the respective interrupt. 0: disable"
              },
              "IDLE_INT_ENA": {
                "bit": 8,
                "description": "1: enabled, if state of TWAI become IDLE, the TWAI controller requests the respective interrupt. 0: disable"
              }
            },
            "BUS_TIMING_0": {
              "BAUD_PRESC": {
                "bit": 0,
                "description": "The period of the TWAI system clock is programmable and determines the individual bit timing. Software has R/W permission in reset mode and RO permission in operation mode.",
                "width": 14
              },
              "SYNC_JUMP_WIDTH": {
                "bit": 14,
                "description": "The synchronization jump width defines the maximum number of clock cycles a bit period may be shortened or lengthened. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 2
              }
            },
            "BUS_TIMING_1": {
              "TIME_SEGMENT1": {
                "bit": 0,
                "description": "The number of clock cycles in TSEG1 per bit timing. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 4
              },
              "TIME_SEGMENT2": {
                "bit": 4,
                "description": "The number of clock cycles in TSEG2 per bit timing. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 3
              },
              "TIME_SAMPLING": {
                "bit": 7,
                "description": "1: triple, the bus is sampled three times. 0: single, the bus is sampled once. Software has R/W permission in reset mode and RO in operation mode."
              }
            },
            "ARB_LOST_CAP": {
              "ARBITRATION_LOST_CAPTURE": {
                "bit": 0,
                "description": "This register contains information about the bit position of losing arbitration.",
                "width": 5
              }
            },
            "ERR_CODE_CAP": {
              "ERR_CAPTURE_CODE_SEGMENT": {
                "bit": 0,
                "description": "This register contains information about the location of errors on the bus.",
                "width": 5
              },
              "ERR_CAPTURE_CODE_DIRECTION": {
                "bit": 5,
                "description": "1: RX, error occurred during reception. 0: TX, error occurred during transmission."
              },
              "ERR_CAPTURE_CODE_TYPE": {
                "bit": 6,
                "description": "00: bit error. 01: form error. 10:stuff error. 11:other type of error.",
                "width": 2
              }
            },
            "ERR_WARNING_LIMIT": {
              "ERR_WARNING_LIMIT": {
                "bit": 0,
                "description": "The threshold that trigger error warning interrupt when this interrupt is enabled. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 8
              }
            },
            "RX_ERR_CNT": {
              "RX_ERR_CNT": {
                "bit": 0,
                "description": "The RX error counter register reflects the current value of the transmit error counter. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 8
              }
            },
            "TX_ERR_CNT": {
              "TX_ERR_CNT": {
                "bit": 0,
                "description": "The TX error counter register reflects the current value of the transmit error counter. Software has R/W permission in reset mode and RO in operation mode.",
                "width": 8
              }
            },
            "DATA_0": {
              "DATA_0": {
                "bit": 0,
                "description": "In reset mode, it is acceptance code register 0 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 0 and when software initiate read operation, it is rx data register 0.",
                "width": 8
              }
            },
            "DATA_1": {
              "DATA_1": {
                "bit": 0,
                "description": "In reset mode, it is acceptance code register 1 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 1 and when software initiate read operation, it is rx data register 1.",
                "width": 8
              }
            },
            "DATA_2": {
              "DATA_2": {
                "bit": 0,
                "description": "In reset mode, it is acceptance code register 2 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 2 and when software initiate read operation, it is rx data register 2.",
                "width": 8
              }
            },
            "DATA_3": {
              "DATA_3": {
                "bit": 0,
                "description": "In reset mode, it is acceptance code register 3 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 3 and when software initiate read operation, it is rx data register 3.",
                "width": 8
              }
            },
            "DATA_4": {
              "DATA_4": {
                "bit": 0,
                "description": "In reset mode, it is acceptance mask register 0 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 4 and when software initiate read operation, it is rx data register 4.",
                "width": 8
              }
            },
            "DATA_5": {
              "DATA_5": {
                "bit": 0,
                "description": "In reset mode, it is acceptance mask register 1 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 5 and when software initiate read operation, it is rx data register 5.",
                "width": 8
              }
            },
            "DATA_6": {
              "DATA_6": {
                "bit": 0,
                "description": "In reset mode, it is acceptance mask register 2 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 6 and when software initiate read operation, it is rx data register 6.",
                "width": 8
              }
            },
            "DATA_7": {
              "DATA_7": {
                "bit": 0,
                "description": "In reset mode, it is acceptance mask register 3 with R/W Permission. In operation mode, when software initiate write operation, it is tx data register 7 and when software initiate read operation, it is rx data register 7.",
                "width": 8
              }
            },
            "DATA_8": {
              "DATA_8": {
                "bit": 0,
                "description": "In reset mode, reserved with RO. In operation mode, when software initiate write operation, it is tx data register 8 and when software initiate read operation, it is rx data register 8.",
                "width": 8
              }
            },
            "DATA_9": {
              "DATA_9": {
                "bit": 0,
                "description": "In reset mode, reserved with RO. In operation mode, when software initiate write operation, it is tx data register 9 and when software initiate read operation, it is rx data register 9.",
                "width": 8
              }
            },
            "DATA_10": {
              "DATA_10": {
                "bit": 0,
                "description": "In reset mode, reserved with RO. In operation mode, when software initiate write operation, it is tx data register 10 and when software initiate read operation, it is rx data register 10.",
                "width": 8
              }
            },
            "DATA_11": {
              "DATA_11": {
                "bit": 0,
                "description": "In reset mode, reserved with RO. In operation mode, when software initiate write operation, it is tx data register 11 and when software initiate read operation, it is rx data register 11.",
                "width": 8
              }
            },
            "DATA_12": {
              "DATA_12": {
                "bit": 0,
                "description": "In reset mode, reserved with RO. In operation mode, when software initiate write operation, it is tx data register 12 and when software initiate read operation, it is rx data register 12.",
                "width": 8
              }
            },
            "RX_MESSAGE_COUNTER": {
              "RX_MESSAGE_COUNTER": {
                "bit": 0,
                "description": "Reflects the number of messages available within the RXFIFO. The value is incremented with each receive event and decremented by the release receive buffer command.",
                "width": 7
              }
            },
            "CLOCK_DIVIDER": {
              "CD": {
                "bit": 0,
                "description": "These bits are used to define the frequency at the external CLKOUT pin.",
                "width": 8
              },
              "CLOCK_OFF": {
                "bit": 8,
                "description": "1: Disable the external CLKOUT pin. 0: Enable the external CLKOUT pin. Software has R/W permission in reset mode and RO in operation mode."
              }
            },
            "SW_STANDBY_CFG": {
              "SW_STANDBY_EN": {
                "bit": 0,
                "description": "Enable standby pin."
              },
              "SW_STANDBY_CLR": {
                "bit": 1,
                "description": "Clear standby pin."
              }
            },
            "HW_CFG": {
              "HW_STANDBY_EN": {
                "bit": 0,
                "description": "Enable function that hardware control standby pin."
              }
            },
            "HW_STANDBY_CNT": {
              "STANDBY_WAIT_CNT": {
                "bit": 0,
                "description": "Configure the number of cycles before standby becomes high when TWAI_HW_STANDBY_EN is enabled.",
                "width": 32
              }
            },
            "IDLE_INTR_CNT": {
              "IDLE_INTR_CNT": {
                "bit": 0,
                "description": "Configure the number of cycles before triggering idle interrupt.",
                "width": 32
              }
            },
            "ECO_CFG": {
              "RDN_ENA": {
                "bit": 0,
                "description": "Enable eco module."
              },
              "RDN_RESULT": {
                "bit": 1,
                "description": "Output of eco module."
              }
            }
          }
        },
        "USART": {
          "instances": [
            {
              "name": "UART0",
              "base": "0x60000000",
              "irq": 33
            },
            {
              "name": "UART1",
              "base": "0x60001000",
              "irq": 34
            }
          ],
          "registers": {
            "FIFO": {
              "offset": "0x00",
              "size": 32,
              "description": "FIFO data register"
            },
            "INT_RAW": {
              "offset": "0x04",
              "size": 32,
              "description": "Raw interrupt status"
            },
            "INT_ST": {
              "offset": "0x08",
              "size": 32,
              "description": "Masked interrupt status"
            },
            "INT_ENA": {
              "offset": "0x0C",
              "size": 32,
              "description": "Interrupt enable bits"
            },
            "INT_CLR": {
              "offset": "0x10",
              "size": 32,
              "description": "Interrupt clear bits"
            },
            "CLKDIV": {
              "offset": "0x14",
              "size": 32,
              "description": "Clock divider configuration"
            },
            "RX_FILT": {
              "offset": "0x18",
              "size": 32,
              "description": "Rx Filter configuration"
            },
            "STATUS": {
              "offset": "0x1C",
              "size": 32,
              "description": "UART status register"
            },
            "CONF0": {
              "offset": "0x20",
              "size": 32,
              "description": "a"
            },
            "CONF1": {
              "offset": "0x24",
              "size": 32,
              "description": "Configuration register 1"
            },
            "HWFC_CONF": {
              "offset": "0x2C",
              "size": 32,
              "description": "Hardware flow-control configuration"
            },
            "SLEEP_CONF0": {
              "offset": "0x30",
              "size": 32,
              "description": "UART sleep configure register 0"
            },
            "SLEEP_CONF1": {
              "offset": "0x34",
              "size": 32,
              "description": "UART sleep configure register 1"
            },
            "SLEEP_CONF2": {
              "offset": "0x38",
              "size": 32,
              "description": "UART sleep configure register 2"
            },
            "SWFC_CONF0": {
              "offset": "0x3C",
              "size": 32,
              "description": "Software flow-control character configuration"
            },
            "SWFC_CONF1": {
              "offset": "0x40",
              "size": 32,
              "description": "Software flow-control character configuration"
            },
            "TXBRK_CONF": {
              "offset": "0x44",
              "size": 32,
              "description": "Tx Break character configuration"
            },
            "IDLE_CONF": {
              "offset": "0x48",
              "size": 32,
              "description": "Frame-end idle configuration"
            },
            "RS485_CONF": {
              "offset": "0x4C",
              "size": 32,
              "description": "RS485 mode configuration"
            },
            "AT_CMD_PRECNT": {
              "offset": "0x50",
              "size": 32,
              "description": "Pre-sequence timing configuration"
            },
            "AT_CMD_POSTCNT": {
              "offset": "0x54",
              "size": 32,
              "description": "Post-sequence timing configuration"
            },
            "AT_CMD_GAPTOUT": {
              "offset": "0x58",
              "size": 32,
              "description": "Timeout configuration"
            },
            "AT_CMD_CHAR": {
              "offset": "0x5C",
              "size": 32,
              "description": "AT escape sequence detection configuration"
            },
            "MEM_CONF": {
              "offset": "0x60",
              "size": 32,
              "description": "UART memory power configuration"
            },
            "TOUT_CONF": {
              "offset": "0x64",
              "size": 32,
              "description": "UART threshold and allocation configuration"
            },
            "MEM_TX_STATUS": {
              "offset": "0x68",
              "size": 32,
              "description": "Tx-SRAM write and read offset address."
            },
            "MEM_RX_STATUS": {
              "offset": "0x6C",
              "size": 32,
              "description": "Rx-SRAM write and read offset address."
            },
            "FSM_STATUS": {
              "offset": "0x70",
              "size": 32,
              "description": "UART transmit and receive status."
            },
            "POSPULSE": {
              "offset": "0x74",
              "size": 32,
              "description": "Autobaud high pulse register"
            },
            "NEGPULSE": {
              "offset": "0x78",
              "size": 32,
              "description": "Autobaud low pulse register"
            },
            "LOWPULSE": {
              "offset": "0x7C",
              "size": 32,
              "description": "Autobaud minimum low pulse duration register"
            },
            "HIGHPULSE": {
              "offset": "0x80",
              "size": 32,
              "description": "Autobaud minimum high pulse duration register"
            },
            "RXD_CNT": {
              "offset": "0x84",
              "size": 32,
              "description": "Autobaud edge change count register"
            },
            "CLK_CONF": {
              "offset": "0x88",
              "size": 32,
              "description": "UART core clock configuration"
            },
            "DATE": {
              "offset": "0x8C",
              "size": 32,
              "description": "UART Version register"
            },
            "AFIFO_STATUS": {
              "offset": "0x90",
              "size": 32,
              "description": "UART AFIFO Status"
            },
            "REG_UPDATE": {
              "offset": "0x98",
              "size": 32,
              "description": "UART Registers Configuration Update register"
            },
            "ID": {
              "offset": "0x9C",
              "size": 32,
              "description": "UART ID register"
            }
          },
          "bits": {
            "FIFO": {
              "RXFIFO_RD_BYTE": {
                "bit": 0,
                "description": "UART 0 accesses FIFO via this register.",
                "width": 8
              }
            },
            "INT_RAW": {
              "RXFIFO_FULL_INT_RAW": {
                "bit": 0,
                "description": "This interrupt raw bit turns to high level when receiver receives more data than what rxfifo_full_thrhd specifies."
              },
              "TXFIFO_EMPTY_INT_RAW": {
                "bit": 1,
                "description": "This interrupt raw bit turns to high level when the amount of data in Tx-FIFO is less than what txfifo_empty_thrhd specifies ."
              },
              "PARITY_ERR_INT_RAW": {
                "bit": 2,
                "description": "This interrupt raw bit turns to high level when receiver detects a parity error in the data."
              },
              "FRM_ERR_INT_RAW": {
                "bit": 3,
                "description": "This interrupt raw bit turns to high level when receiver detects a data frame error ."
              },
              "RXFIFO_OVF_INT_RAW": {
                "bit": 4,
                "description": "This interrupt raw bit turns to high level when receiver receives more data than the FIFO can store."
              },
              "DSR_CHG_INT_RAW": {
                "bit": 5,
                "description": "This interrupt raw bit turns to high level when receiver detects the edge change of DSRn signal."
              },
              "CTS_CHG_INT_RAW": {
                "bit": 6,
                "description": "This interrupt raw bit turns to high level when receiver detects the edge change of CTSn signal."
              },
              "BRK_DET_INT_RAW": {
                "bit": 7,
                "description": "This interrupt raw bit turns to high level when receiver detects a 0 after the stop bit."
              },
              "RXFIFO_TOUT_INT_RAW": {
                "bit": 8,
                "description": "This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte."
              },
              "SW_XON_INT_RAW": {
                "bit": 9,
                "description": "This interrupt raw bit turns to high level when receiver recevies Xon char when uart_sw_flow_con_en is set to 1."
              },
              "SW_XOFF_INT_RAW": {
                "bit": 10,
                "description": "This interrupt raw bit turns to high level when receiver receives Xoff char when uart_sw_flow_con_en is set to 1."
              },
              "GLITCH_DET_INT_RAW": {
                "bit": 11,
                "description": "This interrupt raw bit turns to high level when receiver detects a glitch in the middle of a start bit."
              },
              "TX_BRK_DONE_INT_RAW": {
                "bit": 12,
                "description": "This interrupt raw bit turns to high level when transmitter completes  sending  NULL characters after all data in Tx-FIFO are sent."
              },
              "TX_BRK_IDLE_DONE_INT_RAW": {
                "bit": 13,
                "description": "This interrupt raw bit turns to high level when transmitter has kept the shortest duration after sending the  last data."
              },
              "TX_DONE_INT_RAW": {
                "bit": 14,
                "description": "This interrupt raw bit turns to high level when transmitter has send out all data in FIFO."
              },
              "RS485_PARITY_ERR_INT_RAW": {
                "bit": 15,
                "description": "This interrupt raw bit turns to high level when receiver detects a parity error from the echo of transmitter in rs485 mode."
              },
              "RS485_FRM_ERR_INT_RAW": {
                "bit": 16,
                "description": "This interrupt raw bit turns to high level when receiver detects a data frame error from the echo of transmitter in rs485 mode."
              },
              "RS485_CLASH_INT_RAW": {
                "bit": 17,
                "description": "This interrupt raw bit turns to high level when detects a clash between transmitter and receiver in rs485 mode."
              },
              "AT_CMD_CHAR_DET_INT_RAW": {
                "bit": 18,
                "description": "This interrupt raw bit turns to high level when receiver detects the configured at_cmd char."
              },
              "WAKEUP_INT_RAW": {
                "bit": 19,
                "description": "This interrupt raw bit turns to high level when input rxd edge changes more times than what reg_active_threshold specifies in light sleeping mode."
              }
            },
            "INT_ST": {
              "RXFIFO_FULL_INT_ST": {
                "bit": 0,
                "description": "This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1."
              },
              "TXFIFO_EMPTY_INT_ST": {
                "bit": 1,
                "description": "This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1."
              },
              "PARITY_ERR_INT_ST": {
                "bit": 2,
                "description": "This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1."
              },
              "FRM_ERR_INT_ST": {
                "bit": 3,
                "description": "This is the status bit for frm_err_int_raw when frm_err_int_ena is set to 1."
              },
              "RXFIFO_OVF_INT_ST": {
                "bit": 4,
                "description": "This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1."
              },
              "DSR_CHG_INT_ST": {
                "bit": 5,
                "description": "This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1."
              },
              "CTS_CHG_INT_ST": {
                "bit": 6,
                "description": "This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1."
              },
              "BRK_DET_INT_ST": {
                "bit": 7,
                "description": "This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1."
              },
              "RXFIFO_TOUT_INT_ST": {
                "bit": 8,
                "description": "This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1."
              },
              "SW_XON_INT_ST": {
                "bit": 9,
                "description": "This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1."
              },
              "SW_XOFF_INT_ST": {
                "bit": 10,
                "description": "This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1."
              },
              "GLITCH_DET_INT_ST": {
                "bit": 11,
                "description": "This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1."
              },
              "TX_BRK_DONE_INT_ST": {
                "bit": 12,
                "description": "This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1."
              },
              "TX_BRK_IDLE_DONE_INT_ST": {
                "bit": 13,
                "description": "This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1."
              },
              "TX_DONE_INT_ST": {
                "bit": 14,
                "description": "This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1."
              },
              "RS485_PARITY_ERR_INT_ST": {
                "bit": 15,
                "description": "This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1."
              },
              "RS485_FRM_ERR_INT_ST": {
                "bit": 16,
                "description": "This is the status bit for rs485_frm_err_int_raw when rs485_fm_err_int_ena is set to 1."
              },
              "RS485_CLASH_INT_ST": {
                "bit": 17,
                "description": "This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1."
              },
              "AT_CMD_CHAR_DET_INT_ST": {
                "bit": 18,
                "description": "This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1."
              },
              "WAKEUP_INT_ST": {
                "bit": 19,
                "description": "This is the status bit for uart_wakeup_int_raw when uart_wakeup_int_ena is set to 1."
              }
            },
            "INT_ENA": {
              "RXFIFO_FULL_INT_ENA": {
                "bit": 0,
                "description": "This is the enable bit for rxfifo_full_int_st register."
              },
              "TXFIFO_EMPTY_INT_ENA": {
                "bit": 1,
                "description": "This is the enable bit for txfifo_empty_int_st register."
              },
              "PARITY_ERR_INT_ENA": {
                "bit": 2,
                "description": "This is the enable bit for parity_err_int_st register."
              },
              "FRM_ERR_INT_ENA": {
                "bit": 3,
                "description": "This is the enable bit for frm_err_int_st register."
              },
              "RXFIFO_OVF_INT_ENA": {
                "bit": 4,
                "description": "This is the enable bit for rxfifo_ovf_int_st register."
              },
              "DSR_CHG_INT_ENA": {
                "bit": 5,
                "description": "This is the enable bit for dsr_chg_int_st register."
              },
              "CTS_CHG_INT_ENA": {
                "bit": 6,
                "description": "This is the enable bit for cts_chg_int_st register."
              },
              "BRK_DET_INT_ENA": {
                "bit": 7,
                "description": "This is the enable bit for brk_det_int_st register."
              },
              "RXFIFO_TOUT_INT_ENA": {
                "bit": 8,
                "description": "This is the enable bit for rxfifo_tout_int_st register."
              },
              "SW_XON_INT_ENA": {
                "bit": 9,
                "description": "This is the enable bit for sw_xon_int_st register."
              },
              "SW_XOFF_INT_ENA": {
                "bit": 10,
                "description": "This is the enable bit for sw_xoff_int_st register."
              },
              "GLITCH_DET_INT_ENA": {
                "bit": 11,
                "description": "This is the enable bit for glitch_det_int_st register."
              },
              "TX_BRK_DONE_INT_ENA": {
                "bit": 12,
                "description": "This is the enable bit for tx_brk_done_int_st register."
              },
              "TX_BRK_IDLE_DONE_INT_ENA": {
                "bit": 13,
                "description": "This is the enable bit for tx_brk_idle_done_int_st register."
              },
              "TX_DONE_INT_ENA": {
                "bit": 14,
                "description": "This is the enable bit for tx_done_int_st register."
              },
              "RS485_PARITY_ERR_INT_ENA": {
                "bit": 15,
                "description": "This is the enable bit for rs485_parity_err_int_st register."
              },
              "RS485_FRM_ERR_INT_ENA": {
                "bit": 16,
                "description": "This is the enable bit for rs485_parity_err_int_st register."
              },
              "RS485_CLASH_INT_ENA": {
                "bit": 17,
                "description": "This is the enable bit for rs485_clash_int_st register."
              },
              "AT_CMD_CHAR_DET_INT_ENA": {
                "bit": 18,
                "description": "This is the enable bit for at_cmd_char_det_int_st register."
              },
              "WAKEUP_INT_ENA": {
                "bit": 19,
                "description": "This is the enable bit for uart_wakeup_int_st register."
              }
            },
            "INT_CLR": {
              "RXFIFO_FULL_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear the rxfifo_full_int_raw interrupt."
              },
              "TXFIFO_EMPTY_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear txfifo_empty_int_raw interrupt."
              },
              "PARITY_ERR_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear parity_err_int_raw interrupt."
              },
              "FRM_ERR_INT_CLR": {
                "bit": 3,
                "description": "Set this bit to clear frm_err_int_raw interrupt."
              },
              "RXFIFO_OVF_INT_CLR": {
                "bit": 4,
                "description": "Set this bit to clear rxfifo_ovf_int_raw interrupt."
              },
              "DSR_CHG_INT_CLR": {
                "bit": 5,
                "description": "Set this bit to clear the dsr_chg_int_raw interrupt."
              },
              "CTS_CHG_INT_CLR": {
                "bit": 6,
                "description": "Set this bit to clear the cts_chg_int_raw interrupt."
              },
              "BRK_DET_INT_CLR": {
                "bit": 7,
                "description": "Set this bit to clear the brk_det_int_raw interrupt."
              },
              "RXFIFO_TOUT_INT_CLR": {
                "bit": 8,
                "description": "Set this bit to clear the rxfifo_tout_int_raw interrupt."
              },
              "SW_XON_INT_CLR": {
                "bit": 9,
                "description": "Set this bit to clear the sw_xon_int_raw interrupt."
              },
              "SW_XOFF_INT_CLR": {
                "bit": 10,
                "description": "Set this bit to clear the sw_xoff_int_raw interrupt."
              },
              "GLITCH_DET_INT_CLR": {
                "bit": 11,
                "description": "Set this bit to clear the glitch_det_int_raw interrupt."
              },
              "TX_BRK_DONE_INT_CLR": {
                "bit": 12,
                "description": "Set this bit to clear the tx_brk_done_int_raw interrupt.."
              },
              "TX_BRK_IDLE_DONE_INT_CLR": {
                "bit": 13,
                "description": "Set this bit to clear the tx_brk_idle_done_int_raw interrupt."
              },
              "TX_DONE_INT_CLR": {
                "bit": 14,
                "description": "Set this bit to clear the tx_done_int_raw interrupt."
              },
              "RS485_PARITY_ERR_INT_CLR": {
                "bit": 15,
                "description": "Set this bit to clear the rs485_parity_err_int_raw interrupt."
              },
              "RS485_FRM_ERR_INT_CLR": {
                "bit": 16,
                "description": "Set this bit to clear the rs485_frm_err_int_raw interrupt."
              },
              "RS485_CLASH_INT_CLR": {
                "bit": 17,
                "description": "Set this bit to clear the rs485_clash_int_raw interrupt."
              },
              "AT_CMD_CHAR_DET_INT_CLR": {
                "bit": 18,
                "description": "Set this bit to clear the at_cmd_char_det_int_raw interrupt."
              },
              "WAKEUP_INT_CLR": {
                "bit": 19,
                "description": "Set this bit to clear the uart_wakeup_int_raw interrupt."
              }
            },
            "CLKDIV": {
              "CLKDIV": {
                "bit": 0,
                "description": "The integral part of the frequency divider factor.",
                "width": 12
              },
              "FRAG": {
                "bit": 20,
                "description": "The decimal part of the frequency divider factor.",
                "width": 4
              }
            },
            "RX_FILT": {
              "GLITCH_FILT": {
                "bit": 0,
                "description": "when input pulse width is lower than this value the pulse is ignored.",
                "width": 8
              },
              "GLITCH_FILT_EN": {
                "bit": 8,
                "description": "Set this bit to enable Rx signal filter."
              }
            },
            "STATUS": {
              "RXFIFO_CNT": {
                "bit": 0,
                "description": "Stores the byte number of valid data in Rx-FIFO.",
                "width": 8
              },
              "DSRN": {
                "bit": 13,
                "description": "The register represent the level value of the internal uart dsr signal."
              },
              "CTSN": {
                "bit": 14,
                "description": "This register represent the level value of the internal uart cts signal."
              },
              "RXD": {
                "bit": 15,
                "description": "This register represent the  level value of the internal uart rxd signal."
              },
              "TXFIFO_CNT": {
                "bit": 16,
                "description": "Stores the byte number of data in Tx-FIFO.",
                "width": 8
              },
              "DTRN": {
                "bit": 29,
                "description": "This bit represents the level of the internal uart dtr signal."
              },
              "RTSN": {
                "bit": 30,
                "description": "This bit represents the level of the internal uart rts signal."
              },
              "TXD": {
                "bit": 31,
                "description": "This bit represents the  level of the internal uart txd signal."
              }
            },
            "CONF0": {
              "PARITY": {
                "bit": 0,
                "description": "This register is used to configure the parity check mode."
              },
              "PARITY_EN": {
                "bit": 1,
                "description": "Set this bit to enable uart parity check."
              },
              "BIT_NUM": {
                "bit": 2,
                "description": "This register is used to set the length of data.",
                "width": 2
              },
              "STOP_BIT_NUM": {
                "bit": 4,
                "description": "This register is used to set the length of  stop bit.",
                "width": 2
              },
              "TXD_BRK": {
                "bit": 6,
                "description": "Set this bit to enbale transmitter to  send NULL when the process of sending data is done."
              },
              "IRDA_DPLX": {
                "bit": 7,
                "description": "Set this bit to enable IrDA loopback mode."
              },
              "IRDA_TX_EN": {
                "bit": 8,
                "description": "This is the start enable bit for IrDA transmitter."
              },
              "IRDA_WCTL": {
                "bit": 9,
                "description": "1'h1: The IrDA transmitter's 11th bit is the same as 10th bit. 1'h0: Set IrDA transmitter's 11th bit to 0."
              },
              "IRDA_TX_INV": {
                "bit": 10,
                "description": "Set this bit to invert the level of  IrDA transmitter."
              },
              "IRDA_RX_INV": {
                "bit": 11,
                "description": "Set this bit to invert the level of IrDA receiver."
              },
              "LOOPBACK": {
                "bit": 12,
                "description": "Set this bit to enable uart loopback test mode."
              },
              "TX_FLOW_EN": {
                "bit": 13,
                "description": "Set this bit to enable flow control function for transmitter."
              },
              "IRDA_EN": {
                "bit": 14,
                "description": "Set this bit to enable IrDA protocol."
              },
              "RXD_INV": {
                "bit": 15,
                "description": "Set this bit to inverse the level value of uart rxd signal."
              },
              "TXD_INV": {
                "bit": 16,
                "description": "Set this bit to inverse the level value of uart txd signal."
              },
              "DIS_RX_DAT_OVF": {
                "bit": 17,
                "description": "Disable UART Rx data overflow detect."
              },
              "ERR_WR_MASK": {
                "bit": 18,
                "description": "1'h1: Receiver stops storing data into FIFO when data is wrong. 1'h0: Receiver stores the data even if the  received data is wrong."
              },
              "AUTOBAUD_EN": {
                "bit": 19,
                "description": "This is the enable bit for detecting baudrate."
              },
              "MEM_CLK_EN": {
                "bit": 20,
                "description": "UART memory clock gate enable signal."
              },
              "SW_RTS": {
                "bit": 21,
                "description": "This register is used to configure the software rts signal which is used in software flow control."
              },
              "RXFIFO_RST": {
                "bit": 22,
                "description": "Set this bit to reset the uart receive-FIFO."
              },
              "TXFIFO_RST": {
                "bit": 23,
                "description": "Set this bit to reset the uart transmit-FIFO."
              }
            },
            "CONF1": {
              "RXFIFO_FULL_THRHD": {
                "bit": 0,
                "description": "It will produce rxfifo_full_int interrupt when receiver receives more data than this register value.",
                "width": 8
              },
              "TXFIFO_EMPTY_THRHD": {
                "bit": 8,
                "description": "It will produce txfifo_empty_int interrupt when the data amount in Tx-FIFO is less than this register value.",
                "width": 8
              },
              "CTS_INV": {
                "bit": 16,
                "description": "Set this bit to inverse the level value of uart cts signal."
              },
              "DSR_INV": {
                "bit": 17,
                "description": "Set this bit to inverse the level value of uart dsr signal."
              },
              "RTS_INV": {
                "bit": 18,
                "description": "Set this bit to inverse the level value of uart rts signal."
              },
              "DTR_INV": {
                "bit": 19,
                "description": "Set this bit to inverse the level value of uart dtr signal."
              },
              "SW_DTR": {
                "bit": 20,
                "description": "This register is used to configure the software dtr signal which is used in software flow control."
              },
              "CLK_EN": {
                "bit": 21,
                "description": "1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers."
              }
            },
            "HWFC_CONF": {
              "RX_FLOW_THRHD": {
                "bit": 0,
                "description": "This register is used to configure the maximum amount of data that can be received  when hardware flow control works.",
                "width": 8
              },
              "RX_FLOW_EN": {
                "bit": 8,
                "description": "This is the flow enable bit for UART receiver."
              }
            },
            "SLEEP_CONF0": {
              "WK_CHAR1": {
                "bit": 0,
                "description": "This register restores the specified wake up char1 to wake up",
                "width": 8
              },
              "WK_CHAR2": {
                "bit": 8,
                "description": "This register restores the specified wake up char2 to wake up",
                "width": 8
              },
              "WK_CHAR3": {
                "bit": 16,
                "description": "This register restores the specified wake up char3 to wake up",
                "width": 8
              },
              "WK_CHAR4": {
                "bit": 24,
                "description": "This register restores the specified wake up char4 to wake up",
                "width": 8
              }
            },
            "SLEEP_CONF1": {
              "WK_CHAR0": {
                "bit": 0,
                "description": "This register restores the specified char0 to wake up",
                "width": 8
              }
            },
            "SLEEP_CONF2": {
              "ACTIVE_THRESHOLD": {
                "bit": 0,
                "description": "The uart is activated from light sleeping mode when the input rxd edge changes more times than this register value.",
                "width": 10
              },
              "RX_WAKE_UP_THRHD": {
                "bit": 10,
                "description": "In wake up mode 1 this field is used to set the received data number threshold to wake up chip.",
                "width": 8
              },
              "WK_CHAR_NUM": {
                "bit": 18,
                "description": "This register is used to select number of wake up char.",
                "width": 3
              },
              "WK_CHAR_MASK": {
                "bit": 21,
                "description": "This register is used to mask  wake up char.",
                "width": 5
              },
              "WK_MODE_SEL": {
                "bit": 26,
                "description": "This register is used to select wake up mode. 0: RXD toggling to wake up. 1: received data number larger than",
                "width": 2
              }
            },
            "SWFC_CONF0": {
              "XON_CHAR": {
                "bit": 0,
                "description": "This register stores the Xon flow control char.",
                "width": 8
              },
              "XOFF_CHAR": {
                "bit": 8,
                "description": "This register stores the Xoff flow control char.",
                "width": 8
              },
              "XON_XOFF_STILL_SEND": {
                "bit": 16,
                "description": "In software flow control mode, UART Tx is disabled once UART Rx receives XOFF. In this status, UART Tx can not transmit XOFF even the received data number is larger than UART_XOFF_THRESHOLD. Set this bit to enable UART Tx can transmit XON/XOFF when UART Tx is disabled."
              },
              "SW_FLOW_CON_EN": {
                "bit": 17,
                "description": "Set this bit to enable software flow control. It is used with register sw_xon or sw_xoff."
              },
              "XONOFF_DEL": {
                "bit": 18,
                "description": "Set this bit to remove flow control char from the received data."
              },
              "FORCE_XON": {
                "bit": 19,
                "description": "Set this bit to enable the transmitter to go on sending data."
              },
              "FORCE_XOFF": {
                "bit": 20,
                "description": "Set this bit to stop the  transmitter from sending data."
              },
              "SEND_XON": {
                "bit": 21,
                "description": "Set this bit to send Xon char. It is cleared by hardware automatically."
              },
              "SEND_XOFF": {
                "bit": 22,
                "description": "Set this bit to send Xoff char. It is cleared by hardware automatically."
              }
            },
            "SWFC_CONF1": {
              "XON_THRESHOLD": {
                "bit": 0,
                "description": "When the data amount in Rx-FIFO is less than this register value with uart_sw_flow_con_en set to 1  it will send a Xon char.",
                "width": 8
              },
              "XOFF_THRESHOLD": {
                "bit": 8,
                "description": "When the data amount in Rx-FIFO is more than this register value with uart_sw_flow_con_en set to 1  it will send a Xoff char.",
                "width": 8
              }
            },
            "TXBRK_CONF": {
              "TX_BRK_NUM": {
                "bit": 0,
                "description": "This register is used to configure the number of 0 to be sent after the process of sending data is done. It is active when txd_brk is set to 1.",
                "width": 8
              }
            },
            "IDLE_CONF": {
              "RX_IDLE_THRHD": {
                "bit": 0,
                "description": "It will produce frame end signal when receiver takes more time to receive one byte data than this register value.",
                "width": 10
              },
              "TX_IDLE_NUM": {
                "bit": 10,
                "description": "This register is used to configure the duration time between transfers.",
                "width": 10
              }
            },
            "RS485_CONF": {
              "RS485_EN": {
                "bit": 0,
                "description": "Set this bit to choose the rs485 mode."
              },
              "DL0_EN": {
                "bit": 1,
                "description": "Set this bit to delay the stop bit by 1 bit."
              },
              "DL1_EN": {
                "bit": 2,
                "description": "Set this bit to delay the stop bit by 1 bit."
              },
              "RS485TX_RX_EN": {
                "bit": 3,
                "description": "Set this bit to enable receiver could receive data when the transmitter is transmitting data in rs485 mode."
              },
              "RS485RXBY_TX_EN": {
                "bit": 4,
                "description": "1'h1: enable rs485 transmitter to send data when rs485 receiver line is busy."
              },
              "RS485_RX_DLY_NUM": {
                "bit": 5,
                "description": "This register is used to delay the receiver's internal data signal."
              },
              "RS485_TX_DLY_NUM": {
                "bit": 6,
                "description": "This register is used to delay the transmitter's internal data signal.",
                "width": 4
              }
            },
            "AT_CMD_PRECNT": {
              "PRE_IDLE_NUM": {
                "bit": 0,
                "description": "This register is used to configure the idle duration time before the first at_cmd is received by receiver.",
                "width": 16
              }
            },
            "AT_CMD_POSTCNT": {
              "POST_IDLE_NUM": {
                "bit": 0,
                "description": "This register is used to configure the duration time between the last at_cmd and the next data.",
                "width": 16
              }
            },
            "AT_CMD_GAPTOUT": {
              "RX_GAP_TOUT": {
                "bit": 0,
                "description": "This register is used to configure the duration time between the at_cmd chars.",
                "width": 16
              }
            },
            "AT_CMD_CHAR": {
              "AT_CMD_CHAR": {
                "bit": 0,
                "description": "This register is used to configure the content of at_cmd char.",
                "width": 8
              },
              "CHAR_NUM": {
                "bit": 8,
                "description": "This register is used to configure the num of continuous at_cmd chars received by receiver.",
                "width": 8
              }
            },
            "MEM_CONF": {
              "MEM_FORCE_PD": {
                "bit": 25,
                "description": "Set this bit to force power down UART memory."
              },
              "MEM_FORCE_PU": {
                "bit": 26,
                "description": "Set this bit to force power up UART memory."
              }
            },
            "TOUT_CONF": {
              "RX_TOUT_EN": {
                "bit": 0,
                "description": "This is the enble bit for uart receiver's timeout function."
              },
              "RX_TOUT_FLOW_DIS": {
                "bit": 1,
                "description": "Set this bit to stop accumulating idle_cnt when hardware flow control works."
              },
              "RX_TOUT_THRHD": {
                "bit": 2,
                "description": "This register is used to configure the threshold time that receiver takes to receive one byte. The rxfifo_tout_int interrupt will be trigger when the receiver takes more time to receive one byte with rx_tout_en set to 1.",
                "width": 10
              }
            },
            "MEM_TX_STATUS": {
              "TX_SRAM_WADDR": {
                "bit": 0,
                "description": "This register stores the offset write address in Tx-SRAM.",
                "width": 8
              },
              "TX_SRAM_RADDR": {
                "bit": 9,
                "description": "This register stores the offset read address in Tx-SRAM.",
                "width": 8
              }
            },
            "MEM_RX_STATUS": {
              "RX_SRAM_RADDR": {
                "bit": 0,
                "description": "This register stores the offset read address in RX-SRAM.",
                "width": 8
              },
              "RX_SRAM_WADDR": {
                "bit": 9,
                "description": "This register stores the offset write address in Rx-SRAM.",
                "width": 8
              }
            },
            "FSM_STATUS": {
              "ST_URX_OUT": {
                "bit": 0,
                "description": "This is the status register of receiver.",
                "width": 4
              },
              "ST_UTX_OUT": {
                "bit": 4,
                "description": "This is the status register of transmitter.",
                "width": 4
              }
            },
            "POSPULSE": {
              "POSEDGE_MIN_CNT": {
                "bit": 0,
                "description": "This register stores the minimal input clock count between two positive edges. It is used in boudrate-detect process.",
                "width": 12
              }
            },
            "NEGPULSE": {
              "NEGEDGE_MIN_CNT": {
                "bit": 0,
                "description": "This register stores the minimal input clock count between two negative edges. It is used in boudrate-detect process.",
                "width": 12
              }
            },
            "LOWPULSE": {
              "MIN_CNT": {
                "bit": 0,
                "description": "This register stores the value of the minimum duration time of the low level pulse. It is used in baud rate-detect process.",
                "width": 12
              }
            },
            "HIGHPULSE": {
              "MIN_CNT": {
                "bit": 0,
                "description": "This register stores  the value of the maxinum duration time for the high level pulse. It is used in baud rate-detect process.",
                "width": 12
              }
            },
            "RXD_CNT": {
              "RXD_EDGE_CNT": {
                "bit": 0,
                "description": "This register stores the count of rxd edge change. It is used in baud rate-detect process.",
                "width": 10
              }
            },
            "CLK_CONF": {
              "TX_SCLK_EN": {
                "bit": 24,
                "description": "Set this bit to enable UART Tx clock."
              },
              "SCLK_EN": {
                "bit": 25,
                "description": "Set this bit to enable UART Rx clock."
              },
              "TX_RST_CORE": {
                "bit": 26,
                "description": "Write 1 then write 0 to this bit to reset UART Tx."
              },
              "RST_CORE": {
                "bit": 27,
                "description": "Write 1 then write 0 to this bit to reset UART Rx."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "This is the version register.",
                "width": 32
              }
            },
            "AFIFO_STATUS": {
              "TX_AFIFO_FULL": {
                "bit": 0,
                "description": "Full signal of APB TX AFIFO."
              },
              "TX_AFIFO_EMPTY": {
                "bit": 1,
                "description": "Empty signal of APB TX AFIFO."
              },
              "RX_AFIFO_FULL": {
                "bit": 2,
                "description": "Full signal of APB RX AFIFO."
              },
              "RX_AFIFO_EMPTY": {
                "bit": 3,
                "description": "Empty signal of APB RX AFIFO."
              }
            },
            "REG_UPDATE": {
              "REG_UPDATE": {
                "bit": 0,
                "description": "Software write 1 would synchronize registers into UART Core clock domain and would be cleared by hardware after synchronization is done."
              }
            },
            "ID": {
              "ID": {
                "bit": 0,
                "description": "This register is used to configure the uart_id.",
                "width": 32
              }
            }
          }
        },
        "UHCI0": {
          "instances": [
            {
              "name": "UHCI0",
              "base": "0x60006000",
              "irq": 32
            }
          ],
          "registers": {
            "CONF0": {
              "offset": "0x00",
              "size": 32,
              "description": "a"
            },
            "INT_RAW": {
              "offset": "0x04",
              "size": 32,
              "description": "a"
            },
            "INT_ST": {
              "offset": "0x08",
              "size": 32,
              "description": "a"
            },
            "INT_ENA": {
              "offset": "0x0C",
              "size": 32,
              "description": "a"
            },
            "INT_CLR": {
              "offset": "0x10",
              "size": 32,
              "description": "a"
            },
            "CONF1": {
              "offset": "0x14",
              "size": 32,
              "description": "a"
            },
            "STATE0": {
              "offset": "0x18",
              "size": 32,
              "description": "a"
            },
            "STATE1": {
              "offset": "0x1C",
              "size": 32,
              "description": "a"
            },
            "ESCAPE_CONF": {
              "offset": "0x20",
              "size": 32,
              "description": "a"
            },
            "HUNG_CONF": {
              "offset": "0x24",
              "size": 32,
              "description": "a"
            },
            "ACK_NUM": {
              "offset": "0x28",
              "size": 32,
              "description": "a"
            },
            "RX_HEAD": {
              "offset": "0x2C",
              "size": 32,
              "description": "a"
            },
            "QUICK_SENT": {
              "offset": "0x30",
              "size": 32,
              "description": "a"
            },
            "REG_Q0_WORD0": {
              "offset": "0x34",
              "size": 32,
              "description": "a"
            },
            "REG_Q0_WORD1": {
              "offset": "0x38",
              "size": 32,
              "description": "a"
            },
            "REG_Q1_WORD0": {
              "offset": "0x3C",
              "size": 32,
              "description": "a"
            },
            "REG_Q1_WORD1": {
              "offset": "0x40",
              "size": 32,
              "description": "a"
            },
            "REG_Q2_WORD0": {
              "offset": "0x44",
              "size": 32,
              "description": "a"
            },
            "REG_Q2_WORD1": {
              "offset": "0x48",
              "size": 32,
              "description": "a"
            },
            "REG_Q3_WORD0": {
              "offset": "0x4C",
              "size": 32,
              "description": "a"
            },
            "REG_Q3_WORD1": {
              "offset": "0x50",
              "size": 32,
              "description": "a"
            },
            "REG_Q4_WORD0": {
              "offset": "0x54",
              "size": 32,
              "description": "a"
            },
            "REG_Q4_WORD1": {
              "offset": "0x58",
              "size": 32,
              "description": "a"
            },
            "REG_Q5_WORD0": {
              "offset": "0x5C",
              "size": 32,
              "description": "a"
            },
            "REG_Q5_WORD1": {
              "offset": "0x60",
              "size": 32,
              "description": "a"
            },
            "REG_Q6_WORD0": {
              "offset": "0x64",
              "size": 32,
              "description": "a"
            },
            "REG_Q6_WORD1": {
              "offset": "0x68",
              "size": 32,
              "description": "a"
            },
            "ESC_CONF0": {
              "offset": "0x6C",
              "size": 32,
              "description": "a"
            },
            "ESC_CONF1": {
              "offset": "0x70",
              "size": 32,
              "description": "a"
            },
            "ESC_CONF2": {
              "offset": "0x74",
              "size": 32,
              "description": "a"
            },
            "ESC_CONF3": {
              "offset": "0x78",
              "size": 32,
              "description": "a"
            },
            "PKT_THRES": {
              "offset": "0x7C",
              "size": 32,
              "description": "a"
            },
            "DATE": {
              "offset": "0x80",
              "size": 32,
              "description": "a"
            }
          },
          "bits": {
            "CONF0": {
              "TX_RST": {
                "bit": 0,
                "description": "Write 1 then write 0 to this bit to reset decode state machine."
              },
              "RX_RST": {
                "bit": 1,
                "description": "Write 1 then write 0 to this bit to reset encode state machine."
              },
              "UART0_CE": {
                "bit": 2,
                "description": "Set this bit to link up HCI and UART0."
              },
              "UART1_CE": {
                "bit": 3,
                "description": "Set this bit to link up HCI and UART1."
              },
              "SEPER_EN": {
                "bit": 5,
                "description": "Set this bit to separate the data frame using a special char."
              },
              "HEAD_EN": {
                "bit": 6,
                "description": "Set this bit to encode the data packet with a formatting header."
              },
              "CRC_REC_EN": {
                "bit": 7,
                "description": "Set this bit to enable UHCI to receive the 16 bit CRC."
              },
              "UART_IDLE_EOF_EN": {
                "bit": 8,
                "description": "If this bit is set to 1 UHCI will end the payload receiving process when UART has been in idle state."
              },
              "LEN_EOF_EN": {
                "bit": 9,
                "description": "If this bit is set to 1 UHCI decoder receiving payload data is end when the receiving byte count has reached the specified value. The value is payload length indicated by UHCI packet header when UHCI_HEAD_EN is 1 or the value is configuration value when UHCI_HEAD_EN is 0. If this bit is set to 0 UHCI decoder receiving payload data is end when 0xc0 is received."
              },
              "ENCODE_CRC_EN": {
                "bit": 10,
                "description": "Set this bit to enable data integrity checking by appending a 16 bit CCITT-CRC to end of the payload."
              },
              "CLK_EN": {
                "bit": 11,
                "description": "1'b1: Force clock on for register. 1'b0: Support clock only when application writes registers."
              },
              "UART_RX_BRK_EOF_EN": {
                "bit": 12,
                "description": "If this bit is set to 1 UHCI will end payload receive process when NULL frame is received by UART."
              }
            },
            "INT_RAW": {
              "RX_START_INT_RAW": {
                "bit": 0,
                "description": "a"
              },
              "TX_START_INT_RAW": {
                "bit": 1,
                "description": "a"
              },
              "RX_HUNG_INT_RAW": {
                "bit": 2,
                "description": "a"
              },
              "TX_HUNG_INT_RAW": {
                "bit": 3,
                "description": "a"
              },
              "SEND_S_REG_Q_INT_RAW": {
                "bit": 4,
                "description": "a"
              },
              "SEND_A_REG_Q_INT_RAW": {
                "bit": 5,
                "description": "a"
              },
              "OUT_EOF_INT_RAW": {
                "bit": 6,
                "description": "This is the interrupt raw bit. Triggered when there are some errors in EOF in the"
              },
              "APP_CTRL0_INT_RAW": {
                "bit": 7,
                "description": "Soft control int raw bit."
              },
              "APP_CTRL1_INT_RAW": {
                "bit": 8,
                "description": "Soft control int raw bit."
              }
            },
            "INT_ST": {
              "RX_START_INT_ST": {
                "bit": 0,
                "description": "a"
              },
              "TX_START_INT_ST": {
                "bit": 1,
                "description": "a"
              },
              "RX_HUNG_INT_ST": {
                "bit": 2,
                "description": "a"
              },
              "TX_HUNG_INT_ST": {
                "bit": 3,
                "description": "a"
              },
              "SEND_S_REG_Q_INT_ST": {
                "bit": 4,
                "description": "a"
              },
              "SEND_A_REG_Q_INT_ST": {
                "bit": 5,
                "description": "a"
              },
              "OUTLINK_EOF_ERR_INT_ST": {
                "bit": 6,
                "description": "a"
              },
              "APP_CTRL0_INT_ST": {
                "bit": 7,
                "description": "a"
              },
              "APP_CTRL1_INT_ST": {
                "bit": 8,
                "description": "a"
              }
            },
            "INT_ENA": {
              "RX_START_INT_ENA": {
                "bit": 0,
                "description": "a"
              },
              "TX_START_INT_ENA": {
                "bit": 1,
                "description": "a"
              },
              "RX_HUNG_INT_ENA": {
                "bit": 2,
                "description": "a"
              },
              "TX_HUNG_INT_ENA": {
                "bit": 3,
                "description": "a"
              },
              "SEND_S_REG_Q_INT_ENA": {
                "bit": 4,
                "description": "a"
              },
              "SEND_A_REG_Q_INT_ENA": {
                "bit": 5,
                "description": "a"
              },
              "OUTLINK_EOF_ERR_INT_ENA": {
                "bit": 6,
                "description": "a"
              },
              "APP_CTRL0_INT_ENA": {
                "bit": 7,
                "description": "a"
              },
              "APP_CTRL1_INT_ENA": {
                "bit": 8,
                "description": "a"
              }
            },
            "INT_CLR": {
              "RX_START_INT_CLR": {
                "bit": 0,
                "description": "a"
              },
              "TX_START_INT_CLR": {
                "bit": 1,
                "description": "a"
              },
              "RX_HUNG_INT_CLR": {
                "bit": 2,
                "description": "a"
              },
              "TX_HUNG_INT_CLR": {
                "bit": 3,
                "description": "a"
              },
              "SEND_S_REG_Q_INT_CLR": {
                "bit": 4,
                "description": "a"
              },
              "SEND_A_REG_Q_INT_CLR": {
                "bit": 5,
                "description": "a"
              },
              "OUTLINK_EOF_ERR_INT_CLR": {
                "bit": 6,
                "description": "a"
              },
              "APP_CTRL0_INT_CLR": {
                "bit": 7,
                "description": "a"
              },
              "APP_CTRL1_INT_CLR": {
                "bit": 8,
                "description": "a"
              }
            },
            "CONF1": {
              "CHECK_SUM_EN": {
                "bit": 0,
                "description": "a"
              },
              "CHECK_SEQ_EN": {
                "bit": 1,
                "description": "a"
              },
              "CRC_DISABLE": {
                "bit": 2,
                "description": "a"
              },
              "SAVE_HEAD": {
                "bit": 3,
                "description": "a"
              },
              "TX_CHECK_SUM_RE": {
                "bit": 4,
                "description": "a"
              },
              "TX_ACK_NUM_RE": {
                "bit": 5,
                "description": "a"
              },
              "WAIT_SW_START": {
                "bit": 7,
                "description": "a"
              },
              "SW_START": {
                "bit": 8,
                "description": "a"
              }
            },
            "STATE0": {
              "RX_ERR_CAUSE": {
                "bit": 0,
                "description": "a",
                "width": 3
              },
              "DECODE_STATE": {
                "bit": 3,
                "description": "a",
                "width": 3
              }
            },
            "STATE1": {
              "ENCODE_STATE": {
                "bit": 0,
                "description": "a",
                "width": 3
              }
            },
            "ESCAPE_CONF": {
              "TX_C0_ESC_EN": {
                "bit": 0,
                "description": "a"
              },
              "TX_DB_ESC_EN": {
                "bit": 1,
                "description": "a"
              },
              "TX_11_ESC_EN": {
                "bit": 2,
                "description": "a"
              },
              "TX_13_ESC_EN": {
                "bit": 3,
                "description": "a"
              },
              "RX_C0_ESC_EN": {
                "bit": 4,
                "description": "a"
              },
              "RX_DB_ESC_EN": {
                "bit": 5,
                "description": "a"
              },
              "RX_11_ESC_EN": {
                "bit": 6,
                "description": "a"
              },
              "RX_13_ESC_EN": {
                "bit": 7,
                "description": "a"
              }
            },
            "HUNG_CONF": {
              "TXFIFO_TIMEOUT": {
                "bit": 0,
                "description": "a",
                "width": 8
              },
              "TXFIFO_TIMEOUT_SHIFT": {
                "bit": 8,
                "description": "a",
                "width": 3
              },
              "TXFIFO_TIMEOUT_ENA": {
                "bit": 11,
                "description": "a"
              },
              "RXFIFO_TIMEOUT": {
                "bit": 12,
                "description": "a",
                "width": 8
              },
              "RXFIFO_TIMEOUT_SHIFT": {
                "bit": 20,
                "description": "a",
                "width": 3
              },
              "RXFIFO_TIMEOUT_ENA": {
                "bit": 23,
                "description": "a"
              }
            },
            "ACK_NUM": {
              "ACK_NUM": {
                "bit": 0,
                "description": "a",
                "width": 3
              },
              "LOAD": {
                "bit": 3,
                "description": "a"
              }
            },
            "RX_HEAD": {
              "RX_HEAD": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "QUICK_SENT": {
              "SINGLE_SEND_NUM": {
                "bit": 0,
                "description": "a",
                "width": 3
              },
              "SINGLE_SEND_EN": {
                "bit": 3,
                "description": "a"
              },
              "ALWAYS_SEND_NUM": {
                "bit": 4,
                "description": "a",
                "width": 3
              },
              "ALWAYS_SEND_EN": {
                "bit": 7,
                "description": "a"
              }
            },
            "REG_Q0_WORD0": {
              "SEND_Q0_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q0_WORD1": {
              "SEND_Q0_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q1_WORD0": {
              "SEND_Q1_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q1_WORD1": {
              "SEND_Q1_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q2_WORD0": {
              "SEND_Q2_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q2_WORD1": {
              "SEND_Q2_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q3_WORD0": {
              "SEND_Q3_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q3_WORD1": {
              "SEND_Q3_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q4_WORD0": {
              "SEND_Q4_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q4_WORD1": {
              "SEND_Q4_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q5_WORD0": {
              "SEND_Q5_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q5_WORD1": {
              "SEND_Q5_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q6_WORD0": {
              "SEND_Q6_WORD0": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "REG_Q6_WORD1": {
              "SEND_Q6_WORD1": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            },
            "ESC_CONF0": {
              "SEPER_CHAR": {
                "bit": 0,
                "description": "a",
                "width": 8
              },
              "SEPER_ESC_CHAR0": {
                "bit": 8,
                "description": "a",
                "width": 8
              },
              "SEPER_ESC_CHAR1": {
                "bit": 16,
                "description": "a",
                "width": 8
              }
            },
            "ESC_CONF1": {
              "ESC_SEQ0": {
                "bit": 0,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ0_CHAR0": {
                "bit": 8,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ0_CHAR1": {
                "bit": 16,
                "description": "a",
                "width": 8
              }
            },
            "ESC_CONF2": {
              "ESC_SEQ1": {
                "bit": 0,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ1_CHAR0": {
                "bit": 8,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ1_CHAR1": {
                "bit": 16,
                "description": "a",
                "width": 8
              }
            },
            "ESC_CONF3": {
              "ESC_SEQ2": {
                "bit": 0,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ2_CHAR0": {
                "bit": 8,
                "description": "a",
                "width": 8
              },
              "ESC_SEQ2_CHAR1": {
                "bit": 16,
                "description": "a",
                "width": 8
              }
            },
            "PKT_THRES": {
              "PKT_THRS": {
                "bit": 0,
                "description": "a",
                "width": 13
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "a",
                "width": 32
              }
            }
          }
        },
        "USB": {
          "instances": [
            {
              "name": "USB_DEVICE",
              "base": "0x6000F000",
              "irq": 37
            }
          ],
          "registers": {
            "EP1": {
              "offset": "0x00",
              "size": 32,
              "description": "FIFO access for the CDC-ACM data IN and OUT endpoints."
            },
            "EP1_CONF": {
              "offset": "0x04",
              "size": 32,
              "description": "Configuration and control registers for the CDC-ACM FIFOs."
            },
            "INT_RAW": {
              "offset": "0x08",
              "size": 32,
              "description": "Interrupt raw status register."
            },
            "INT_ST": {
              "offset": "0x0C",
              "size": 32,
              "description": "Interrupt status register."
            },
            "INT_ENA": {
              "offset": "0x10",
              "size": 32,
              "description": "Interrupt enable status register."
            },
            "INT_CLR": {
              "offset": "0x14",
              "size": 32,
              "description": "Interrupt clear status register."
            },
            "CONF0": {
              "offset": "0x18",
              "size": 32,
              "description": "PHY hardware configuration."
            },
            "TEST": {
              "offset": "0x1C",
              "size": 32,
              "description": "Registers used for debugging the PHY."
            },
            "JFIFO_ST": {
              "offset": "0x20",
              "size": 32,
              "description": "JTAG FIFO status and control registers."
            },
            "FRAM_NUM": {
              "offset": "0x24",
              "size": 32,
              "description": "Last received SOF frame index register."
            },
            "IN_EP0_ST": {
              "offset": "0x28",
              "size": 32,
              "description": "Control IN endpoint status information."
            },
            "IN_EP1_ST": {
              "offset": "0x2C",
              "size": 32,
              "description": "CDC-ACM IN endpoint status information."
            },
            "IN_EP2_ST": {
              "offset": "0x30",
              "size": 32,
              "description": "CDC-ACM interrupt IN endpoint status information."
            },
            "IN_EP3_ST": {
              "offset": "0x34",
              "size": 32,
              "description": "JTAG IN endpoint status information."
            },
            "OUT_EP0_ST": {
              "offset": "0x38",
              "size": 32,
              "description": "Control OUT endpoint status information."
            },
            "OUT_EP1_ST": {
              "offset": "0x3C",
              "size": 32,
              "description": "CDC-ACM OUT endpoint status information."
            },
            "OUT_EP2_ST": {
              "offset": "0x40",
              "size": 32,
              "description": "JTAG OUT endpoint status information."
            },
            "MISC_CONF": {
              "offset": "0x44",
              "size": 32,
              "description": "Clock enable control"
            },
            "MEM_CONF": {
              "offset": "0x48",
              "size": 32,
              "description": "Memory power control"
            },
            "CHIP_RST": {
              "offset": "0x4C",
              "size": 32,
              "description": "CDC-ACM chip reset control."
            },
            "SET_LINE_CODE_W0": {
              "offset": "0x50",
              "size": 32,
              "description": "W0 of SET_LINE_CODING command."
            },
            "SET_LINE_CODE_W1": {
              "offset": "0x54",
              "size": 32,
              "description": "W1 of SET_LINE_CODING command."
            },
            "GET_LINE_CODE_W0": {
              "offset": "0x58",
              "size": 32,
              "description": "W0 of GET_LINE_CODING command."
            },
            "GET_LINE_CODE_W1": {
              "offset": "0x5C",
              "size": 32,
              "description": "W1 of GET_LINE_CODING command."
            },
            "CONFIG_UPDATE": {
              "offset": "0x60",
              "size": 32,
              "description": "Configuration registers' value update"
            },
            "SER_AFIFO_CONFIG": {
              "offset": "0x64",
              "size": 32,
              "description": "Serial AFIFO configure register"
            },
            "BUS_RESET_ST": {
              "offset": "0x68",
              "size": 32,
              "description": "USB Bus reset status register"
            },
            "DATE": {
              "offset": "0x80",
              "size": 32,
              "description": "Date register"
            }
          },
          "bits": {
            "EP1": {
              "RDWR_BYTE": {
                "bit": 0,
                "description": "Write and read byte data to/from UART Tx/Rx FIFO through this field. When USB_DEVICE_SERIAL_IN_EMPTY_INT is set, then user can write data (up to 64 bytes) into UART Tx FIFO. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is set, user can check USB_DEVICE_OUT_EP1_WR_ADDR USB_DEVICE_OUT_EP0_RD_ADDR to know how many data is received, then read data from UART Rx FIFO.",
                "width": 8
              }
            },
            "EP1_CONF": {
              "WR_DONE": {
                "bit": 0,
                "description": "Set this bit to indicate writing byte data to UART Tx FIFO is done."
              },
              "SERIAL_IN_EP_DATA_FREE": {
                "bit": 1,
                "description": "1'b1: Indicate UART Tx FIFO is not full and can write data into in. After writing USB_DEVICE_WR_DONE, this bit would be 0 until data in UART Tx FIFO is read by USB Host."
              },
              "SERIAL_OUT_EP_DATA_AVAIL": {
                "bit": 2,
                "description": "1'b1: Indicate there is data in UART Rx FIFO."
              }
            },
            "INT_RAW": {
              "JTAG_IN_FLUSH_INT_RAW": {
                "bit": 0,
                "description": "The raw interrupt bit turns to high level when flush cmd is received for IN endpoint 2 of JTAG."
              },
              "SOF_INT_RAW": {
                "bit": 1,
                "description": "The raw interrupt bit turns to high level when SOF frame is received."
              },
              "SERIAL_OUT_RECV_PKT_INT_RAW": {
                "bit": 2,
                "description": "The raw interrupt bit turns to high level when Serial Port OUT Endpoint received one packet."
              },
              "SERIAL_IN_EMPTY_INT_RAW": {
                "bit": 3,
                "description": "The raw interrupt bit turns to high level when Serial Port IN Endpoint is empty."
              },
              "PID_ERR_INT_RAW": {
                "bit": 4,
                "description": "The raw interrupt bit turns to high level when pid error is detected."
              },
              "CRC5_ERR_INT_RAW": {
                "bit": 5,
                "description": "The raw interrupt bit turns to high level when CRC5 error is detected."
              },
              "CRC16_ERR_INT_RAW": {
                "bit": 6,
                "description": "The raw interrupt bit turns to high level when CRC16 error is detected."
              },
              "STUFF_ERR_INT_RAW": {
                "bit": 7,
                "description": "The raw interrupt bit turns to high level when stuff error is detected."
              },
              "IN_TOKEN_REC_IN_EP1_INT_RAW": {
                "bit": 8,
                "description": "The raw interrupt bit turns to high level when IN token for IN endpoint 1 is received."
              },
              "USB_BUS_RESET_INT_RAW": {
                "bit": 9,
                "description": "The raw interrupt bit turns to high level when usb bus reset is detected."
              },
              "OUT_EP1_ZERO_PAYLOAD_INT_RAW": {
                "bit": 10,
                "description": "The raw interrupt bit turns to high level when OUT endpoint 1 received packet with zero palyload."
              },
              "OUT_EP2_ZERO_PAYLOAD_INT_RAW": {
                "bit": 11,
                "description": "The raw interrupt bit turns to high level when OUT endpoint 2 received packet with zero palyload."
              },
              "RTS_CHG_INT_RAW": {
                "bit": 12,
                "description": "The raw interrupt bit turns to high level when level of RTS from usb serial channel is changed."
              },
              "DTR_CHG_INT_RAW": {
                "bit": 13,
                "description": "The raw interrupt bit turns to high level when level of DTR from usb serial channel is changed."
              },
              "GET_LINE_CODE_INT_RAW": {
                "bit": 14,
                "description": "The raw interrupt bit turns to high level when level of GET LINE CODING request is received."
              },
              "SET_LINE_CODE_INT_RAW": {
                "bit": 15,
                "description": "The raw interrupt bit turns to high level when level of SET LINE CODING request is received."
              }
            },
            "INT_ST": {
              "JTAG_IN_FLUSH_INT_ST": {
                "bit": 0,
                "description": "The raw interrupt status bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
              },
              "SOF_INT_ST": {
                "bit": 1,
                "description": "The raw interrupt status bit for the USB_DEVICE_SOF_INT interrupt."
              },
              "SERIAL_OUT_RECV_PKT_INT_ST": {
                "bit": 2,
                "description": "The raw interrupt status bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
              },
              "SERIAL_IN_EMPTY_INT_ST": {
                "bit": 3,
                "description": "The raw interrupt status bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
              },
              "PID_ERR_INT_ST": {
                "bit": 4,
                "description": "The raw interrupt status bit for the USB_DEVICE_PID_ERR_INT interrupt."
              },
              "CRC5_ERR_INT_ST": {
                "bit": 5,
                "description": "The raw interrupt status bit for the USB_DEVICE_CRC5_ERR_INT interrupt."
              },
              "CRC16_ERR_INT_ST": {
                "bit": 6,
                "description": "The raw interrupt status bit for the USB_DEVICE_CRC16_ERR_INT interrupt."
              },
              "STUFF_ERR_INT_ST": {
                "bit": 7,
                "description": "The raw interrupt status bit for the USB_DEVICE_STUFF_ERR_INT interrupt."
              },
              "IN_TOKEN_REC_IN_EP1_INT_ST": {
                "bit": 8,
                "description": "The raw interrupt status bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt."
              },
              "USB_BUS_RESET_INT_ST": {
                "bit": 9,
                "description": "The raw interrupt status bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt."
              },
              "OUT_EP1_ZERO_PAYLOAD_INT_ST": {
                "bit": 10,
                "description": "The raw interrupt status bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
              },
              "OUT_EP2_ZERO_PAYLOAD_INT_ST": {
                "bit": 11,
                "description": "The raw interrupt status bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
              },
              "RTS_CHG_INT_ST": {
                "bit": 12,
                "description": "The raw interrupt status bit for the USB_DEVICE_RTS_CHG_INT interrupt."
              },
              "DTR_CHG_INT_ST": {
                "bit": 13,
                "description": "The raw interrupt status bit for the USB_DEVICE_DTR_CHG_INT interrupt."
              },
              "GET_LINE_CODE_INT_ST": {
                "bit": 14,
                "description": "The raw interrupt status bit for the USB_DEVICE_GET_LINE_CODE_INT interrupt."
              },
              "SET_LINE_CODE_INT_ST": {
                "bit": 15,
                "description": "The raw interrupt status bit for the USB_DEVICE_SET_LINE_CODE_INT interrupt."
              }
            },
            "INT_ENA": {
              "JTAG_IN_FLUSH_INT_ENA": {
                "bit": 0,
                "description": "The interrupt enable bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
              },
              "SOF_INT_ENA": {
                "bit": 1,
                "description": "The interrupt enable bit for the USB_DEVICE_SOF_INT interrupt."
              },
              "SERIAL_OUT_RECV_PKT_INT_ENA": {
                "bit": 2,
                "description": "The interrupt enable bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
              },
              "SERIAL_IN_EMPTY_INT_ENA": {
                "bit": 3,
                "description": "The interrupt enable bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
              },
              "PID_ERR_INT_ENA": {
                "bit": 4,
                "description": "The interrupt enable bit for the USB_DEVICE_PID_ERR_INT interrupt."
              },
              "CRC5_ERR_INT_ENA": {
                "bit": 5,
                "description": "The interrupt enable bit for the USB_DEVICE_CRC5_ERR_INT interrupt."
              },
              "CRC16_ERR_INT_ENA": {
                "bit": 6,
                "description": "The interrupt enable bit for the USB_DEVICE_CRC16_ERR_INT interrupt."
              },
              "STUFF_ERR_INT_ENA": {
                "bit": 7,
                "description": "The interrupt enable bit for the USB_DEVICE_STUFF_ERR_INT interrupt."
              },
              "IN_TOKEN_REC_IN_EP1_INT_ENA": {
                "bit": 8,
                "description": "The interrupt enable bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt."
              },
              "USB_BUS_RESET_INT_ENA": {
                "bit": 9,
                "description": "The interrupt enable bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt."
              },
              "OUT_EP1_ZERO_PAYLOAD_INT_ENA": {
                "bit": 10,
                "description": "The interrupt enable bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
              },
              "OUT_EP2_ZERO_PAYLOAD_INT_ENA": {
                "bit": 11,
                "description": "The interrupt enable bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
              },
              "RTS_CHG_INT_ENA": {
                "bit": 12,
                "description": "The interrupt enable bit for the USB_DEVICE_RTS_CHG_INT interrupt."
              },
              "DTR_CHG_INT_ENA": {
                "bit": 13,
                "description": "The interrupt enable bit for the USB_DEVICE_DTR_CHG_INT interrupt."
              },
              "GET_LINE_CODE_INT_ENA": {
                "bit": 14,
                "description": "The interrupt enable bit for the USB_DEVICE_GET_LINE_CODE_INT interrupt."
              },
              "SET_LINE_CODE_INT_ENA": {
                "bit": 15,
                "description": "The interrupt enable bit for the USB_DEVICE_SET_LINE_CODE_INT interrupt."
              }
            },
            "INT_CLR": {
              "JTAG_IN_FLUSH_INT_CLR": {
                "bit": 0,
                "description": "Set this bit to clear the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
              },
              "SOF_INT_CLR": {
                "bit": 1,
                "description": "Set this bit to clear the USB_DEVICE_JTAG_SOF_INT interrupt."
              },
              "SERIAL_OUT_RECV_PKT_INT_CLR": {
                "bit": 2,
                "description": "Set this bit to clear the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
              },
              "SERIAL_IN_EMPTY_INT_CLR": {
                "bit": 3,
                "description": "Set this bit to clear the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
              },
              "PID_ERR_INT_CLR": {
                "bit": 4,
                "description": "Set this bit to clear the USB_DEVICE_PID_ERR_INT interrupt."
              },
              "CRC5_ERR_INT_CLR": {
                "bit": 5,
                "description": "Set this bit to clear the USB_DEVICE_CRC5_ERR_INT interrupt."
              },
              "CRC16_ERR_INT_CLR": {
                "bit": 6,
                "description": "Set this bit to clear the USB_DEVICE_CRC16_ERR_INT interrupt."
              },
              "STUFF_ERR_INT_CLR": {
                "bit": 7,
                "description": "Set this bit to clear the USB_DEVICE_STUFF_ERR_INT interrupt."
              },
              "IN_TOKEN_REC_IN_EP1_INT_CLR": {
                "bit": 8,
                "description": "Set this bit to clear the USB_DEVICE_IN_TOKEN_IN_EP1_INT interrupt."
              },
              "USB_BUS_RESET_INT_CLR": {
                "bit": 9,
                "description": "Set this bit to clear the USB_DEVICE_USB_BUS_RESET_INT interrupt."
              },
              "OUT_EP1_ZERO_PAYLOAD_INT_CLR": {
                "bit": 10,
                "description": "Set this bit to clear the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
              },
              "OUT_EP2_ZERO_PAYLOAD_INT_CLR": {
                "bit": 11,
                "description": "Set this bit to clear the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
              },
              "RTS_CHG_INT_CLR": {
                "bit": 12,
                "description": "Set this bit to clear the USB_DEVICE_RTS_CHG_INT interrupt."
              },
              "DTR_CHG_INT_CLR": {
                "bit": 13,
                "description": "Set this bit to clear the USB_DEVICE_DTR_CHG_INT interrupt."
              },
              "GET_LINE_CODE_INT_CLR": {
                "bit": 14,
                "description": "Set this bit to clear the USB_DEVICE_GET_LINE_CODE_INT interrupt."
              },
              "SET_LINE_CODE_INT_CLR": {
                "bit": 15,
                "description": "Set this bit to clear the USB_DEVICE_SET_LINE_CODE_INT interrupt."
              }
            },
            "CONF0": {
              "PHY_SEL": {
                "bit": 0,
                "description": "Select internal/external PHY"
              },
              "EXCHG_PINS_OVERRIDE": {
                "bit": 1,
                "description": "Enable software control USB D+ D- exchange"
              },
              "EXCHG_PINS": {
                "bit": 2,
                "description": "USB D+ D- exchange"
              },
              "VREFH": {
                "bit": 3,
                "description": "Control single-end input high threshold,1.76V to 2V, step 80mV",
                "width": 2
              },
              "VREFL": {
                "bit": 5,
                "description": "Control single-end input low threshold,0.8V to 1.04V, step 80mV",
                "width": 2
              },
              "VREF_OVERRIDE": {
                "bit": 7,
                "description": "Enable software control input  threshold"
              },
              "PAD_PULL_OVERRIDE": {
                "bit": 8,
                "description": "Enable software control USB D+ D- pullup pulldown"
              },
              "DP_PULLUP": {
                "bit": 9,
                "description": "Control USB D+ pull up."
              },
              "DP_PULLDOWN": {
                "bit": 10,
                "description": "Control USB D+ pull down."
              },
              "DM_PULLUP": {
                "bit": 11,
                "description": "Control USB D- pull up."
              },
              "DM_PULLDOWN": {
                "bit": 12,
                "description": "Control USB D- pull down."
              },
              "PULLUP_VALUE": {
                "bit": 13,
                "description": "Control pull up value."
              },
              "USB_PAD_ENABLE": {
                "bit": 14,
                "description": "Enable USB pad function."
              },
              "USB_JTAG_BRIDGE_EN": {
                "bit": 15,
                "description": "Set this bit usb_jtag, the connection between usb_jtag and internal JTAG is disconnected, and MTMS, MTDI, MTCK are output through GPIO Matrix, MTDO is input through GPIO Matrix."
              }
            },
            "TEST": {
              "TEST_ENABLE": {
                "bit": 0,
                "description": "Enable test of the USB pad"
              },
              "TEST_USB_OE": {
                "bit": 1,
                "description": "USB pad oen in test"
              },
              "TEST_TX_DP": {
                "bit": 2,
                "description": "USB D+ tx value in test"
              },
              "TEST_TX_DM": {
                "bit": 3,
                "description": "USB D- tx value in test"
              },
              "TEST_RX_RCV": {
                "bit": 4,
                "description": "USB RCV value in test"
              },
              "TEST_RX_DP": {
                "bit": 5,
                "description": "USB D+ rx value in test"
              },
              "TEST_RX_DM": {
                "bit": 6,
                "description": "USB D- rx value in test"
              }
            },
            "JFIFO_ST": {
              "IN_FIFO_CNT": {
                "bit": 0,
                "description": "JTAT in fifo counter.",
                "width": 2
              },
              "IN_FIFO_EMPTY": {
                "bit": 2,
                "description": "1: JTAG in fifo is empty."
              },
              "IN_FIFO_FULL": {
                "bit": 3,
                "description": "1: JTAG in fifo is full."
              },
              "OUT_FIFO_CNT": {
                "bit": 4,
                "description": "JTAT out fifo counter.",
                "width": 2
              },
              "OUT_FIFO_EMPTY": {
                "bit": 6,
                "description": "1: JTAG out fifo is empty."
              },
              "OUT_FIFO_FULL": {
                "bit": 7,
                "description": "1: JTAG out fifo is full."
              },
              "IN_FIFO_RESET": {
                "bit": 8,
                "description": "Write 1 to reset JTAG in fifo."
              },
              "OUT_FIFO_RESET": {
                "bit": 9,
                "description": "Write 1 to reset JTAG out fifo."
              }
            },
            "FRAM_NUM": {
              "SOF_FRAME_INDEX": {
                "bit": 0,
                "description": "Frame index of received SOF frame.",
                "width": 11
              }
            },
            "IN_EP0_ST": {
              "IN_EP0_STATE": {
                "bit": 0,
                "description": "State of IN Endpoint 0.",
                "width": 2
              },
              "IN_EP0_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of IN endpoint 0.",
                "width": 7
              },
              "IN_EP0_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of IN endpoint 0.",
                "width": 7
              }
            },
            "IN_EP1_ST": {
              "IN_EP1_STATE": {
                "bit": 0,
                "description": "State of IN Endpoint 1.",
                "width": 2
              },
              "IN_EP1_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of IN endpoint 1.",
                "width": 7
              },
              "IN_EP1_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of IN endpoint 1.",
                "width": 7
              }
            },
            "IN_EP2_ST": {
              "IN_EP2_STATE": {
                "bit": 0,
                "description": "State of IN Endpoint 2.",
                "width": 2
              },
              "IN_EP2_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of IN endpoint 2.",
                "width": 7
              },
              "IN_EP2_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of IN endpoint 2.",
                "width": 7
              }
            },
            "IN_EP3_ST": {
              "IN_EP3_STATE": {
                "bit": 0,
                "description": "State of IN Endpoint 3.",
                "width": 2
              },
              "IN_EP3_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of IN endpoint 3.",
                "width": 7
              },
              "IN_EP3_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of IN endpoint 3.",
                "width": 7
              }
            },
            "OUT_EP0_ST": {
              "OUT_EP0_STATE": {
                "bit": 0,
                "description": "State of OUT Endpoint 0.",
                "width": 2
              },
              "OUT_EP0_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of OUT endpoint 0. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP0_WR_ADDR-2 bytes data in OUT EP0.",
                "width": 7
              },
              "OUT_EP0_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of OUT endpoint 0.",
                "width": 7
              }
            },
            "OUT_EP1_ST": {
              "OUT_EP1_STATE": {
                "bit": 0,
                "description": "State of OUT Endpoint 1.",
                "width": 2
              },
              "OUT_EP1_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of OUT endpoint 1. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP1_WR_ADDR-2 bytes data in OUT EP1.",
                "width": 7
              },
              "OUT_EP1_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of OUT endpoint 1.",
                "width": 7
              },
              "OUT_EP1_REC_DATA_CNT": {
                "bit": 16,
                "description": "Data count in OUT endpoint 1 when one packet is received.",
                "width": 7
              }
            },
            "OUT_EP2_ST": {
              "OUT_EP2_STATE": {
                "bit": 0,
                "description": "State of OUT Endpoint 2.",
                "width": 2
              },
              "OUT_EP2_WR_ADDR": {
                "bit": 2,
                "description": "Write data address of OUT endpoint 2. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP2_WR_ADDR-2 bytes data in OUT EP2.",
                "width": 7
              },
              "OUT_EP2_RD_ADDR": {
                "bit": 9,
                "description": "Read data address of OUT endpoint 2.",
                "width": 7
              }
            },
            "MISC_CONF": {
              "CLK_EN": {
                "bit": 0,
                "description": "1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers."
              }
            },
            "MEM_CONF": {
              "USB_MEM_PD": {
                "bit": 0,
                "description": "1: power down usb memory."
              },
              "USB_MEM_CLK_EN": {
                "bit": 1,
                "description": "1: Force clock on for usb memory."
              }
            },
            "CHIP_RST": {
              "RTS": {
                "bit": 0,
                "description": "1: Chip reset is detected from usb serial channel. Software write 1 to clear it."
              },
              "DTR": {
                "bit": 1,
                "description": "1: Chip reset is detected from usb jtag channel. Software write 1 to clear it."
              },
              "USB_UART_CHIP_RST_DIS": {
                "bit": 2,
                "description": "Set this bit to disable chip reset from usb serial channel to reset chip."
              }
            },
            "SET_LINE_CODE_W0": {
              "DW_DTE_RATE": {
                "bit": 0,
                "description": "The value of dwDTERate set by host through SET_LINE_CODING command.",
                "width": 32
              }
            },
            "SET_LINE_CODE_W1": {
              "BCHAR_FORMAT": {
                "bit": 0,
                "description": "The value of bCharFormat set by host through SET_LINE_CODING command.",
                "width": 8
              },
              "BPARITY_TYPE": {
                "bit": 8,
                "description": "The value of bParityTpye set by host through SET_LINE_CODING command.",
                "width": 8
              },
              "BDATA_BITS": {
                "bit": 16,
                "description": "The value of bDataBits set by host through SET_LINE_CODING command.",
                "width": 8
              }
            },
            "GET_LINE_CODE_W0": {
              "GET_DW_DTE_RATE": {
                "bit": 0,
                "description": "The value of dwDTERate set by software which is requested by GET_LINE_CODING command.",
                "width": 32
              }
            },
            "GET_LINE_CODE_W1": {
              "GET_BDATA_BITS": {
                "bit": 0,
                "description": "The value of bCharFormat set by software which is requested by GET_LINE_CODING command.",
                "width": 8
              },
              "GET_BPARITY_TYPE": {
                "bit": 8,
                "description": "The value of bParityTpye set by software which is requested by GET_LINE_CODING command.",
                "width": 8
              },
              "GET_BCHAR_FORMAT": {
                "bit": 16,
                "description": "The value of bDataBits set by software which is requested by GET_LINE_CODING command.",
                "width": 8
              }
            },
            "CONFIG_UPDATE": {
              "CONFIG_UPDATE": {
                "bit": 0,
                "description": "Write 1 to this register would update the value of configure registers from APB clock domain to 48MHz clock domain."
              }
            },
            "SER_AFIFO_CONFIG": {
              "SERIAL_IN_AFIFO_RESET_WR": {
                "bit": 0,
                "description": "Write 1 to reset CDC_ACM IN async FIFO write clock domain."
              },
              "SERIAL_IN_AFIFO_RESET_RD": {
                "bit": 1,
                "description": "Write 1 to reset CDC_ACM IN async FIFO read clock domain."
              },
              "SERIAL_OUT_AFIFO_RESET_WR": {
                "bit": 2,
                "description": "Write 1 to reset CDC_ACM OUT async FIFO write clock domain."
              },
              "SERIAL_OUT_AFIFO_RESET_RD": {
                "bit": 3,
                "description": "Write 1 to reset CDC_ACM OUT async FIFO read clock domain."
              },
              "SERIAL_OUT_AFIFO_REMPTY": {
                "bit": 4,
                "description": "CDC_ACM OUTOUT async FIFO empty signal in read clock domain."
              },
              "SERIAL_IN_AFIFO_WFULL": {
                "bit": 5,
                "description": "CDC_ACM OUT IN async FIFO empty signal in write clock domain."
              }
            },
            "BUS_RESET_ST": {
              "USB_BUS_RESET_ST": {
                "bit": 0,
                "description": "USB bus reset status. 0: USB-Serial-JTAG is in usb bus reset status. 1: USB bus reset is released."
              }
            },
            "DATE": {
              "DATE": {
                "bit": 0,
                "description": "register version.",
                "width": 32
              }
            }
          }
        }
      },
      "interrupts": {
        "count": 81,
        "vectors": [
          {
            "number": 0,
            "name": "Initial_SP"
          },
          {
            "number": 1,
            "name": "Reset_Handler"
          },
          {
            "number": 2,
            "name": "NMI_Handler"
          },
          {
            "number": 3,
            "name": "HardFault_Handler"
          },
          {
            "number": 4,
            "name": "MemManage_Handler"
          },
          {
            "number": 5,
            "name": "BusFault_Handler"
          },
          {
            "number": 6,
            "name": "UsageFault_Handler"
          },
          {
            "number": 11,
            "name": "SVC_Handler"
          },
          {
            "number": 12,
            "name": "DebugMon_Handler"
          },
          {
            "number": 14,
            "name": "PendSV_Handler"
          },
          {
            "number": 15,
            "name": "SysTick_Handler"
          },
          {
            "number": 16,
            "name": "PMU_IRQHandler"
          },
          {
            "number": 17,
            "name": "EFUSE_IRQHandler"
          },
          {
            "number": 18,
            "name": "LP_RTC_TIMER_IRQHandler"
          },
          {
            "number": 19,
            "name": "LP_BLE_TIMER_IRQHandler"
          },
          {
            "number": 20,
            "name": "LP_WDT_IRQHandler"
          },
          {
            "number": 21,
            "name": "LP_PERI_TIMEOUT_IRQHandler"
          },
          {
            "number": 22,
            "name": "LP_APM_M0_IRQHandler"
          },
          {
            "number": 23,
            "name": "FROM_CPU_INTR0_IRQHandler"
          },
          {
            "number": 24,
            "name": "FROM_CPU_INTR1_IRQHandler"
          },
          {
            "number": 25,
            "name": "FROM_CPU_INTR2_IRQHandler"
          },
          {
            "number": 26,
            "name": "FROM_CPU_INTR3_IRQHandler"
          },
          {
            "number": 27,
            "name": "ASSIST_DEBUG_IRQHandler"
          },
          {
            "number": 28,
            "name": "TRACE_IRQHandler"
          },
          {
            "number": 29,
            "name": "CACHE_IRQHandler"
          },
          {
            "number": 30,
            "name": "CPU_PERI_TIMEOUT_IRQHandler"
          },
          {
            "number": 31,
            "name": "BT_MAC_IRQHandler"
          },
          {
            "number": 32,
            "name": "BT_BB_IRQHandler"
          },
          {
            "number": 33,
            "name": "BT_BB_NMI_IRQHandler"
          },
          {
            "number": 34,
            "name": "COEX_IRQHandler"
          },
          {
            "number": 35,
            "name": "BLE_TIMER_IRQHandler"
          },
          {
            "number": 36,
            "name": "BLE_SEC_IRQHandler"
          },
          {
            "number": 37,
            "name": "ZB_MAC_IRQHandler"
          },
          {
            "number": 38,
            "name": "GPIO_IRQHandler"
          },
          {
            "number": 39,
            "name": "GPIO_NMI_IRQHandler"
          },
          {
            "number": 40,
            "name": "PAU_IRQHandler"
          },
          {
            "number": 41,
            "name": "HP_PERI_TIMEOUT_IRQHandler"
          },
          {
            "number": 42,
            "name": "HP_APM_M0_IRQHandler"
          },
          {
            "number": 43,
            "name": "HP_APM_M1_IRQHandler"
          },
          {
            "number": 44,
            "name": "HP_APM_M2_IRQHandler"
          },
          {
            "number": 45,
            "name": "HP_APM_M3_IRQHandler"
          },
          {
            "number": 46,
            "name": "MSPI_IRQHandler"
          },
          {
            "number": 47,
            "name": "I2S1_IRQHandler"
          },
          {
            "number": 48,
            "name": "UHCI0_IRQHandler"
          },
          {
            "number": 49,
            "name": "UART0_IRQHandler"
          },
          {
            "number": 50,
            "name": "UART1_IRQHandler"
          },
          {
            "number": 51,
            "name": "LEDC_IRQHandler"
          },
          {
            "number": 52,
            "name": "TWAI0_IRQHandler"
          },
          {
            "number": 53,
            "name": "USB_DEVICE_IRQHandler"
          },
          {
            "number": 54,
            "name": "RMT_IRQHandler"
          },
          {
            "number": 55,
            "name": "I2C_EXT0_IRQHandler"
          },
          {
            "number": 56,
            "name": "I2C_EXT1_IRQHandler"
          },
          {
            "number": 57,
            "name": "TG0_T0_LEVEL_IRQHandler"
          },
          {
            "number": 58,
            "name": "TG0_WDT_LEVEL_IRQHandler"
          },
          {
            "number": 59,
            "name": "TG1_T0_LEVEL_IRQHandler"
          },
          {
            "number": 60,
            "name": "TG1_WDT_LEVEL_IRQHandler"
          },
          {
            "number": 61,
            "name": "SYSTIMER_TARGET0_IRQHandler"
          },
          {
            "number": 62,
            "name": "SYSTIMER_TARGET1_IRQHandler"
          },
          {
            "number": 63,
            "name": "SYSTIMER_TARGET2_IRQHandler"
          },
          {
            "number": 64,
            "name": "APB_ADC_IRQHandler"
          },
          {
            "number": 65,
            "name": "MCPWM0_IRQHandler"
          },
          {
            "number": 66,
            "name": "PCNT_IRQHandler"
          },
          {
            "number": 67,
            "name": "PARL_IO_TX_IRQHandler"
          },
          {
            "number": 68,
            "name": "PARL_IO_RX_IRQHandler"
          },
          {
            "number": 69,
            "name": "DMA_IN_CH0_IRQHandler"
          },
          {
            "number": 70,
            "name": "DMA_IN_CH1_IRQHandler"
          },
          {
            "number": 71,
            "name": "DMA_IN_CH2_IRQHandler"
          },
          {
            "number": 72,
            "name": "DMA_OUT_CH0_IRQHandler"
          },
          {
            "number": 73,
            "name": "DMA_OUT_CH1_IRQHandler"
          },
          {
            "number": 74,
            "name": "DMA_OUT_CH2_IRQHandler"
          },
          {
            "number": 75,
            "name": "GPSPI2_IRQHandler"
          },
          {
            "number": 76,
            "name": "AES_IRQHandler"
          },
          {
            "number": 77,
            "name": "SHA_IRQHandler"
          },
          {
            "number": 78,
            "name": "RSA_IRQHandler"
          },
          {
            "number": 79,
            "name": "ECC_IRQHandler"
          },
          {
            "number": 80,
            "name": "ECDSA_IRQHandler"
          }
        ]
      }
    }
  }
}