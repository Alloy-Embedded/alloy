{
  "family": "nrf9160",
  "architecture": "arm-cortex-m3",
  "vendor": "Nordic Semiconductor",
  "mcus": {
    "nrf9160": {
      "flash": {
        "size_kb": 64,
        "base_address": "0x08000000",
        "page_size_kb": 1
      },
      "ram": {
        "size_kb": 20,
        "base_address": "0x20000000"
      },
      "peripherals": {
        "FICR": {
          "instances": [
            {
              "name": "FICR_S",
              "base": "0x00FF0000"
            }
          ],
          "registers": {
            "DEVICEID[%s]": {
              "offset": "0x04",
              "size": 32,
              "description": "Description collection: Device identifier"
            },
            "PART": {
              "offset": "0x0C",
              "size": 32,
              "description": "Part code"
            },
            "VARIANT": {
              "offset": "0x10",
              "size": 32,
              "description": "Part Variant, Hardware version and Production configuration"
            },
            "PACKAGE": {
              "offset": "0x14",
              "size": 32,
              "description": "Package option"
            },
            "RAM": {
              "offset": "0x18",
              "size": 32,
              "description": "RAM variant"
            },
            "FLASH": {
              "offset": "0x1C",
              "size": 32,
              "description": "Flash variant"
            },
            "CODEPAGESIZE": {
              "offset": "0x20",
              "size": 32,
              "description": "Code memory page size"
            },
            "CODESIZE": {
              "offset": "0x24",
              "size": 32,
              "description": "Code memory size"
            },
            "DEVICETYPE": {
              "offset": "0x28",
              "size": 32,
              "description": "Device type"
            },
            "ADDR": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Address"
            },
            "DATA": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Data"
            },
            "BYTES": {
              "offset": "0x00",
              "size": 32,
              "description": "Amount of bytes for the required entropy bits"
            },
            "RCCUTOFF": {
              "offset": "0x04",
              "size": 32,
              "description": "Repetition counter cutoff"
            },
            "APCUTOFF": {
              "offset": "0x08",
              "size": 32,
              "description": "Adaptive proportion cutoff"
            },
            "STARTUP": {
              "offset": "0x0C",
              "size": 32,
              "description": "Amount of bytes for the startup tests"
            },
            "ROSC1": {
              "offset": "0x10",
              "size": 32,
              "description": "Sample count for ring oscillator 1"
            },
            "ROSC2": {
              "offset": "0x14",
              "size": 32,
              "description": "Sample count for ring oscillator 2"
            },
            "ROSC3": {
              "offset": "0x18",
              "size": 32,
              "description": "Sample count for ring oscillator 3"
            },
            "ROSC4": {
              "offset": "0x1C",
              "size": 32,
              "description": "Sample count for ring oscillator 4"
            }
          },
          "bits": {
            "DEVICEID[%s]": {
              "DEVICEID": {
                "bit": 0,
                "description": "64 bit unique device identifier",
                "width": 32
              }
            },
            "PART": {
              "PART": {
                "bit": 0,
                "description": "Part code",
                "width": 32
              }
            },
            "VARIANT": {
              "VARIANT": {
                "bit": 0,
                "description": "Part Variant, Hardware version and Production configuration, encoded as ASCII",
                "width": 32
              }
            },
            "PACKAGE": {
              "PACKAGE": {
                "bit": 0,
                "description": "Package option",
                "width": 32
              }
            },
            "RAM": {
              "RAM": {
                "bit": 0,
                "description": "RAM variant",
                "width": 32
              }
            },
            "FLASH": {
              "FLASH": {
                "bit": 0,
                "description": "Flash variant",
                "width": 32
              }
            },
            "CODEPAGESIZE": {
              "CODEPAGESIZE": {
                "bit": 0,
                "description": "Code memory page size",
                "width": 32
              }
            },
            "CODESIZE": {
              "CODESIZE": {
                "bit": 0,
                "description": "Code memory size in number of pages",
                "width": 32
              }
            },
            "DEVICETYPE": {
              "DEVICETYPE": {
                "bit": 0,
                "description": "Device type",
                "width": 32
              }
            },
            "ADDR": {
              "Address": {
                "bit": 0,
                "description": "Address",
                "width": 32
              }
            },
            "DATA": {
              "Data": {
                "bit": 0,
                "description": "Data",
                "width": 32
              }
            },
            "BYTES": {
              "BYTES": {
                "bit": 0,
                "description": "Amount of bytes for the required entropy bits",
                "width": 32
              }
            },
            "RCCUTOFF": {
              "RCCUTOFF": {
                "bit": 0,
                "description": "Repetition counter cutoff",
                "width": 32
              }
            },
            "APCUTOFF": {
              "APCUTOFF": {
                "bit": 0,
                "description": "Adaptive proportion cutoff",
                "width": 32
              }
            },
            "STARTUP": {
              "STARTUP": {
                "bit": 0,
                "description": "Amount of bytes for the startup tests",
                "width": 32
              }
            },
            "ROSC1": {
              "ROSC1": {
                "bit": 0,
                "description": "Sample count for ring oscillator 1",
                "width": 32
              }
            },
            "ROSC2": {
              "ROSC2": {
                "bit": 0,
                "description": "Sample count for ring oscillator 2",
                "width": 32
              }
            },
            "ROSC3": {
              "ROSC3": {
                "bit": 0,
                "description": "Sample count for ring oscillator 3",
                "width": 32
              }
            },
            "ROSC4": {
              "ROSC4": {
                "bit": 0,
                "description": "Sample count for ring oscillator 4",
                "width": 32
              }
            }
          }
        },
        "UICR": {
          "instances": [
            {
              "name": "UICR_S",
              "base": "0x00FF8000"
            }
          ],
          "registers": {
            "APPROTECT": {
              "offset": "0x00",
              "size": 32,
              "description": "Access port protection"
            },
            "XOSC32M": {
              "offset": "0x14",
              "size": 32,
              "description": "Oscillator control"
            },
            "HFXOSRC": {
              "offset": "0x1C",
              "size": 32,
              "description": "HFXO clock source selection"
            },
            "HFXOCNT": {
              "offset": "0x20",
              "size": 32,
              "description": "HFXO startup counter"
            },
            "SECUREAPPROTECT": {
              "offset": "0x2C",
              "size": 32,
              "description": "Secure access port protection"
            },
            "ERASEPROTECT": {
              "offset": "0x30",
              "size": 32,
              "description": "Erase protection"
            },
            "OTP[%s]": {
              "offset": "0x108",
              "size": 32,
              "description": "Description collection: One time programmable memory"
            },
            "DEST": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Destination address where content of the key value registers (KEYSLOT.KEYn.VALUE[0-3])\n          will be pushed by KMU. Note that this address MUST match that of a peripherals\n          APB mapped write-only key registers, else the KMU can push this key value into\n          an address range which the CPU can potentially read!"
            },
            "PERM": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Define permissions for the key slot. Bits 0-15 and 16-31 can only be written when equal to 0xFFFF."
            },
            "VALUE[%s]": {
              "offset": "0x00",
              "size": 32,
              "description": "Description collection: Define bits [31+o*32:0+o*32] of value assigned to KMU key slot."
            }
          },
          "bits": {
            "APPROTECT": {
              "PALL": {
                "bit": 0,
                "description": "Blocks debugger read/write access to all CPU registers and\n          memory mapped addresses",
                "width": 32
              }
            },
            "XOSC32M": {
              "CTRL": {
                "bit": 0,
                "description": "Pierce current DAC control signals",
                "width": 6
              }
            },
            "HFXOSRC": {
              "HFXOSRC": {
                "bit": 0,
                "description": "HFXO clock source selection"
              }
            },
            "HFXOCNT": {
              "HFXOCNT": {
                "bit": 0,
                "description": "HFXO startup counter. Total debounce time = HFXOCNT*64 us + 0.5 us",
                "width": 8
              }
            },
            "SECUREAPPROTECT": {
              "PALL": {
                "bit": 0,
                "description": "Blocks debugger read/write access to all secure CPU registers and secure\n          memory mapped addresses",
                "width": 32
              }
            },
            "ERASEPROTECT": {
              "PALL": {
                "bit": 0,
                "description": "Blocks NVMC ERASEALL and CTRLAP ERASEALL functionality",
                "width": 32
              }
            },
            "OTP[%s]": {
              "LOWER": {
                "bit": 0,
                "description": "Lower half word",
                "width": 16
              },
              "UPPER": {
                "bit": 16,
                "description": "Upper half word",
                "width": 16
              }
            },
            "DEST": {
              "DEST": {
                "bit": 0,
                "description": "Secure APB destination address",
                "width": 32
              }
            },
            "PERM": {
              "WRITE": {
                "bit": 0,
                "description": "Write permission for key slot"
              },
              "READ": {
                "bit": 1,
                "description": "Read permission for key slot"
              },
              "PUSH": {
                "bit": 2,
                "description": "Push permission for key slot"
              },
              "STATE": {
                "bit": 16,
                "description": "Revocation state for the key slot"
              }
            },
            "VALUE[%s]": {
              "VALUE": {
                "bit": 0,
                "description": "Define bits [31+o*32:0+o*32] of value assigned to KMU key slot",
                "width": 32
              }
            }
          }
        },
        "TAD": {
          "instances": [
            {
              "name": "TAD_S",
              "base": "0xE0080000"
            }
          ],
          "registers": {
            "CLOCKSTART": {
              "offset": "0x00",
              "size": 32,
              "description": "Start all trace and debug clocks."
            },
            "CLOCKSTOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stop all trace and debug clocks."
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable debug domain and aquire selected GPIOs"
            },
            "TRACECLK": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin number configuration for TRACECLK"
            },
            "TRACEDATA0": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin number configuration for TRACEDATA[0]"
            },
            "TRACEDATA1": {
              "offset": "0x08",
              "size": 32,
              "description": "Pin number configuration for TRACEDATA[1]"
            },
            "TRACEDATA2": {
              "offset": "0x0C",
              "size": 32,
              "description": "Pin number configuration for TRACEDATA[2]"
            },
            "TRACEDATA3": {
              "offset": "0x10",
              "size": 32,
              "description": "Pin number configuration for TRACEDATA[3]"
            },
            "TRACEPORTSPEED": {
              "offset": "0x518",
              "size": 32,
              "description": "Clocking options for the Trace Port debug interface"
            }
          },
          "bits": {
            "CLOCKSTART": {
              "START": {
                "bit": 0,
                "description": "Start all trace and debug clocks."
              }
            },
            "CLOCKSTOP": {
              "STOP": {
                "bit": 0,
                "description": "Stop all trace and debug clocks."
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Disable debug domain and release selected GPIOs"
              }
            },
            "TRACECLK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TRACEDATA0": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TRACEDATA1": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TRACEDATA2": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TRACEDATA3": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TRACEPORTSPEED": {
              "TRACEPORTSPEED": {
                "bit": 0,
                "description": "Speed of Trace Port clock. Note that the TRACECLK pin will output this clock divided by two.",
                "width": 2
              }
            }
          }
        },
        "SPU": {
          "instances": [
            {
              "name": "SPU_S",
              "base": "0x50003000",
              "irq": 3
            }
          ],
          "registers": {
            "EVENTS_RAMACCERR": {
              "offset": "0x100",
              "size": 32,
              "description": "A security violation has been detected for the RAM memory space"
            },
            "EVENTS_FLASHACCERR": {
              "offset": "0x104",
              "size": 32,
              "description": "A security violation has been detected for the flash memory space"
            },
            "EVENTS_PERIPHACCERR": {
              "offset": "0x108",
              "size": 32,
              "description": "A security violation has been detected on one or several peripherals"
            },
            "PUBLISH_RAMACCERR": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event RAMACCERR"
            },
            "PUBLISH_FLASHACCERR": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event FLASHACCERR"
            },
            "PUBLISH_PERIPHACCERR": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event PERIPHACCERR"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "CAP": {
              "offset": "0x400",
              "size": 32,
              "description": "Show implemented features for the current device"
            },
            "PERM": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: List capabilities and access permissions for the peripheral with ID n"
            },
            "LOCK": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Prevent further modification of the corresponding PERM register"
            },
            "REGION": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Define which RAM region can contain the non-secure callable (NSC) region n"
            },
            "SIZE": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Define the size of the non-secure callable (NSC) region n"
            }
          },
          "bits": {
            "EVENTS_RAMACCERR": {
              "EVENTS_RAMACCERR": {
                "bit": 0,
                "description": "A security violation has been detected for the RAM memory space"
              }
            },
            "EVENTS_FLASHACCERR": {
              "EVENTS_FLASHACCERR": {
                "bit": 0,
                "description": "A security violation has been detected for the flash memory space"
              }
            },
            "EVENTS_PERIPHACCERR": {
              "EVENTS_PERIPHACCERR": {
                "bit": 0,
                "description": "A security violation has been detected on one or several peripherals"
              }
            },
            "PUBLISH_RAMACCERR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RAMACCERR will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_FLASHACCERR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event FLASHACCERR will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_PERIPHACCERR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event PERIPHACCERR will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "RAMACCERR": {
                "bit": 0,
                "description": "Enable or disable interrupt for event RAMACCERR"
              },
              "FLASHACCERR": {
                "bit": 1,
                "description": "Enable or disable interrupt for event FLASHACCERR"
              },
              "PERIPHACCERR": {
                "bit": 2,
                "description": "Enable or disable interrupt for event PERIPHACCERR"
              }
            },
            "INTENSET": {
              "RAMACCERR": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event RAMACCERR"
              },
              "FLASHACCERR": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event FLASHACCERR"
              },
              "PERIPHACCERR": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event PERIPHACCERR"
              }
            },
            "INTENCLR": {
              "RAMACCERR": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event RAMACCERR"
              },
              "FLASHACCERR": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event FLASHACCERR"
              },
              "PERIPHACCERR": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event PERIPHACCERR"
              }
            },
            "CAP": {
              "TZM": {
                "bit": 0,
                "description": "Show ARM TrustZone status"
              }
            },
            "PERM": {
              "SECUREMAPPING": {
                "bit": 0,
                "description": "Define configuration capabilities for TrustZone Cortex-M secure attribute",
                "width": 2
              },
              "DMA": {
                "bit": 2,
                "description": "Indicate if the peripheral has DMA capabilities and if DMA transfer can be assigned to a different security attribute than the peripheral itself",
                "width": 2
              },
              "SECATTR": {
                "bit": 4,
                "description": "Peripheral security mapping"
              },
              "DMASEC": {
                "bit": 5,
                "description": "Security attribution for the DMA transfer"
              },
              "LOCK": {
                "bit": 8,
                "description": "This register can be updated"
              },
              "PRESENT": {
                "bit": 31,
                "description": "Indicate if a peripheral is present with ID n"
              }
            },
            "LOCK": {
              "LOCK": {
                "bit": 0,
                "description": "GPIOPORT[n].PERM register can't be changed until next reset"
              }
            },
            "REGION": {
              "REGION": {
                "bit": 0,
                "description": "Region number",
                "width": 4
              },
              "LOCK": {
                "bit": 8,
                "description": "This register can be updated"
              }
            },
            "SIZE": {
              "SIZE": {
                "bit": 0,
                "description": "Size of the non-secure callable (NSC) region n",
                "width": 4
              },
              "LOCK": {
                "bit": 8,
                "description": "This register can be updated"
              }
            }
          }
        },
        "REGULATORS": {
          "instances": [
            {
              "name": "REGULATORS_NS",
              "base": "0x40004000"
            },
            {
              "name": "REGULATORS_S",
              "base": "0x50004000"
            }
          ],
          "registers": {
            "SYSTEMOFF": {
              "offset": "0x500",
              "size": 32,
              "description": "System OFF register"
            },
            "DCDCEN": {
              "offset": "0x578",
              "size": 32,
              "description": "Enable DC/DC mode of the main voltage regulator."
            }
          },
          "bits": {
            "SYSTEMOFF": {
              "SYSTEMOFF": {
                "bit": 0,
                "description": "Enable System OFF mode"
              }
            },
            "DCDCEN": {
              "DCDCEN": {
                "bit": 0,
                "description": "Enable DC/DC converter"
              }
            }
          }
        },
        "RCC": {
          "instances": [
            {
              "name": "CLOCK_NS",
              "base": "0x40005000",
              "irq": 5
            },
            {
              "name": "CLOCK_S",
              "base": "0x50005000",
              "irq": 5
            }
          ],
          "registers": {
            "TASKS_HFCLKSTART": {
              "offset": "0x00",
              "size": 32,
              "description": "Start HFCLK source"
            },
            "TASKS_HFCLKSTOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stop HFCLK source"
            },
            "TASKS_LFCLKSTART": {
              "offset": "0x08",
              "size": 32,
              "description": "Start LFCLK source"
            },
            "TASKS_LFCLKSTOP": {
              "offset": "0x0C",
              "size": 32,
              "description": "Stop LFCLK source"
            },
            "SUBSCRIBE_HFCLKSTART": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task HFCLKSTART"
            },
            "SUBSCRIBE_HFCLKSTOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task HFCLKSTOP"
            },
            "SUBSCRIBE_LFCLKSTART": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task LFCLKSTART"
            },
            "SUBSCRIBE_LFCLKSTOP": {
              "offset": "0x8C",
              "size": 32,
              "description": "Subscribe configuration for task LFCLKSTOP"
            },
            "EVENTS_HFCLKSTARTED": {
              "offset": "0x100",
              "size": 32,
              "description": "HFCLK oscillator started"
            },
            "EVENTS_LFCLKSTARTED": {
              "offset": "0x104",
              "size": 32,
              "description": "LFCLK started"
            },
            "PUBLISH_HFCLKSTARTED": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event HFCLKSTARTED"
            },
            "PUBLISH_LFCLKSTARTED": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event LFCLKSTARTED"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "INTPEND": {
              "offset": "0x30C",
              "size": 32,
              "description": "Pending interrupts"
            },
            "HFCLKRUN": {
              "offset": "0x408",
              "size": 32,
              "description": "Status indicating that HFCLKSTART task has been triggered"
            },
            "HFCLKSTAT": {
              "offset": "0x40C",
              "size": 32,
              "description": "The register shows if HFXO has been requested by triggering HFCLKSTART task and if it has been started (STATE)"
            },
            "LFCLKRUN": {
              "offset": "0x414",
              "size": 32,
              "description": "Status indicating that LFCLKSTART task has been triggered"
            },
            "LFCLKSTAT": {
              "offset": "0x418",
              "size": 32,
              "description": "The register shows which LFCLK source has been requested (SRC) when triggering LFCLKSTART task and if the source has been started (STATE)"
            },
            "LFCLKSRCCOPY": {
              "offset": "0x41C",
              "size": 32,
              "description": "Copy of LFCLKSRC register, set after LFCLKSTART task has been triggered"
            },
            "LFCLKSRC": {
              "offset": "0x518",
              "size": 32,
              "description": "Clock source for the LFCLK. LFCLKSTART task starts starts a clock source selected with this register."
            }
          },
          "bits": {
            "TASKS_HFCLKSTART": {
              "TASKS_HFCLKSTART": {
                "bit": 0,
                "description": "Start HFCLK source"
              }
            },
            "TASKS_HFCLKSTOP": {
              "TASKS_HFCLKSTOP": {
                "bit": 0,
                "description": "Stop HFCLK source"
              }
            },
            "TASKS_LFCLKSTART": {
              "TASKS_LFCLKSTART": {
                "bit": 0,
                "description": "Start LFCLK source"
              }
            },
            "TASKS_LFCLKSTOP": {
              "TASKS_LFCLKSTOP": {
                "bit": 0,
                "description": "Stop LFCLK source"
              }
            },
            "SUBSCRIBE_HFCLKSTART": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task HFCLKSTART will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_HFCLKSTOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task HFCLKSTOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_LFCLKSTART": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task LFCLKSTART will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_LFCLKSTOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task LFCLKSTOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_HFCLKSTARTED": {
              "EVENTS_HFCLKSTARTED": {
                "bit": 0,
                "description": "HFCLK oscillator started"
              }
            },
            "EVENTS_LFCLKSTARTED": {
              "EVENTS_LFCLKSTARTED": {
                "bit": 0,
                "description": "LFCLK started"
              }
            },
            "PUBLISH_HFCLKSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event HFCLKSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_LFCLKSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event LFCLKSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "HFCLKSTARTED": {
                "bit": 0,
                "description": "Enable or disable interrupt for event HFCLKSTARTED"
              },
              "LFCLKSTARTED": {
                "bit": 1,
                "description": "Enable or disable interrupt for event LFCLKSTARTED"
              }
            },
            "INTENSET": {
              "HFCLKSTARTED": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event HFCLKSTARTED"
              },
              "LFCLKSTARTED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event LFCLKSTARTED"
              }
            },
            "INTENCLR": {
              "HFCLKSTARTED": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event HFCLKSTARTED"
              },
              "LFCLKSTARTED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event LFCLKSTARTED"
              }
            },
            "INTPEND": {
              "HFCLKSTARTED": {
                "bit": 0,
                "description": "Read pending status of interrupt for event HFCLKSTARTED"
              },
              "LFCLKSTARTED": {
                "bit": 1,
                "description": "Read pending status of interrupt for event LFCLKSTARTED"
              }
            },
            "HFCLKRUN": {
              "STATUS": {
                "bit": 0,
                "description": "HFCLKSTART task triggered or not"
              }
            },
            "HFCLKSTAT": {
              "SRC": {
                "bit": 0,
                "description": "Active clock source"
              },
              "STATE": {
                "bit": 16,
                "description": "HFCLK state"
              }
            },
            "LFCLKRUN": {
              "STATUS": {
                "bit": 0,
                "description": "LFCLKSTART task triggered or not"
              }
            },
            "LFCLKSTAT": {
              "SRC": {
                "bit": 0,
                "description": "Active clock source",
                "width": 2
              },
              "STATE": {
                "bit": 16,
                "description": "LFCLK state"
              }
            },
            "LFCLKSRCCOPY": {
              "SRC": {
                "bit": 0,
                "description": "Clock source",
                "width": 2
              }
            },
            "LFCLKSRC": {
              "SRC": {
                "bit": 0,
                "description": "Clock source",
                "width": 2
              }
            }
          }
        },
        "PWR": {
          "instances": [
            {
              "name": "POWER_NS",
              "base": "0x40005000",
              "irq": 5
            },
            {
              "name": "POWER_S",
              "base": "0x50005000",
              "irq": 5
            }
          ],
          "registers": {
            "TASKS_CONSTLAT": {
              "offset": "0x78",
              "size": 32,
              "description": "Enable constant latency mode."
            },
            "TASKS_LOWPWR": {
              "offset": "0x7C",
              "size": 32,
              "description": "Enable low power mode (variable latency)"
            },
            "SUBSCRIBE_CONSTLAT": {
              "offset": "0xF8",
              "size": 32,
              "description": "Subscribe configuration for task CONSTLAT"
            },
            "SUBSCRIBE_LOWPWR": {
              "offset": "0xFC",
              "size": 32,
              "description": "Subscribe configuration for task LOWPWR"
            },
            "EVENTS_POFWARN": {
              "offset": "0x108",
              "size": 32,
              "description": "Power failure warning"
            },
            "EVENTS_SLEEPENTER": {
              "offset": "0x114",
              "size": 32,
              "description": "CPU entered WFI/WFE sleep"
            },
            "EVENTS_SLEEPEXIT": {
              "offset": "0x118",
              "size": 32,
              "description": "CPU exited WFI/WFE sleep"
            },
            "PUBLISH_POFWARN": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event POFWARN"
            },
            "PUBLISH_SLEEPENTER": {
              "offset": "0x194",
              "size": 32,
              "description": "Publish configuration for event SLEEPENTER"
            },
            "PUBLISH_SLEEPEXIT": {
              "offset": "0x198",
              "size": 32,
              "description": "Publish configuration for event SLEEPEXIT"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "RESETREAS": {
              "offset": "0x400",
              "size": 32,
              "description": "Reset reason"
            },
            "POWERSTATUS": {
              "offset": "0x440",
              "size": 32,
              "description": "Modem domain power status"
            },
            "GPREGRET[%s]": {
              "offset": "0x51C",
              "size": 32,
              "description": "Description collection: General purpose retention register"
            }
          },
          "bits": {
            "TASKS_CONSTLAT": {
              "TASKS_CONSTLAT": {
                "bit": 0,
                "description": "Enable constant latency mode."
              }
            },
            "TASKS_LOWPWR": {
              "TASKS_LOWPWR": {
                "bit": 0,
                "description": "Enable low power mode (variable latency)"
              }
            },
            "SUBSCRIBE_CONSTLAT": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CONSTLAT will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_LOWPWR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task LOWPWR will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_POFWARN": {
              "EVENTS_POFWARN": {
                "bit": 0,
                "description": "Power failure warning"
              }
            },
            "EVENTS_SLEEPENTER": {
              "EVENTS_SLEEPENTER": {
                "bit": 0,
                "description": "CPU entered WFI/WFE sleep"
              }
            },
            "EVENTS_SLEEPEXIT": {
              "EVENTS_SLEEPEXIT": {
                "bit": 0,
                "description": "CPU exited WFI/WFE sleep"
              }
            },
            "PUBLISH_POFWARN": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event POFWARN will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_SLEEPENTER": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event SLEEPENTER will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_SLEEPEXIT": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event SLEEPEXIT will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "POFWARN": {
                "bit": 2,
                "description": "Enable or disable interrupt for event POFWARN"
              },
              "SLEEPENTER": {
                "bit": 5,
                "description": "Enable or disable interrupt for event SLEEPENTER"
              },
              "SLEEPEXIT": {
                "bit": 6,
                "description": "Enable or disable interrupt for event SLEEPEXIT"
              }
            },
            "INTENSET": {
              "POFWARN": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event POFWARN"
              },
              "SLEEPENTER": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event SLEEPENTER"
              },
              "SLEEPEXIT": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event SLEEPEXIT"
              }
            },
            "INTENCLR": {
              "POFWARN": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event POFWARN"
              },
              "SLEEPENTER": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event SLEEPENTER"
              },
              "SLEEPEXIT": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event SLEEPEXIT"
              }
            },
            "RESETREAS": {
              "RESETPIN": {
                "bit": 0,
                "description": "Reset from pin reset detected"
              },
              "DOG": {
                "bit": 1,
                "description": "Reset from global watchdog detected"
              },
              "OFF": {
                "bit": 2,
                "description": "Reset due to wakeup from System OFF mode, when wakeup is triggered by DETECT signal from GPIO"
              },
              "DIF": {
                "bit": 4,
                "description": "Reset due to wakeup from System OFF mode, when wakeup is triggered by entering debug interface mode"
              },
              "SREQ": {
                "bit": 16,
                "description": "Reset from AIRCR.SYSRESETREQ detected"
              },
              "LOCKUP": {
                "bit": 17,
                "description": "Reset from CPU lock-up detected"
              },
              "CTRLAP": {
                "bit": 18,
                "description": "Reset triggered through CTRL-AP"
              }
            },
            "POWERSTATUS": {
              "LTEMODEM": {
                "bit": 0,
                "description": "LTE modem domain status"
              }
            },
            "GPREGRET[%s]": {
              "GPREGRET": {
                "bit": 0,
                "description": "General purpose retention register",
                "width": 8
              }
            }
          }
        },
        "CTRL": {
          "instances": [
            {
              "name": "CTRL_AP_PERI_S",
              "base": "0x50006000"
            }
          ],
          "registers": {
            "RXDATA": {
              "offset": "0x00",
              "size": 32,
              "description": "Data sent from the debugger to the CPU"
            },
            "RXSTATUS": {
              "offset": "0x04",
              "size": 32,
              "description": "Status to indicate if data sent from the debugger to the CPU has been read"
            },
            "TXDATA": {
              "offset": "0x80",
              "size": 32,
              "description": "Data sent from the CPU to the debugger"
            },
            "TXSTATUS": {
              "offset": "0x84",
              "size": 32,
              "description": "Status to indicate if data sent from the CPU to the debugger has been read"
            },
            "LOCK": {
              "offset": "0x00",
              "size": 32,
              "description": "Lock register ERASEPROTECT.DISABLE from being written until next reset"
            },
            "DISABLE": {
              "offset": "0x04",
              "size": 32,
              "description": "Disable ERASEPROTECT and perform ERASEALL"
            }
          },
          "bits": {
            "RXDATA": {
              "RXDATA": {
                "bit": 0,
                "description": "Data received from debugger",
                "width": 32
              }
            },
            "RXSTATUS": {
              "RXSTATUS": {
                "bit": 0,
                "description": "Status of data in register RXDATA"
              }
            },
            "TXDATA": {
              "TXDATA": {
                "bit": 0,
                "description": "Data sent to debugger",
                "width": 32
              }
            },
            "TXSTATUS": {
              "TXSTATUS": {
                "bit": 0,
                "description": "Status of data in register TXDATA"
              }
            },
            "LOCK": {
              "LOCK": {
                "bit": 0,
                "description": "Lock register ERASEPROTECT.DISABLE from being written until next reset"
              }
            },
            "DISABLE": {
              "KEY": {
                "bit": 0,
                "description": "The ERASEALL sequence will be initiated if value of KEY fields are non-zero and KEY fields match on both CPU and debugger side",
                "width": 32
              }
            }
          }
        },
        "SPI": {
          "instances": [
            {
              "name": "SPIM0_NS",
              "base": "0x40008000",
              "irq": 8
            },
            {
              "name": "SPIS0_NS",
              "base": "0x40008000",
              "irq": 8
            },
            {
              "name": "SPIM0_S",
              "base": "0x50008000",
              "irq": 8
            },
            {
              "name": "SPIS0_S",
              "base": "0x50008000",
              "irq": 8
            },
            {
              "name": "SPIM1_NS",
              "base": "0x40009000",
              "irq": 9
            },
            {
              "name": "SPIS1_NS",
              "base": "0x40009000",
              "irq": 9
            },
            {
              "name": "SPIM1_S",
              "base": "0x50009000",
              "irq": 9
            },
            {
              "name": "SPIS1_S",
              "base": "0x50009000",
              "irq": 9
            },
            {
              "name": "SPIM2_NS",
              "base": "0x4000A000",
              "irq": 10
            },
            {
              "name": "SPIS2_NS",
              "base": "0x4000A000",
              "irq": 10
            },
            {
              "name": "SPIM2_S",
              "base": "0x5000A000",
              "irq": 10
            },
            {
              "name": "SPIS2_S",
              "base": "0x5000A000",
              "irq": 10
            },
            {
              "name": "SPIM3_NS",
              "base": "0x4000B000",
              "irq": 11
            },
            {
              "name": "SPIS3_NS",
              "base": "0x4000B000",
              "irq": 11
            },
            {
              "name": "SPIM3_S",
              "base": "0x5000B000",
              "irq": 11
            },
            {
              "name": "SPIS3_S",
              "base": "0x5000B000",
              "irq": 11
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x10",
              "size": 32,
              "description": "Start SPI transaction"
            },
            "TASKS_STOP": {
              "offset": "0x14",
              "size": 32,
              "description": "Stop SPI transaction"
            },
            "TASKS_SUSPEND": {
              "offset": "0x1C",
              "size": 32,
              "description": "Suspend SPI transaction"
            },
            "TASKS_RESUME": {
              "offset": "0x20",
              "size": 32,
              "description": "Resume SPI transaction"
            },
            "SUBSCRIBE_START": {
              "offset": "0x90",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x94",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_SUSPEND": {
              "offset": "0x9C",
              "size": 32,
              "description": "Subscribe configuration for task SUSPEND"
            },
            "SUBSCRIBE_RESUME": {
              "offset": "0xA0",
              "size": 32,
              "description": "Subscribe configuration for task RESUME"
            },
            "EVENTS_STOPPED": {
              "offset": "0x104",
              "size": 32,
              "description": "SPI transaction has stopped"
            },
            "EVENTS_ENDRX": {
              "offset": "0x110",
              "size": 32,
              "description": "End of RXD buffer reached"
            },
            "EVENTS_END": {
              "offset": "0x118",
              "size": 32,
              "description": "End of RXD buffer and TXD buffer reached"
            },
            "EVENTS_ENDTX": {
              "offset": "0x120",
              "size": 32,
              "description": "End of TXD buffer reached"
            },
            "EVENTS_STARTED": {
              "offset": "0x14C",
              "size": 32,
              "description": "Transaction started"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "PUBLISH_ENDRX": {
              "offset": "0x190",
              "size": 32,
              "description": "Publish configuration for event ENDRX"
            },
            "PUBLISH_END": {
              "offset": "0x198",
              "size": 32,
              "description": "Publish configuration for event END"
            },
            "PUBLISH_ENDTX": {
              "offset": "0x1A0",
              "size": 32,
              "description": "Publish configuration for event ENDTX"
            },
            "PUBLISH_STARTED": {
              "offset": "0x1CC",
              "size": 32,
              "description": "Publish configuration for event STARTED"
            },
            "SHORTS": {
              "offset": "0x200",
              "size": 32,
              "description": "Shortcuts between local events and tasks"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable SPIM"
            },
            "SCK": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin select for SCK"
            },
            "MOSI": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin select for MOSI signal"
            },
            "MISO": {
              "offset": "0x08",
              "size": 32,
              "description": "Pin select for MISO signal"
            },
            "FREQUENCY": {
              "offset": "0x524",
              "size": 32,
              "description": "SPI frequency. Accuracy depends on the HFCLK source selected."
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data pointer"
            },
            "MAXCNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Maximum number of bytes in transmit buffer"
            },
            "AMOUNT": {
              "offset": "0x08",
              "size": 32,
              "description": "Number of bytes transferred in the last transaction"
            },
            "LIST": {
              "offset": "0x0C",
              "size": 32,
              "description": "EasyDMA list type"
            },
            "CONFIG": {
              "offset": "0x554",
              "size": 32,
              "description": "Configuration register"
            },
            "ORC": {
              "offset": "0x5C0",
              "size": 32,
              "description": "Over-read character. Character clocked out in case an over-read of the TXD buffer."
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Start SPI transaction"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stop SPI transaction"
              }
            },
            "TASKS_SUSPEND": {
              "TASKS_SUSPEND": {
                "bit": 0,
                "description": "Suspend SPI transaction"
              }
            },
            "TASKS_RESUME": {
              "TASKS_RESUME": {
                "bit": 0,
                "description": "Resume SPI transaction"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SUSPEND": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SUSPEND will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_RESUME": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task RESUME will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "SPI transaction has stopped"
              }
            },
            "EVENTS_ENDRX": {
              "EVENTS_ENDRX": {
                "bit": 0,
                "description": "End of RXD buffer reached"
              }
            },
            "EVENTS_END": {
              "EVENTS_END": {
                "bit": 0,
                "description": "End of RXD buffer and TXD buffer reached"
              }
            },
            "EVENTS_ENDTX": {
              "EVENTS_ENDTX": {
                "bit": 0,
                "description": "End of TXD buffer reached"
              }
            },
            "EVENTS_STARTED": {
              "EVENTS_STARTED": {
                "bit": 0,
                "description": "Transaction started"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ENDRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ENDRX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_END": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event END will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ENDTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ENDTX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_STARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "SHORTS": {
              "END_START": {
                "bit": 17,
                "description": "Shortcut between event END and task START"
              }
            },
            "INTENSET": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "ENDRX": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event ENDRX"
              },
              "END": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event END"
              },
              "ENDTX": {
                "bit": 8,
                "description": "Write '1' to enable interrupt for event ENDTX"
              },
              "STARTED": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event STARTED"
              }
            },
            "INTENCLR": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "ENDRX": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event ENDRX"
              },
              "END": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event END"
              },
              "ENDTX": {
                "bit": 8,
                "description": "Write '1' to disable interrupt for event ENDTX"
              },
              "STARTED": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event STARTED"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable SPIM",
                "width": 4
              }
            },
            "SCK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "MOSI": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "MISO": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "FREQUENCY": {
              "FREQUENCY": {
                "bit": 0,
                "description": "SPI master data rate",
                "width": 32
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Data pointer",
                "width": 32
              }
            },
            "MAXCNT": {
              "MAXCNT": {
                "bit": 0,
                "description": "Maximum number of bytes in transmit buffer",
                "width": 13
              }
            },
            "AMOUNT": {
              "AMOUNT": {
                "bit": 0,
                "description": "Number of bytes transferred in the last transaction",
                "width": 13
              }
            },
            "LIST": {
              "LIST": {
                "bit": 0,
                "description": "List type",
                "width": 2
              }
            },
            "CONFIG": {
              "ORDER": {
                "bit": 0,
                "description": "Bit order"
              },
              "CPHA": {
                "bit": 1,
                "description": "Serial clock (SCK) phase"
              },
              "CPOL": {
                "bit": 2,
                "description": "Serial clock (SCK) polarity"
              }
            },
            "ORC": {
              "ORC": {
                "bit": 0,
                "description": "Over-read character. Character clocked out in case an over-read of the TXD buffer.",
                "width": 8
              }
            }
          }
        },
        "I2C": {
          "instances": [
            {
              "name": "TWIM0_NS",
              "base": "0x40008000",
              "irq": 8
            },
            {
              "name": "TWIS0_NS",
              "base": "0x40008000",
              "irq": 8
            },
            {
              "name": "TWIM0_S",
              "base": "0x50008000",
              "irq": 8
            },
            {
              "name": "TWIS0_S",
              "base": "0x50008000",
              "irq": 8
            },
            {
              "name": "TWIM1_NS",
              "base": "0x40009000",
              "irq": 9
            },
            {
              "name": "TWIS1_NS",
              "base": "0x40009000",
              "irq": 9
            },
            {
              "name": "TWIM1_S",
              "base": "0x50009000",
              "irq": 9
            },
            {
              "name": "TWIS1_S",
              "base": "0x50009000",
              "irq": 9
            },
            {
              "name": "TWIM2_NS",
              "base": "0x4000A000",
              "irq": 10
            },
            {
              "name": "TWIS2_NS",
              "base": "0x4000A000",
              "irq": 10
            },
            {
              "name": "TWIM2_S",
              "base": "0x5000A000",
              "irq": 10
            },
            {
              "name": "TWIS2_S",
              "base": "0x5000A000",
              "irq": 10
            },
            {
              "name": "TWIM3_NS",
              "base": "0x4000B000",
              "irq": 11
            },
            {
              "name": "TWIS3_NS",
              "base": "0x4000B000",
              "irq": 11
            },
            {
              "name": "TWIM3_S",
              "base": "0x5000B000",
              "irq": 11
            },
            {
              "name": "TWIS3_S",
              "base": "0x5000B000",
              "irq": 11
            }
          ],
          "registers": {
            "TASKS_STARTRX": {
              "offset": "0x00",
              "size": 32,
              "description": "Start TWI receive sequence"
            },
            "TASKS_STARTTX": {
              "offset": "0x08",
              "size": 32,
              "description": "Start TWI transmit sequence"
            },
            "TASKS_STOP": {
              "offset": "0x14",
              "size": 32,
              "description": "Stop TWI transaction. Must be issued while the TWI master is not suspended."
            },
            "TASKS_SUSPEND": {
              "offset": "0x1C",
              "size": 32,
              "description": "Suspend TWI transaction"
            },
            "TASKS_RESUME": {
              "offset": "0x20",
              "size": 32,
              "description": "Resume TWI transaction"
            },
            "SUBSCRIBE_STARTRX": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task STARTRX"
            },
            "SUBSCRIBE_STARTTX": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task STARTTX"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x94",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_SUSPEND": {
              "offset": "0x9C",
              "size": 32,
              "description": "Subscribe configuration for task SUSPEND"
            },
            "SUBSCRIBE_RESUME": {
              "offset": "0xA0",
              "size": 32,
              "description": "Subscribe configuration for task RESUME"
            },
            "EVENTS_STOPPED": {
              "offset": "0x104",
              "size": 32,
              "description": "TWI stopped"
            },
            "EVENTS_ERROR": {
              "offset": "0x124",
              "size": 32,
              "description": "TWI error"
            },
            "EVENTS_SUSPENDED": {
              "offset": "0x148",
              "size": 32,
              "description": "SUSPEND task has been issued, TWI traffic is now suspended."
            },
            "EVENTS_RXSTARTED": {
              "offset": "0x14C",
              "size": 32,
              "description": "Receive sequence started"
            },
            "EVENTS_TXSTARTED": {
              "offset": "0x150",
              "size": 32,
              "description": "Transmit sequence started"
            },
            "EVENTS_LASTRX": {
              "offset": "0x15C",
              "size": 32,
              "description": "Byte boundary, starting to receive the last byte"
            },
            "EVENTS_LASTTX": {
              "offset": "0x160",
              "size": 32,
              "description": "Byte boundary, starting to transmit the last byte"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "PUBLISH_ERROR": {
              "offset": "0x1A4",
              "size": 32,
              "description": "Publish configuration for event ERROR"
            },
            "PUBLISH_SUSPENDED": {
              "offset": "0x1C8",
              "size": 32,
              "description": "Publish configuration for event SUSPENDED"
            },
            "PUBLISH_RXSTARTED": {
              "offset": "0x1CC",
              "size": 32,
              "description": "Publish configuration for event RXSTARTED"
            },
            "PUBLISH_TXSTARTED": {
              "offset": "0x1D0",
              "size": 32,
              "description": "Publish configuration for event TXSTARTED"
            },
            "PUBLISH_LASTRX": {
              "offset": "0x1DC",
              "size": 32,
              "description": "Publish configuration for event LASTRX"
            },
            "PUBLISH_LASTTX": {
              "offset": "0x1E0",
              "size": 32,
              "description": "Publish configuration for event LASTTX"
            },
            "SHORTS": {
              "offset": "0x200",
              "size": 32,
              "description": "Shortcuts between local events and tasks"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ERRORSRC": {
              "offset": "0x4C4",
              "size": 32,
              "description": "Error source"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable TWIM"
            },
            "SCL": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin select for SCL signal"
            },
            "SDA": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin select for SDA signal"
            },
            "FREQUENCY": {
              "offset": "0x524",
              "size": 32,
              "description": "TWI frequency. Accuracy depends on the HFCLK source selected."
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data pointer"
            },
            "MAXCNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Maximum number of bytes in transmit buffer"
            },
            "AMOUNT": {
              "offset": "0x08",
              "size": 32,
              "description": "Number of bytes transferred in the last transaction"
            },
            "LIST": {
              "offset": "0x0C",
              "size": 32,
              "description": "EasyDMA list type"
            },
            "ADDRESS": {
              "offset": "0x588",
              "size": 32,
              "description": "Address used in the TWI transfer"
            }
          },
          "bits": {
            "TASKS_STARTRX": {
              "TASKS_STARTRX": {
                "bit": 0,
                "description": "Start TWI receive sequence"
              }
            },
            "TASKS_STARTTX": {
              "TASKS_STARTTX": {
                "bit": 0,
                "description": "Start TWI transmit sequence"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stop TWI transaction. Must be issued while the TWI master is not suspended."
              }
            },
            "TASKS_SUSPEND": {
              "TASKS_SUSPEND": {
                "bit": 0,
                "description": "Suspend TWI transaction"
              }
            },
            "TASKS_RESUME": {
              "TASKS_RESUME": {
                "bit": 0,
                "description": "Resume TWI transaction"
              }
            },
            "SUBSCRIBE_STARTRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STARTRX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STARTTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STARTTX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SUSPEND": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SUSPEND will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_RESUME": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task RESUME will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "TWI stopped"
              }
            },
            "EVENTS_ERROR": {
              "EVENTS_ERROR": {
                "bit": 0,
                "description": "TWI error"
              }
            },
            "EVENTS_SUSPENDED": {
              "EVENTS_SUSPENDED": {
                "bit": 0,
                "description": "SUSPEND task has been issued, TWI traffic is now suspended."
              }
            },
            "EVENTS_RXSTARTED": {
              "EVENTS_RXSTARTED": {
                "bit": 0,
                "description": "Receive sequence started"
              }
            },
            "EVENTS_TXSTARTED": {
              "EVENTS_TXSTARTED": {
                "bit": 0,
                "description": "Transmit sequence started"
              }
            },
            "EVENTS_LASTRX": {
              "EVENTS_LASTRX": {
                "bit": 0,
                "description": "Byte boundary, starting to receive the last byte"
              }
            },
            "EVENTS_LASTTX": {
              "EVENTS_LASTTX": {
                "bit": 0,
                "description": "Byte boundary, starting to transmit the last byte"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ERROR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ERROR will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_SUSPENDED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event SUSPENDED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_RXSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RXSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_TXSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TXSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_LASTRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event LASTRX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_LASTTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event LASTTX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "SHORTS": {
              "LASTTX_STARTRX": {
                "bit": 7,
                "description": "Shortcut between event LASTTX and task STARTRX"
              },
              "LASTTX_SUSPEND": {
                "bit": 8,
                "description": "Shortcut between event LASTTX and task SUSPEND"
              },
              "LASTTX_STOP": {
                "bit": 9,
                "description": "Shortcut between event LASTTX and task STOP"
              },
              "LASTRX_STARTTX": {
                "bit": 10,
                "description": "Shortcut between event LASTRX and task STARTTX"
              },
              "LASTRX_SUSPEND": {
                "bit": 11,
                "description": "Shortcut between event LASTRX and task SUSPEND"
              },
              "LASTRX_STOP": {
                "bit": 12,
                "description": "Shortcut between event LASTRX and task STOP"
              }
            },
            "INTEN": {
              "STOPPED": {
                "bit": 1,
                "description": "Enable or disable interrupt for event STOPPED"
              },
              "ERROR": {
                "bit": 9,
                "description": "Enable or disable interrupt for event ERROR"
              },
              "SUSPENDED": {
                "bit": 18,
                "description": "Enable or disable interrupt for event SUSPENDED"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Enable or disable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Enable or disable interrupt for event TXSTARTED"
              },
              "LASTRX": {
                "bit": 23,
                "description": "Enable or disable interrupt for event LASTRX"
              },
              "LASTTX": {
                "bit": 24,
                "description": "Enable or disable interrupt for event LASTTX"
              }
            },
            "INTENSET": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "ERROR": {
                "bit": 9,
                "description": "Write '1' to enable interrupt for event ERROR"
              },
              "SUSPENDED": {
                "bit": 18,
                "description": "Write '1' to enable interrupt for event SUSPENDED"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Write '1' to enable interrupt for event TXSTARTED"
              },
              "LASTRX": {
                "bit": 23,
                "description": "Write '1' to enable interrupt for event LASTRX"
              },
              "LASTTX": {
                "bit": 24,
                "description": "Write '1' to enable interrupt for event LASTTX"
              }
            },
            "INTENCLR": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "ERROR": {
                "bit": 9,
                "description": "Write '1' to disable interrupt for event ERROR"
              },
              "SUSPENDED": {
                "bit": 18,
                "description": "Write '1' to disable interrupt for event SUSPENDED"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Write '1' to disable interrupt for event TXSTARTED"
              },
              "LASTRX": {
                "bit": 23,
                "description": "Write '1' to disable interrupt for event LASTRX"
              },
              "LASTTX": {
                "bit": 24,
                "description": "Write '1' to disable interrupt for event LASTTX"
              }
            },
            "ERRORSRC": {
              "OVERRUN": {
                "bit": 0,
                "description": "Overrun error"
              },
              "ANACK": {
                "bit": 1,
                "description": "NACK received after sending the address (write '1' to clear)"
              },
              "DNACK": {
                "bit": 2,
                "description": "NACK received after sending a data byte (write '1' to clear)"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable TWIM",
                "width": 4
              }
            },
            "SCL": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "SDA": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "FREQUENCY": {
              "FREQUENCY": {
                "bit": 0,
                "description": "TWI master clock frequency",
                "width": 32
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Data pointer",
                "width": 32
              }
            },
            "MAXCNT": {
              "MAXCNT": {
                "bit": 0,
                "description": "Maximum number of bytes in transmit buffer",
                "width": 13
              }
            },
            "AMOUNT": {
              "AMOUNT": {
                "bit": 0,
                "description": "Number of bytes transferred in the last transaction. In case of NACK error, includes the NACK'ed byte.",
                "width": 13
              }
            },
            "LIST": {
              "LIST": {
                "bit": 0,
                "description": "List type",
                "width": 2
              }
            },
            "ADDRESS": {
              "ADDRESS": {
                "bit": 0,
                "description": "Address used in the TWI transfer",
                "width": 7
              }
            }
          }
        },
        "USART": {
          "instances": [
            {
              "name": "UARTE0_NS",
              "base": "0x40008000",
              "irq": 8
            },
            {
              "name": "UARTE0_S",
              "base": "0x50008000",
              "irq": 8
            },
            {
              "name": "UARTE1_NS",
              "base": "0x40009000",
              "irq": 9
            },
            {
              "name": "UARTE1_S",
              "base": "0x50009000",
              "irq": 9
            },
            {
              "name": "UARTE2_NS",
              "base": "0x4000A000",
              "irq": 10
            },
            {
              "name": "UARTE2_S",
              "base": "0x5000A000",
              "irq": 10
            },
            {
              "name": "UARTE3_NS",
              "base": "0x4000B000",
              "irq": 11
            },
            {
              "name": "UARTE3_S",
              "base": "0x5000B000",
              "irq": 11
            }
          ],
          "registers": {
            "TASKS_STARTRX": {
              "offset": "0x00",
              "size": 32,
              "description": "Start UART receiver"
            },
            "TASKS_STOPRX": {
              "offset": "0x04",
              "size": 32,
              "description": "Stop UART receiver"
            },
            "TASKS_STARTTX": {
              "offset": "0x08",
              "size": 32,
              "description": "Start UART transmitter"
            },
            "TASKS_STOPTX": {
              "offset": "0x0C",
              "size": 32,
              "description": "Stop UART transmitter"
            },
            "TASKS_FLUSHRX": {
              "offset": "0x2C",
              "size": 32,
              "description": "Flush RX FIFO into RX buffer"
            },
            "SUBSCRIBE_STARTRX": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task STARTRX"
            },
            "SUBSCRIBE_STOPRX": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOPRX"
            },
            "SUBSCRIBE_STARTTX": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task STARTTX"
            },
            "SUBSCRIBE_STOPTX": {
              "offset": "0x8C",
              "size": 32,
              "description": "Subscribe configuration for task STOPTX"
            },
            "SUBSCRIBE_FLUSHRX": {
              "offset": "0xAC",
              "size": 32,
              "description": "Subscribe configuration for task FLUSHRX"
            },
            "EVENTS_CTS": {
              "offset": "0x100",
              "size": 32,
              "description": "CTS is activated (set low). Clear To Send."
            },
            "EVENTS_NCTS": {
              "offset": "0x104",
              "size": 32,
              "description": "CTS is deactivated (set high). Not Clear To Send."
            },
            "EVENTS_RXDRDY": {
              "offset": "0x108",
              "size": 32,
              "description": "Data received in RXD (but potentially not yet transferred to Data RAM)"
            },
            "EVENTS_ENDRX": {
              "offset": "0x110",
              "size": 32,
              "description": "Receive buffer is filled up"
            },
            "EVENTS_TXDRDY": {
              "offset": "0x11C",
              "size": 32,
              "description": "Data sent from TXD"
            },
            "EVENTS_ENDTX": {
              "offset": "0x120",
              "size": 32,
              "description": "Last TX byte transmitted"
            },
            "EVENTS_ERROR": {
              "offset": "0x124",
              "size": 32,
              "description": "Error detected"
            },
            "EVENTS_RXTO": {
              "offset": "0x144",
              "size": 32,
              "description": "Receiver timeout"
            },
            "EVENTS_RXSTARTED": {
              "offset": "0x14C",
              "size": 32,
              "description": "UART receiver has started"
            },
            "EVENTS_TXSTARTED": {
              "offset": "0x150",
              "size": 32,
              "description": "UART transmitter has started"
            },
            "EVENTS_TXSTOPPED": {
              "offset": "0x158",
              "size": 32,
              "description": "Transmitter stopped"
            },
            "PUBLISH_CTS": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event CTS"
            },
            "PUBLISH_NCTS": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event NCTS"
            },
            "PUBLISH_RXDRDY": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event RXDRDY"
            },
            "PUBLISH_ENDRX": {
              "offset": "0x190",
              "size": 32,
              "description": "Publish configuration for event ENDRX"
            },
            "PUBLISH_TXDRDY": {
              "offset": "0x19C",
              "size": 32,
              "description": "Publish configuration for event TXDRDY"
            },
            "PUBLISH_ENDTX": {
              "offset": "0x1A0",
              "size": 32,
              "description": "Publish configuration for event ENDTX"
            },
            "PUBLISH_ERROR": {
              "offset": "0x1A4",
              "size": 32,
              "description": "Publish configuration for event ERROR"
            },
            "PUBLISH_RXTO": {
              "offset": "0x1C4",
              "size": 32,
              "description": "Publish configuration for event RXTO"
            },
            "PUBLISH_RXSTARTED": {
              "offset": "0x1CC",
              "size": 32,
              "description": "Publish configuration for event RXSTARTED"
            },
            "PUBLISH_TXSTARTED": {
              "offset": "0x1D0",
              "size": 32,
              "description": "Publish configuration for event TXSTARTED"
            },
            "PUBLISH_TXSTOPPED": {
              "offset": "0x1D8",
              "size": 32,
              "description": "Publish configuration for event TXSTOPPED"
            },
            "SHORTS": {
              "offset": "0x200",
              "size": 32,
              "description": "Shortcuts between local events and tasks"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ERRORSRC": {
              "offset": "0x480",
              "size": 32,
              "description": "Error source Note : this register is read / write one to clear."
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable UART"
            },
            "RTS": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin select for RTS signal"
            },
            "TXD": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin select for TXD signal"
            },
            "CTS": {
              "offset": "0x08",
              "size": 32,
              "description": "Pin select for CTS signal"
            },
            "RXD": {
              "offset": "0x0C",
              "size": 32,
              "description": "Pin select for RXD signal"
            },
            "BAUDRATE": {
              "offset": "0x524",
              "size": 32,
              "description": "Baud rate. Accuracy depends on the HFCLK source selected."
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data pointer"
            },
            "MAXCNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Maximum number of bytes in transmit buffer"
            },
            "AMOUNT": {
              "offset": "0x08",
              "size": 32,
              "description": "Number of bytes transferred in the last transaction"
            },
            "CONFIG": {
              "offset": "0x56C",
              "size": 32,
              "description": "Configuration of parity and hardware flow control"
            }
          },
          "bits": {
            "TASKS_STARTRX": {
              "TASKS_STARTRX": {
                "bit": 0,
                "description": "Start UART receiver"
              }
            },
            "TASKS_STOPRX": {
              "TASKS_STOPRX": {
                "bit": 0,
                "description": "Stop UART receiver"
              }
            },
            "TASKS_STARTTX": {
              "TASKS_STARTTX": {
                "bit": 0,
                "description": "Start UART transmitter"
              }
            },
            "TASKS_STOPTX": {
              "TASKS_STOPTX": {
                "bit": 0,
                "description": "Stop UART transmitter"
              }
            },
            "TASKS_FLUSHRX": {
              "TASKS_FLUSHRX": {
                "bit": 0,
                "description": "Flush RX FIFO into RX buffer"
              }
            },
            "SUBSCRIBE_STARTRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STARTRX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOPRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOPRX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STARTTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STARTTX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOPTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOPTX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_FLUSHRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task FLUSHRX will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_CTS": {
              "EVENTS_CTS": {
                "bit": 0,
                "description": "CTS is activated (set low). Clear To Send."
              }
            },
            "EVENTS_NCTS": {
              "EVENTS_NCTS": {
                "bit": 0,
                "description": "CTS is deactivated (set high). Not Clear To Send."
              }
            },
            "EVENTS_RXDRDY": {
              "EVENTS_RXDRDY": {
                "bit": 0,
                "description": "Data received in RXD (but potentially not yet transferred to Data RAM)"
              }
            },
            "EVENTS_ENDRX": {
              "EVENTS_ENDRX": {
                "bit": 0,
                "description": "Receive buffer is filled up"
              }
            },
            "EVENTS_TXDRDY": {
              "EVENTS_TXDRDY": {
                "bit": 0,
                "description": "Data sent from TXD"
              }
            },
            "EVENTS_ENDTX": {
              "EVENTS_ENDTX": {
                "bit": 0,
                "description": "Last TX byte transmitted"
              }
            },
            "EVENTS_ERROR": {
              "EVENTS_ERROR": {
                "bit": 0,
                "description": "Error detected"
              }
            },
            "EVENTS_RXTO": {
              "EVENTS_RXTO": {
                "bit": 0,
                "description": "Receiver timeout"
              }
            },
            "EVENTS_RXSTARTED": {
              "EVENTS_RXSTARTED": {
                "bit": 0,
                "description": "UART receiver has started"
              }
            },
            "EVENTS_TXSTARTED": {
              "EVENTS_TXSTARTED": {
                "bit": 0,
                "description": "UART transmitter has started"
              }
            },
            "EVENTS_TXSTOPPED": {
              "EVENTS_TXSTOPPED": {
                "bit": 0,
                "description": "Transmitter stopped"
              }
            },
            "PUBLISH_CTS": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event CTS will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_NCTS": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event NCTS will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_RXDRDY": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RXDRDY will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ENDRX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ENDRX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_TXDRDY": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TXDRDY will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ENDTX": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ENDTX will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_ERROR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event ERROR will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_RXTO": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RXTO will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_RXSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RXSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_TXSTARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TXSTARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_TXSTOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TXSTOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "SHORTS": {
              "ENDRX_STARTRX": {
                "bit": 5,
                "description": "Shortcut between event ENDRX and task STARTRX"
              },
              "ENDRX_STOPRX": {
                "bit": 6,
                "description": "Shortcut between event ENDRX and task STOPRX"
              }
            },
            "INTEN": {
              "CTS": {
                "bit": 0,
                "description": "Enable or disable interrupt for event CTS"
              },
              "NCTS": {
                "bit": 1,
                "description": "Enable or disable interrupt for event NCTS"
              },
              "RXDRDY": {
                "bit": 2,
                "description": "Enable or disable interrupt for event RXDRDY"
              },
              "ENDRX": {
                "bit": 4,
                "description": "Enable or disable interrupt for event ENDRX"
              },
              "TXDRDY": {
                "bit": 7,
                "description": "Enable or disable interrupt for event TXDRDY"
              },
              "ENDTX": {
                "bit": 8,
                "description": "Enable or disable interrupt for event ENDTX"
              },
              "ERROR": {
                "bit": 9,
                "description": "Enable or disable interrupt for event ERROR"
              },
              "RXTO": {
                "bit": 17,
                "description": "Enable or disable interrupt for event RXTO"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Enable or disable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Enable or disable interrupt for event TXSTARTED"
              },
              "TXSTOPPED": {
                "bit": 22,
                "description": "Enable or disable interrupt for event TXSTOPPED"
              }
            },
            "INTENSET": {
              "CTS": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event CTS"
              },
              "NCTS": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event NCTS"
              },
              "RXDRDY": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event RXDRDY"
              },
              "ENDRX": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event ENDRX"
              },
              "TXDRDY": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event TXDRDY"
              },
              "ENDTX": {
                "bit": 8,
                "description": "Write '1' to enable interrupt for event ENDTX"
              },
              "ERROR": {
                "bit": 9,
                "description": "Write '1' to enable interrupt for event ERROR"
              },
              "RXTO": {
                "bit": 17,
                "description": "Write '1' to enable interrupt for event RXTO"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Write '1' to enable interrupt for event TXSTARTED"
              },
              "TXSTOPPED": {
                "bit": 22,
                "description": "Write '1' to enable interrupt for event TXSTOPPED"
              }
            },
            "INTENCLR": {
              "CTS": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event CTS"
              },
              "NCTS": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event NCTS"
              },
              "RXDRDY": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event RXDRDY"
              },
              "ENDRX": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event ENDRX"
              },
              "TXDRDY": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event TXDRDY"
              },
              "ENDTX": {
                "bit": 8,
                "description": "Write '1' to disable interrupt for event ENDTX"
              },
              "ERROR": {
                "bit": 9,
                "description": "Write '1' to disable interrupt for event ERROR"
              },
              "RXTO": {
                "bit": 17,
                "description": "Write '1' to disable interrupt for event RXTO"
              },
              "RXSTARTED": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event RXSTARTED"
              },
              "TXSTARTED": {
                "bit": 20,
                "description": "Write '1' to disable interrupt for event TXSTARTED"
              },
              "TXSTOPPED": {
                "bit": 22,
                "description": "Write '1' to disable interrupt for event TXSTOPPED"
              }
            },
            "ERRORSRC": {
              "OVERRUN": {
                "bit": 0,
                "description": "Overrun error"
              },
              "PARITY": {
                "bit": 1,
                "description": "Parity error"
              },
              "FRAMING": {
                "bit": 2,
                "description": "Framing error occurred"
              },
              "BREAK": {
                "bit": 3,
                "description": "Break condition"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable UARTE",
                "width": 4
              }
            },
            "RTS": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "TXD": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "CTS": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "RXD": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "BAUDRATE": {
              "BAUDRATE": {
                "bit": 0,
                "description": "Baud rate",
                "width": 32
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Data pointer",
                "width": 32
              }
            },
            "MAXCNT": {
              "MAXCNT": {
                "bit": 0,
                "description": "Maximum number of bytes in transmit buffer",
                "width": 13
              }
            },
            "AMOUNT": {
              "AMOUNT": {
                "bit": 0,
                "description": "Number of bytes transferred in the last transaction",
                "width": 13
              }
            },
            "CONFIG": {
              "HWFC": {
                "bit": 0,
                "description": "Hardware flow control"
              },
              "PARITY": {
                "bit": 1,
                "description": "Parity",
                "width": 3
              },
              "STOP": {
                "bit": 4,
                "description": "Stop bits"
              }
            }
          }
        },
        "GPIO": {
          "instances": [
            {
              "name": "GPIOTE0_S",
              "base": "0x5000D000",
              "irq": 13
            },
            {
              "name": "GPIOTE1_NS",
              "base": "0x40031000",
              "irq": 49
            }
          ],
          "registers": {
            "TASKS_OUT[%s]": {
              "offset": "0x00",
              "size": 32,
              "description": "Description collection: Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is configured in CONFIG[n].POLARITY."
            },
            "TASKS_SET[%s]": {
              "offset": "0x30",
              "size": 32,
              "description": "Description collection: Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is to set it high."
            },
            "TASKS_CLR[%s]": {
              "offset": "0x60",
              "size": 32,
              "description": "Description collection: Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is to set it low."
            },
            "SUBSCRIBE_OUT[%s]": {
              "offset": "0x80",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task OUT[n]"
            },
            "SUBSCRIBE_SET[%s]": {
              "offset": "0xB0",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task SET[n]"
            },
            "SUBSCRIBE_CLR[%s]": {
              "offset": "0xE0",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task CLR[n]"
            },
            "EVENTS_IN[%s]": {
              "offset": "0x100",
              "size": 32,
              "description": "Description collection: Event generated from pin specified in CONFIG[n].PSEL"
            },
            "EVENTS_PORT": {
              "offset": "0x17C",
              "size": 32,
              "description": "Event generated from multiple input GPIO pins with SENSE mechanism enabled"
            },
            "PUBLISH_IN[%s]": {
              "offset": "0x180",
              "size": 32,
              "description": "Description collection: Publish configuration for event IN[n]"
            },
            "PUBLISH_PORT": {
              "offset": "0x1FC",
              "size": 32,
              "description": "Publish configuration for event PORT"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "CONFIG[%s]": {
              "offset": "0x510",
              "size": 32,
              "description": "Description collection: Configuration for OUT[n], SET[n] and CLR[n] tasks and IN[n] event"
            }
          },
          "bits": {
            "TASKS_OUT[%s]": {
              "TASKS_OUT": {
                "bit": 0,
                "description": "Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is configured in CONFIG[n].POLARITY."
              }
            },
            "TASKS_SET[%s]": {
              "TASKS_SET": {
                "bit": 0,
                "description": "Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is to set it high."
              }
            },
            "TASKS_CLR[%s]": {
              "TASKS_CLR": {
                "bit": 0,
                "description": "Task for writing to pin specified in CONFIG[n].PSEL. Action on pin is to set it low."
              }
            },
            "SUBSCRIBE_OUT[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task OUT[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SET[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SET[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_CLR[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CLR[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_IN[%s]": {
              "EVENTS_IN": {
                "bit": 0,
                "description": "Event generated from pin specified in CONFIG[n].PSEL"
              }
            },
            "EVENTS_PORT": {
              "EVENTS_PORT": {
                "bit": 0,
                "description": "Event generated from multiple input GPIO pins with SENSE mechanism enabled"
              }
            },
            "PUBLISH_IN[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event IN[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_PORT": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event PORT will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTENSET": {
              "IN0": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event IN[0]"
              },
              "IN1": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event IN[1]"
              },
              "IN2": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event IN[2]"
              },
              "IN3": {
                "bit": 3,
                "description": "Write '1' to enable interrupt for event IN[3]"
              },
              "IN4": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event IN[4]"
              },
              "IN5": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event IN[5]"
              },
              "IN6": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event IN[6]"
              },
              "IN7": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event IN[7]"
              },
              "PORT": {
                "bit": 31,
                "description": "Write '1' to enable interrupt for event PORT"
              }
            },
            "INTENCLR": {
              "IN0": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event IN[0]"
              },
              "IN1": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event IN[1]"
              },
              "IN2": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event IN[2]"
              },
              "IN3": {
                "bit": 3,
                "description": "Write '1' to disable interrupt for event IN[3]"
              },
              "IN4": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event IN[4]"
              },
              "IN5": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event IN[5]"
              },
              "IN6": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event IN[6]"
              },
              "IN7": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event IN[7]"
              },
              "PORT": {
                "bit": 31,
                "description": "Write '1' to disable interrupt for event PORT"
              }
            },
            "CONFIG[%s]": {
              "MODE": {
                "bit": 0,
                "description": "Mode",
                "width": 2
              },
              "PSEL": {
                "bit": 8,
                "description": "GPIO number associated with SET[n], CLR[n] and OUT[n] tasks and IN[n] event",
                "width": 5
              },
              "POLARITY": {
                "bit": 16,
                "description": "When In task mode: Operation to be performed on output when OUT[n] task is triggered. When In event mode: Operation on input that shall trigger IN[n] event.",
                "width": 2
              },
              "OUTINIT": {
                "bit": 20,
                "description": "When in task mode: Initial value of the output when the GPIOTE channel is configured. When in event mode: No effect."
              }
            }
          }
        },
        "ADC": {
          "instances": [
            {
              "name": "SAADC_NS",
              "base": "0x4000E000",
              "irq": 14
            },
            {
              "name": "SAADC_S",
              "base": "0x5000E000",
              "irq": 14
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Start the ADC and prepare the result buffer in RAM"
            },
            "TASKS_SAMPLE": {
              "offset": "0x04",
              "size": 32,
              "description": "Take one ADC sample, if scan is enabled all channels are sampled"
            },
            "TASKS_STOP": {
              "offset": "0x08",
              "size": 32,
              "description": "Stop the ADC and terminate any on-going conversion"
            },
            "TASKS_CALIBRATEOFFSET": {
              "offset": "0x0C",
              "size": 32,
              "description": "Starts offset auto-calibration"
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_SAMPLE": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task SAMPLE"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_CALIBRATEOFFSET": {
              "offset": "0x8C",
              "size": 32,
              "description": "Subscribe configuration for task CALIBRATEOFFSET"
            },
            "EVENTS_STARTED": {
              "offset": "0x100",
              "size": 32,
              "description": "The ADC has started"
            },
            "EVENTS_END": {
              "offset": "0x104",
              "size": 32,
              "description": "The ADC has filled up the Result buffer"
            },
            "EVENTS_DONE": {
              "offset": "0x108",
              "size": 32,
              "description": "A conversion task has been completed. Depending on the mode, multiple conversions might be needed for a result to be transferred to RAM."
            },
            "EVENTS_RESULTDONE": {
              "offset": "0x10C",
              "size": 32,
              "description": "A result is ready to get transferred to RAM."
            },
            "EVENTS_CALIBRATEDONE": {
              "offset": "0x110",
              "size": 32,
              "description": "Calibration is complete"
            },
            "EVENTS_STOPPED": {
              "offset": "0x114",
              "size": 32,
              "description": "The ADC has stopped"
            },
            "LIMITH": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Publish configuration for event CH[n].LIMITH"
            },
            "LIMITL": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Publish configuration for event CH[n].LIMITL"
            },
            "PUBLISH_STARTED": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event STARTED"
            },
            "PUBLISH_END": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event END"
            },
            "PUBLISH_DONE": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event DONE"
            },
            "PUBLISH_RESULTDONE": {
              "offset": "0x18C",
              "size": 32,
              "description": "Publish configuration for event RESULTDONE"
            },
            "PUBLISH_CALIBRATEDONE": {
              "offset": "0x190",
              "size": 32,
              "description": "Publish configuration for event CALIBRATEDONE"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x194",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "STATUS": {
              "offset": "0x400",
              "size": 32,
              "description": "Status"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable or disable ADC"
            },
            "PSELP": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Input positive pin selection for CH[n]"
            },
            "PSELN": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Input negative pin selection for CH[n]"
            },
            "CONFIG": {
              "offset": "0x08",
              "size": 32,
              "description": "Description cluster: Input configuration for CH[n]"
            },
            "LIMIT": {
              "offset": "0x0C",
              "size": 32,
              "description": "Description cluster: High/low limits for event monitoring a channel"
            },
            "RESOLUTION": {
              "offset": "0x5F0",
              "size": 32,
              "description": "Resolution configuration"
            },
            "OVERSAMPLE": {
              "offset": "0x5F4",
              "size": 32,
              "description": "Oversampling configuration. OVERSAMPLE should not be combined with SCAN. The RESOLUTION is applied before averaging, thus for high OVERSAMPLE a higher RESOLUTION should be used."
            },
            "SAMPLERATE": {
              "offset": "0x5F8",
              "size": 32,
              "description": "Controls normal or continuous sample rate"
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data pointer"
            },
            "MAXCNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Maximum number of buffer words to transfer"
            },
            "AMOUNT": {
              "offset": "0x08",
              "size": 32,
              "description": "Number of buffer words transferred since last START"
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Start the ADC and prepare the result buffer in RAM"
              }
            },
            "TASKS_SAMPLE": {
              "TASKS_SAMPLE": {
                "bit": 0,
                "description": "Take one ADC sample, if scan is enabled all channels are sampled"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stop the ADC and terminate any on-going conversion"
              }
            },
            "TASKS_CALIBRATEOFFSET": {
              "TASKS_CALIBRATEOFFSET": {
                "bit": 0,
                "description": "Starts offset auto-calibration"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SAMPLE": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SAMPLE will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_CALIBRATEOFFSET": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CALIBRATEOFFSET will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_STARTED": {
              "EVENTS_STARTED": {
                "bit": 0,
                "description": "The ADC has started"
              }
            },
            "EVENTS_END": {
              "EVENTS_END": {
                "bit": 0,
                "description": "The ADC has filled up the Result buffer"
              }
            },
            "EVENTS_DONE": {
              "EVENTS_DONE": {
                "bit": 0,
                "description": "A conversion task has been completed. Depending on the mode, multiple conversions might be needed for a result to be transferred to RAM."
              }
            },
            "EVENTS_RESULTDONE": {
              "EVENTS_RESULTDONE": {
                "bit": 0,
                "description": "A result is ready to get transferred to RAM."
              }
            },
            "EVENTS_CALIBRATEDONE": {
              "EVENTS_CALIBRATEDONE": {
                "bit": 0,
                "description": "Calibration is complete"
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "The ADC has stopped"
              }
            },
            "LIMITH": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event CH[n].LIMITH will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "LIMITL": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event CH[n].LIMITL will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_STARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_END": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event END will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_DONE": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event DONE will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_RESULTDONE": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RESULTDONE will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_CALIBRATEDONE": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event CALIBRATEDONE will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "STARTED": {
                "bit": 0,
                "description": "Enable or disable interrupt for event STARTED"
              },
              "END": {
                "bit": 1,
                "description": "Enable or disable interrupt for event END"
              },
              "DONE": {
                "bit": 2,
                "description": "Enable or disable interrupt for event DONE"
              },
              "RESULTDONE": {
                "bit": 3,
                "description": "Enable or disable interrupt for event RESULTDONE"
              },
              "CALIBRATEDONE": {
                "bit": 4,
                "description": "Enable or disable interrupt for event CALIBRATEDONE"
              },
              "STOPPED": {
                "bit": 5,
                "description": "Enable or disable interrupt for event STOPPED"
              },
              "CH0LIMITH": {
                "bit": 6,
                "description": "Enable or disable interrupt for event CH0LIMITH"
              },
              "CH0LIMITL": {
                "bit": 7,
                "description": "Enable or disable interrupt for event CH0LIMITL"
              },
              "CH1LIMITH": {
                "bit": 8,
                "description": "Enable or disable interrupt for event CH1LIMITH"
              },
              "CH1LIMITL": {
                "bit": 9,
                "description": "Enable or disable interrupt for event CH1LIMITL"
              },
              "CH2LIMITH": {
                "bit": 10,
                "description": "Enable or disable interrupt for event CH2LIMITH"
              },
              "CH2LIMITL": {
                "bit": 11,
                "description": "Enable or disable interrupt for event CH2LIMITL"
              },
              "CH3LIMITH": {
                "bit": 12,
                "description": "Enable or disable interrupt for event CH3LIMITH"
              },
              "CH3LIMITL": {
                "bit": 13,
                "description": "Enable or disable interrupt for event CH3LIMITL"
              },
              "CH4LIMITH": {
                "bit": 14,
                "description": "Enable or disable interrupt for event CH4LIMITH"
              },
              "CH4LIMITL": {
                "bit": 15,
                "description": "Enable or disable interrupt for event CH4LIMITL"
              },
              "CH5LIMITH": {
                "bit": 16,
                "description": "Enable or disable interrupt for event CH5LIMITH"
              },
              "CH5LIMITL": {
                "bit": 17,
                "description": "Enable or disable interrupt for event CH5LIMITL"
              },
              "CH6LIMITH": {
                "bit": 18,
                "description": "Enable or disable interrupt for event CH6LIMITH"
              },
              "CH6LIMITL": {
                "bit": 19,
                "description": "Enable or disable interrupt for event CH6LIMITL"
              },
              "CH7LIMITH": {
                "bit": 20,
                "description": "Enable or disable interrupt for event CH7LIMITH"
              },
              "CH7LIMITL": {
                "bit": 21,
                "description": "Enable or disable interrupt for event CH7LIMITL"
              }
            },
            "INTENSET": {
              "STARTED": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event STARTED"
              },
              "END": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event END"
              },
              "DONE": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event DONE"
              },
              "RESULTDONE": {
                "bit": 3,
                "description": "Write '1' to enable interrupt for event RESULTDONE"
              },
              "CALIBRATEDONE": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event CALIBRATEDONE"
              },
              "STOPPED": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "CH0LIMITH": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event CH0LIMITH"
              },
              "CH0LIMITL": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event CH0LIMITL"
              },
              "CH1LIMITH": {
                "bit": 8,
                "description": "Write '1' to enable interrupt for event CH1LIMITH"
              },
              "CH1LIMITL": {
                "bit": 9,
                "description": "Write '1' to enable interrupt for event CH1LIMITL"
              },
              "CH2LIMITH": {
                "bit": 10,
                "description": "Write '1' to enable interrupt for event CH2LIMITH"
              },
              "CH2LIMITL": {
                "bit": 11,
                "description": "Write '1' to enable interrupt for event CH2LIMITL"
              },
              "CH3LIMITH": {
                "bit": 12,
                "description": "Write '1' to enable interrupt for event CH3LIMITH"
              },
              "CH3LIMITL": {
                "bit": 13,
                "description": "Write '1' to enable interrupt for event CH3LIMITL"
              },
              "CH4LIMITH": {
                "bit": 14,
                "description": "Write '1' to enable interrupt for event CH4LIMITH"
              },
              "CH4LIMITL": {
                "bit": 15,
                "description": "Write '1' to enable interrupt for event CH4LIMITL"
              },
              "CH5LIMITH": {
                "bit": 16,
                "description": "Write '1' to enable interrupt for event CH5LIMITH"
              },
              "CH5LIMITL": {
                "bit": 17,
                "description": "Write '1' to enable interrupt for event CH5LIMITL"
              },
              "CH6LIMITH": {
                "bit": 18,
                "description": "Write '1' to enable interrupt for event CH6LIMITH"
              },
              "CH6LIMITL": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event CH6LIMITL"
              },
              "CH7LIMITH": {
                "bit": 20,
                "description": "Write '1' to enable interrupt for event CH7LIMITH"
              },
              "CH7LIMITL": {
                "bit": 21,
                "description": "Write '1' to enable interrupt for event CH7LIMITL"
              }
            },
            "INTENCLR": {
              "STARTED": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event STARTED"
              },
              "END": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event END"
              },
              "DONE": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event DONE"
              },
              "RESULTDONE": {
                "bit": 3,
                "description": "Write '1' to disable interrupt for event RESULTDONE"
              },
              "CALIBRATEDONE": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event CALIBRATEDONE"
              },
              "STOPPED": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "CH0LIMITH": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event CH0LIMITH"
              },
              "CH0LIMITL": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event CH0LIMITL"
              },
              "CH1LIMITH": {
                "bit": 8,
                "description": "Write '1' to disable interrupt for event CH1LIMITH"
              },
              "CH1LIMITL": {
                "bit": 9,
                "description": "Write '1' to disable interrupt for event CH1LIMITL"
              },
              "CH2LIMITH": {
                "bit": 10,
                "description": "Write '1' to disable interrupt for event CH2LIMITH"
              },
              "CH2LIMITL": {
                "bit": 11,
                "description": "Write '1' to disable interrupt for event CH2LIMITL"
              },
              "CH3LIMITH": {
                "bit": 12,
                "description": "Write '1' to disable interrupt for event CH3LIMITH"
              },
              "CH3LIMITL": {
                "bit": 13,
                "description": "Write '1' to disable interrupt for event CH3LIMITL"
              },
              "CH4LIMITH": {
                "bit": 14,
                "description": "Write '1' to disable interrupt for event CH4LIMITH"
              },
              "CH4LIMITL": {
                "bit": 15,
                "description": "Write '1' to disable interrupt for event CH4LIMITL"
              },
              "CH5LIMITH": {
                "bit": 16,
                "description": "Write '1' to disable interrupt for event CH5LIMITH"
              },
              "CH5LIMITL": {
                "bit": 17,
                "description": "Write '1' to disable interrupt for event CH5LIMITL"
              },
              "CH6LIMITH": {
                "bit": 18,
                "description": "Write '1' to disable interrupt for event CH6LIMITH"
              },
              "CH6LIMITL": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event CH6LIMITL"
              },
              "CH7LIMITH": {
                "bit": 20,
                "description": "Write '1' to disable interrupt for event CH7LIMITH"
              },
              "CH7LIMITL": {
                "bit": 21,
                "description": "Write '1' to disable interrupt for event CH7LIMITL"
              }
            },
            "STATUS": {
              "STATUS": {
                "bit": 0,
                "description": "Status"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable ADC"
              }
            },
            "PSELP": {
              "PSELP": {
                "bit": 0,
                "description": "Analog positive input channel",
                "width": 5
              }
            },
            "PSELN": {
              "PSELN": {
                "bit": 0,
                "description": "Analog negative input, enables differential channel",
                "width": 5
              }
            },
            "CONFIG": {
              "RESP": {
                "bit": 0,
                "description": "Positive channel resistor control",
                "width": 2
              },
              "RESN": {
                "bit": 4,
                "description": "Negative channel resistor control",
                "width": 2
              },
              "GAIN": {
                "bit": 8,
                "description": "Gain control",
                "width": 3
              },
              "REFSEL": {
                "bit": 12,
                "description": "Reference control"
              },
              "TACQ": {
                "bit": 16,
                "description": "Acquisition time, the time the ADC uses to sample the input voltage",
                "width": 3
              },
              "MODE": {
                "bit": 20,
                "description": "Enable differential mode"
              },
              "BURST": {
                "bit": 24,
                "description": "Enable burst mode"
              }
            },
            "LIMIT": {
              "LOW": {
                "bit": 0,
                "description": "Low level limit",
                "width": 16
              },
              "HIGH": {
                "bit": 16,
                "description": "High level limit",
                "width": 16
              }
            },
            "RESOLUTION": {
              "VAL": {
                "bit": 0,
                "description": "Set the resolution",
                "width": 3
              }
            },
            "OVERSAMPLE": {
              "OVERSAMPLE": {
                "bit": 0,
                "description": "Oversample control",
                "width": 4
              }
            },
            "SAMPLERATE": {
              "CC": {
                "bit": 0,
                "description": "Capture and compare value. Sample rate is 16 MHz/CC",
                "width": 11
              },
              "MODE": {
                "bit": 12,
                "description": "Select mode for sample rate control"
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Data pointer",
                "width": 32
              }
            },
            "MAXCNT": {
              "MAXCNT": {
                "bit": 0,
                "description": "Maximum number of buffer words to transfer",
                "width": 15
              }
            },
            "AMOUNT": {
              "AMOUNT": {
                "bit": 0,
                "description": "Number of buffer words transferred since last START. This register can be read after an END or STOPPED event.",
                "width": 15
              }
            }
          }
        },
        "TIM": {
          "instances": [
            {
              "name": "TIMER0_NS",
              "base": "0x4000F000",
              "irq": 15
            },
            {
              "name": "TIMER0_S",
              "base": "0x5000F000",
              "irq": 15
            },
            {
              "name": "TIMER1_NS",
              "base": "0x40010000",
              "irq": 16
            },
            {
              "name": "TIMER1_S",
              "base": "0x50010000",
              "irq": 16
            },
            {
              "name": "TIMER2_NS",
              "base": "0x40011000",
              "irq": 17
            },
            {
              "name": "TIMER2_S",
              "base": "0x50011000",
              "irq": 17
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Start Timer"
            },
            "TASKS_STOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stop Timer"
            },
            "TASKS_COUNT": {
              "offset": "0x08",
              "size": 32,
              "description": "Increment Timer (Counter mode only)"
            },
            "TASKS_CLEAR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Clear time"
            },
            "TASKS_SHUTDOWN": {
              "offset": "0x10",
              "size": 32,
              "description": "Deprecated register - Shut down timer"
            },
            "TASKS_CAPTURE[%s]": {
              "offset": "0x40",
              "size": 32,
              "description": "Description collection: Capture Timer value to CC[n] register"
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_COUNT": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task COUNT"
            },
            "SUBSCRIBE_CLEAR": {
              "offset": "0x8C",
              "size": 32,
              "description": "Subscribe configuration for task CLEAR"
            },
            "SUBSCRIBE_SHUTDOWN": {
              "offset": "0x90",
              "size": 32,
              "description": "Deprecated register - Subscribe configuration for task SHUTDOWN"
            },
            "SUBSCRIBE_CAPTURE[%s]": {
              "offset": "0xC0",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task CAPTURE[n]"
            },
            "EVENTS_COMPARE[%s]": {
              "offset": "0x140",
              "size": 32,
              "description": "Description collection: Compare event on CC[n] match"
            },
            "PUBLISH_COMPARE[%s]": {
              "offset": "0x1C0",
              "size": 32,
              "description": "Description collection: Publish configuration for event COMPARE[n]"
            },
            "SHORTS": {
              "offset": "0x200",
              "size": 32,
              "description": "Shortcuts between local events and tasks"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "MODE": {
              "offset": "0x504",
              "size": 32,
              "description": "Timer mode selection"
            },
            "BITMODE": {
              "offset": "0x508",
              "size": 32,
              "description": "Configure the number of bits used by the TIMER"
            },
            "PRESCALER": {
              "offset": "0x510",
              "size": 32,
              "description": "Timer prescaler register"
            },
            "ONESHOTEN[%s]": {
              "offset": "0x514",
              "size": 32,
              "description": "Description collection: Enable one-shot operation for Capture/Compare channel n"
            },
            "CC[%s]": {
              "offset": "0x540",
              "size": 32,
              "description": "Description collection: Capture/Compare register n"
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Start Timer"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stop Timer"
              }
            },
            "TASKS_COUNT": {
              "TASKS_COUNT": {
                "bit": 0,
                "description": "Increment Timer (Counter mode only)"
              }
            },
            "TASKS_CLEAR": {
              "TASKS_CLEAR": {
                "bit": 0,
                "description": "Clear time"
              }
            },
            "TASKS_SHUTDOWN": {
              "TASKS_SHUTDOWN": {
                "bit": 0,
                "description": "Deprecated field -  Shut down timer"
              }
            },
            "TASKS_CAPTURE[%s]": {
              "TASKS_CAPTURE": {
                "bit": 0,
                "description": "Capture Timer value to CC[n] register"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_COUNT": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task COUNT will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_CLEAR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CLEAR will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SHUTDOWN": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SHUTDOWN will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_CAPTURE[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CAPTURE[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_COMPARE[%s]": {
              "EVENTS_COMPARE": {
                "bit": 0,
                "description": "Compare event on CC[n] match"
              }
            },
            "PUBLISH_COMPARE[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event COMPARE[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "SHORTS": {
              "COMPARE0_CLEAR": {
                "bit": 0,
                "description": "Shortcut between event COMPARE[0] and task CLEAR"
              },
              "COMPARE1_CLEAR": {
                "bit": 1,
                "description": "Shortcut between event COMPARE[1] and task CLEAR"
              },
              "COMPARE2_CLEAR": {
                "bit": 2,
                "description": "Shortcut between event COMPARE[2] and task CLEAR"
              },
              "COMPARE3_CLEAR": {
                "bit": 3,
                "description": "Shortcut between event COMPARE[3] and task CLEAR"
              },
              "COMPARE4_CLEAR": {
                "bit": 4,
                "description": "Shortcut between event COMPARE[4] and task CLEAR"
              },
              "COMPARE5_CLEAR": {
                "bit": 5,
                "description": "Shortcut between event COMPARE[5] and task CLEAR"
              },
              "COMPARE0_STOP": {
                "bit": 8,
                "description": "Shortcut between event COMPARE[0] and task STOP"
              },
              "COMPARE1_STOP": {
                "bit": 9,
                "description": "Shortcut between event COMPARE[1] and task STOP"
              },
              "COMPARE2_STOP": {
                "bit": 10,
                "description": "Shortcut between event COMPARE[2] and task STOP"
              },
              "COMPARE3_STOP": {
                "bit": 11,
                "description": "Shortcut between event COMPARE[3] and task STOP"
              },
              "COMPARE4_STOP": {
                "bit": 12,
                "description": "Shortcut between event COMPARE[4] and task STOP"
              },
              "COMPARE5_STOP": {
                "bit": 13,
                "description": "Shortcut between event COMPARE[5] and task STOP"
              }
            },
            "INTENSET": {
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to enable interrupt for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to enable interrupt for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to enable interrupt for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event COMPARE[3]"
              },
              "COMPARE4": {
                "bit": 20,
                "description": "Write '1' to enable interrupt for event COMPARE[4]"
              },
              "COMPARE5": {
                "bit": 21,
                "description": "Write '1' to enable interrupt for event COMPARE[5]"
              }
            },
            "INTENCLR": {
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to disable interrupt for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to disable interrupt for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to disable interrupt for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event COMPARE[3]"
              },
              "COMPARE4": {
                "bit": 20,
                "description": "Write '1' to disable interrupt for event COMPARE[4]"
              },
              "COMPARE5": {
                "bit": 21,
                "description": "Write '1' to disable interrupt for event COMPARE[5]"
              }
            },
            "MODE": {
              "MODE": {
                "bit": 0,
                "description": "Timer mode",
                "width": 2
              }
            },
            "BITMODE": {
              "BITMODE": {
                "bit": 0,
                "description": "Timer bit width",
                "width": 2
              }
            },
            "PRESCALER": {
              "PRESCALER": {
                "bit": 0,
                "description": "Prescaler value",
                "width": 4
              }
            },
            "ONESHOTEN[%s]": {
              "ONESHOTEN": {
                "bit": 0,
                "description": "Enable one-shot operation"
              }
            },
            "CC[%s]": {
              "CC": {
                "bit": 0,
                "description": "Capture/Compare value",
                "width": 32
              }
            }
          }
        },
        "RTC": {
          "instances": [
            {
              "name": "RTC0_NS",
              "base": "0x40014000",
              "irq": 20
            },
            {
              "name": "RTC0_S",
              "base": "0x50014000",
              "irq": 20
            },
            {
              "name": "RTC1_NS",
              "base": "0x40015000",
              "irq": 21
            },
            {
              "name": "RTC1_S",
              "base": "0x50015000",
              "irq": 21
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Start RTC counter"
            },
            "TASKS_STOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stop RTC counter"
            },
            "TASKS_CLEAR": {
              "offset": "0x08",
              "size": 32,
              "description": "Clear RTC counter"
            },
            "TASKS_TRIGOVRFLW": {
              "offset": "0x0C",
              "size": 32,
              "description": "Set counter to 0xFFFFF0"
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_CLEAR": {
              "offset": "0x88",
              "size": 32,
              "description": "Subscribe configuration for task CLEAR"
            },
            "SUBSCRIBE_TRIGOVRFLW": {
              "offset": "0x8C",
              "size": 32,
              "description": "Subscribe configuration for task TRIGOVRFLW"
            },
            "EVENTS_TICK": {
              "offset": "0x100",
              "size": 32,
              "description": "Event on counter increment"
            },
            "EVENTS_OVRFLW": {
              "offset": "0x104",
              "size": 32,
              "description": "Event on counter overflow"
            },
            "EVENTS_COMPARE[%s]": {
              "offset": "0x140",
              "size": 32,
              "description": "Description collection: Compare event on CC[n] match"
            },
            "PUBLISH_TICK": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event TICK"
            },
            "PUBLISH_OVRFLW": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event OVRFLW"
            },
            "PUBLISH_COMPARE[%s]": {
              "offset": "0x1C0",
              "size": 32,
              "description": "Description collection: Publish configuration for event COMPARE[n]"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "EVTEN": {
              "offset": "0x340",
              "size": 32,
              "description": "Enable or disable event routing"
            },
            "EVTENSET": {
              "offset": "0x344",
              "size": 32,
              "description": "Enable event routing"
            },
            "EVTENCLR": {
              "offset": "0x348",
              "size": 32,
              "description": "Disable event routing"
            },
            "COUNTER": {
              "offset": "0x504",
              "size": 32,
              "description": "Current counter value"
            },
            "PRESCALER": {
              "offset": "0x508",
              "size": 32,
              "description": "12-bit prescaler for counter frequency (32768/(PRESCALER+1)). Must be written when RTC is stopped."
            },
            "CC[%s]": {
              "offset": "0x540",
              "size": 32,
              "description": "Description collection: Compare register n"
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Start RTC counter"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stop RTC counter"
              }
            },
            "TASKS_CLEAR": {
              "TASKS_CLEAR": {
                "bit": 0,
                "description": "Clear RTC counter"
              }
            },
            "TASKS_TRIGOVRFLW": {
              "TASKS_TRIGOVRFLW": {
                "bit": 0,
                "description": "Set counter to 0xFFFFF0"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_CLEAR": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CLEAR will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_TRIGOVRFLW": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task TRIGOVRFLW will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_TICK": {
              "EVENTS_TICK": {
                "bit": 0,
                "description": "Event on counter increment"
              }
            },
            "EVENTS_OVRFLW": {
              "EVENTS_OVRFLW": {
                "bit": 0,
                "description": "Event on counter overflow"
              }
            },
            "EVENTS_COMPARE[%s]": {
              "EVENTS_COMPARE": {
                "bit": 0,
                "description": "Compare event on CC[n] match"
              }
            },
            "PUBLISH_TICK": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TICK will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_OVRFLW": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event OVRFLW will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_COMPARE[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event COMPARE[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTENSET": {
              "TICK": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event TICK"
              },
              "OVRFLW": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event OVRFLW"
              },
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to enable interrupt for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to enable interrupt for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to enable interrupt for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to enable interrupt for event COMPARE[3]"
              }
            },
            "INTENCLR": {
              "TICK": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event TICK"
              },
              "OVRFLW": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event OVRFLW"
              },
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to disable interrupt for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to disable interrupt for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to disable interrupt for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to disable interrupt for event COMPARE[3]"
              }
            },
            "EVTEN": {
              "TICK": {
                "bit": 0,
                "description": "Enable or disable event routing for event TICK"
              },
              "OVRFLW": {
                "bit": 1,
                "description": "Enable or disable event routing for event OVRFLW"
              },
              "COMPARE0": {
                "bit": 16,
                "description": "Enable or disable event routing for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Enable or disable event routing for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Enable or disable event routing for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Enable or disable event routing for event COMPARE[3]"
              }
            },
            "EVTENSET": {
              "TICK": {
                "bit": 0,
                "description": "Write '1' to enable event routing for event TICK"
              },
              "OVRFLW": {
                "bit": 1,
                "description": "Write '1' to enable event routing for event OVRFLW"
              },
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to enable event routing for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to enable event routing for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to enable event routing for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to enable event routing for event COMPARE[3]"
              }
            },
            "EVTENCLR": {
              "TICK": {
                "bit": 0,
                "description": "Write '1' to disable event routing for event TICK"
              },
              "OVRFLW": {
                "bit": 1,
                "description": "Write '1' to disable event routing for event OVRFLW"
              },
              "COMPARE0": {
                "bit": 16,
                "description": "Write '1' to disable event routing for event COMPARE[0]"
              },
              "COMPARE1": {
                "bit": 17,
                "description": "Write '1' to disable event routing for event COMPARE[1]"
              },
              "COMPARE2": {
                "bit": 18,
                "description": "Write '1' to disable event routing for event COMPARE[2]"
              },
              "COMPARE3": {
                "bit": 19,
                "description": "Write '1' to disable event routing for event COMPARE[3]"
              }
            },
            "COUNTER": {
              "COUNTER": {
                "bit": 0,
                "description": "Counter value",
                "width": 24
              }
            },
            "PRESCALER": {
              "PRESCALER": {
                "bit": 0,
                "description": "Prescaler value",
                "width": 12
              }
            },
            "CC[%s]": {
              "COMPARE": {
                "bit": 0,
                "description": "Compare value",
                "width": 24
              }
            }
          }
        },
        "DPPIC": {
          "instances": [
            {
              "name": "DPPIC_NS",
              "base": "0x40017000"
            },
            {
              "name": "DPPIC_S",
              "base": "0x50017000"
            }
          ],
          "registers": {
            "EN": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Subscribe configuration for task CHG[n].EN"
            },
            "DIS": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Subscribe configuration for task CHG[n].DIS"
            },
            "CHEN": {
              "offset": "0x500",
              "size": 32,
              "description": "Channel enable register"
            },
            "CHENSET": {
              "offset": "0x504",
              "size": 32,
              "description": "Channel enable set register"
            },
            "CHENCLR": {
              "offset": "0x508",
              "size": 32,
              "description": "Channel enable clear register"
            },
            "CHG[%s]": {
              "offset": "0x800",
              "size": 32,
              "description": "Description collection: Channel group n Note: Writes to this register is ignored if either SUBSCRIBE_CHG[n].EN/DIS are enabled."
            }
          },
          "bits": {
            "EN": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CHG[n].EN will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "DIS": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task CHG[n].DIS will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "CHEN": {
              "CH0": {
                "bit": 0,
                "description": "Enable or disable channel 0"
              },
              "CH1": {
                "bit": 1,
                "description": "Enable or disable channel 1"
              },
              "CH2": {
                "bit": 2,
                "description": "Enable or disable channel 2"
              },
              "CH3": {
                "bit": 3,
                "description": "Enable or disable channel 3"
              },
              "CH4": {
                "bit": 4,
                "description": "Enable or disable channel 4"
              },
              "CH5": {
                "bit": 5,
                "description": "Enable or disable channel 5"
              },
              "CH6": {
                "bit": 6,
                "description": "Enable or disable channel 6"
              },
              "CH7": {
                "bit": 7,
                "description": "Enable or disable channel 7"
              },
              "CH8": {
                "bit": 8,
                "description": "Enable or disable channel 8"
              },
              "CH9": {
                "bit": 9,
                "description": "Enable or disable channel 9"
              },
              "CH10": {
                "bit": 10,
                "description": "Enable or disable channel 10"
              },
              "CH11": {
                "bit": 11,
                "description": "Enable or disable channel 11"
              },
              "CH12": {
                "bit": 12,
                "description": "Enable or disable channel 12"
              },
              "CH13": {
                "bit": 13,
                "description": "Enable or disable channel 13"
              },
              "CH14": {
                "bit": 14,
                "description": "Enable or disable channel 14"
              },
              "CH15": {
                "bit": 15,
                "description": "Enable or disable channel 15"
              }
            },
            "CHENSET": {
              "CH0": {
                "bit": 0,
                "description": "Channel 0 enable set register.  Writing '0' has no effect"
              },
              "CH1": {
                "bit": 1,
                "description": "Channel 1 enable set register.  Writing '0' has no effect"
              },
              "CH2": {
                "bit": 2,
                "description": "Channel 2 enable set register.  Writing '0' has no effect"
              },
              "CH3": {
                "bit": 3,
                "description": "Channel 3 enable set register.  Writing '0' has no effect"
              },
              "CH4": {
                "bit": 4,
                "description": "Channel 4 enable set register.  Writing '0' has no effect"
              },
              "CH5": {
                "bit": 5,
                "description": "Channel 5 enable set register.  Writing '0' has no effect"
              },
              "CH6": {
                "bit": 6,
                "description": "Channel 6 enable set register.  Writing '0' has no effect"
              },
              "CH7": {
                "bit": 7,
                "description": "Channel 7 enable set register.  Writing '0' has no effect"
              },
              "CH8": {
                "bit": 8,
                "description": "Channel 8 enable set register.  Writing '0' has no effect"
              },
              "CH9": {
                "bit": 9,
                "description": "Channel 9 enable set register.  Writing '0' has no effect"
              },
              "CH10": {
                "bit": 10,
                "description": "Channel 10 enable set register.  Writing '0' has no effect"
              },
              "CH11": {
                "bit": 11,
                "description": "Channel 11 enable set register.  Writing '0' has no effect"
              },
              "CH12": {
                "bit": 12,
                "description": "Channel 12 enable set register.  Writing '0' has no effect"
              },
              "CH13": {
                "bit": 13,
                "description": "Channel 13 enable set register.  Writing '0' has no effect"
              },
              "CH14": {
                "bit": 14,
                "description": "Channel 14 enable set register.  Writing '0' has no effect"
              },
              "CH15": {
                "bit": 15,
                "description": "Channel 15 enable set register.  Writing '0' has no effect"
              }
            },
            "CHENCLR": {
              "CH0": {
                "bit": 0,
                "description": "Channel 0 enable clear register.  Writing '0' has no effect"
              },
              "CH1": {
                "bit": 1,
                "description": "Channel 1 enable clear register.  Writing '0' has no effect"
              },
              "CH2": {
                "bit": 2,
                "description": "Channel 2 enable clear register.  Writing '0' has no effect"
              },
              "CH3": {
                "bit": 3,
                "description": "Channel 3 enable clear register.  Writing '0' has no effect"
              },
              "CH4": {
                "bit": 4,
                "description": "Channel 4 enable clear register.  Writing '0' has no effect"
              },
              "CH5": {
                "bit": 5,
                "description": "Channel 5 enable clear register.  Writing '0' has no effect"
              },
              "CH6": {
                "bit": 6,
                "description": "Channel 6 enable clear register.  Writing '0' has no effect"
              },
              "CH7": {
                "bit": 7,
                "description": "Channel 7 enable clear register.  Writing '0' has no effect"
              },
              "CH8": {
                "bit": 8,
                "description": "Channel 8 enable clear register.  Writing '0' has no effect"
              },
              "CH9": {
                "bit": 9,
                "description": "Channel 9 enable clear register.  Writing '0' has no effect"
              },
              "CH10": {
                "bit": 10,
                "description": "Channel 10 enable clear register.  Writing '0' has no effect"
              },
              "CH11": {
                "bit": 11,
                "description": "Channel 11 enable clear register.  Writing '0' has no effect"
              },
              "CH12": {
                "bit": 12,
                "description": "Channel 12 enable clear register.  Writing '0' has no effect"
              },
              "CH13": {
                "bit": 13,
                "description": "Channel 13 enable clear register.  Writing '0' has no effect"
              },
              "CH14": {
                "bit": 14,
                "description": "Channel 14 enable clear register.  Writing '0' has no effect"
              },
              "CH15": {
                "bit": 15,
                "description": "Channel 15 enable clear register.  Writing '0' has no effect"
              }
            },
            "CHG[%s]": {
              "CH0": {
                "bit": 0,
                "description": "Include or exclude channel 0"
              },
              "CH1": {
                "bit": 1,
                "description": "Include or exclude channel 1"
              },
              "CH2": {
                "bit": 2,
                "description": "Include or exclude channel 2"
              },
              "CH3": {
                "bit": 3,
                "description": "Include or exclude channel 3"
              },
              "CH4": {
                "bit": 4,
                "description": "Include or exclude channel 4"
              },
              "CH5": {
                "bit": 5,
                "description": "Include or exclude channel 5"
              },
              "CH6": {
                "bit": 6,
                "description": "Include or exclude channel 6"
              },
              "CH7": {
                "bit": 7,
                "description": "Include or exclude channel 7"
              },
              "CH8": {
                "bit": 8,
                "description": "Include or exclude channel 8"
              },
              "CH9": {
                "bit": 9,
                "description": "Include or exclude channel 9"
              },
              "CH10": {
                "bit": 10,
                "description": "Include or exclude channel 10"
              },
              "CH11": {
                "bit": 11,
                "description": "Include or exclude channel 11"
              },
              "CH12": {
                "bit": 12,
                "description": "Include or exclude channel 12"
              },
              "CH13": {
                "bit": 13,
                "description": "Include or exclude channel 13"
              },
              "CH14": {
                "bit": 14,
                "description": "Include or exclude channel 14"
              },
              "CH15": {
                "bit": 15,
                "description": "Include or exclude channel 15"
              }
            }
          }
        },
        "WDG": {
          "instances": [
            {
              "name": "WDT_NS",
              "base": "0x40018000",
              "irq": 24
            },
            {
              "name": "WDT_S",
              "base": "0x50018000",
              "irq": 24
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Start the watchdog"
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "EVENTS_TIMEOUT": {
              "offset": "0x100",
              "size": 32,
              "description": "Watchdog timeout"
            },
            "PUBLISH_TIMEOUT": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event TIMEOUT"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "RUNSTATUS": {
              "offset": "0x400",
              "size": 32,
              "description": "Run status"
            },
            "REQSTATUS": {
              "offset": "0x404",
              "size": 32,
              "description": "Request status"
            },
            "CRV": {
              "offset": "0x504",
              "size": 32,
              "description": "Counter reload value"
            },
            "RREN": {
              "offset": "0x508",
              "size": 32,
              "description": "Enable register for reload request registers"
            },
            "CONFIG": {
              "offset": "0x50C",
              "size": 32,
              "description": "Configuration register"
            },
            "RR[%s]": {
              "offset": "0x600",
              "size": 32,
              "description": "Description collection: Reload request n"
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Start the watchdog"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_TIMEOUT": {
              "EVENTS_TIMEOUT": {
                "bit": 0,
                "description": "Watchdog timeout"
              }
            },
            "PUBLISH_TIMEOUT": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TIMEOUT will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTENSET": {
              "TIMEOUT": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event TIMEOUT"
              }
            },
            "INTENCLR": {
              "TIMEOUT": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event TIMEOUT"
              }
            },
            "RUNSTATUS": {
              "RUNSTATUSWDT": {
                "bit": 0,
                "description": "Indicates whether or not the watchdog is running"
              }
            },
            "REQSTATUS": {
              "RR0": {
                "bit": 0,
                "description": "Request status for RR[0] register"
              },
              "RR1": {
                "bit": 1,
                "description": "Request status for RR[1] register"
              },
              "RR2": {
                "bit": 2,
                "description": "Request status for RR[2] register"
              },
              "RR3": {
                "bit": 3,
                "description": "Request status for RR[3] register"
              },
              "RR4": {
                "bit": 4,
                "description": "Request status for RR[4] register"
              },
              "RR5": {
                "bit": 5,
                "description": "Request status for RR[5] register"
              },
              "RR6": {
                "bit": 6,
                "description": "Request status for RR[6] register"
              },
              "RR7": {
                "bit": 7,
                "description": "Request status for RR[7] register"
              }
            },
            "CRV": {
              "CRV": {
                "bit": 0,
                "description": "Counter reload value in number of cycles of the 32.768 kHz clock",
                "width": 32
              }
            },
            "RREN": {
              "RR0": {
                "bit": 0,
                "description": "Enable or disable RR[0] register"
              },
              "RR1": {
                "bit": 1,
                "description": "Enable or disable RR[1] register"
              },
              "RR2": {
                "bit": 2,
                "description": "Enable or disable RR[2] register"
              },
              "RR3": {
                "bit": 3,
                "description": "Enable or disable RR[3] register"
              },
              "RR4": {
                "bit": 4,
                "description": "Enable or disable RR[4] register"
              },
              "RR5": {
                "bit": 5,
                "description": "Enable or disable RR[5] register"
              },
              "RR6": {
                "bit": 6,
                "description": "Enable or disable RR[6] register"
              },
              "RR7": {
                "bit": 7,
                "description": "Enable or disable RR[7] register"
              }
            },
            "CONFIG": {
              "SLEEP": {
                "bit": 0,
                "description": "Configure the watchdog to either be paused, or kept running, while the CPU is sleeping"
              },
              "HALT": {
                "bit": 3,
                "description": "Configure the watchdog to either be paused, or kept running, while the CPU is halted by the debugger"
              }
            },
            "RR[%s]": {
              "RR": {
                "bit": 0,
                "description": "Reload request register",
                "width": 32
              }
            }
          }
        },
        "EGU0": {
          "instances": [
            {
              "name": "EGU0_NS",
              "base": "0x4001B000",
              "irq": 27
            },
            {
              "name": "EGU0_S",
              "base": "0x5001B000",
              "irq": 27
            }
          ],
          "registers": {
            "TASKS_TRIGGER[%s]": {
              "offset": "0x00",
              "size": 32,
              "description": "Description collection: Trigger n for triggering the corresponding TRIGGERED[n] event"
            },
            "SUBSCRIBE_TRIGGER[%s]": {
              "offset": "0x80",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task TRIGGER[n]"
            },
            "EVENTS_TRIGGERED[%s]": {
              "offset": "0x100",
              "size": 32,
              "description": "Description collection: Event number n generated by triggering the corresponding TRIGGER[n] task"
            },
            "PUBLISH_TRIGGERED[%s]": {
              "offset": "0x180",
              "size": 32,
              "description": "Description collection: Publish configuration for event TRIGGERED[n]"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            }
          },
          "bits": {
            "TASKS_TRIGGER[%s]": {
              "TASKS_TRIGGER": {
                "bit": 0,
                "description": "Trigger n for triggering the corresponding TRIGGERED[n] event"
              }
            },
            "SUBSCRIBE_TRIGGER[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task TRIGGER[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_TRIGGERED[%s]": {
              "EVENTS_TRIGGERED": {
                "bit": 0,
                "description": "Event number n generated by triggering the corresponding TRIGGER[n] task"
              }
            },
            "PUBLISH_TRIGGERED[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TRIGGERED[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "TRIGGERED0": {
                "bit": 0,
                "description": "Enable or disable interrupt for event TRIGGERED[0]"
              },
              "TRIGGERED1": {
                "bit": 1,
                "description": "Enable or disable interrupt for event TRIGGERED[1]"
              },
              "TRIGGERED2": {
                "bit": 2,
                "description": "Enable or disable interrupt for event TRIGGERED[2]"
              },
              "TRIGGERED3": {
                "bit": 3,
                "description": "Enable or disable interrupt for event TRIGGERED[3]"
              },
              "TRIGGERED4": {
                "bit": 4,
                "description": "Enable or disable interrupt for event TRIGGERED[4]"
              },
              "TRIGGERED5": {
                "bit": 5,
                "description": "Enable or disable interrupt for event TRIGGERED[5]"
              },
              "TRIGGERED6": {
                "bit": 6,
                "description": "Enable or disable interrupt for event TRIGGERED[6]"
              },
              "TRIGGERED7": {
                "bit": 7,
                "description": "Enable or disable interrupt for event TRIGGERED[7]"
              },
              "TRIGGERED8": {
                "bit": 8,
                "description": "Enable or disable interrupt for event TRIGGERED[8]"
              },
              "TRIGGERED9": {
                "bit": 9,
                "description": "Enable or disable interrupt for event TRIGGERED[9]"
              },
              "TRIGGERED10": {
                "bit": 10,
                "description": "Enable or disable interrupt for event TRIGGERED[10]"
              },
              "TRIGGERED11": {
                "bit": 11,
                "description": "Enable or disable interrupt for event TRIGGERED[11]"
              },
              "TRIGGERED12": {
                "bit": 12,
                "description": "Enable or disable interrupt for event TRIGGERED[12]"
              },
              "TRIGGERED13": {
                "bit": 13,
                "description": "Enable or disable interrupt for event TRIGGERED[13]"
              },
              "TRIGGERED14": {
                "bit": 14,
                "description": "Enable or disable interrupt for event TRIGGERED[14]"
              },
              "TRIGGERED15": {
                "bit": 15,
                "description": "Enable or disable interrupt for event TRIGGERED[15]"
              }
            },
            "INTENSET": {
              "TRIGGERED0": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event TRIGGERED[0]"
              },
              "TRIGGERED1": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event TRIGGERED[1]"
              },
              "TRIGGERED2": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event TRIGGERED[2]"
              },
              "TRIGGERED3": {
                "bit": 3,
                "description": "Write '1' to enable interrupt for event TRIGGERED[3]"
              },
              "TRIGGERED4": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event TRIGGERED[4]"
              },
              "TRIGGERED5": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event TRIGGERED[5]"
              },
              "TRIGGERED6": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event TRIGGERED[6]"
              },
              "TRIGGERED7": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event TRIGGERED[7]"
              },
              "TRIGGERED8": {
                "bit": 8,
                "description": "Write '1' to enable interrupt for event TRIGGERED[8]"
              },
              "TRIGGERED9": {
                "bit": 9,
                "description": "Write '1' to enable interrupt for event TRIGGERED[9]"
              },
              "TRIGGERED10": {
                "bit": 10,
                "description": "Write '1' to enable interrupt for event TRIGGERED[10]"
              },
              "TRIGGERED11": {
                "bit": 11,
                "description": "Write '1' to enable interrupt for event TRIGGERED[11]"
              },
              "TRIGGERED12": {
                "bit": 12,
                "description": "Write '1' to enable interrupt for event TRIGGERED[12]"
              },
              "TRIGGERED13": {
                "bit": 13,
                "description": "Write '1' to enable interrupt for event TRIGGERED[13]"
              },
              "TRIGGERED14": {
                "bit": 14,
                "description": "Write '1' to enable interrupt for event TRIGGERED[14]"
              },
              "TRIGGERED15": {
                "bit": 15,
                "description": "Write '1' to enable interrupt for event TRIGGERED[15]"
              }
            },
            "INTENCLR": {
              "TRIGGERED0": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event TRIGGERED[0]"
              },
              "TRIGGERED1": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event TRIGGERED[1]"
              },
              "TRIGGERED2": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event TRIGGERED[2]"
              },
              "TRIGGERED3": {
                "bit": 3,
                "description": "Write '1' to disable interrupt for event TRIGGERED[3]"
              },
              "TRIGGERED4": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event TRIGGERED[4]"
              },
              "TRIGGERED5": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event TRIGGERED[5]"
              },
              "TRIGGERED6": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event TRIGGERED[6]"
              },
              "TRIGGERED7": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event TRIGGERED[7]"
              },
              "TRIGGERED8": {
                "bit": 8,
                "description": "Write '1' to disable interrupt for event TRIGGERED[8]"
              },
              "TRIGGERED9": {
                "bit": 9,
                "description": "Write '1' to disable interrupt for event TRIGGERED[9]"
              },
              "TRIGGERED10": {
                "bit": 10,
                "description": "Write '1' to disable interrupt for event TRIGGERED[10]"
              },
              "TRIGGERED11": {
                "bit": 11,
                "description": "Write '1' to disable interrupt for event TRIGGERED[11]"
              },
              "TRIGGERED12": {
                "bit": 12,
                "description": "Write '1' to disable interrupt for event TRIGGERED[12]"
              },
              "TRIGGERED13": {
                "bit": 13,
                "description": "Write '1' to disable interrupt for event TRIGGERED[13]"
              },
              "TRIGGERED14": {
                "bit": 14,
                "description": "Write '1' to disable interrupt for event TRIGGERED[14]"
              },
              "TRIGGERED15": {
                "bit": 15,
                "description": "Write '1' to disable interrupt for event TRIGGERED[15]"
              }
            }
          }
        },
        "EGU1": {
          "instances": [
            {
              "name": "EGU1_NS",
              "base": "0x4001C000",
              "irq": 28
            },
            {
              "name": "EGU1_S",
              "base": "0x5001C000",
              "irq": 28
            }
          ],
          "registers": {}
        },
        "EGU2": {
          "instances": [
            {
              "name": "EGU2_NS",
              "base": "0x4001D000",
              "irq": 29
            },
            {
              "name": "EGU2_S",
              "base": "0x5001D000",
              "irq": 29
            }
          ],
          "registers": {}
        },
        "EGU3": {
          "instances": [
            {
              "name": "EGU3_NS",
              "base": "0x4001E000",
              "irq": 30
            },
            {
              "name": "EGU3_S",
              "base": "0x5001E000",
              "irq": 30
            }
          ],
          "registers": {}
        },
        "EGU4": {
          "instances": [
            {
              "name": "EGU4_NS",
              "base": "0x4001F000",
              "irq": 31
            },
            {
              "name": "EGU4_S",
              "base": "0x5001F000",
              "irq": 31
            }
          ],
          "registers": {}
        },
        "EGU5": {
          "instances": [
            {
              "name": "EGU5_NS",
              "base": "0x40020000",
              "irq": 32
            },
            {
              "name": "EGU5_S",
              "base": "0x50020000",
              "irq": 32
            }
          ],
          "registers": {}
        },
        "PWM": {
          "instances": [
            {
              "name": "PWM0_NS",
              "base": "0x40021000",
              "irq": 33
            },
            {
              "name": "PWM0_S",
              "base": "0x50021000",
              "irq": 33
            },
            {
              "name": "PWM1_NS",
              "base": "0x40022000",
              "irq": 34
            },
            {
              "name": "PWM1_S",
              "base": "0x50022000",
              "irq": 34
            },
            {
              "name": "PWM2_NS",
              "base": "0x40023000",
              "irq": 35
            },
            {
              "name": "PWM2_S",
              "base": "0x50023000",
              "irq": 35
            },
            {
              "name": "PWM3_NS",
              "base": "0x40024000",
              "irq": 36
            },
            {
              "name": "PWM3_S",
              "base": "0x50024000",
              "irq": 36
            }
          ],
          "registers": {
            "TASKS_STOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stops PWM pulse generation on all channels at the end of current PWM period, and stops sequence playback"
            },
            "TASKS_SEQSTART[%s]": {
              "offset": "0x08",
              "size": 32,
              "description": "Description collection: Loads the first PWM value on all enabled channels from sequence n, and starts playing that sequence at the rate defined in SEQ[n]REFRESH and/or DECODER.MODE. Causes PWM generation to start if not running."
            },
            "TASKS_NEXTSTEP": {
              "offset": "0x10",
              "size": 32,
              "description": "Steps by one value in the current sequence on all enabled channels if DECODER.MODE=NextStep. Does not cause PWM generation to start if not running."
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "SUBSCRIBE_SEQSTART[%s]": {
              "offset": "0x88",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task SEQSTART[n]"
            },
            "SUBSCRIBE_NEXTSTEP": {
              "offset": "0x90",
              "size": 32,
              "description": "Subscribe configuration for task NEXTSTEP"
            },
            "EVENTS_STOPPED": {
              "offset": "0x104",
              "size": 32,
              "description": "Response to STOP task, emitted when PWM pulses are no longer generated"
            },
            "EVENTS_SEQSTARTED[%s]": {
              "offset": "0x108",
              "size": 32,
              "description": "Description collection: First PWM period started on sequence n"
            },
            "EVENTS_SEQEND[%s]": {
              "offset": "0x110",
              "size": 32,
              "description": "Description collection: Emitted at end of every sequence n, when last value from RAM has been applied to wave counter"
            },
            "EVENTS_PWMPERIODEND": {
              "offset": "0x118",
              "size": 32,
              "description": "Emitted at the end of each PWM period"
            },
            "EVENTS_LOOPSDONE": {
              "offset": "0x11C",
              "size": 32,
              "description": "Concatenated sequences have been played the amount of times defined in LOOP.CNT"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "PUBLISH_SEQSTARTED[%s]": {
              "offset": "0x188",
              "size": 32,
              "description": "Description collection: Publish configuration for event SEQSTARTED[n]"
            },
            "PUBLISH_SEQEND[%s]": {
              "offset": "0x190",
              "size": 32,
              "description": "Description collection: Publish configuration for event SEQEND[n]"
            },
            "PUBLISH_PWMPERIODEND": {
              "offset": "0x198",
              "size": 32,
              "description": "Publish configuration for event PWMPERIODEND"
            },
            "PUBLISH_LOOPSDONE": {
              "offset": "0x19C",
              "size": 32,
              "description": "Publish configuration for event LOOPSDONE"
            },
            "SHORTS": {
              "offset": "0x200",
              "size": 32,
              "description": "Shortcuts between local events and tasks"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "PWM module enable register"
            },
            "MODE": {
              "offset": "0x504",
              "size": 32,
              "description": "Selects operating mode of the wave counter"
            },
            "COUNTERTOP": {
              "offset": "0x508",
              "size": 32,
              "description": "Value up to which the pulse generator counter counts"
            },
            "PRESCALER": {
              "offset": "0x50C",
              "size": 32,
              "description": "Configuration for PWM_CLK"
            },
            "DECODER": {
              "offset": "0x510",
              "size": 32,
              "description": "Configuration of the decoder"
            },
            "LOOP": {
              "offset": "0x514",
              "size": 32,
              "description": "Number of playbacks of a loop"
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: Beginning address in RAM of this sequence"
            },
            "CNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: Number of values (duty cycles) in this sequence"
            },
            "REFRESH": {
              "offset": "0x08",
              "size": 32,
              "description": "Description cluster: Number of additional PWM periods between samples loaded into compare register"
            },
            "ENDDELAY": {
              "offset": "0x0C",
              "size": 32,
              "description": "Description cluster: Time added after the sequence"
            },
            "OUT[%s]": {
              "offset": "0x00",
              "size": 32,
              "description": "Description collection: Output pin select for PWM channel n"
            }
          },
          "bits": {
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stops PWM pulse generation on all channels at the end of current PWM period, and stops sequence playback"
              }
            },
            "TASKS_SEQSTART[%s]": {
              "TASKS_SEQSTART": {
                "bit": 0,
                "description": "Loads the first PWM value on all enabled channels from sequence n, and starts playing that sequence at the rate defined in SEQ[n]REFRESH and/or DECODER.MODE. Causes PWM generation to start if not running."
              }
            },
            "TASKS_NEXTSTEP": {
              "TASKS_NEXTSTEP": {
                "bit": 0,
                "description": "Steps by one value in the current sequence on all enabled channels if DECODER.MODE=NextStep. Does not cause PWM generation to start if not running."
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_SEQSTART[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SEQSTART[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_NEXTSTEP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task NEXTSTEP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "Response to STOP task, emitted when PWM pulses are no longer generated"
              }
            },
            "EVENTS_SEQSTARTED[%s]": {
              "EVENTS_SEQSTARTED": {
                "bit": 0,
                "description": "First PWM period started on sequence n"
              }
            },
            "EVENTS_SEQEND[%s]": {
              "EVENTS_SEQEND": {
                "bit": 0,
                "description": "Emitted at end of every sequence n, when last value from RAM has been applied to wave counter"
              }
            },
            "EVENTS_PWMPERIODEND": {
              "EVENTS_PWMPERIODEND": {
                "bit": 0,
                "description": "Emitted at the end of each PWM period"
              }
            },
            "EVENTS_LOOPSDONE": {
              "EVENTS_LOOPSDONE": {
                "bit": 0,
                "description": "Concatenated sequences have been played the amount of times defined in LOOP.CNT"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_SEQSTARTED[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event SEQSTARTED[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_SEQEND[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event SEQEND[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_PWMPERIODEND": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event PWMPERIODEND will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_LOOPSDONE": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event LOOPSDONE will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "SHORTS": {
              "SEQEND0_STOP": {
                "bit": 0,
                "description": "Shortcut between event SEQEND[0] and task STOP"
              },
              "SEQEND1_STOP": {
                "bit": 1,
                "description": "Shortcut between event SEQEND[1] and task STOP"
              },
              "LOOPSDONE_SEQSTART0": {
                "bit": 2,
                "description": "Shortcut between event LOOPSDONE and task SEQSTART[0]"
              },
              "LOOPSDONE_SEQSTART1": {
                "bit": 3,
                "description": "Shortcut between event LOOPSDONE and task SEQSTART[1]"
              },
              "LOOPSDONE_STOP": {
                "bit": 4,
                "description": "Shortcut between event LOOPSDONE and task STOP"
              }
            },
            "INTEN": {
              "STOPPED": {
                "bit": 1,
                "description": "Enable or disable interrupt for event STOPPED"
              },
              "SEQSTARTED0": {
                "bit": 2,
                "description": "Enable or disable interrupt for event SEQSTARTED[0]"
              },
              "SEQSTARTED1": {
                "bit": 3,
                "description": "Enable or disable interrupt for event SEQSTARTED[1]"
              },
              "SEQEND0": {
                "bit": 4,
                "description": "Enable or disable interrupt for event SEQEND[0]"
              },
              "SEQEND1": {
                "bit": 5,
                "description": "Enable or disable interrupt for event SEQEND[1]"
              },
              "PWMPERIODEND": {
                "bit": 6,
                "description": "Enable or disable interrupt for event PWMPERIODEND"
              },
              "LOOPSDONE": {
                "bit": 7,
                "description": "Enable or disable interrupt for event LOOPSDONE"
              }
            },
            "INTENSET": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "SEQSTARTED0": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event SEQSTARTED[0]"
              },
              "SEQSTARTED1": {
                "bit": 3,
                "description": "Write '1' to enable interrupt for event SEQSTARTED[1]"
              },
              "SEQEND0": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event SEQEND[0]"
              },
              "SEQEND1": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event SEQEND[1]"
              },
              "PWMPERIODEND": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event PWMPERIODEND"
              },
              "LOOPSDONE": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event LOOPSDONE"
              }
            },
            "INTENCLR": {
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "SEQSTARTED0": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event SEQSTARTED[0]"
              },
              "SEQSTARTED1": {
                "bit": 3,
                "description": "Write '1' to disable interrupt for event SEQSTARTED[1]"
              },
              "SEQEND0": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event SEQEND[0]"
              },
              "SEQEND1": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event SEQEND[1]"
              },
              "PWMPERIODEND": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event PWMPERIODEND"
              },
              "LOOPSDONE": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event LOOPSDONE"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable PWM module"
              }
            },
            "MODE": {
              "UPDOWN": {
                "bit": 0,
                "description": "Selects up mode or up-and-down mode for the counter"
              }
            },
            "COUNTERTOP": {
              "COUNTERTOP": {
                "bit": 0,
                "description": "Value up to which the pulse generator counter counts. This register is ignored when DECODER.MODE=WaveForm and only values from RAM are used.",
                "width": 15
              }
            },
            "PRESCALER": {
              "PRESCALER": {
                "bit": 0,
                "description": "Prescaler of PWM_CLK",
                "width": 3
              }
            },
            "DECODER": {
              "LOAD": {
                "bit": 0,
                "description": "How a sequence is read from RAM and spread to the compare register",
                "width": 2
              },
              "MODE": {
                "bit": 8,
                "description": "Selects source for advancing the active sequence"
              }
            },
            "LOOP": {
              "CNT": {
                "bit": 0,
                "description": "Number of playbacks of pattern cycles",
                "width": 16
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Beginning address in RAM of this sequence",
                "width": 32
              }
            },
            "CNT": {
              "CNT": {
                "bit": 0,
                "description": "Number of values (duty cycles) in this sequence",
                "width": 15
              }
            },
            "REFRESH": {
              "CNT": {
                "bit": 0,
                "description": "Number of additional PWM periods between samples loaded into compare register (load every REFRESH.CNT+1 PWM periods)",
                "width": 24
              }
            },
            "ENDDELAY": {
              "CNT": {
                "bit": 0,
                "description": "Time added after the sequence in PWM periods",
                "width": 24
              }
            },
            "OUT[%s]": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            }
          }
        },
        "PDM": {
          "instances": [
            {
              "name": "PDM_NS",
              "base": "0x40026000",
              "irq": 38
            },
            {
              "name": "PDM_S",
              "base": "0x50026000",
              "irq": 38
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Starts continuous PDM transfer"
            },
            "TASKS_STOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stops PDM transfer"
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "EVENTS_STARTED": {
              "offset": "0x100",
              "size": 32,
              "description": "PDM transfer has started"
            },
            "EVENTS_STOPPED": {
              "offset": "0x104",
              "size": 32,
              "description": "PDM transfer has finished"
            },
            "EVENTS_END": {
              "offset": "0x108",
              "size": 32,
              "description": "The PDM has written the last sample specified by SAMPLE.MAXCNT (or the last sample after a STOP task has been received) to Data RAM"
            },
            "PUBLISH_STARTED": {
              "offset": "0x180",
              "size": 32,
              "description": "Publish configuration for event STARTED"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "PUBLISH_END": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event END"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "PDM module enable register"
            },
            "PDMCLKCTRL": {
              "offset": "0x504",
              "size": 32,
              "description": "PDM clock generator control"
            },
            "MODE": {
              "offset": "0x508",
              "size": 32,
              "description": "Defines the routing of the connected PDM microphones' signals"
            },
            "GAINL": {
              "offset": "0x518",
              "size": 32,
              "description": "Left output gain adjustment"
            },
            "GAINR": {
              "offset": "0x51C",
              "size": 32,
              "description": "Right output gain adjustment"
            },
            "RATIO": {
              "offset": "0x520",
              "size": 32,
              "description": "Selects the ratio between PDM_CLK and output sample rate. Change PDMCLKCTRL accordingly."
            },
            "CLK": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin number configuration for PDM CLK signal"
            },
            "DIN": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin number configuration for PDM DIN signal"
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "RAM address pointer to write samples to with EasyDMA"
            },
            "MAXCNT": {
              "offset": "0x04",
              "size": 32,
              "description": "Number of samples to allocate memory for in EasyDMA mode"
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Starts continuous PDM transfer"
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stops PDM transfer"
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_STARTED": {
              "EVENTS_STARTED": {
                "bit": 0,
                "description": "PDM transfer has started"
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "PDM transfer has finished"
              }
            },
            "EVENTS_END": {
              "EVENTS_END": {
                "bit": 0,
                "description": "The PDM has written the last sample specified by SAMPLE.MAXCNT (or the last sample after a STOP task has been received) to Data RAM"
              }
            },
            "PUBLISH_STARTED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STARTED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_END": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event END will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "STARTED": {
                "bit": 0,
                "description": "Enable or disable interrupt for event STARTED"
              },
              "STOPPED": {
                "bit": 1,
                "description": "Enable or disable interrupt for event STOPPED"
              },
              "END": {
                "bit": 2,
                "description": "Enable or disable interrupt for event END"
              }
            },
            "INTENSET": {
              "STARTED": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event STARTED"
              },
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "END": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event END"
              }
            },
            "INTENCLR": {
              "STARTED": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event STARTED"
              },
              "STOPPED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "END": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event END"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable PDM module"
              }
            },
            "PDMCLKCTRL": {
              "FREQ": {
                "bit": 0,
                "description": "PDM_CLK frequency",
                "width": 32
              }
            },
            "MODE": {
              "OPERATION": {
                "bit": 0,
                "description": "Mono or stereo operation"
              },
              "EDGE": {
                "bit": 1,
                "description": "Defines on which PDM_CLK edge Left (or mono) is sampled"
              }
            },
            "GAINL": {
              "GAINL": {
                "bit": 0,
                "description": "Left output gain adjustment, in 0.5 dB steps, around the default module gain (see electrical parameters) 0x00    -20 dB gain adjust 0x01  -19.5 dB gain adjust (...) 0x27   -0.5 dB gain adjust 0x28      0 dB gain adjust 0x29   +0.5 dB gain adjust (...) 0x4F  +19.5 dB gain adjust 0x50    +20 dB gain adjust",
                "width": 7
              }
            },
            "GAINR": {
              "GAINR": {
                "bit": 0,
                "description": "Right output gain adjustment, in 0.5 dB steps, around the default module gain (see electrical parameters)",
                "width": 7
              }
            },
            "RATIO": {
              "RATIO": {
                "bit": 0,
                "description": "Selects the ratio between PDM_CLK and output sample rate"
              }
            },
            "CLK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "DIN": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "PTR": {
              "SAMPLEPTR": {
                "bit": 0,
                "description": "Address to write PDM samples to over DMA",
                "width": 32
              }
            },
            "MAXCNT": {
              "BUFFSIZE": {
                "bit": 0,
                "description": "Length of DMA RAM allocation in number of samples",
                "width": 15
              }
            }
          }
        },
        "I2S": {
          "instances": [
            {
              "name": "I2S_NS",
              "base": "0x40028000",
              "irq": 40
            },
            {
              "name": "I2S_S",
              "base": "0x50028000",
              "irq": 40
            }
          ],
          "registers": {
            "TASKS_START": {
              "offset": "0x00",
              "size": 32,
              "description": "Starts continuous I2S transfer. Also starts MCK generator when this is enabled."
            },
            "TASKS_STOP": {
              "offset": "0x04",
              "size": 32,
              "description": "Stops I2S transfer. Also stops MCK generator. Triggering this task will cause the STOPPED event to be generated."
            },
            "SUBSCRIBE_START": {
              "offset": "0x80",
              "size": 32,
              "description": "Subscribe configuration for task START"
            },
            "SUBSCRIBE_STOP": {
              "offset": "0x84",
              "size": 32,
              "description": "Subscribe configuration for task STOP"
            },
            "EVENTS_RXPTRUPD": {
              "offset": "0x104",
              "size": 32,
              "description": "The RXD.PTR register has been copied to internal double-buffers.\n      When the I2S module is started and RX is enabled, this event will be generated for every RXTXD.MAXCNT words that are received on the SDIN pin."
            },
            "EVENTS_STOPPED": {
              "offset": "0x108",
              "size": 32,
              "description": "I2S transfer stopped."
            },
            "EVENTS_TXPTRUPD": {
              "offset": "0x114",
              "size": 32,
              "description": "The TDX.PTR register has been copied to internal double-buffers.\n      When the I2S module is started and TX is enabled, this event will be generated for every RXTXD.MAXCNT words that are sent on the SDOUT pin."
            },
            "PUBLISH_RXPTRUPD": {
              "offset": "0x184",
              "size": 32,
              "description": "Publish configuration for event RXPTRUPD"
            },
            "PUBLISH_STOPPED": {
              "offset": "0x188",
              "size": 32,
              "description": "Publish configuration for event STOPPED"
            },
            "PUBLISH_TXPTRUPD": {
              "offset": "0x194",
              "size": 32,
              "description": "Publish configuration for event TXPTRUPD"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable I2S module."
            },
            "MODE": {
              "offset": "0x00",
              "size": 32,
              "description": "I2S mode."
            },
            "RXEN": {
              "offset": "0x04",
              "size": 32,
              "description": "Reception (RX) enable."
            },
            "TXEN": {
              "offset": "0x08",
              "size": 32,
              "description": "Transmission (TX) enable."
            },
            "MCKEN": {
              "offset": "0x0C",
              "size": 32,
              "description": "Master clock generator enable."
            },
            "MCKFREQ": {
              "offset": "0x10",
              "size": 32,
              "description": "Master clock generator frequency."
            },
            "RATIO": {
              "offset": "0x14",
              "size": 32,
              "description": "MCK / LRCK ratio."
            },
            "SWIDTH": {
              "offset": "0x18",
              "size": 32,
              "description": "Sample width."
            },
            "ALIGN": {
              "offset": "0x1C",
              "size": 32,
              "description": "Alignment of sample within a frame."
            },
            "FORMAT": {
              "offset": "0x20",
              "size": 32,
              "description": "Frame format."
            },
            "CHANNELS": {
              "offset": "0x24",
              "size": 32,
              "description": "Enable channels."
            },
            "PTR": {
              "offset": "0x00",
              "size": 32,
              "description": "Transmit buffer RAM start address."
            },
            "MAXCNT": {
              "offset": "0x00",
              "size": 32,
              "description": "Size of RXD and TXD buffers."
            },
            "MCK": {
              "offset": "0x00",
              "size": 32,
              "description": "Pin select for MCK signal."
            },
            "SCK": {
              "offset": "0x04",
              "size": 32,
              "description": "Pin select for SCK signal."
            },
            "LRCK": {
              "offset": "0x08",
              "size": 32,
              "description": "Pin select for LRCK signal."
            },
            "SDIN": {
              "offset": "0x0C",
              "size": 32,
              "description": "Pin select for SDIN signal."
            },
            "SDOUT": {
              "offset": "0x10",
              "size": 32,
              "description": "Pin select for SDOUT signal."
            }
          },
          "bits": {
            "TASKS_START": {
              "TASKS_START": {
                "bit": 0,
                "description": "Starts continuous I2S transfer. Also starts MCK generator when this is enabled."
              }
            },
            "TASKS_STOP": {
              "TASKS_STOP": {
                "bit": 0,
                "description": "Stops I2S transfer. Also stops MCK generator. Triggering this task will cause the STOPPED event to be generated."
              }
            },
            "SUBSCRIBE_START": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task START will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "SUBSCRIBE_STOP": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task STOP will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_RXPTRUPD": {
              "EVENTS_RXPTRUPD": {
                "bit": 0,
                "description": "The RXD.PTR register has been copied to internal double-buffers.\n      When the I2S module is started and RX is enabled, this event will be generated for every RXTXD.MAXCNT words that are received on the SDIN pin."
              }
            },
            "EVENTS_STOPPED": {
              "EVENTS_STOPPED": {
                "bit": 0,
                "description": "I2S transfer stopped."
              }
            },
            "EVENTS_TXPTRUPD": {
              "EVENTS_TXPTRUPD": {
                "bit": 0,
                "description": "The TDX.PTR register has been copied to internal double-buffers.\n      When the I2S module is started and TX is enabled, this event will be generated for every RXTXD.MAXCNT words that are sent on the SDOUT pin."
              }
            },
            "PUBLISH_RXPTRUPD": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RXPTRUPD will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_STOPPED": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event STOPPED will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "PUBLISH_TXPTRUPD": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event TXPTRUPD will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "RXPTRUPD": {
                "bit": 1,
                "description": "Enable or disable interrupt for event RXPTRUPD"
              },
              "STOPPED": {
                "bit": 2,
                "description": "Enable or disable interrupt for event STOPPED"
              },
              "TXPTRUPD": {
                "bit": 5,
                "description": "Enable or disable interrupt for event TXPTRUPD"
              }
            },
            "INTENSET": {
              "RXPTRUPD": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event RXPTRUPD"
              },
              "STOPPED": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event STOPPED"
              },
              "TXPTRUPD": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event TXPTRUPD"
              }
            },
            "INTENCLR": {
              "RXPTRUPD": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event RXPTRUPD"
              },
              "STOPPED": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event STOPPED"
              },
              "TXPTRUPD": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event TXPTRUPD"
              }
            },
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable I2S module."
              }
            },
            "MODE": {
              "MODE": {
                "bit": 0,
                "description": "I2S mode."
              }
            },
            "RXEN": {
              "RXEN": {
                "bit": 0,
                "description": "Reception (RX) enable."
              }
            },
            "TXEN": {
              "TXEN": {
                "bit": 0,
                "description": "Transmission (TX) enable."
              }
            },
            "MCKEN": {
              "MCKEN": {
                "bit": 0,
                "description": "Master clock generator enable."
              }
            },
            "MCKFREQ": {
              "MCKFREQ": {
                "bit": 0,
                "description": "Master clock generator frequency.",
                "width": 32
              }
            },
            "RATIO": {
              "RATIO": {
                "bit": 0,
                "description": "MCK / LRCK ratio.",
                "width": 4
              }
            },
            "SWIDTH": {
              "SWIDTH": {
                "bit": 0,
                "description": "Sample width.",
                "width": 2
              }
            },
            "ALIGN": {
              "ALIGN": {
                "bit": 0,
                "description": "Alignment of sample within a frame."
              }
            },
            "FORMAT": {
              "FORMAT": {
                "bit": 0,
                "description": "Frame format."
              }
            },
            "CHANNELS": {
              "CHANNELS": {
                "bit": 0,
                "description": "Enable channels.",
                "width": 2
              }
            },
            "PTR": {
              "PTR": {
                "bit": 0,
                "description": "Transmit buffer Data RAM start address. When transmitting, words containing samples will be fetched from this address. This address is a word aligned Data RAM address.",
                "width": 32
              }
            },
            "MAXCNT": {
              "MAXCNT": {
                "bit": 0,
                "description": "Size of RXD and TXD buffers in number of 32 bit words.",
                "width": 14
              }
            },
            "MCK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "SCK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "LRCK": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "SDIN": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            },
            "SDOUT": {
              "PIN": {
                "bit": 0,
                "description": "Pin number",
                "width": 5
              },
              "CONNECT": {
                "bit": 31,
                "description": "Connection"
              }
            }
          }
        },
        "IPC": {
          "instances": [
            {
              "name": "IPC_NS",
              "base": "0x4002A000",
              "irq": 42
            },
            {
              "name": "IPC_S",
              "base": "0x5002A000",
              "irq": 42
            }
          ],
          "registers": {
            "TASKS_SEND[%s]": {
              "offset": "0x00",
              "size": 32,
              "description": "Description collection: Trigger events on channel enabled in SEND_CNF[n]."
            },
            "SUBSCRIBE_SEND[%s]": {
              "offset": "0x80",
              "size": 32,
              "description": "Description collection: Subscribe configuration for task SEND[n]"
            },
            "EVENTS_RECEIVE[%s]": {
              "offset": "0x100",
              "size": 32,
              "description": "Description collection: Event received on one or more of the enabled channels in RECEIVE_CNF[n]."
            },
            "PUBLISH_RECEIVE[%s]": {
              "offset": "0x180",
              "size": 32,
              "description": "Description collection: Publish configuration for event RECEIVE[n]"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "INTPEND": {
              "offset": "0x30C",
              "size": 32,
              "description": "Pending interrupts"
            },
            "SEND_CNF[%s]": {
              "offset": "0x510",
              "size": 32,
              "description": "Description collection: Send event configuration for TASKS_SEND[n]."
            },
            "RECEIVE_CNF[%s]": {
              "offset": "0x590",
              "size": 32,
              "description": "Description collection: Receive event configuration for EVENTS_RECEIVE[n]."
            },
            "GPMEM[%s]": {
              "offset": "0x610",
              "size": 32,
              "description": "Description collection: General purpose memory."
            }
          },
          "bits": {
            "TASKS_SEND[%s]": {
              "TASKS_SEND": {
                "bit": 0,
                "description": "Trigger events on channel enabled in SEND_CNF[n]."
              }
            },
            "SUBSCRIBE_SEND[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that task SEND[n] will subscribe to",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable subscription"
              }
            },
            "EVENTS_RECEIVE[%s]": {
              "EVENTS_RECEIVE": {
                "bit": 0,
                "description": "Event received on one or more of the enabled channels in RECEIVE_CNF[n]."
              }
            },
            "PUBLISH_RECEIVE[%s]": {
              "CHIDX": {
                "bit": 0,
                "description": "Channel that event RECEIVE[n] will publish to.",
                "width": 4
              },
              "EN": {
                "bit": 31,
                "description": "Disable publishing"
              }
            },
            "INTEN": {
              "RECEIVE0": {
                "bit": 0,
                "description": "Enable or disable interrupt for event RECEIVE[0]"
              },
              "RECEIVE1": {
                "bit": 1,
                "description": "Enable or disable interrupt for event RECEIVE[1]"
              },
              "RECEIVE2": {
                "bit": 2,
                "description": "Enable or disable interrupt for event RECEIVE[2]"
              },
              "RECEIVE3": {
                "bit": 3,
                "description": "Enable or disable interrupt for event RECEIVE[3]"
              },
              "RECEIVE4": {
                "bit": 4,
                "description": "Enable or disable interrupt for event RECEIVE[4]"
              },
              "RECEIVE5": {
                "bit": 5,
                "description": "Enable or disable interrupt for event RECEIVE[5]"
              },
              "RECEIVE6": {
                "bit": 6,
                "description": "Enable or disable interrupt for event RECEIVE[6]"
              },
              "RECEIVE7": {
                "bit": 7,
                "description": "Enable or disable interrupt for event RECEIVE[7]"
              }
            },
            "INTENSET": {
              "RECEIVE0": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event RECEIVE[0]"
              },
              "RECEIVE1": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event RECEIVE[1]"
              },
              "RECEIVE2": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event RECEIVE[2]"
              },
              "RECEIVE3": {
                "bit": 3,
                "description": "Write '1' to enable interrupt for event RECEIVE[3]"
              },
              "RECEIVE4": {
                "bit": 4,
                "description": "Write '1' to enable interrupt for event RECEIVE[4]"
              },
              "RECEIVE5": {
                "bit": 5,
                "description": "Write '1' to enable interrupt for event RECEIVE[5]"
              },
              "RECEIVE6": {
                "bit": 6,
                "description": "Write '1' to enable interrupt for event RECEIVE[6]"
              },
              "RECEIVE7": {
                "bit": 7,
                "description": "Write '1' to enable interrupt for event RECEIVE[7]"
              }
            },
            "INTENCLR": {
              "RECEIVE0": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event RECEIVE[0]"
              },
              "RECEIVE1": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event RECEIVE[1]"
              },
              "RECEIVE2": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event RECEIVE[2]"
              },
              "RECEIVE3": {
                "bit": 3,
                "description": "Write '1' to disable interrupt for event RECEIVE[3]"
              },
              "RECEIVE4": {
                "bit": 4,
                "description": "Write '1' to disable interrupt for event RECEIVE[4]"
              },
              "RECEIVE5": {
                "bit": 5,
                "description": "Write '1' to disable interrupt for event RECEIVE[5]"
              },
              "RECEIVE6": {
                "bit": 6,
                "description": "Write '1' to disable interrupt for event RECEIVE[6]"
              },
              "RECEIVE7": {
                "bit": 7,
                "description": "Write '1' to disable interrupt for event RECEIVE[7]"
              }
            },
            "INTPEND": {
              "RECEIVE0": {
                "bit": 0,
                "description": "Read pending status of interrupt for event RECEIVE[0]"
              },
              "RECEIVE1": {
                "bit": 1,
                "description": "Read pending status of interrupt for event RECEIVE[1]"
              },
              "RECEIVE2": {
                "bit": 2,
                "description": "Read pending status of interrupt for event RECEIVE[2]"
              },
              "RECEIVE3": {
                "bit": 3,
                "description": "Read pending status of interrupt for event RECEIVE[3]"
              },
              "RECEIVE4": {
                "bit": 4,
                "description": "Read pending status of interrupt for event RECEIVE[4]"
              },
              "RECEIVE5": {
                "bit": 5,
                "description": "Read pending status of interrupt for event RECEIVE[5]"
              },
              "RECEIVE6": {
                "bit": 6,
                "description": "Read pending status of interrupt for event RECEIVE[6]"
              },
              "RECEIVE7": {
                "bit": 7,
                "description": "Read pending status of interrupt for event RECEIVE[7]"
              }
            },
            "SEND_CNF[%s]": {
              "CHEN0": {
                "bit": 0,
                "description": "Enable broadcasting on channel 0."
              },
              "CHEN1": {
                "bit": 1,
                "description": "Enable broadcasting on channel 1."
              },
              "CHEN2": {
                "bit": 2,
                "description": "Enable broadcasting on channel 2."
              },
              "CHEN3": {
                "bit": 3,
                "description": "Enable broadcasting on channel 3."
              },
              "CHEN4": {
                "bit": 4,
                "description": "Enable broadcasting on channel 4."
              },
              "CHEN5": {
                "bit": 5,
                "description": "Enable broadcasting on channel 5."
              },
              "CHEN6": {
                "bit": 6,
                "description": "Enable broadcasting on channel 6."
              },
              "CHEN7": {
                "bit": 7,
                "description": "Enable broadcasting on channel 7."
              }
            },
            "RECEIVE_CNF[%s]": {
              "CHEN0": {
                "bit": 0,
                "description": "Enable subscription to channel 0."
              },
              "CHEN1": {
                "bit": 1,
                "description": "Enable subscription to channel 1."
              },
              "CHEN2": {
                "bit": 2,
                "description": "Enable subscription to channel 2."
              },
              "CHEN3": {
                "bit": 3,
                "description": "Enable subscription to channel 3."
              },
              "CHEN4": {
                "bit": 4,
                "description": "Enable subscription to channel 4."
              },
              "CHEN5": {
                "bit": 5,
                "description": "Enable subscription to channel 5."
              },
              "CHEN6": {
                "bit": 6,
                "description": "Enable subscription to channel 6."
              },
              "CHEN7": {
                "bit": 7,
                "description": "Enable subscription to channel 7."
              }
            },
            "GPMEM[%s]": {
              "GPMEM": {
                "bit": 0,
                "description": "General purpose memory",
                "width": 32
              }
            }
          }
        },
        "FPU": {
          "instances": [
            {
              "name": "FPU_NS",
              "base": "0x4002C000",
              "irq": 44
            },
            {
              "name": "FPU_S",
              "base": "0x5002C000",
              "irq": 44
            }
          ],
          "registers": {
            "UNUSED": {
              "offset": "0x00",
              "size": 32,
              "description": "Unused."
            }
          }
        },
        "KMU": {
          "instances": [
            {
              "name": "KMU_NS",
              "base": "0x40039000",
              "irq": 57
            },
            {
              "name": "KMU_S",
              "base": "0x50039000",
              "irq": 57
            }
          ],
          "registers": {
            "TASKS_PUSH_KEYSLOT": {
              "offset": "0x00",
              "size": 32,
              "description": "Push a key slot over secure APB"
            },
            "EVENTS_KEYSLOT_PUSHED": {
              "offset": "0x100",
              "size": 32,
              "description": "Key slot successfully pushed over secure APB"
            },
            "EVENTS_KEYSLOT_REVOKED": {
              "offset": "0x104",
              "size": 32,
              "description": "Key slot has been revoked and cannot be tasked for selection"
            },
            "EVENTS_KEYSLOT_ERROR": {
              "offset": "0x108",
              "size": 32,
              "description": "No key slot selected, no destination address defined, or error during push operation"
            },
            "INTEN": {
              "offset": "0x300",
              "size": 32,
              "description": "Enable or disable interrupt"
            },
            "INTENSET": {
              "offset": "0x304",
              "size": 32,
              "description": "Enable interrupt"
            },
            "INTENCLR": {
              "offset": "0x308",
              "size": 32,
              "description": "Disable interrupt"
            },
            "INTPEND": {
              "offset": "0x30C",
              "size": 32,
              "description": "Pending interrupts"
            },
            "STATUS": {
              "offset": "0x40C",
              "size": 32,
              "description": "Status bits for KMU operation"
            },
            "SELECTKEYSLOT": {
              "offset": "0x500",
              "size": 32,
              "description": "Select key slot to be read over AHB or pushed over secure APB when TASKS_PUSH_KEYSLOT is started"
            }
          },
          "bits": {
            "TASKS_PUSH_KEYSLOT": {
              "TASKS_PUSH_KEYSLOT": {
                "bit": 0,
                "description": "Push a key slot over secure APB"
              }
            },
            "EVENTS_KEYSLOT_PUSHED": {
              "EVENTS_KEYSLOT_PUSHED": {
                "bit": 0,
                "description": "Key slot successfully pushed over secure APB"
              }
            },
            "EVENTS_KEYSLOT_REVOKED": {
              "EVENTS_KEYSLOT_REVOKED": {
                "bit": 0,
                "description": "Key slot has been revoked and cannot be tasked for selection"
              }
            },
            "EVENTS_KEYSLOT_ERROR": {
              "EVENTS_KEYSLOT_ERROR": {
                "bit": 0,
                "description": "No key slot selected, no destination address defined, or error during push operation"
              }
            },
            "INTEN": {
              "KEYSLOT_PUSHED": {
                "bit": 0,
                "description": "Enable or disable interrupt for event KEYSLOT_PUSHED"
              },
              "KEYSLOT_REVOKED": {
                "bit": 1,
                "description": "Enable or disable interrupt for event KEYSLOT_REVOKED"
              },
              "KEYSLOT_ERROR": {
                "bit": 2,
                "description": "Enable or disable interrupt for event KEYSLOT_ERROR"
              }
            },
            "INTENSET": {
              "KEYSLOT_PUSHED": {
                "bit": 0,
                "description": "Write '1' to enable interrupt for event KEYSLOT_PUSHED"
              },
              "KEYSLOT_REVOKED": {
                "bit": 1,
                "description": "Write '1' to enable interrupt for event KEYSLOT_REVOKED"
              },
              "KEYSLOT_ERROR": {
                "bit": 2,
                "description": "Write '1' to enable interrupt for event KEYSLOT_ERROR"
              }
            },
            "INTENCLR": {
              "KEYSLOT_PUSHED": {
                "bit": 0,
                "description": "Write '1' to disable interrupt for event KEYSLOT_PUSHED"
              },
              "KEYSLOT_REVOKED": {
                "bit": 1,
                "description": "Write '1' to disable interrupt for event KEYSLOT_REVOKED"
              },
              "KEYSLOT_ERROR": {
                "bit": 2,
                "description": "Write '1' to disable interrupt for event KEYSLOT_ERROR"
              }
            },
            "INTPEND": {
              "KEYSLOT_PUSHED": {
                "bit": 0,
                "description": "Read pending status of interrupt for event KEYSLOT_PUSHED"
              },
              "KEYSLOT_REVOKED": {
                "bit": 1,
                "description": "Read pending status of interrupt for event KEYSLOT_REVOKED"
              },
              "KEYSLOT_ERROR": {
                "bit": 2,
                "description": "Read pending status of interrupt for event KEYSLOT_ERROR"
              }
            },
            "STATUS": {
              "SELECTED": {
                "bit": 0,
                "description": "Key slot ID successfully selected by the KMU"
              },
              "BLOCKED": {
                "bit": 1,
                "description": "Violation status"
              }
            },
            "SELECTKEYSLOT": {
              "ID": {
                "bit": 0,
                "description": "Select key slot ID to be read over AHB, or pushed over secure APB, when TASKS_PUSH_KEYSLOT is started NOTE: ID=0 is not a valid key slot ID. The 0 ID should be used when the KMU is idle or not in use NOTE: Index N in UICR-&gt;KEYSLOT.KEY[N] and UICR-&gt;KEYSLOT.CONFIG[N] corresponds to KMU key slot ID=N+1",
                "width": 8
              }
            }
          }
        },
        "NVMC": {
          "instances": [
            {
              "name": "NVMC_NS",
              "base": "0x40039000"
            },
            {
              "name": "NVMC_S",
              "base": "0x50039000"
            }
          ],
          "registers": {
            "READY": {
              "offset": "0x400",
              "size": 32,
              "description": "Ready flag"
            },
            "READYNEXT": {
              "offset": "0x408",
              "size": 32,
              "description": "Ready flag"
            },
            "CONFIG": {
              "offset": "0x504",
              "size": 32,
              "description": "Configuration register"
            },
            "ERASEALL": {
              "offset": "0x50C",
              "size": 32,
              "description": "Register for erasing all non-volatile user memory"
            },
            "ERASEPAGEPARTIALCFG": {
              "offset": "0x51C",
              "size": 32,
              "description": "Register for partial erase configuration"
            },
            "ICACHECNF": {
              "offset": "0x540",
              "size": 32,
              "description": "I-code cache configuration register"
            },
            "IHIT": {
              "offset": "0x548",
              "size": 32,
              "description": "I-code cache hit counter"
            },
            "IMISS": {
              "offset": "0x54C",
              "size": 32,
              "description": "I-code cache miss counter"
            },
            "CONFIGNS": {
              "offset": "0x584",
              "size": 32,
              "description": "Unspecified"
            },
            "WRITEUICRNS": {
              "offset": "0x588",
              "size": 32,
              "description": "Non-secure APPROTECT enable register"
            }
          },
          "bits": {
            "READY": {
              "READY": {
                "bit": 0,
                "description": "NVMC is ready or busy"
              }
            },
            "READYNEXT": {
              "READYNEXT": {
                "bit": 0,
                "description": "NVMC can accept a new write operation"
              }
            },
            "CONFIG": {
              "WEN": {
                "bit": 0,
                "description": "Program memory access mode. It is strongly recommended to only activate erase and write modes when they are actively used. Enabling write or erase will invalidate the cache and keep it invalidated.",
                "width": 3
              }
            },
            "ERASEALL": {
              "ERASEALL": {
                "bit": 0,
                "description": "Erase all non-volatile memory including UICR registers. Note that erasing must be enabled by setting CONFIG.WEN = Een before the non-volatile memory can be erased."
              }
            },
            "ERASEPAGEPARTIALCFG": {
              "DURATION": {
                "bit": 0,
                "description": "Duration of the partial erase in milliseconds",
                "width": 7
              }
            },
            "ICACHECNF": {
              "CACHEEN": {
                "bit": 0,
                "description": "Cache enable"
              },
              "CACHEPROFEN": {
                "bit": 8,
                "description": "Cache profiling enable"
              }
            },
            "IHIT": {
              "HITS": {
                "bit": 0,
                "description": "Number of cache hits Write zero to clear",
                "width": 32
              }
            },
            "IMISS": {
              "MISSES": {
                "bit": 0,
                "description": "Number of cache misses Write zero to clear",
                "width": 32
              }
            },
            "CONFIGNS": {
              "WEN": {
                "bit": 0,
                "description": "Program memory access mode. It is strongly recommended to only activate erase and write modes when they are actively used. Enabling write or erase will invalidate the cache and keep it invalidated.",
                "width": 2
              }
            },
            "WRITEUICRNS": {
              "SET": {
                "bit": 0,
                "description": "Allow non-secure code to set APPROTECT"
              },
              "KEY": {
                "bit": 4,
                "description": "Key to write in order to validate the write operation",
                "width": 28
              }
            }
          }
        },
        "VMC": {
          "instances": [
            {
              "name": "VMC_NS",
              "base": "0x4003A000"
            },
            {
              "name": "VMC_S",
              "base": "0x5003A000"
            }
          ],
          "registers": {
            "POWER": {
              "offset": "0x00",
              "size": 32,
              "description": "Description cluster: RAMn power control register"
            },
            "POWERSET": {
              "offset": "0x04",
              "size": 32,
              "description": "Description cluster: RAMn power control set register"
            },
            "POWERCLR": {
              "offset": "0x08",
              "size": 32,
              "description": "Description cluster: RAMn power control clear register"
            }
          },
          "bits": {
            "POWER": {
              "S0POWER": {
                "bit": 0,
                "description": "Keep RAM section S0 of RAM n on or off in System ON mode"
              },
              "S1POWER": {
                "bit": 1,
                "description": "Keep RAM section S1 of RAM n on or off in System ON mode"
              },
              "S2POWER": {
                "bit": 2,
                "description": "Keep RAM section S2 of RAM n on or off in System ON mode"
              },
              "S3POWER": {
                "bit": 3,
                "description": "Keep RAM section S3 of RAM n on or off in System ON mode"
              },
              "S0RETENTION": {
                "bit": 16,
                "description": "Keep retention on RAM section S0 of RAM n when RAM section is switched off"
              },
              "S1RETENTION": {
                "bit": 17,
                "description": "Keep retention on RAM section S1 of RAM n when RAM section is switched off"
              },
              "S2RETENTION": {
                "bit": 18,
                "description": "Keep retention on RAM section S2 of RAM n when RAM section is switched off"
              },
              "S3RETENTION": {
                "bit": 19,
                "description": "Keep retention on RAM section S3 of RAM n when RAM section is switched off"
              }
            },
            "POWERSET": {
              "S0POWER": {
                "bit": 0,
                "description": "Keep RAM section S0 of RAM n on or off in System ON mode"
              },
              "S1POWER": {
                "bit": 1,
                "description": "Keep RAM section S1 of RAM n on or off in System ON mode"
              },
              "S2POWER": {
                "bit": 2,
                "description": "Keep RAM section S2 of RAM n on or off in System ON mode"
              },
              "S3POWER": {
                "bit": 3,
                "description": "Keep RAM section S3 of RAM n on or off in System ON mode"
              },
              "S0RETENTION": {
                "bit": 16,
                "description": "Keep retention on RAM section S0 of RAM n when RAM section is switched off"
              },
              "S1RETENTION": {
                "bit": 17,
                "description": "Keep retention on RAM section S1 of RAM n when RAM section is switched off"
              },
              "S2RETENTION": {
                "bit": 18,
                "description": "Keep retention on RAM section S2 of RAM n when RAM section is switched off"
              },
              "S3RETENTION": {
                "bit": 19,
                "description": "Keep retention on RAM section S3 of RAM n when RAM section is switched off"
              }
            },
            "POWERCLR": {
              "S0POWER": {
                "bit": 0,
                "description": "Keep RAM section S0 of RAM n on or off in System ON mode"
              },
              "S1POWER": {
                "bit": 1,
                "description": "Keep RAM section S1 of RAM n on or off in System ON mode"
              },
              "S2POWER": {
                "bit": 2,
                "description": "Keep RAM section S2 of RAM n on or off in System ON mode"
              },
              "S3POWER": {
                "bit": 3,
                "description": "Keep RAM section S3 of RAM n on or off in System ON mode"
              },
              "S0RETENTION": {
                "bit": 16,
                "description": "Keep retention on RAM section S0 of RAM n when RAM section is switched off"
              },
              "S1RETENTION": {
                "bit": 17,
                "description": "Keep retention on RAM section S1 of RAM n when RAM section is switched off"
              },
              "S2RETENTION": {
                "bit": 18,
                "description": "Keep retention on RAM section S2 of RAM n when RAM section is switched off"
              },
              "S3RETENTION": {
                "bit": 19,
                "description": "Keep retention on RAM section S3 of RAM n when RAM section is switched off"
              }
            }
          }
        },
        "CC": {
          "instances": [
            {
              "name": "CC_HOST_RGF_S",
              "base": "0x50840000"
            }
          ],
          "registers": {
            "HOST_CRYPTOKEY_SEL": {
              "offset": "0x1A38",
              "size": 32,
              "description": "AES hardware key select"
            },
            "HOST_IOT_KPRTL_LOCK": {
              "offset": "0x1A4C",
              "size": 32,
              "description": "This write-once register is the K_PRTL lock register. When this register is set, K_PRTL cannot be used and a zeroed key will be used instead. The value of this register is saved in the CRYPTOCELL AO power domain."
            },
            "HOST_IOT_KDR0": {
              "offset": "0x1A50",
              "size": 32,
              "description": "This register holds bits 31:0 of K_DR. The value of this register is saved in the CRYPTOCELL AO power domain. Reading from this address returns the K_DR valid status indicating if K_DR is successfully retained."
            },
            "HOST_IOT_KDR1": {
              "offset": "0x1A54",
              "size": 32,
              "description": "This register holds bits 63:32 of K_DR. The value of this register is saved in the CRYPTOCELL AO power domain."
            },
            "HOST_IOT_KDR2": {
              "offset": "0x1A58",
              "size": 32,
              "description": "This register holds bits 95:64 of K_DR. The value of this register is saved in the CRYPTOCELL AO power domain."
            },
            "HOST_IOT_KDR3": {
              "offset": "0x1A5C",
              "size": 32,
              "description": "This register holds bits 127:96 of K_DR. The value of this register is saved in the CRYPTOCELL AO power domain."
            },
            "HOST_IOT_LCS": {
              "offset": "0x1A60",
              "size": 32,
              "description": "Controls lifecycle state (LCS) for CRYPTOCELL subsystem"
            }
          },
          "bits": {
            "HOST_CRYPTOKEY_SEL": {
              "HOST_CRYPTOKEY_SEL": {
                "bit": 0,
                "description": "Select the source of the HW key that is used by the AES engine",
                "width": 2
              }
            },
            "HOST_IOT_KPRTL_LOCK": {
              "HOST_IOT_KPRTL_LOCK": {
                "bit": 0,
                "description": "This register is the K_PRTL lock register. When this register is set, K_PRTL cannot be used and a zeroed key will be used instead. The value of this register is saved in the CRYPTOCELL AO power domain."
              }
            },
            "HOST_IOT_KDR0": {
              "HOST_IOT_KDR0": {
                "bit": 0,
                "description": "Write: K_DR bits 31:0. Read: 0x00000000 when 128-bit K_DR key value is not yet retained in the CRYPTOCELL AO power domain. Read: 0x00000001 when 128-bit K_DR key value is successfully retained in the CRYPTOCELL AO power domain.",
                "width": 32
              }
            },
            "HOST_IOT_KDR1": {
              "HOST_IOT_KDR1": {
                "bit": 0,
                "description": "K_DR bits 63:32",
                "width": 32
              }
            },
            "HOST_IOT_KDR2": {
              "HOST_IOT_KDR2": {
                "bit": 0,
                "description": "K_DR bits 95:64",
                "width": 32
              }
            },
            "HOST_IOT_KDR3": {
              "HOST_IOT_KDR3": {
                "bit": 0,
                "description": "K_DR bits 127:96",
                "width": 32
              }
            },
            "HOST_IOT_LCS": {
              "LCS": {
                "bit": 0,
                "description": "Lifecycle state value. This field is write-once per reset.",
                "width": 3
              },
              "LCS_IS_VALID": {
                "bit": 8,
                "description": "Read-only field. Indicates if CRYPTOCELL LCS has been successfully configured since last reset."
              }
            }
          }
        },
        "CRYPTO": {
          "instances": [
            {
              "name": "CRYPTOCELL_S",
              "base": "0x50840000",
              "irq": 64
            }
          ],
          "registers": {
            "ENABLE": {
              "offset": "0x500",
              "size": 32,
              "description": "Enable CRYPTOCELL subsystem"
            }
          },
          "bits": {
            "ENABLE": {
              "ENABLE": {
                "bit": 0,
                "description": "Enable or disable the CRYPTOCELL subsystem"
              }
            }
          }
        },
        "P0": {
          "instances": [
            {
              "name": "P0_NS",
              "base": "0x40842500"
            },
            {
              "name": "P0_S",
              "base": "0x50842500"
            }
          ],
          "registers": {
            "OUT": {
              "offset": "0x04",
              "size": 32,
              "description": "Write GPIO port"
            },
            "OUTSET": {
              "offset": "0x08",
              "size": 32,
              "description": "Set individual bits in GPIO port"
            },
            "OUTCLR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Clear individual bits in GPIO port"
            },
            "IN": {
              "offset": "0x10",
              "size": 32,
              "description": "Read GPIO port"
            },
            "DIR": {
              "offset": "0x14",
              "size": 32,
              "description": "Direction of GPIO pins"
            },
            "DIRSET": {
              "offset": "0x18",
              "size": 32,
              "description": "DIR set register"
            },
            "DIRCLR": {
              "offset": "0x1C",
              "size": 32,
              "description": "DIR clear register"
            },
            "LATCH": {
              "offset": "0x20",
              "size": 32,
              "description": "Latch register indicating what GPIO pins that have met the criteria set in the PIN_CNF[n].SENSE registers"
            },
            "DETECTMODE": {
              "offset": "0x24",
              "size": 32,
              "description": "Select between default DETECT signal behavior and LDETECT mode (For non-secure pin only)"
            },
            "DETECTMODE_SEC": {
              "offset": "0x28",
              "size": 32,
              "description": "Select between default DETECT signal behavior and LDETECT mode (For secure pin only)"
            },
            "PIN_CNF[%s]": {
              "offset": "0x200",
              "size": 32,
              "description": "Description collection: Configuration of GPIO pins"
            }
          },
          "bits": {
            "OUT": {
              "PIN0": {
                "bit": 0,
                "description": "Pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Pin 31"
              }
            },
            "OUTSET": {
              "PIN0": {
                "bit": 0,
                "description": "Pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Pin 31"
              }
            },
            "OUTCLR": {
              "PIN0": {
                "bit": 0,
                "description": "Pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Pin 31"
              }
            },
            "IN": {
              "PIN0": {
                "bit": 0,
                "description": "Pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Pin 31"
              }
            },
            "DIR": {
              "PIN0": {
                "bit": 0,
                "description": "Pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Pin 31"
              }
            },
            "DIRSET": {
              "PIN0": {
                "bit": 0,
                "description": "Set as output pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Set as output pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Set as output pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Set as output pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Set as output pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Set as output pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Set as output pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Set as output pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Set as output pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Set as output pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Set as output pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Set as output pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Set as output pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Set as output pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Set as output pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Set as output pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Set as output pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Set as output pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Set as output pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Set as output pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Set as output pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Set as output pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Set as output pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Set as output pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Set as output pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Set as output pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Set as output pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Set as output pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Set as output pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Set as output pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Set as output pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Set as output pin 31"
              }
            },
            "DIRCLR": {
              "PIN0": {
                "bit": 0,
                "description": "Set as input pin 0"
              },
              "PIN1": {
                "bit": 1,
                "description": "Set as input pin 1"
              },
              "PIN2": {
                "bit": 2,
                "description": "Set as input pin 2"
              },
              "PIN3": {
                "bit": 3,
                "description": "Set as input pin 3"
              },
              "PIN4": {
                "bit": 4,
                "description": "Set as input pin 4"
              },
              "PIN5": {
                "bit": 5,
                "description": "Set as input pin 5"
              },
              "PIN6": {
                "bit": 6,
                "description": "Set as input pin 6"
              },
              "PIN7": {
                "bit": 7,
                "description": "Set as input pin 7"
              },
              "PIN8": {
                "bit": 8,
                "description": "Set as input pin 8"
              },
              "PIN9": {
                "bit": 9,
                "description": "Set as input pin 9"
              },
              "PIN10": {
                "bit": 10,
                "description": "Set as input pin 10"
              },
              "PIN11": {
                "bit": 11,
                "description": "Set as input pin 11"
              },
              "PIN12": {
                "bit": 12,
                "description": "Set as input pin 12"
              },
              "PIN13": {
                "bit": 13,
                "description": "Set as input pin 13"
              },
              "PIN14": {
                "bit": 14,
                "description": "Set as input pin 14"
              },
              "PIN15": {
                "bit": 15,
                "description": "Set as input pin 15"
              },
              "PIN16": {
                "bit": 16,
                "description": "Set as input pin 16"
              },
              "PIN17": {
                "bit": 17,
                "description": "Set as input pin 17"
              },
              "PIN18": {
                "bit": 18,
                "description": "Set as input pin 18"
              },
              "PIN19": {
                "bit": 19,
                "description": "Set as input pin 19"
              },
              "PIN20": {
                "bit": 20,
                "description": "Set as input pin 20"
              },
              "PIN21": {
                "bit": 21,
                "description": "Set as input pin 21"
              },
              "PIN22": {
                "bit": 22,
                "description": "Set as input pin 22"
              },
              "PIN23": {
                "bit": 23,
                "description": "Set as input pin 23"
              },
              "PIN24": {
                "bit": 24,
                "description": "Set as input pin 24"
              },
              "PIN25": {
                "bit": 25,
                "description": "Set as input pin 25"
              },
              "PIN26": {
                "bit": 26,
                "description": "Set as input pin 26"
              },
              "PIN27": {
                "bit": 27,
                "description": "Set as input pin 27"
              },
              "PIN28": {
                "bit": 28,
                "description": "Set as input pin 28"
              },
              "PIN29": {
                "bit": 29,
                "description": "Set as input pin 29"
              },
              "PIN30": {
                "bit": 30,
                "description": "Set as input pin 30"
              },
              "PIN31": {
                "bit": 31,
                "description": "Set as input pin 31"
              }
            },
            "LATCH": {
              "PIN0": {
                "bit": 0,
                "description": "Status on whether PIN0 has met criteria set in PIN_CNF0.SENSE register. Write '1' to clear."
              },
              "PIN1": {
                "bit": 1,
                "description": "Status on whether PIN1 has met criteria set in PIN_CNF1.SENSE register. Write '1' to clear."
              },
              "PIN2": {
                "bit": 2,
                "description": "Status on whether PIN2 has met criteria set in PIN_CNF2.SENSE register. Write '1' to clear."
              },
              "PIN3": {
                "bit": 3,
                "description": "Status on whether PIN3 has met criteria set in PIN_CNF3.SENSE register. Write '1' to clear."
              },
              "PIN4": {
                "bit": 4,
                "description": "Status on whether PIN4 has met criteria set in PIN_CNF4.SENSE register. Write '1' to clear."
              },
              "PIN5": {
                "bit": 5,
                "description": "Status on whether PIN5 has met criteria set in PIN_CNF5.SENSE register. Write '1' to clear."
              },
              "PIN6": {
                "bit": 6,
                "description": "Status on whether PIN6 has met criteria set in PIN_CNF6.SENSE register. Write '1' to clear."
              },
              "PIN7": {
                "bit": 7,
                "description": "Status on whether PIN7 has met criteria set in PIN_CNF7.SENSE register. Write '1' to clear."
              },
              "PIN8": {
                "bit": 8,
                "description": "Status on whether PIN8 has met criteria set in PIN_CNF8.SENSE register. Write '1' to clear."
              },
              "PIN9": {
                "bit": 9,
                "description": "Status on whether PIN9 has met criteria set in PIN_CNF9.SENSE register. Write '1' to clear."
              },
              "PIN10": {
                "bit": 10,
                "description": "Status on whether PIN10 has met criteria set in PIN_CNF10.SENSE register. Write '1' to clear."
              },
              "PIN11": {
                "bit": 11,
                "description": "Status on whether PIN11 has met criteria set in PIN_CNF11.SENSE register. Write '1' to clear."
              },
              "PIN12": {
                "bit": 12,
                "description": "Status on whether PIN12 has met criteria set in PIN_CNF12.SENSE register. Write '1' to clear."
              },
              "PIN13": {
                "bit": 13,
                "description": "Status on whether PIN13 has met criteria set in PIN_CNF13.SENSE register. Write '1' to clear."
              },
              "PIN14": {
                "bit": 14,
                "description": "Status on whether PIN14 has met criteria set in PIN_CNF14.SENSE register. Write '1' to clear."
              },
              "PIN15": {
                "bit": 15,
                "description": "Status on whether PIN15 has met criteria set in PIN_CNF15.SENSE register. Write '1' to clear."
              },
              "PIN16": {
                "bit": 16,
                "description": "Status on whether PIN16 has met criteria set in PIN_CNF16.SENSE register. Write '1' to clear."
              },
              "PIN17": {
                "bit": 17,
                "description": "Status on whether PIN17 has met criteria set in PIN_CNF17.SENSE register. Write '1' to clear."
              },
              "PIN18": {
                "bit": 18,
                "description": "Status on whether PIN18 has met criteria set in PIN_CNF18.SENSE register. Write '1' to clear."
              },
              "PIN19": {
                "bit": 19,
                "description": "Status on whether PIN19 has met criteria set in PIN_CNF19.SENSE register. Write '1' to clear."
              },
              "PIN20": {
                "bit": 20,
                "description": "Status on whether PIN20 has met criteria set in PIN_CNF20.SENSE register. Write '1' to clear."
              },
              "PIN21": {
                "bit": 21,
                "description": "Status on whether PIN21 has met criteria set in PIN_CNF21.SENSE register. Write '1' to clear."
              },
              "PIN22": {
                "bit": 22,
                "description": "Status on whether PIN22 has met criteria set in PIN_CNF22.SENSE register. Write '1' to clear."
              },
              "PIN23": {
                "bit": 23,
                "description": "Status on whether PIN23 has met criteria set in PIN_CNF23.SENSE register. Write '1' to clear."
              },
              "PIN24": {
                "bit": 24,
                "description": "Status on whether PIN24 has met criteria set in PIN_CNF24.SENSE register. Write '1' to clear."
              },
              "PIN25": {
                "bit": 25,
                "description": "Status on whether PIN25 has met criteria set in PIN_CNF25.SENSE register. Write '1' to clear."
              },
              "PIN26": {
                "bit": 26,
                "description": "Status on whether PIN26 has met criteria set in PIN_CNF26.SENSE register. Write '1' to clear."
              },
              "PIN27": {
                "bit": 27,
                "description": "Status on whether PIN27 has met criteria set in PIN_CNF27.SENSE register. Write '1' to clear."
              },
              "PIN28": {
                "bit": 28,
                "description": "Status on whether PIN28 has met criteria set in PIN_CNF28.SENSE register. Write '1' to clear."
              },
              "PIN29": {
                "bit": 29,
                "description": "Status on whether PIN29 has met criteria set in PIN_CNF29.SENSE register. Write '1' to clear."
              },
              "PIN30": {
                "bit": 30,
                "description": "Status on whether PIN30 has met criteria set in PIN_CNF30.SENSE register. Write '1' to clear."
              },
              "PIN31": {
                "bit": 31,
                "description": "Status on whether PIN31 has met criteria set in PIN_CNF31.SENSE register. Write '1' to clear."
              }
            },
            "DETECTMODE": {
              "DETECTMODE": {
                "bit": 0,
                "description": "Select between default DETECT signal behavior and LDETECT mode"
              }
            },
            "DETECTMODE_SEC": {
              "DETECTMODE": {
                "bit": 0,
                "description": "Select between default DETECT signal behavior and LDETECT mode"
              }
            },
            "PIN_CNF[%s]": {
              "DIR": {
                "bit": 0,
                "description": "Pin direction. Same physical register as DIR register"
              },
              "INPUT": {
                "bit": 1,
                "description": "Connect or disconnect input buffer"
              },
              "PULL": {
                "bit": 2,
                "description": "Pull configuration",
                "width": 2
              },
              "DRIVE": {
                "bit": 8,
                "description": "Drive configuration",
                "width": 3
              },
              "SENSE": {
                "bit": 16,
                "description": "Pin sensing mechanism",
                "width": 2
              }
            }
          }
        }
      },
      "interrupts": {
        "count": 81,
        "vectors": [
          {
            "number": 0,
            "name": "Initial_SP"
          },
          {
            "number": 1,
            "name": "Reset_Handler"
          },
          {
            "number": 2,
            "name": "NMI_Handler"
          },
          {
            "number": 3,
            "name": "HardFault_Handler"
          },
          {
            "number": 4,
            "name": "MemManage_Handler"
          },
          {
            "number": 5,
            "name": "BusFault_Handler"
          },
          {
            "number": 6,
            "name": "UsageFault_Handler"
          },
          {
            "number": 11,
            "name": "SVC_Handler"
          },
          {
            "number": 12,
            "name": "DebugMon_Handler"
          },
          {
            "number": 14,
            "name": "PendSV_Handler"
          },
          {
            "number": 15,
            "name": "SysTick_Handler"
          },
          {
            "number": 19,
            "name": "SPU_IRQHandler"
          },
          {
            "number": 21,
            "name": "CLOCK_POWER_IRQHandler"
          },
          {
            "number": 24,
            "name": "UARTE0_SPIM0_SPIS0_TWIM0_TWIS0_IRQHandler"
          },
          {
            "number": 25,
            "name": "UARTE1_SPIM1_SPIS1_TWIM1_TWIS1_IRQHandler"
          },
          {
            "number": 26,
            "name": "UARTE2_SPIM2_SPIS2_TWIM2_TWIS2_IRQHandler"
          },
          {
            "number": 27,
            "name": "UARTE3_SPIM3_SPIS3_TWIM3_TWIS3_IRQHandler"
          },
          {
            "number": 29,
            "name": "GPIOTE0_IRQHandler"
          },
          {
            "number": 30,
            "name": "SAADC_IRQHandler"
          },
          {
            "number": 31,
            "name": "TIMER0_IRQHandler"
          },
          {
            "number": 32,
            "name": "TIMER1_IRQHandler"
          },
          {
            "number": 33,
            "name": "TIMER2_IRQHandler"
          },
          {
            "number": 36,
            "name": "RTC0_IRQHandler"
          },
          {
            "number": 37,
            "name": "RTC1_IRQHandler"
          },
          {
            "number": 40,
            "name": "WDT_IRQHandler"
          },
          {
            "number": 43,
            "name": "EGU0_IRQHandler"
          },
          {
            "number": 44,
            "name": "EGU1_IRQHandler"
          },
          {
            "number": 45,
            "name": "EGU2_IRQHandler"
          },
          {
            "number": 46,
            "name": "EGU3_IRQHandler"
          },
          {
            "number": 47,
            "name": "EGU4_IRQHandler"
          },
          {
            "number": 48,
            "name": "EGU5_IRQHandler"
          },
          {
            "number": 49,
            "name": "PWM0_IRQHandler"
          },
          {
            "number": 50,
            "name": "PWM1_IRQHandler"
          },
          {
            "number": 51,
            "name": "PWM2_IRQHandler"
          },
          {
            "number": 52,
            "name": "PWM3_IRQHandler"
          },
          {
            "number": 54,
            "name": "PDM_IRQHandler"
          },
          {
            "number": 56,
            "name": "I2S_IRQHandler"
          },
          {
            "number": 58,
            "name": "IPC_IRQHandler"
          },
          {
            "number": 60,
            "name": "FPU_IRQHandler"
          },
          {
            "number": 65,
            "name": "GPIOTE1_IRQHandler"
          },
          {
            "number": 73,
            "name": "KMU_IRQHandler"
          },
          {
            "number": 80,
            "name": "CRYPTOCELL_IRQHandler"
          }
        ]
      }
    }
  }
}