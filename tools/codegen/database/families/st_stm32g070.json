{
  "family": "STM32G0",
  "architecture": "arm-cortex-m0",
  "vendor": "Unknown",
  "mcus": {
    "STM32G070": {
      "flash": {
        "size_kb": 64,
        "base_address": "0x08000000",
        "page_size_kb": 1
      },
      "ram": {
        "size_kb": 20,
        "base_address": "0x20000000"
      },
      "peripherals": {
        "ADC": {
          "instances": [
            {
              "name": "ADC",
              "base": "0x40012400",
              "irq": 12
            }
          ],
          "registers": {
            "ADC_ISR": {
              "offset": "0x00",
              "size": 32,
              "description": "ADC interrupt and status register"
            },
            "ADC_IER": {
              "offset": "0x04",
              "size": 32,
              "description": "ADC interrupt enable register"
            },
            "ADC_CR": {
              "offset": "0x08",
              "size": 32,
              "description": "ADC control register"
            },
            "ADC_CFGR1": {
              "offset": "0x0C",
              "size": 32,
              "description": "ADC configuration register 1"
            },
            "ADC_CFGR2": {
              "offset": "0x10",
              "size": 32,
              "description": "ADC configuration register 2"
            },
            "ADC_SMPR": {
              "offset": "0x14",
              "size": 32,
              "description": "ADC sampling time register"
            },
            "ADC_AWD1TR": {
              "offset": "0x20",
              "size": 32,
              "description": "ADC watchdog threshold register"
            },
            "ADC_AWD2TR": {
              "offset": "0x24",
              "size": 32,
              "description": "ADC watchdog threshold register"
            },
            "ADC_CHSELR_0": {
              "offset": "0x28",
              "size": 32,
              "description": "ADC channel selection register [alternate]"
            },
            "ADC_CHSELR_1": {
              "offset": "0x28",
              "size": 32,
              "description": "channel selection register CHSELRMOD = 1 in\n            ADC_CFGR1"
            },
            "ADC_AWD3TR": {
              "offset": "0x2C",
              "size": 32,
              "description": "ADC watchdog threshold register"
            },
            "ADC_DR": {
              "offset": "0x40",
              "size": 32,
              "description": "ADC data register"
            },
            "ADC_AWD2CR": {
              "offset": "0xA0",
              "size": 32,
              "description": "ADC Analog Watchdog 2 Configuration register"
            },
            "ADC_AWD3CR": {
              "offset": "0xA4",
              "size": 32,
              "description": "ADC Analog Watchdog 3 Configuration register"
            },
            "ADC_CALFACT": {
              "offset": "0xB4",
              "size": 32,
              "description": "ADC Calibration factor"
            },
            "ADC_CCR": {
              "offset": "0x308",
              "size": 32,
              "description": "ADC common configuration register"
            }
          },
          "bits": {
            "ADC_ISR": {
              "ADRDY": {
                "bit": 0,
                "description": "ADC ready\nThis bit is set by hardware after the ADC has been enabled (ADEN=1) and when the ADC reaches a state where it is ready to accept conversion requests.\nIt is cleared by software writing 1 to it."
              },
              "EOSMP": {
                "bit": 1,
                "description": "End of sampling flag\nThis bit is set by hardware during the conversion, at the end of the sampling phase.It is cleared by software by programming it to '1\u00e2\u0080\u0099."
              },
              "EOC": {
                "bit": 2,
                "description": "End of conversion flag\nThis bit is set by hardware at the end of each conversion of a channel when a new data result is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register."
              },
              "EOS": {
                "bit": 3,
                "description": "End of sequence flag\nThis bit is set by hardware at the end of the conversion of a sequence of channels selected by the CHSEL bits. It is cleared by software writing 1 to it."
              },
              "OVR": {
                "bit": 4,
                "description": "ADC overrun\nThis bit is set by hardware when an overrun occurs, meaning that a new conversion has complete while the EOC flag was already set. It is cleared by software writing 1 to it."
              },
              "AWD1": {
                "bit": 7,
                "description": "Analog watchdog 1 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_TR1 and ADC_HR1 registers. It is cleared by software by programming it to 1."
              },
              "AWD2": {
                "bit": 8,
                "description": "Analog watchdog 2 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD2TR and ADC_AWD2TR registers. It is cleared by software programming it it."
              },
              "AWD3": {
                "bit": 9,
                "description": "Analog watchdog 3 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD3TR and ADC_AWD3TR registers. It is cleared by software by programming it to 1."
              },
              "EOCAL": {
                "bit": 11,
                "description": "End Of Calibration flag\nThis bit is set by hardware when calibration is complete. It is cleared by software writing 1 to it."
              },
              "CCRDY": {
                "bit": 13,
                "description": "Channel Configuration Ready flag\nThis flag bit is set by hardware when the channel configuration is applied after programming to ADC_CHSELR register or changing CHSELRMOD or SCANDIR. It is cleared by software by programming it to it.\nNote: When the software configures the channels (by programming ADC_CHSELR or changing CHSELRMOD or SCANDIR), it must wait until the CCRDY flag rises before configuring again or starting conversions, otherwise the new configuration (or the START bit) is ignored. Once the flag is asserted, if the software needs to configure again the channels, it must clear the CCRDY flag before proceeding with a new configuration."
              }
            },
            "ADC_IER": {
              "ADRDYIE": {
                "bit": 0,
                "description": "ADC ready interrupt enable\nThis bit is set and cleared by software to enable/disable the ADC Ready interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "EOSMPIE": {
                "bit": 1,
                "description": "End of sampling flag interrupt enable\nThis bit is set and cleared by software to enable/disable the end of the sampling phase interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "EOCIE": {
                "bit": 2,
                "description": "End of conversion interrupt enable\nThis bit is set and cleared by software to enable/disable the end of conversion interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "EOSIE": {
                "bit": 3,
                "description": "End of conversion sequence interrupt enable\nThis bit is set and cleared by software to enable/disable the end of sequence of conversions interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "OVRIE": {
                "bit": 4,
                "description": "Overrun interrupt enable\nThis bit is set and cleared by software to enable/disable the overrun interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AWD1IE": {
                "bit": 7,
                "description": "Analog watchdog 1 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AWD2IE": {
                "bit": 8,
                "description": "Analog watchdog 2 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AWD3IE": {
                "bit": 9,
                "description": "Analog watchdog 3 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "EOCALIE": {
                "bit": 11,
                "description": "End of calibration interrupt enable\nThis bit is set and cleared by software to enable/disable the end of calibration interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "CCRDYIE": {
                "bit": 13,
                "description": "Channel Configuration Ready Interrupt enable\nThis bit is set and cleared by software to enable/disable the channel configuration ready interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              }
            },
            "ADC_CR": {
              "ADEN": {
                "bit": 0,
                "description": "ADC enable command\nThis bit is set by software to enable the ADC. The ADC is effectively ready to operate once the ADRDY flag has been set.\nIt is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command.\nNote: The software is allowed to set ADEN only when all bits of ADC_CR registers are 0 (ADCAL=0, ADSTP=0, ADSTART=0, ADDIS=0 and ADEN=0)"
              },
              "ADDIS": {
                "bit": 1,
                "description": "ADC disable command\nThis bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state).\nIt is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time).\nNote: Setting ADDIS to '1\u00e2\u0080\u0099 is only effective when ADEN=1 and ADSTART=0 (which ensures that no conversion is ongoing)"
              },
              "ADSTART": {
                "bit": 2,
                "description": "ADC start conversion command\nThis bit is set by software to start ADC conversion. Depending on the EXTEN [1:0] configuration bits, a conversion either starts immediately (software trigger configuration) or once a hardware trigger event occurs (hardware trigger configuration).\nIt is cleared by hardware:\nIn single conversion mode (CONT=0, DISCEN=0), when software trigger is selected (EXTEN=00): at the assertion of the end of Conversion Sequence (EOS) flag.\nIn discontinuous conversion mode(CONT=0, DISCEN=1), when the software trigger is selected (EXTEN=00): at the assertion of the end of Conversion (EOC) flag.\nIn all other cases: after the execution of the ADSTP command, at the same time as the ADSTP bit is cleared by hardware.\nNote: The software is allowed to set ADSTART only when ADEN=1 and ADDIS=0 (ADC is enabled and there is no pending request to disable the ADC).\nAfter writing to ADC_CHSELR register or changing CHSELRMOD or SCANDIRW, it is mandatory to wait until CCRDY flag is asserted before setting ADSTART, otherwise, the value written to ADSTART is ignored."
              },
              "ADSTP": {
                "bit": 4,
                "description": "ADC stop conversion command\nThis bit is set by software to stop and discard an ongoing conversion (ADSTP Command).\nIt is cleared by hardware when the conversion is effectively discarded and the ADC is ready to accept a new start conversion command.\nNote: Setting ADSTP to '1\u00e2\u0080\u0099 is only effective when ADSTART=1 and ADDIS=0 (ADC is enabled and may be converting and there is no pending request to disable the ADC)"
              },
              "ADVREGEN": {
                "bit": 28,
                "description": "ADC Voltage Regulator Enable\nThis bit is set by software, to enable the ADC internal voltage regulator. The voltage regulator output is available after tADCVREG_SETUP.\nIt is cleared by software to disable the voltage regulator. It can be cleared only if ADEN is et to 0.\nNote: The software is allowed to program this bit field only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0)."
              },
              "ADCAL": {
                "bit": 31,
                "description": "ADC calibration\nThis bit is set by software to start the calibration of the ADC.\nIt is cleared by hardware after calibration is complete.\nNote: The software is allowed to set ADCAL only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).\nThe software is allowed to update the calibration factor by writing ADC_CALFACT only when ADEN=1 and ADSTART=0 (ADC enabled and no conversion is ongoing)."
              }
            },
            "ADC_CFGR1": {
              "DMAEN": {
                "bit": 0,
                "description": "Direct memory access enable\nThis bit is set and cleared by software to enable the generation of DMA requests. This allows the DMA controller to be used to manage automatically the converted data. For more details, refer to .\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "DMACFG": {
                "bit": 1,
                "description": "Direct memory access configuration\nThis bit is set and cleared by software to select between two DMA modes of operation and is effective only when DMAEN=1.\nFor more details, refer to page351\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "SCANDIR": {
                "bit": 2,
                "description": "Scan sequence direction\nThis bit is set and cleared by software to select the direction in which the channels is scanned in the sequence. It is effective only if CHSELMOD bit is cleared to 0.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "RES": {
                "bit": 3,
                "description": "Data resolution\nThese bits are written by software to select the resolution of the conversion.\nNote: The software is allowed to write these bits only when ADEN=0.",
                "width": 2
              },
              "ALIGN": {
                "bit": 5,
                "description": "Data alignment\nThis bit is set and cleared by software to select right or left alignment. Refer to Data alignment and resolution (oversampling disabled: OVSE = 0) on page349\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "EXTSEL": {
                "bit": 6,
                "description": "External trigger selection\nThese bits select the external event used to trigger the start of conversion (refer to External triggers for details):\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).",
                "width": 3
              },
              "EXTEN": {
                "bit": 10,
                "description": "External trigger enable and polarity selection\nThese bits are set and cleared by software to select the external trigger polarity and enable the trigger.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).",
                "width": 2
              },
              "OVRMOD": {
                "bit": 12,
                "description": "Overrun management mode\nThis bit is set and cleared by software and configure the way data overruns are managed.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "CONT": {
                "bit": 13,
                "description": "Single / continuous conversion mode\nThis bit is set and cleared by software. If it is set, conversion takes place continuously until it is cleared.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN=1 and CONT=1.\nThe software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "WAIT": {
                "bit": 14,
                "description": "Wait conversion mode\nThis bit is set and cleared by software to enable/disable wait conversion mode..\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AUTOFF": {
                "bit": 15,
                "description": "Auto-off mode\nThis bit is set and cleared by software to enable/disable auto-off mode..\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "DISCEN": {
                "bit": 16,
                "description": "Discontinuous mode\nThis bit is set and cleared by software to enable/disable discontinuous mode.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN=1 and CONT=1.\nThe software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "CHSELRMOD": {
                "bit": 21,
                "description": "Mode selection of the ADC_CHSELR register\nThis bit is set and cleared by software to control the ADC_CHSELR feature:\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "AWD1SGL": {
                "bit": 22,
                "description": "Enable the watchdog on a single channel or on all channels\nThis bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWDCH[4:0] bits or on all the channels\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AWD1EN": {
                "bit": 23,
                "description": "Analog watchdog enable\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "AWD1CH": {
                "bit": 26,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog.\n.....\nOthers: Reserved\nNote: The channel selected by the AWDCH[4:0] bits must be also set into the CHSELR register.\nThe software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).",
                "width": 5
              }
            },
            "ADC_CFGR2": {
              "OVSE": {
                "bit": 0,
                "description": "Oversampler Enable\nThis bit is set and cleared by software.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "OVSR": {
                "bit": 2,
                "description": "Oversampling ratio\nThis bit filed defines the number of oversampling ratio.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "OVSS": {
                "bit": 5,
                "description": "Oversampling shift\nThis bit is set and cleared by software.\nOthers: Reserved\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "TOVS": {
                "bit": 9,
                "description": "Triggered Oversampling\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "LFTRIG": {
                "bit": 29,
                "description": "Low frequency trigger mode enable\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."
              },
              "CKMODE": {
                "bit": 30,
                "description": "ADC clock mode\nThese bits are set and cleared by software to define how the analog ADC is clocked:\nIn all synchronous clock modes, there is no jitter in the delay from a timer trigger to the start of a conversion.\nNote: The software is allowed to write these bits only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).",
                "width": 2
              }
            },
            "ADC_SMPR": {
              "SMP1": {
                "bit": 0,
                "description": "Sampling time selection 1\nThese bits are written by software to select the sampling time that applies to all channels.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP2": {
                "bit": 4,
                "description": "Sampling time selection 2\nThese bits are written by software to select the sampling time that applies to all channels.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMPSEL0": {
                "bit": 8,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL1": {
                "bit": 9,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL2": {
                "bit": 10,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL3": {
                "bit": 11,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL4": {
                "bit": 12,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL5": {
                "bit": 13,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL6": {
                "bit": 14,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL7": {
                "bit": 15,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL8": {
                "bit": 16,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL9": {
                "bit": 17,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL10": {
                "bit": 18,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL11": {
                "bit": 19,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL12": {
                "bit": 20,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL13": {
                "bit": 21,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL14": {
                "bit": 22,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL15": {
                "bit": 23,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL16": {
                "bit": 24,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL17": {
                "bit": 25,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "SMPSEL18": {
                "bit": 26,
                "description": "Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_AWD1TR": {
              "LT1": {
                "bit": 0,
                "description": "Analog watchdog 1 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              },
              "HT1": {
                "bit": 16,
                "description": "Analog watchdog 1 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              }
            },
            "ADC_AWD2TR": {
              "LT2": {
                "bit": 0,
                "description": "Analog watchdog 2 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              },
              "HT2": {
                "bit": 16,
                "description": "Analog watchdog 2 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              }
            },
            "ADC_CHSELR_0": {
              "CHSEL0": {
                "bit": 0,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL1": {
                "bit": 1,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL2": {
                "bit": 2,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL3": {
                "bit": 3,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL4": {
                "bit": 4,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL5": {
                "bit": 5,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL6": {
                "bit": 6,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL7": {
                "bit": 7,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL8": {
                "bit": 8,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL9": {
                "bit": 9,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL10": {
                "bit": 10,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL11": {
                "bit": 11,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL12": {
                "bit": 12,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL13": {
                "bit": 13,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL14": {
                "bit": 14,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL15": {
                "bit": 15,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL16": {
                "bit": 16,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL17": {
                "bit": 17,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              },
              "CHSEL18": {
                "bit": 18,
                "description": "Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).\nIf CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored."
              }
            },
            "ADC_CHSELR_1": {
              "SQ1": {
                "bit": 0,
                "description": "1st conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ2": {
                "bit": 4,
                "description": "2nd conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ3": {
                "bit": 8,
                "description": "3rd conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ4": {
                "bit": 12,
                "description": "4th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ5": {
                "bit": 16,
                "description": "5th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ6": {
                "bit": 20,
                "description": "6th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ7": {
                "bit": 24,
                "description": "7th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\nRefer to SQ8[3:0] for a definition of channel selection.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "SQ8": {
                "bit": 28,
                "description": "8th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates the end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored.\n...\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).",
                "width": 4
              }
            },
            "ADC_AWD3TR": {
              "LT3": {
                "bit": 0,
                "description": "Analog watchdog 3lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              },
              "HT3": {
                "bit": 16,
                "description": "Analog watchdog 3 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355.",
                "width": 12
              }
            },
            "ADC_DR": {
              "DATA": {
                "bit": 0,
                "description": "Converted data\nThese bits are read-only. They contain the conversion result from the last converted channel. The data are left- or right-aligned as shown in OVSE = 0) on page349.\nJust after a calibration is complete, DATA[6:0] contains the calibration factor.",
                "width": 16
              }
            },
            "ADC_AWD2CR": {
              "AWD2CH0": {
                "bit": 0,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH1": {
                "bit": 1,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH2": {
                "bit": 2,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH3": {
                "bit": 3,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH4": {
                "bit": 4,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH5": {
                "bit": 5,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH6": {
                "bit": 6,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH7": {
                "bit": 7,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH8": {
                "bit": 8,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH9": {
                "bit": 9,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH10": {
                "bit": 10,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH11": {
                "bit": 11,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH12": {
                "bit": 12,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH13": {
                "bit": 13,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH14": {
                "bit": 14,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH15": {
                "bit": 15,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH16": {
                "bit": 16,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH17": {
                "bit": 17,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD2CH18": {
                "bit": 18,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_AWD3CR": {
              "AWD3CH0": {
                "bit": 0,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH1": {
                "bit": 1,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH2": {
                "bit": 2,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH3": {
                "bit": 3,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH4": {
                "bit": 4,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH5": {
                "bit": 5,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH6": {
                "bit": 6,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH7": {
                "bit": 7,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH8": {
                "bit": 8,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH9": {
                "bit": 9,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH10": {
                "bit": 10,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH11": {
                "bit": 11,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH12": {
                "bit": 12,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH13": {
                "bit": 13,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH14": {
                "bit": 14,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH15": {
                "bit": 15,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH16": {
                "bit": 16,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH17": {
                "bit": 17,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "AWD3CH18": {
                "bit": 18,
                "description": "Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_CALFACT": {
              "CALFACT": {
                "bit": 0,
                "description": "Calibration factor\nThese bits are written by hardware or by software.\nOnce a calibration is complete,they are updated by hardware with the calibration factors.\nSoftware can write these bits with a new calibration factor. If the new calibration factor is different from the current one stored into the analog ADC, it is then applied once a new calibration is launched.\nJust after a calibration is complete, DATA[6:0] contains the calibration factor.\nNote: Software can write these bits only when ADEN=1 (ADC is enabled and no calibration is ongoing and no conversion is ongoing). Refer to SQ8[3:0] for a definition of channel selection.",
                "width": 7
              }
            },
            "ADC_CCR": {
              "PRESC": {
                "bit": 18,
                "description": "ADC prescaler\nSet and cleared by software to select the frequency of the clock to the ADC.\nOther: Reserved\nNote: Software is allowed to write these bits only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0).",
                "width": 4
              },
              "VREFEN": {
                "bit": 22,
                "description": "VREFINT enable\nThis bit is set and cleared by software to enable/disable the VREFINT.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "TSEN": {
                "bit": 23,
                "description": "Temperature sensor enable\nThis bit is set and cleared by software to enable/disable the temperature sensor.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."
              },
              "VBATEN": {
                "bit": 24,
                "description": "VBAT enable\nThis bit is set and cleared by software to enable/disable the VBAT channel.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)"
              }
            }
          }
        },
        "WDG": {
          "instances": [
            {
              "name": "IWDG",
              "base": "0x40003000"
            },
            {
              "name": "WWDG",
              "base": "0x40002C00",
              "irq": 0
            }
          ],
          "registers": {
            "KR": {
              "offset": "0x00",
              "size": 32,
              "description": "Key register"
            },
            "PR": {
              "offset": "0x04",
              "size": 32,
              "description": "Prescaler register"
            },
            "RLR": {
              "offset": "0x08",
              "size": 32,
              "description": "Reload register"
            },
            "SR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Status register"
            },
            "WINR": {
              "offset": "0x10",
              "size": 32,
              "description": "Window register"
            },
            "HWCFGR": {
              "offset": "0x3F0",
              "size": 32,
              "description": "hardware configuration\n          register"
            },
            "VERR": {
              "offset": "0x3F4",
              "size": 32,
              "description": "EXTI IP Version register"
            },
            "IPIDR": {
              "offset": "0x3F8",
              "size": 32,
              "description": "EXTI Identification register"
            },
            "SIDR": {
              "offset": "0x3FC",
              "size": 32,
              "description": "EXTI Size ID register"
            }
          },
          "bits": {
            "KR": {
              "KEY": {
                "bit": 0,
                "description": "Key value (write only, read\n              0x0000)",
                "width": 16
              }
            },
            "PR": {
              "PR": {
                "bit": 0,
                "description": "Prescaler divider",
                "width": 3
              }
            },
            "RLR": {
              "RL": {
                "bit": 0,
                "description": "Watchdog counter reload\n              value",
                "width": 12
              }
            },
            "SR": {
              "WVU": {
                "bit": 2,
                "description": "Watchdog counter window value\n              update"
              },
              "RVU": {
                "bit": 1,
                "description": "Watchdog counter reload value\n              update"
              },
              "PVU": {
                "bit": 0,
                "description": "Watchdog prescaler value\n              update"
              }
            },
            "WINR": {
              "WIN": {
                "bit": 0,
                "description": "Watchdog counter window\n              value",
                "width": 12
              }
            },
            "HWCFGR": {
              "WINDOW": {
                "bit": 0,
                "description": "Support of Window function",
                "width": 4
              },
              "PR_DEFAULT": {
                "bit": 4,
                "description": "Prescaler default value",
                "width": 4
              }
            },
            "VERR": {
              "MINREV": {
                "bit": 0,
                "description": "Minor Revision number",
                "width": 4
              },
              "MAJREV": {
                "bit": 4,
                "description": "Major Revision number",
                "width": 4
              }
            },
            "IPIDR": {
              "IPID": {
                "bit": 0,
                "description": "IP Identification",
                "width": 32
              }
            },
            "SIDR": {
              "SID": {
                "bit": 0,
                "description": "Size Identification",
                "width": 32
              }
            }
          }
        },
        "FLASH": {
          "instances": [
            {
              "name": "FLASH",
              "base": "0x40022000",
              "irq": 3
            }
          ],
          "registers": {
            "ACR": {
              "offset": "0x00",
              "size": 32,
              "description": "Access control register"
            },
            "KEYR": {
              "offset": "0x08",
              "size": 32,
              "description": "Flash key register"
            },
            "OPTKEYR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Option byte key register"
            },
            "SR": {
              "offset": "0x10",
              "size": 32,
              "description": "Status register"
            },
            "CR": {
              "offset": "0x14",
              "size": 32,
              "description": "Flash control register"
            },
            "ECCR": {
              "offset": "0x18",
              "size": 32,
              "description": "Flash ECC register"
            },
            "OPTR": {
              "offset": "0x20",
              "size": 32,
              "description": "Flash option register"
            },
            "WRP1AR": {
              "offset": "0x2C",
              "size": 32,
              "description": "Flash WRP area A address\n          register"
            },
            "WRP1BR": {
              "offset": "0x30",
              "size": 32,
              "description": "Flash WRP area B address\n          register"
            },
            "WRP2AR": {
              "offset": "0x4C",
              "size": 32,
              "description": "FLASH WRP2 area A address register"
            },
            "WRP2BR": {
              "offset": "0x50",
              "size": 32,
              "description": "FLASH WRP2 area B address register"
            }
          },
          "bits": {
            "ACR": {
              "LATENCY": {
                "bit": 0,
                "description": "Latency",
                "width": 3
              },
              "PRFTEN": {
                "bit": 8,
                "description": "Prefetch enable"
              },
              "ICEN": {
                "bit": 9,
                "description": "Instruction cache enable"
              },
              "ICRST": {
                "bit": 11,
                "description": "Instruction cache reset"
              },
              "EMPTY": {
                "bit": 16,
                "description": "Flash User area empty"
              }
            },
            "KEYR": {
              "KEYR": {
                "bit": 0,
                "description": "KEYR",
                "width": 32
              }
            },
            "OPTKEYR": {
              "OPTKEYR": {
                "bit": 0,
                "description": "Option byte key",
                "width": 32
              }
            },
            "SR": {
              "EOP": {
                "bit": 0,
                "description": "End of operation"
              },
              "OPERR": {
                "bit": 1,
                "description": "Operation error"
              },
              "PROGERR": {
                "bit": 3,
                "description": "Programming error"
              },
              "WRPERR": {
                "bit": 4,
                "description": "Write protected error"
              },
              "PGAERR": {
                "bit": 5,
                "description": "Programming alignment\n              error"
              },
              "SIZERR": {
                "bit": 6,
                "description": "Size error"
              },
              "PGSERR": {
                "bit": 7,
                "description": "Programming sequence error"
              },
              "MISERR": {
                "bit": 8,
                "description": "Fast programming data miss\n              error"
              },
              "FASTERR": {
                "bit": 9,
                "description": "Fast programming error"
              },
              "OPTVERR": {
                "bit": 15,
                "description": "Option and Engineering bits loading\n              validity error"
              },
              "BSY1": {
                "bit": 16,
                "description": "BSY1"
              },
              "BSY2": {
                "bit": 17,
                "description": "BSY2"
              },
              "CFGBSY": {
                "bit": 18,
                "description": "Programming or erase configuration\n              busy."
              }
            },
            "CR": {
              "PG": {
                "bit": 0,
                "description": "Programming"
              },
              "PER": {
                "bit": 1,
                "description": "Page erase"
              },
              "MER1": {
                "bit": 2,
                "description": "Mass erase"
              },
              "PNB": {
                "bit": 3,
                "description": "Page number",
                "width": 10
              },
              "BKER": {
                "bit": 13,
                "description": "BKER"
              },
              "MER2": {
                "bit": 15,
                "description": "MER2"
              },
              "STRT": {
                "bit": 16,
                "description": "Start"
              },
              "OPTSTRT": {
                "bit": 17,
                "description": "Options modification start"
              },
              "FSTPG": {
                "bit": 18,
                "description": "Fast programming"
              },
              "EOPIE": {
                "bit": 24,
                "description": "End of operation interrupt\n              enable"
              },
              "ERRIE": {
                "bit": 25,
                "description": "Error interrupt enable"
              },
              "OBL_LAUNCH": {
                "bit": 27,
                "description": "Force the option byte\n              loading"
              },
              "OPTLOCK": {
                "bit": 30,
                "description": "Options Lock"
              },
              "LOCK": {
                "bit": 31,
                "description": "FLASH_CR Lock"
              }
            },
            "ECCR": {
              "ADDR_ECC": {
                "bit": 0,
                "description": "ECC fail address",
                "width": 14
              },
              "SYSF_ECC": {
                "bit": 20,
                "description": "ECC fail for Corrected ECC Error or\n              Double ECC Error in info block"
              },
              "ECCIE": {
                "bit": 24,
                "description": "ECC correction interrupt\n              enable"
              },
              "ECCC": {
                "bit": 30,
                "description": "ECC correction"
              },
              "ECCD": {
                "bit": 31,
                "description": "ECC detection"
              }
            },
            "OPTR": {
              "RDP": {
                "bit": 0,
                "description": "Read protection level",
                "width": 8
              },
              "nRST_STOP": {
                "bit": 13,
                "description": "nRST_STOP"
              },
              "nRST_STDBY": {
                "bit": 14,
                "description": "nRST_STDBY"
              },
              "IDWG_SW": {
                "bit": 16,
                "description": "Independent watchdog\n              selection"
              },
              "IWDG_STOP": {
                "bit": 17,
                "description": "Independent watchdog counter freeze in\n              Stop mode"
              },
              "IWDG_STDBY": {
                "bit": 18,
                "description": "Independent watchdog counter freeze in\n              Standby mode"
              },
              "WWDG_SW": {
                "bit": 19,
                "description": "Window watchdog selection"
              },
              "nSWAP_BANK": {
                "bit": 20,
                "description": "nSWAP_BANK"
              },
              "DUAL_BANK": {
                "bit": 21,
                "description": "DUAL_BANK"
              },
              "RAM_PARITY_CHECK": {
                "bit": 22,
                "description": "SRAM parity check control"
              },
              "nBOOT_SEL": {
                "bit": 24,
                "description": "nBOOT_SEL"
              },
              "nBOOT1": {
                "bit": 25,
                "description": "Boot configuration"
              },
              "nBOOT0": {
                "bit": 26,
                "description": "nBOOT0 option bit"
              }
            },
            "WRP1AR": {
              "WRP1A_STRT": {
                "bit": 0,
                "description": "WRP area A start offset",
                "width": 7
              },
              "WRP1A_END": {
                "bit": 16,
                "description": "WRP area A end offset",
                "width": 7
              }
            },
            "WRP1BR": {
              "WRP1B_STRT": {
                "bit": 0,
                "description": "WRP area B start offset",
                "width": 7
              },
              "WRP1B_END": {
                "bit": 16,
                "description": "WRP area B end offset",
                "width": 7
              }
            },
            "WRP2AR": {
              "WRP2A_STRT": {
                "bit": 0,
                "description": "WRP2A_STRT",
                "width": 7
              },
              "WRP2A_END": {
                "bit": 16,
                "description": "WRP2A_END",
                "width": 7
              }
            },
            "WRP2BR": {
              "WRP2B_STRT": {
                "bit": 0,
                "description": "WRP2B_STRT",
                "width": 7
              },
              "WRP2B_END": {
                "bit": 16,
                "description": "WRP2B_END",
                "width": 7
              }
            }
          }
        },
        "DBG": {
          "instances": [
            {
              "name": "DBG",
              "base": "0x40015800"
            }
          ],
          "registers": {
            "IDCODE": {
              "offset": "0x00",
              "size": 32,
              "description": "MCU Device ID Code Register"
            },
            "CR": {
              "offset": "0x04",
              "size": 32,
              "description": "Debug MCU Configuration\n          Register"
            },
            "APB_FZ1": {
              "offset": "0x08",
              "size": 32,
              "description": "DBG APB freeze register 1"
            },
            "APB_FZ2": {
              "offset": "0x0C",
              "size": 32,
              "description": "DBG APB freeze register 2"
            }
          },
          "bits": {
            "IDCODE": {
              "DEV_ID": {
                "bit": 0,
                "description": "Device Identifier",
                "width": 16
              },
              "REV_ID": {
                "bit": 16,
                "description": "Revision Identifier",
                "width": 16
              }
            },
            "CR": {
              "DBG_STOP": {
                "bit": 1,
                "description": "Debug Stop Mode"
              },
              "DBG_STANDBY": {
                "bit": 2,
                "description": "Debug Standby Mode"
              }
            },
            "APB_FZ1": {
              "DBG_TIMER2_STOP": {
                "bit": 0,
                "description": "Debug Timer 2 stopped when Core is\n              halted"
              },
              "DBG_TIM3_STOP": {
                "bit": 1,
                "description": "TIM3 counter stopped when core is\n              halted"
              },
              "DBG_TIMER6_STOP": {
                "bit": 4,
                "description": "Debug Timer 6 stopped when Core is\n              halted"
              },
              "DBG_TIM7_STOP": {
                "bit": 5,
                "description": "TIM7 counter stopped when core is\n              halted"
              },
              "DBG_RTC_STOP": {
                "bit": 10,
                "description": "Debug RTC stopped when Core is\n              halted"
              },
              "DBG_WWDG_STOP": {
                "bit": 11,
                "description": "Debug Window Wachdog stopped when Core\n              is halted"
              },
              "DBG_IWDG_STOP": {
                "bit": 12,
                "description": "Debug Independent Wachdog stopped when\n              Core is halted"
              },
              "DBG_I2C1_STOP": {
                "bit": 21,
                "description": "I2C1 SMBUS timeout mode stopped when\n              core is halted"
              },
              "DBG_LPTIM2_STOP": {
                "bit": 30,
                "description": "Clocking of LPTIMER2 counter when the\n              core is halted"
              },
              "DBG_LPTIM1_STOP": {
                "bit": 31,
                "description": "Clocking of LPTIMER1 counter when the\n              core is halted"
              }
            },
            "APB_FZ2": {
              "DBG_TIM1_STOP": {
                "bit": 11,
                "description": "DBG_TIM1_STOP"
              },
              "DBG_TIM14_STOP": {
                "bit": 15,
                "description": "DBG_TIM14_STOP"
              },
              "DBG_TIM15_STOP": {
                "bit": 16,
                "description": "DBG_TIM15_STOP"
              },
              "DBG_TIM16_STOP": {
                "bit": 17,
                "description": "DBG_TIM16_STOP"
              },
              "DBG_TIM17_STOP": {
                "bit": 18,
                "description": "DBG_TIM17_STOP"
              }
            }
          }
        },
        "RCC": {
          "instances": [
            {
              "name": "RCC",
              "base": "0x40021000",
              "irq": 4
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "Clock control register"
            },
            "ICSCR": {
              "offset": "0x04",
              "size": 32,
              "description": "Internal clock sources calibration\n          register"
            },
            "CFGR": {
              "offset": "0x08",
              "size": 32,
              "description": "Clock configuration register"
            },
            "PLLSYSCFGR": {
              "offset": "0x0C",
              "size": 32,
              "description": "PLL configuration register"
            },
            "CIER": {
              "offset": "0x18",
              "size": 32,
              "description": "Clock interrupt enable\n          register"
            },
            "CIFR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Clock interrupt flag register"
            },
            "CICR": {
              "offset": "0x20",
              "size": 32,
              "description": "Clock interrupt clear register"
            },
            "IOPRSTR": {
              "offset": "0x24",
              "size": 32,
              "description": "I/O port reset register"
            },
            "AHBRSTR": {
              "offset": "0x28",
              "size": 32,
              "description": "AHB peripheral reset register"
            },
            "APBRSTR1": {
              "offset": "0x2C",
              "size": 32,
              "description": "APB peripheral reset register\n          1"
            },
            "APBRSTR2": {
              "offset": "0x30",
              "size": 32,
              "description": "APB peripheral reset register\n          2"
            },
            "IOPENR": {
              "offset": "0x34",
              "size": 32,
              "description": "GPIO clock enable register"
            },
            "AHBENR": {
              "offset": "0x38",
              "size": 32,
              "description": "AHB peripheral clock enable\n          register"
            },
            "APBENR1": {
              "offset": "0x3C",
              "size": 32,
              "description": "APB peripheral clock enable register\n          1"
            },
            "APBENR2": {
              "offset": "0x40",
              "size": 32,
              "description": "APB peripheral clock enable register\n          2"
            },
            "IOPSMENR": {
              "offset": "0x44",
              "size": 32,
              "description": "GPIO in Sleep mode clock enable\n          register"
            },
            "AHBSMENR": {
              "offset": "0x48",
              "size": 32,
              "description": "AHB peripheral clock enable in Sleep mode\n          register"
            },
            "APBSMENR1": {
              "offset": "0x4C",
              "size": 32,
              "description": "APB peripheral clock enable in Sleep mode\n          register 1"
            },
            "APBSMENR2": {
              "offset": "0x50",
              "size": 32,
              "description": "APB peripheral clock enable in Sleep mode\n          register 2"
            },
            "CCIPR": {
              "offset": "0x54",
              "size": 32,
              "description": "Peripherals independent clock configuration\n          register"
            },
            "CCIPR2": {
              "offset": "0x58",
              "size": 32,
              "description": "Peripherals independent clock configuration register 2"
            },
            "BDCR": {
              "offset": "0x5C",
              "size": 32,
              "description": "RTC domain control register"
            },
            "CSR": {
              "offset": "0x60",
              "size": 32,
              "description": "Control/status register"
            }
          },
          "bits": {
            "CR": {
              "HSION": {
                "bit": 8,
                "description": "HSI16 clock enable"
              },
              "HSIKERON": {
                "bit": 9,
                "description": "HSI16 always enable for peripheral\n              kernels"
              },
              "HSIRDY": {
                "bit": 10,
                "description": "HSI16 clock ready flag"
              },
              "HSIDIV": {
                "bit": 11,
                "description": "HSI16 clock division\n              factor",
                "width": 3
              },
              "HSEON": {
                "bit": 16,
                "description": "HSE clock enable"
              },
              "HSERDY": {
                "bit": 17,
                "description": "HSE clock ready flag"
              },
              "HSEBYP": {
                "bit": 18,
                "description": "HSE crystal oscillator\n              bypass"
              },
              "CSSON": {
                "bit": 19,
                "description": "Clock security system\n              enable"
              },
              "PLLON": {
                "bit": 24,
                "description": "PLL enable"
              },
              "PLLRDY": {
                "bit": 25,
                "description": "PLL clock ready flag"
              }
            },
            "ICSCR": {
              "HSICAL": {
                "bit": 0,
                "description": "HSI16 clock calibration",
                "width": 8
              },
              "HSITRIM": {
                "bit": 8,
                "description": "HSI16 clock trimming",
                "width": 7
              }
            },
            "CFGR": {
              "MCOPRE": {
                "bit": 28,
                "description": "Microcontroller clock output\n              prescaler",
                "width": 4
              },
              "MCOSEL": {
                "bit": 24,
                "description": "Microcontroller clock\n              output",
                "width": 4
              },
              "MCO2PRE": {
                "bit": 20,
                "description": "MCO2PRE",
                "width": 4
              },
              "MCO2SEL": {
                "bit": 16,
                "description": "MCO2SEL",
                "width": 4
              },
              "PPRE": {
                "bit": 12,
                "description": "APB prescaler",
                "width": 3
              },
              "HPRE": {
                "bit": 8,
                "description": "AHB prescaler",
                "width": 4
              },
              "SWS": {
                "bit": 3,
                "description": "System clock switch status",
                "width": 3
              },
              "SW": {
                "bit": 0,
                "description": "System clock switch",
                "width": 3
              }
            },
            "PLLSYSCFGR": {
              "PLLSRC": {
                "bit": 0,
                "description": "PLL input clock source",
                "width": 2
              },
              "PLLM": {
                "bit": 4,
                "description": "Division factor M of the PLL input clock\n              divider",
                "width": 3
              },
              "PLLN": {
                "bit": 8,
                "description": "PLL frequency multiplication factor\n              N",
                "width": 8
              },
              "PLLPEN": {
                "bit": 16,
                "description": "PLLPCLK clock output\n              enable"
              },
              "PLLP": {
                "bit": 17,
                "description": "PLL VCO division factor P for PLLPCLK\n              clock output",
                "width": 5
              },
              "PLLQEN": {
                "bit": 24,
                "description": "PLLQCLK clock output\n              enable"
              },
              "PLLQ": {
                "bit": 25,
                "description": "PLL VCO division factor Q for PLLQCLK\n              clock output",
                "width": 3
              },
              "PLLREN": {
                "bit": 28,
                "description": "PLLRCLK clock output\n              enable"
              },
              "PLLR": {
                "bit": 29,
                "description": "PLL VCO division factor R for PLLRCLK\n              clock output",
                "width": 3
              }
            },
            "CIER": {
              "LSIRDYIE": {
                "bit": 0,
                "description": "LSI ready interrupt enable"
              },
              "LSERDYIE": {
                "bit": 1,
                "description": "LSE ready interrupt enable"
              },
              "HSIRDYIE": {
                "bit": 3,
                "description": "HSI ready interrupt enable"
              },
              "HSERDYIE": {
                "bit": 4,
                "description": "HSE ready interrupt enable"
              },
              "PLLSYSRDYIE": {
                "bit": 5,
                "description": "PLL ready interrupt enable"
              }
            },
            "CIFR": {
              "LSIRDYF": {
                "bit": 0,
                "description": "LSI ready interrupt flag"
              },
              "LSERDYF": {
                "bit": 1,
                "description": "LSE ready interrupt flag"
              },
              "HSIRDYF": {
                "bit": 3,
                "description": "HSI ready interrupt flag"
              },
              "HSERDYF": {
                "bit": 4,
                "description": "HSE ready interrupt flag"
              },
              "PLLSYSRDYF": {
                "bit": 5,
                "description": "PLL ready interrupt flag"
              },
              "CSSF": {
                "bit": 8,
                "description": "Clock security system interrupt\n              flag"
              },
              "LSECSSF": {
                "bit": 9,
                "description": "LSE Clock security system interrupt\n              flag"
              }
            },
            "CICR": {
              "LSIRDYC": {
                "bit": 0,
                "description": "LSI ready interrupt clear"
              },
              "LSERDYC": {
                "bit": 1,
                "description": "LSE ready interrupt clear"
              },
              "HSIRDYC": {
                "bit": 3,
                "description": "HSI ready interrupt clear"
              },
              "HSERDYC": {
                "bit": 4,
                "description": "HSE ready interrupt clear"
              },
              "PLLSYSRDYC": {
                "bit": 5,
                "description": "PLL ready interrupt clear"
              },
              "CSSC": {
                "bit": 8,
                "description": "Clock security system interrupt\n              clear"
              },
              "LSECSSC": {
                "bit": 9,
                "description": "LSE Clock security system interrupt\n              clear"
              }
            },
            "IOPRSTR": {
              "GPIOARST": {
                "bit": 0,
                "description": "GPIOARST"
              },
              "GPIOBRST": {
                "bit": 1,
                "description": "GPIOBRST"
              },
              "GPIOCRST": {
                "bit": 2,
                "description": "GPIOCRST"
              },
              "GPIODRST": {
                "bit": 3,
                "description": "GPIODRST"
              },
              "GPIOERST": {
                "bit": 4,
                "description": "GPIOERST"
              },
              "GPIOFRST": {
                "bit": 5,
                "description": "GPIOFRST"
              }
            },
            "AHBRSTR": {
              "DMA1RST": {
                "bit": 0,
                "description": "DMA1 reset"
              },
              "DMA2RST": {
                "bit": 1,
                "description": "DMA1 reset"
              },
              "FLASHRST": {
                "bit": 8,
                "description": "FLITF reset"
              },
              "CRCRST": {
                "bit": 12,
                "description": "CRC reset"
              }
            },
            "APBRSTR1": {
              "TIM3RST": {
                "bit": 1,
                "description": "TIM3 timer reset"
              },
              "TIM4RST": {
                "bit": 2,
                "description": "TIM4 timer reset"
              },
              "TIM6RST": {
                "bit": 4,
                "description": "TIM6 timer reset"
              },
              "TIM7RST": {
                "bit": 5,
                "description": "TIM7 timer reset"
              },
              "USART5RST": {
                "bit": 8,
                "description": "USART5RST"
              },
              "USART6RST": {
                "bit": 9,
                "description": "USART6RST"
              },
              "USBRST": {
                "bit": 13,
                "description": "USBRST"
              },
              "SPI2RST": {
                "bit": 14,
                "description": "SPI2 reset"
              },
              "SPI3RST": {
                "bit": 15,
                "description": "SPI3 reset"
              },
              "USART2RST": {
                "bit": 17,
                "description": "USART2 reset"
              },
              "USART3RST": {
                "bit": 18,
                "description": "USART3 reset"
              },
              "USART4RST": {
                "bit": 19,
                "description": "USART4 reset"
              },
              "I2C1RST": {
                "bit": 21,
                "description": "I2C1 reset"
              },
              "I2C2RST": {
                "bit": 22,
                "description": "I2C2 reset"
              },
              "I2C3RST": {
                "bit": 23,
                "description": "I2C3RST reset"
              },
              "DBGRST": {
                "bit": 27,
                "description": "Debug support reset"
              },
              "PWRRST": {
                "bit": 28,
                "description": "Power interface reset"
              }
            },
            "APBRSTR2": {
              "SYSCFGRST": {
                "bit": 0,
                "description": "SYSCFG, COMP and VREFBUF\n              reset"
              },
              "TIM1RST": {
                "bit": 11,
                "description": "TIM1 timer reset"
              },
              "SPI1RST": {
                "bit": 12,
                "description": "SPI1 reset"
              },
              "USART1RST": {
                "bit": 14,
                "description": "USART1 reset"
              },
              "TIM14RST": {
                "bit": 15,
                "description": "TIM14 timer reset"
              },
              "TIM15RST": {
                "bit": 16,
                "description": "TIM15 timer reset"
              },
              "TIM16RST": {
                "bit": 17,
                "description": "TIM16 timer reset"
              },
              "TIM17RST": {
                "bit": 18,
                "description": "TIM17 timer reset"
              },
              "ADCRST": {
                "bit": 20,
                "description": "ADC reset"
              }
            },
            "IOPENR": {
              "GPIOAEN": {
                "bit": 0,
                "description": "I/O port A clock enable during Sleep\n              mode"
              },
              "GPIOBEN": {
                "bit": 1,
                "description": "I/O port B clock enable during Sleep\n              mode"
              },
              "GPIOCEN": {
                "bit": 2,
                "description": "I/O port C clock enable during Sleep\n              mode"
              },
              "GPIODEN": {
                "bit": 3,
                "description": "I/O port D clock enable during Sleep\n              mode"
              },
              "GPIOEEN": {
                "bit": 4,
                "description": "I/O port E clock enable during Sleep\n              mode"
              },
              "GPIOFEN": {
                "bit": 5,
                "description": "I/O port F clock enable during Sleep\n              mode"
              }
            },
            "AHBENR": {
              "DMA1EN": {
                "bit": 0,
                "description": "DMA1 clock enable"
              },
              "DMA2EN": {
                "bit": 1,
                "description": "DMA2 clock enable"
              },
              "FLASHEN": {
                "bit": 8,
                "description": "Flash memory interface clock\n              enable"
              },
              "CRCEN": {
                "bit": 12,
                "description": "CRC clock enable"
              }
            },
            "APBENR1": {
              "TIM3EN": {
                "bit": 1,
                "description": "TIM3 timer clock enable"
              },
              "TIM4EN": {
                "bit": 2,
                "description": "TIM4 timer clock enable"
              },
              "TIM6EN": {
                "bit": 4,
                "description": "TIM6 timer clock enable"
              },
              "TIM7EN": {
                "bit": 5,
                "description": "TIM7 timer clock enable"
              },
              "USART5EN": {
                "bit": 8,
                "description": "USART5EN"
              },
              "USART6EN": {
                "bit": 9,
                "description": "USART6EN"
              },
              "RTCAPBEN": {
                "bit": 10,
                "description": "RTC APB clock enable"
              },
              "WWDGEN": {
                "bit": 11,
                "description": "WWDG clock enable"
              },
              "USBEN": {
                "bit": 13,
                "description": "USBEN"
              },
              "SPI2EN": {
                "bit": 14,
                "description": "SPI2 clock enable"
              },
              "SPI3EN": {
                "bit": 15,
                "description": "SPI3 clock enable"
              },
              "USART2EN": {
                "bit": 17,
                "description": "USART2 clock enable"
              },
              "USART3EN": {
                "bit": 18,
                "description": "USART3 clock enable"
              },
              "USART4EN": {
                "bit": 19,
                "description": "USART4 clock enable"
              },
              "I2C1EN": {
                "bit": 21,
                "description": "I2C1 clock enable"
              },
              "I2C2EN": {
                "bit": 22,
                "description": "I2C2 clock enable"
              },
              "I2C3EN": {
                "bit": 23,
                "description": "I2C3 clock enable"
              },
              "DBGEN": {
                "bit": 27,
                "description": "Debug support clock enable"
              },
              "PWREN": {
                "bit": 28,
                "description": "Power interface clock\n              enable"
              }
            },
            "APBENR2": {
              "SYSCFGEN": {
                "bit": 0,
                "description": "SYSCFG, COMP and VREFBUF clock\n              enable"
              },
              "TIM1EN": {
                "bit": 11,
                "description": "TIM1 timer clock enable"
              },
              "SPI1EN": {
                "bit": 12,
                "description": "SPI1 clock enable"
              },
              "USART1EN": {
                "bit": 14,
                "description": "USART1 clock enable"
              },
              "TIM14EN": {
                "bit": 15,
                "description": "TIM14 timer clock enable"
              },
              "TIM15EN": {
                "bit": 16,
                "description": "TIM15 timer clock enable"
              },
              "TIM16EN": {
                "bit": 17,
                "description": "TIM16 timer clock enable"
              },
              "TIM17EN": {
                "bit": 18,
                "description": "TIM16 timer clock enable"
              },
              "ADCEN": {
                "bit": 20,
                "description": "ADC clock enable"
              }
            },
            "IOPSMENR": {
              "GPIOASMEN": {
                "bit": 0,
                "description": "I/O port A clock enable during Sleep\n              mode"
              },
              "GPIOBSMEN": {
                "bit": 1,
                "description": "I/O port B clock enable during Sleep\n              mode"
              },
              "GPIOCSMEN": {
                "bit": 2,
                "description": "I/O port C clock enable during Sleep\n              mode"
              },
              "GPIODSMEN": {
                "bit": 3,
                "description": "I/O port D clock enable during Sleep\n              mode"
              },
              "GPIOESMEN": {
                "bit": 4,
                "description": "I/O port E clock enable during Sleep\n              mode"
              },
              "GPIOFSMEN": {
                "bit": 5,
                "description": "I/O port F clock enable during Sleep\n              mode"
              }
            },
            "AHBSMENR": {
              "DMA1SMEN": {
                "bit": 0,
                "description": "DMA1 clock enable during Sleep\n              mode"
              },
              "DMA2SMEN": {
                "bit": 1,
                "description": "DMA2 clock enable during Sleep\n              mode"
              },
              "FLASHSMEN": {
                "bit": 8,
                "description": "Flash memory interface clock enable\n              during Sleep mode"
              },
              "SRAMSMEN": {
                "bit": 9,
                "description": "SRAM clock enable during Sleep\n              mode"
              },
              "CRCSMEN": {
                "bit": 12,
                "description": "CRC clock enable during Sleep\n              mode"
              }
            },
            "APBSMENR1": {
              "TIM3SMEN": {
                "bit": 1,
                "description": "TIM3 timer clock enable during Sleep\n              mode"
              },
              "TIM4SMEN": {
                "bit": 2,
                "description": "TIM4 timer clock enable during Sleep\n              mode"
              },
              "TIM6SMEN": {
                "bit": 4,
                "description": "TIM6 timer clock enable during Sleep\n              mode"
              },
              "TIM7SMEN": {
                "bit": 5,
                "description": "TIM7 timer clock enable during Sleep\n              mode"
              },
              "USART5SMEN": {
                "bit": 8,
                "description": "USART5 clock enable"
              },
              "USART6SMEN": {
                "bit": 9,
                "description": "USART6 clock enable"
              },
              "RTCAPBSMEN": {
                "bit": 10,
                "description": "RTC APB clock enable during Sleep\n              mode"
              },
              "WWDGSMEN": {
                "bit": 11,
                "description": "WWDG clock enable during Sleep\n              mode"
              },
              "USBSMEN": {
                "bit": 13,
                "description": "USB clock enable during Sleep\n              mode"
              },
              "SPI2SMEN": {
                "bit": 14,
                "description": "SPI2 clock enable during Sleep\n              mode"
              },
              "SPI3SMEN": {
                "bit": 15,
                "description": "SPI3 clock enable during Sleep\n              mode"
              },
              "USART2SMEN": {
                "bit": 17,
                "description": "USART2 clock enable during Sleep\n              mode"
              },
              "USART3SMEN": {
                "bit": 18,
                "description": "USART3 clock enable during Sleep\n              mode"
              },
              "USART4SMEN": {
                "bit": 19,
                "description": "USART4 clock enable during Sleep\n              mode"
              },
              "I2C1SMEN": {
                "bit": 21,
                "description": "I2C1 clock enable during Sleep\n              mode"
              },
              "I2C2SMEN": {
                "bit": 22,
                "description": "I2C2 clock enable during Sleep\n              mode"
              },
              "I2C3SMEN": {
                "bit": 23,
                "description": "I2C3 clock enable during Sleep\n              mode"
              },
              "DBGSMEN": {
                "bit": 27,
                "description": "Debug support clock enable during Sleep\n              mode"
              },
              "PWRSMEN": {
                "bit": 28,
                "description": "Power interface clock enable during\n              Sleep mode"
              }
            },
            "APBSMENR2": {
              "SYSCFGSMEN": {
                "bit": 0,
                "description": "SYSCFG, COMP and VREFBUF clock enable\n              during Sleep mode"
              },
              "TIM1SMEN": {
                "bit": 11,
                "description": "TIM1 timer clock enable during Sleep\n              mode"
              },
              "SPI1SMEN": {
                "bit": 12,
                "description": "SPI1 clock enable during Sleep\n              mode"
              },
              "USART1SMEN": {
                "bit": 14,
                "description": "USART1 clock enable during Sleep\n              mode"
              },
              "TIM14SMEN": {
                "bit": 15,
                "description": "TIM14 timer clock enable during Sleep\n              mode"
              },
              "TIM15SMEN": {
                "bit": 16,
                "description": "TIM15 timer clock enable during Sleep\n              mode"
              },
              "TIM16SMEN": {
                "bit": 17,
                "description": "TIM16 timer clock enable during Sleep\n              mode"
              },
              "TIM17SMEN": {
                "bit": 18,
                "description": "TIM16 timer clock enable during Sleep\n              mode"
              },
              "ADCSMEN": {
                "bit": 20,
                "description": "ADC clock enable during Sleep\n              mode"
              }
            },
            "CCIPR": {
              "USART1SEL": {
                "bit": 0,
                "description": "USART1 clock source\n              selection",
                "width": 2
              },
              "USART2SEL": {
                "bit": 2,
                "description": "USART2 clock source\n              selection",
                "width": 2
              },
              "USART3SEL": {
                "bit": 4,
                "description": "USART3 clock source\n              selection",
                "width": 2
              },
              "I2C1SEL": {
                "bit": 12,
                "description": "I2C1 clock source\n              selection",
                "width": 2
              },
              "I2S2SEL": {
                "bit": 14,
                "description": "I2S1 clock source\n              selection",
                "width": 2
              },
              "TIM1SEL": {
                "bit": 22,
                "description": "TIM1 clock source\n              selection"
              },
              "TIM15SEL": {
                "bit": 24,
                "description": "TIM15 clock source\n              selection"
              },
              "ADCSEL": {
                "bit": 30,
                "description": "ADCs clock source\n              selection",
                "width": 2
              }
            },
            "CCIPR2": {
              "I2S1SEL": {
                "bit": 0,
                "description": "2S1SEL",
                "width": 2
              },
              "I2S2SEL": {
                "bit": 2,
                "description": "I2S2SEL",
                "width": 2
              },
              "USBSEL": {
                "bit": 12,
                "description": "USBSEL",
                "width": 2
              }
            },
            "BDCR": {
              "LSEON": {
                "bit": 0,
                "description": "LSE oscillator enable"
              },
              "LSERDY": {
                "bit": 1,
                "description": "LSE oscillator ready"
              },
              "LSEBYP": {
                "bit": 2,
                "description": "LSE oscillator bypass"
              },
              "LSEDRV": {
                "bit": 3,
                "description": "LSE oscillator drive\n              capability",
                "width": 2
              },
              "LSECSSON": {
                "bit": 5,
                "description": "CSS on LSE enable"
              },
              "LSECSSD": {
                "bit": 6,
                "description": "CSS on LSE failure\n              Detection"
              },
              "RTCSEL": {
                "bit": 8,
                "description": "RTC clock source selection",
                "width": 2
              },
              "RTCEN": {
                "bit": 15,
                "description": "RTC clock enable"
              },
              "BDRST": {
                "bit": 16,
                "description": "RTC domain software reset"
              },
              "LSCOEN": {
                "bit": 24,
                "description": "Low-speed clock output (LSCO)\n              enable"
              },
              "LSCOSEL": {
                "bit": 25,
                "description": "Low-speed clock output\n              selection"
              }
            },
            "CSR": {
              "LSION": {
                "bit": 0,
                "description": "LSI oscillator enable"
              },
              "LSIRDY": {
                "bit": 1,
                "description": "LSI oscillator ready"
              },
              "RMVF": {
                "bit": 23,
                "description": "Remove reset flags"
              },
              "OBLRSTF": {
                "bit": 25,
                "description": "Option byte loader reset\n              flag"
              },
              "PINRSTF": {
                "bit": 26,
                "description": "Pin reset flag"
              },
              "PWRRSTF": {
                "bit": 27,
                "description": "BOR or POR/PDR flag"
              },
              "SFTRSTF": {
                "bit": 28,
                "description": "Software reset flag"
              },
              "IWDGRSTF": {
                "bit": 29,
                "description": "Independent window watchdog reset\n              flag"
              },
              "WWDGRSTF": {
                "bit": 30,
                "description": "Window watchdog reset flag"
              },
              "LPWRRSTF": {
                "bit": 31,
                "description": "Low-power reset flag"
              }
            }
          }
        },
        "PWR": {
          "instances": [
            {
              "name": "PWR",
              "base": "0x40007000"
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "Power control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "Power control register 2"
            },
            "CR3": {
              "offset": "0x08",
              "size": 32,
              "description": "Power control register 3"
            },
            "CR4": {
              "offset": "0x0C",
              "size": 32,
              "description": "Power control register 4"
            },
            "SR1": {
              "offset": "0x10",
              "size": 32,
              "description": "Power status register 1"
            },
            "SR2": {
              "offset": "0x14",
              "size": 32,
              "description": "Power status register 2"
            },
            "SCR": {
              "offset": "0x18",
              "size": 32,
              "description": "Power status clear register"
            },
            "PUCRA": {
              "offset": "0x20",
              "size": 32,
              "description": "Power Port A pull-up control\n          register"
            },
            "PDCRA": {
              "offset": "0x24",
              "size": 32,
              "description": "Power Port A pull-down control\n          register"
            },
            "PUCRB": {
              "offset": "0x28",
              "size": 32,
              "description": "Power Port B pull-up control\n          register"
            },
            "PDCRB": {
              "offset": "0x2C",
              "size": 32,
              "description": "Power Port B pull-down control\n          register"
            },
            "PUCRC": {
              "offset": "0x30",
              "size": 32,
              "description": "Power Port C pull-up control\n          register"
            },
            "PDCRC": {
              "offset": "0x34",
              "size": 32,
              "description": "Power Port C pull-down control\n          register"
            },
            "PUCRD": {
              "offset": "0x38",
              "size": 32,
              "description": "Power Port D pull-up control\n          register"
            },
            "PDCRD": {
              "offset": "0x3C",
              "size": 32,
              "description": "Power Port D pull-down control\n          register"
            },
            "PUCRE": {
              "offset": "0x40",
              "size": 32,
              "description": "Power Port E pull-UP control\n          register"
            },
            "PDCRE": {
              "offset": "0x44",
              "size": 32,
              "description": "Power Port E pull-down control\n          register"
            },
            "PUCRF": {
              "offset": "0x48",
              "size": 32,
              "description": "Power Port F pull-up control\n          register"
            },
            "PDCRF": {
              "offset": "0x4C",
              "size": 32,
              "description": "Power Port F pull-down control\n          register"
            }
          },
          "bits": {
            "CR1": {
              "LPR": {
                "bit": 14,
                "description": "Low-power run"
              },
              "VOS": {
                "bit": 9,
                "description": "Voltage scaling range\n              selection",
                "width": 2
              },
              "DBP": {
                "bit": 8,
                "description": "Disable backup domain write\n              protection"
              },
              "FPD_LPSLP": {
                "bit": 5,
                "description": "Flash memory powered down during\n              Low-power sleep mode"
              },
              "FPD_LPRUN": {
                "bit": 4,
                "description": "Flash memory powered down during\n              Low-power run mode"
              },
              "FPD_STOP": {
                "bit": 3,
                "description": "Flash memory powered down during Stop\n              mode"
              },
              "LPMS": {
                "bit": 0,
                "description": "Low-power mode selection",
                "width": 3
              }
            },
            "CR2": {
              "USV": {
                "bit": 10,
                "description": "USV"
              }
            },
            "CR3": {
              "EWUP1": {
                "bit": 0,
                "description": "Enable Wakeup pin WKUP1"
              },
              "EWUP2": {
                "bit": 1,
                "description": "Enable Wakeup pin WKUP2"
              },
              "EWUP3": {
                "bit": 2,
                "description": "Enable Wakeup pin WKUP3"
              },
              "EWUP4": {
                "bit": 3,
                "description": "Enable Wakeup pin WKUP4"
              },
              "EWUP5": {
                "bit": 4,
                "description": "Enable WKUP5 wakeup pin"
              },
              "EWUP6": {
                "bit": 5,
                "description": "Enable WKUP6 wakeup pin"
              },
              "APC": {
                "bit": 10,
                "description": "Apply pull-up and pull-down\n              configuration"
              },
              "EIWUL": {
                "bit": 15,
                "description": "Enable internal wakeup\n              line"
              }
            },
            "CR4": {
              "WP1": {
                "bit": 0,
                "description": "Wakeup pin WKUP1 polarity"
              },
              "WP2": {
                "bit": 1,
                "description": "Wakeup pin WKUP2 polarity"
              },
              "WP3": {
                "bit": 2,
                "description": "Wakeup pin WKUP3 polarity"
              },
              "WP4": {
                "bit": 3,
                "description": "Wakeup pin WKUP4 polarity"
              },
              "WP5": {
                "bit": 4,
                "description": "Wakeup pin WKUP5 polarity"
              },
              "WP6": {
                "bit": 5,
                "description": "WKUP6 wakeup pin polarity"
              },
              "VBE": {
                "bit": 8,
                "description": "VBAT battery charging\n              enable"
              },
              "VBRS": {
                "bit": 9,
                "description": "VBAT battery charging resistor\n              selection"
              }
            },
            "SR1": {
              "WUF1": {
                "bit": 0,
                "description": "Wakeup flag 1"
              },
              "WUF2": {
                "bit": 1,
                "description": "Wakeup flag 2"
              },
              "WUF3": {
                "bit": 2,
                "description": "Wakeup flag 3"
              },
              "WUF4": {
                "bit": 3,
                "description": "Wakeup flag 4"
              },
              "WUF5": {
                "bit": 4,
                "description": "Wakeup flag 5"
              },
              "WUF6": {
                "bit": 5,
                "description": "Wakeup flag 6"
              },
              "SBF": {
                "bit": 8,
                "description": "Standby flag"
              },
              "WUFI": {
                "bit": 15,
                "description": "Wakeup flag internal"
              }
            },
            "SR2": {
              "VOSF": {
                "bit": 10,
                "description": "Voltage scaling flag"
              },
              "REGLPF": {
                "bit": 9,
                "description": "Low-power regulator flag"
              },
              "REGLPS": {
                "bit": 8,
                "description": "Low-power regulator\n              started"
              },
              "FLASH_RDY": {
                "bit": 7,
                "description": "Flash ready flag"
              }
            },
            "SCR": {
              "CSBF": {
                "bit": 8,
                "description": "Clear standby flag"
              },
              "CWUF6": {
                "bit": 5,
                "description": "Clear wakeup flag 6"
              },
              "CWUF5": {
                "bit": 4,
                "description": "Clear wakeup flag 5"
              },
              "CWUF4": {
                "bit": 3,
                "description": "Clear wakeup flag 4"
              },
              "CWUF3": {
                "bit": 2,
                "description": "Clear wakeup flag 3"
              },
              "CWUF2": {
                "bit": 1,
                "description": "Clear wakeup flag 2"
              },
              "CWUF1": {
                "bit": 0,
                "description": "Clear wakeup flag 1"
              }
            },
            "PUCRA": {
              "PU15": {
                "bit": 15,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU14": {
                "bit": 14,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU13": {
                "bit": 13,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port A pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRA": {
              "PD15": {
                "bit": 15,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD14": {
                "bit": 14,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD13": {
                "bit": 13,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port A pull-down bit y\n              (y=0..15)"
              }
            },
            "PUCRB": {
              "PU15": {
                "bit": 15,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU14": {
                "bit": 14,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU13": {
                "bit": 13,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port B pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRB": {
              "PD15": {
                "bit": 15,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD14": {
                "bit": 14,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD13": {
                "bit": 13,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port B pull-down bit y\n              (y=0..15)"
              }
            },
            "PUCRC": {
              "PU15": {
                "bit": 15,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU14": {
                "bit": 14,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU13": {
                "bit": 13,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port C pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRC": {
              "PD15": {
                "bit": 15,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD14": {
                "bit": 14,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD13": {
                "bit": 13,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port C pull-down bit y\n              (y=0..15)"
              }
            },
            "PUCRD": {
              "PU15": {
                "bit": 15,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU14": {
                "bit": 14,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU13": {
                "bit": 13,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port D pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRD": {
              "PD15": {
                "bit": 15,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD14": {
                "bit": 14,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD13": {
                "bit": 13,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port D pull-down bit y\n              (y=0..15)"
              }
            },
            "PUCRE": {
              "PU15": {
                "bit": 15,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU14": {
                "bit": 14,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU13": {
                "bit": 13,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port E pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRE": {
              "PD15": {
                "bit": 15,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD14": {
                "bit": 14,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD13": {
                "bit": 13,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port E pull-down bit y\n              (y=0..15)"
              }
            },
            "PUCRF": {
              "PU13": {
                "bit": 13,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU12": {
                "bit": 12,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU11": {
                "bit": 11,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU10": {
                "bit": 10,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU9": {
                "bit": 9,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU8": {
                "bit": 8,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU7": {
                "bit": 7,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU6": {
                "bit": 6,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU5": {
                "bit": 5,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU4": {
                "bit": 4,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU3": {
                "bit": 3,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU2": {
                "bit": 2,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU1": {
                "bit": 1,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              },
              "PU0": {
                "bit": 0,
                "description": "Port F pull-up bit y\n              (y=0..15)"
              }
            },
            "PDCRF": {
              "PD13": {
                "bit": 13,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD12": {
                "bit": 12,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD11": {
                "bit": 11,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD10": {
                "bit": 10,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD9": {
                "bit": 9,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD8": {
                "bit": 8,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD7": {
                "bit": 7,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD6": {
                "bit": 6,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD5": {
                "bit": 5,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD4": {
                "bit": 4,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD3": {
                "bit": 3,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD2": {
                "bit": 2,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD1": {
                "bit": 1,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              },
              "PD0": {
                "bit": 0,
                "description": "Port F pull-down bit y\n              (y=0..15)"
              }
            }
          }
        },
        "DMA": {
          "instances": [
            {
              "name": "DMA",
              "base": "0x40020000",
              "irq": 9
            },
            {
              "name": "DMAMUX",
              "base": "0x40020800",
              "irq": 11
            }
          ],
          "registers": {
            "DMA_ISR": {
              "offset": "0x00",
              "size": 32,
              "description": "DMA interrupt status register"
            },
            "DMA_IFCR": {
              "offset": "0x04",
              "size": 32,
              "description": "DMA interrupt flag clear register"
            },
            "DMA_CCR1": {
              "offset": "0x08",
              "size": 32,
              "description": "DMA channel 1 configuration register"
            },
            "DMA_CNDTR1": {
              "offset": "0x0C",
              "size": 32,
              "description": "DMA channel x number of data register"
            },
            "DMA_CPAR1": {
              "offset": "0x10",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR1": {
              "offset": "0x14",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR2": {
              "offset": "0x1C",
              "size": 32,
              "description": "DMA channel 2 configuration register"
            },
            "DMA_CNDTR2": {
              "offset": "0x20",
              "size": 32,
              "description": "DMA channel x number of data register"
            },
            "DMA_CPAR2": {
              "offset": "0x24",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR2": {
              "offset": "0x28",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR3": {
              "offset": "0x30",
              "size": 32,
              "description": "DMA channel 3 configuration register"
            },
            "DMA_CNDTR3": {
              "offset": "0x34",
              "size": 32,
              "description": "DMA channel x configuration register"
            },
            "DMA_CPAR3": {
              "offset": "0x38",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR3": {
              "offset": "0x3C",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR4": {
              "offset": "0x44",
              "size": 32,
              "description": "DMA channel 4 configuration register"
            },
            "DMA_CNDTR4": {
              "offset": "0x48",
              "size": 32,
              "description": "DMA channel x configuration register"
            },
            "DMA_CPAR4": {
              "offset": "0x4C",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR4": {
              "offset": "0x50",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR5": {
              "offset": "0x58",
              "size": 32,
              "description": "DMA channel 5 configuration register"
            },
            "DMA_CNDTR5": {
              "offset": "0x5C",
              "size": 32,
              "description": "DMA channel x configuration register"
            },
            "DMA_CPAR5": {
              "offset": "0x60",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR5": {
              "offset": "0x64",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR6": {
              "offset": "0x6C",
              "size": 32,
              "description": "DMA channel 6 configuration register"
            },
            "DMA_CNDTR6": {
              "offset": "0x70",
              "size": 32,
              "description": "DMA channel x configuration register"
            },
            "DMA_CPAR6": {
              "offset": "0x74",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR6": {
              "offset": "0x78",
              "size": 32,
              "description": "DMA channel x memory address register"
            },
            "DMA_CCR7": {
              "offset": "0x80",
              "size": 32,
              "description": "DMA channel 7 configuration register"
            },
            "DMA_CNDTR7": {
              "offset": "0x84",
              "size": 32,
              "description": "DMA channel x configuration register"
            },
            "DMA_CPAR7": {
              "offset": "0x88",
              "size": 32,
              "description": "DMA channel x peripheral address register"
            },
            "DMA_CMAR7": {
              "offset": "0x8C",
              "size": 32,
              "description": "DMA channel x memory address register"
            }
          },
          "bits": {
            "DMA_ISR": {
              "GIF1": {
                "bit": 0,
                "description": "global interrupt flag for channel 1"
              },
              "TCIF1": {
                "bit": 1,
                "description": "transfer complete (TC) flag for channel 1"
              },
              "HTIF1": {
                "bit": 2,
                "description": "half transfer (HT) flag for channel 1"
              },
              "TEIF1": {
                "bit": 3,
                "description": "transfer error (TE) flag for channel 1"
              },
              "GIF2": {
                "bit": 4,
                "description": "global interrupt flag for channel 2"
              },
              "TCIF2": {
                "bit": 5,
                "description": "transfer complete (TC) flag for channel 2"
              },
              "HTIF2": {
                "bit": 6,
                "description": "half transfer (HT) flag for channel 2"
              },
              "TEIF2": {
                "bit": 7,
                "description": "transfer error (TE) flag for channel 2"
              },
              "GIF3": {
                "bit": 8,
                "description": "global interrupt flag for channel 3"
              },
              "TCIF3": {
                "bit": 9,
                "description": "transfer complete (TC) flag for channel 3"
              },
              "HTIF3": {
                "bit": 10,
                "description": "half transfer (HT) flag for channel 3"
              },
              "TEIF3": {
                "bit": 11,
                "description": "transfer error (TE) flag for channel 3"
              },
              "GIF4": {
                "bit": 12,
                "description": "global interrupt flag for channel 4"
              },
              "TCIF4": {
                "bit": 13,
                "description": "transfer complete (TC) flag for channel 4"
              },
              "HTIF4": {
                "bit": 14,
                "description": "half transfer (HT) flag for channel 4"
              },
              "TEIF4": {
                "bit": 15,
                "description": "transfer error (TE) flag for channel 4"
              },
              "GIF5": {
                "bit": 16,
                "description": "global interrupt flag for channel 5"
              },
              "TCIF5": {
                "bit": 17,
                "description": "transfer complete (TC) flag for channel 5"
              },
              "HTIF5": {
                "bit": 18,
                "description": "half transfer (HT) flag for channel 5"
              },
              "TEIF5": {
                "bit": 19,
                "description": "transfer error (TE) flag for channel 5"
              },
              "GIF6": {
                "bit": 20,
                "description": "global interrupt flag for channel 6"
              },
              "TCIF6": {
                "bit": 21,
                "description": "transfer complete (TC) flag for channel 6"
              },
              "HTIF6": {
                "bit": 22,
                "description": "half transfer (HT) flag for channel 6"
              },
              "TEIF6": {
                "bit": 23,
                "description": "transfer error (TE) flag for channel 6"
              },
              "GIF7": {
                "bit": 24,
                "description": "global interrupt flag for channel 7"
              },
              "TCIF7": {
                "bit": 25,
                "description": "transfer complete (TC) flag for channel 7"
              },
              "HTIF7": {
                "bit": 26,
                "description": "half transfer (HT) flag for channel 7"
              },
              "TEIF7": {
                "bit": 27,
                "description": "transfer error (TE) flag for channel 7"
              }
            },
            "DMA_IFCR": {
              "CGIF1": {
                "bit": 0,
                "description": "global interrupt flag clear for channel 1"
              },
              "CTCIF1": {
                "bit": 1,
                "description": "transfer complete flag clear for channel 1"
              },
              "CHTIF1": {
                "bit": 2,
                "description": "half transfer flag clear for channel 1"
              },
              "CTEIF1": {
                "bit": 3,
                "description": "transfer error flag clear for channel 1"
              },
              "CGIF2": {
                "bit": 4,
                "description": "global interrupt flag clear for channel 2"
              },
              "CTCIF2": {
                "bit": 5,
                "description": "transfer complete flag clear for channel 2"
              },
              "CHTIF2": {
                "bit": 6,
                "description": "half transfer flag clear for channel 2"
              },
              "CTEIF2": {
                "bit": 7,
                "description": "transfer error flag clear for channel 2"
              },
              "CGIF3": {
                "bit": 8,
                "description": "global interrupt flag clear for channel 3"
              },
              "CTCIF3": {
                "bit": 9,
                "description": "transfer complete flag clear for channel 3"
              },
              "CHTIF3": {
                "bit": 10,
                "description": "half transfer flag clear for channel 3"
              },
              "CTEIF3": {
                "bit": 11,
                "description": "transfer error flag clear for channel 3"
              },
              "CGIF4": {
                "bit": 12,
                "description": "global interrupt flag clear for channel 4"
              },
              "CTCIF4": {
                "bit": 13,
                "description": "transfer complete flag clear for channel 4"
              },
              "CHTIF4": {
                "bit": 14,
                "description": "half transfer flag clear for channel 4"
              },
              "CTEIF4": {
                "bit": 15,
                "description": "transfer error flag clear for channel 4"
              },
              "CGIF5": {
                "bit": 16,
                "description": "global interrupt flag clear for channel 5"
              },
              "CTCIF5": {
                "bit": 17,
                "description": "transfer complete flag clear for channel 5"
              },
              "CHTIF5": {
                "bit": 18,
                "description": "half transfer flag clear for channel 5"
              },
              "CTEIF5": {
                "bit": 19,
                "description": "transfer error flag clear for channel 5"
              },
              "CGIF6": {
                "bit": 20,
                "description": "global interrupt flag clear for channel 6"
              },
              "CTCIF6": {
                "bit": 21,
                "description": "transfer complete flag clear for channel 6"
              },
              "CHTIF6": {
                "bit": 22,
                "description": "half transfer flag clear for channel 6"
              },
              "CTEIF6": {
                "bit": 23,
                "description": "transfer error flag clear for channel 6"
              },
              "CGIF7": {
                "bit": 24,
                "description": "global interrupt flag clear for channel 7"
              },
              "CTCIF7": {
                "bit": 25,
                "description": "transfer complete flag clear for channel 7"
              },
              "CHTIF7": {
                "bit": 26,
                "description": "half transfer flag clear for channel 7"
              },
              "CTEIF7": {
                "bit": 27,
                "description": "transfer error flag clear for channel 7"
              }
            },
            "DMA_CCR1": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR1": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR1": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR1": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR2": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR2": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR2": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR2": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR3": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR3": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR3": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR3": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR4": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR4": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR4": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR4": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR5": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR5": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR5": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR5": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR6": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR6": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR6": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR6": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CCR7": {
              "EN": {
                "bit": 0,
                "description": "channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register).\nNote: this bit is set and cleared by software."
              },
              "TCIE": {
                "bit": 1,
                "description": "transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "HTIE": {
                "bit": 2,
                "description": "half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "TEIE": {
                "bit": 3,
                "description": "transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "DIR": {
                "bit": 4,
                "description": "data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nDestination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nSource attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "CIRC": {
                "bit": 5,
                "description": "circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."
              },
              "PINC": {
                "bit": 6,
                "description": "peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "MINC": {
                "bit": 7,
                "description": "memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              },
              "PSIZE": {
                "bit": 8,
                "description": "peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral destination if DIR=1 and the peripheral source if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MSIZE": {
                "bit": 10,
                "description": "memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the peripheral source if DIR=1 and the peripheral destination if DIR=0.\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "PL": {
                "bit": 12,
                "description": "priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 2
              },
              "MEM2MEM": {
                "bit": 14,
                "description": "memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."
              }
            },
            "DMA_CNDTR7": {
              "NDT": {
                "bit": 0,
                "description": "number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write\u00e2\u0080\u0099 transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero when the programmed amount of data to transfer is reached, if the channel is not in circular mode (CIRC=0 in the DMA_CCRx register).\nIt is reloaded automatically by the previously programmed value, when the transfer is complete, if the channel is in circular mode (CIRC=1).\nIf this field is zero, no transfer can be served whatever the channel status (enabled or not).\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1).",
                "width": 16
              }
            },
            "DMA_CPAR7": {
              "PA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory destination address if DIR=1 and the memory source address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral destination address DIR=1 and the peripheral source address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            },
            "DMA_CMAR7": {
              "MA": {
                "bit": 0,
                "description": "peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address.\nIn memory-to-memory mode, this register identifies the memory source address if DIR=1 and the memory destination address if DIR=0.\nIn peripheral-to-peripheral mode, this register identifies the peripheral source address DIR=1 and the peripheral destination address if DIR=0.\nNote: this register is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1).",
                "width": 32
              }
            }
          }
        },
        "GPIO": {
          "instances": [
            {
              "name": "GPIOA",
              "base": "0x50000000"
            },
            {
              "name": "GPIOB",
              "base": "0x50000400"
            },
            {
              "name": "GPIOC",
              "base": "0x50000800"
            },
            {
              "name": "GPIOD",
              "base": "0x50000C00"
            },
            {
              "name": "GPIOF",
              "base": "0x50001400"
            }
          ],
          "registers": {
            "MODER": {
              "offset": "0x00",
              "size": 32,
              "description": "GPIO port mode register"
            },
            "OTYPER": {
              "offset": "0x04",
              "size": 32,
              "description": "GPIO port output type register"
            },
            "OSPEEDR": {
              "offset": "0x08",
              "size": 32,
              "description": "GPIO port output speed\n          register"
            },
            "PUPDR": {
              "offset": "0x0C",
              "size": 32,
              "description": "GPIO port pull-up/pull-down\n          register"
            },
            "IDR": {
              "offset": "0x10",
              "size": 32,
              "description": "GPIO port input data register"
            },
            "ODR": {
              "offset": "0x14",
              "size": 32,
              "description": "GPIO port output data register"
            },
            "BSRR": {
              "offset": "0x18",
              "size": 32,
              "description": "GPIO port bit set/reset\n          register"
            },
            "LCKR": {
              "offset": "0x1C",
              "size": 32,
              "description": "GPIO port configuration lock\n          register"
            },
            "AFRL": {
              "offset": "0x20",
              "size": 32,
              "description": "GPIO alternate function low\n          register"
            },
            "AFRH": {
              "offset": "0x24",
              "size": 32,
              "description": "GPIO alternate function high\n          register"
            },
            "BRR": {
              "offset": "0x28",
              "size": 32,
              "description": "port bit reset register"
            }
          },
          "bits": {
            "MODER": {
              "MODER15": {
                "bit": 30,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER14": {
                "bit": 28,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER13": {
                "bit": 26,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER12": {
                "bit": 24,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER11": {
                "bit": 22,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER10": {
                "bit": 20,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER9": {
                "bit": 18,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER8": {
                "bit": 16,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER7": {
                "bit": 14,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER6": {
                "bit": 12,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER5": {
                "bit": 10,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER4": {
                "bit": 8,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER3": {
                "bit": 6,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER2": {
                "bit": 4,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER1": {
                "bit": 2,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "MODER0": {
                "bit": 0,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              }
            },
            "OTYPER": {
              "OT15": {
                "bit": 15,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT14": {
                "bit": 14,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT13": {
                "bit": 13,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT12": {
                "bit": 12,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT11": {
                "bit": 11,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT10": {
                "bit": 10,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT9": {
                "bit": 9,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT8": {
                "bit": 8,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT7": {
                "bit": 7,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT6": {
                "bit": 6,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT5": {
                "bit": 5,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT4": {
                "bit": 4,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT3": {
                "bit": 3,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT2": {
                "bit": 2,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT1": {
                "bit": 1,
                "description": "Port x configuration bits (y =\n              0..15)"
              },
              "OT0": {
                "bit": 0,
                "description": "Port x configuration bits (y =\n              0..15)"
              }
            },
            "OSPEEDR": {
              "OSPEEDR15": {
                "bit": 30,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR14": {
                "bit": 28,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR13": {
                "bit": 26,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR12": {
                "bit": 24,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR11": {
                "bit": 22,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR10": {
                "bit": 20,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR9": {
                "bit": 18,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR8": {
                "bit": 16,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR7": {
                "bit": 14,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR6": {
                "bit": 12,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR5": {
                "bit": 10,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR4": {
                "bit": 8,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR3": {
                "bit": 6,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR2": {
                "bit": 4,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR1": {
                "bit": 2,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "OSPEEDR0": {
                "bit": 0,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              }
            },
            "PUPDR": {
              "PUPDR15": {
                "bit": 30,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR14": {
                "bit": 28,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR13": {
                "bit": 26,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR12": {
                "bit": 24,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR11": {
                "bit": 22,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR10": {
                "bit": 20,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR9": {
                "bit": 18,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR8": {
                "bit": 16,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR7": {
                "bit": 14,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR6": {
                "bit": 12,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR5": {
                "bit": 10,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR4": {
                "bit": 8,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR3": {
                "bit": 6,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR2": {
                "bit": 4,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR1": {
                "bit": 2,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              },
              "PUPDR0": {
                "bit": 0,
                "description": "Port x configuration bits (y =\n              0..15)",
                "width": 2
              }
            },
            "IDR": {
              "IDR15": {
                "bit": 15,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR14": {
                "bit": 14,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR13": {
                "bit": 13,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR12": {
                "bit": 12,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR11": {
                "bit": 11,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR10": {
                "bit": 10,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR9": {
                "bit": 9,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR8": {
                "bit": 8,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR7": {
                "bit": 7,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR6": {
                "bit": 6,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR5": {
                "bit": 5,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR4": {
                "bit": 4,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR3": {
                "bit": 3,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR2": {
                "bit": 2,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR1": {
                "bit": 1,
                "description": "Port input data (y =\n              0..15)"
              },
              "IDR0": {
                "bit": 0,
                "description": "Port input data (y =\n              0..15)"
              }
            },
            "ODR": {
              "ODR15": {
                "bit": 15,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR14": {
                "bit": 14,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR13": {
                "bit": 13,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR12": {
                "bit": 12,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR11": {
                "bit": 11,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR10": {
                "bit": 10,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR9": {
                "bit": 9,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR8": {
                "bit": 8,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR7": {
                "bit": 7,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR6": {
                "bit": 6,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR5": {
                "bit": 5,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR4": {
                "bit": 4,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR3": {
                "bit": 3,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR2": {
                "bit": 2,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR1": {
                "bit": 1,
                "description": "Port output data (y =\n              0..15)"
              },
              "ODR0": {
                "bit": 0,
                "description": "Port output data (y =\n              0..15)"
              }
            },
            "BSRR": {
              "BR15": {
                "bit": 31,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR14": {
                "bit": 30,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR13": {
                "bit": 29,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR12": {
                "bit": 28,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR11": {
                "bit": 27,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR10": {
                "bit": 26,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR9": {
                "bit": 25,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR8": {
                "bit": 24,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR7": {
                "bit": 23,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR6": {
                "bit": 22,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR5": {
                "bit": 21,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR4": {
                "bit": 20,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR3": {
                "bit": 19,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR2": {
                "bit": 18,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR1": {
                "bit": 17,
                "description": "Port x reset bit y (y =\n              0..15)"
              },
              "BR0": {
                "bit": 16,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS15": {
                "bit": 15,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS14": {
                "bit": 14,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS13": {
                "bit": 13,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS12": {
                "bit": 12,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS11": {
                "bit": 11,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS10": {
                "bit": 10,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS9": {
                "bit": 9,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS8": {
                "bit": 8,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS7": {
                "bit": 7,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS6": {
                "bit": 6,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS5": {
                "bit": 5,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS4": {
                "bit": 4,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS3": {
                "bit": 3,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS2": {
                "bit": 2,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS1": {
                "bit": 1,
                "description": "Port x set bit y (y=\n              0..15)"
              },
              "BS0": {
                "bit": 0,
                "description": "Port x set bit y (y=\n              0..15)"
              }
            },
            "LCKR": {
              "LCKK": {
                "bit": 16,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK15": {
                "bit": 15,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK14": {
                "bit": 14,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK13": {
                "bit": 13,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK12": {
                "bit": 12,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK11": {
                "bit": 11,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK10": {
                "bit": 10,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK9": {
                "bit": 9,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK8": {
                "bit": 8,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK7": {
                "bit": 7,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK6": {
                "bit": 6,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK5": {
                "bit": 5,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK4": {
                "bit": 4,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK3": {
                "bit": 3,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK2": {
                "bit": 2,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK1": {
                "bit": 1,
                "description": "Port x lock bit y (y=\n              0..15)"
              },
              "LCK0": {
                "bit": 0,
                "description": "Port x lock bit y (y=\n              0..15)"
              }
            },
            "AFRL": {
              "AFSEL7": {
                "bit": 28,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL6": {
                "bit": 24,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL5": {
                "bit": 20,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL4": {
                "bit": 16,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL3": {
                "bit": 12,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL2": {
                "bit": 8,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL1": {
                "bit": 4,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              },
              "AFSEL0": {
                "bit": 0,
                "description": "Alternate function selection for port x\n              bit y (y = 0..7)",
                "width": 4
              }
            },
            "AFRH": {
              "AFSEL15": {
                "bit": 28,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL14": {
                "bit": 24,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL13": {
                "bit": 20,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL12": {
                "bit": 16,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL11": {
                "bit": 12,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL10": {
                "bit": 8,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL9": {
                "bit": 4,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              },
              "AFSEL8": {
                "bit": 0,
                "description": "Alternate function selection for port x\n              bit y (y = 8..15)",
                "width": 4
              }
            },
            "BRR": {
              "BR0": {
                "bit": 0,
                "description": "Port Reset bit"
              },
              "BR1": {
                "bit": 1,
                "description": "Port Reset bit"
              },
              "BR2": {
                "bit": 2,
                "description": "Port Reset bit"
              },
              "BR3": {
                "bit": 3,
                "description": "Port Reset bit"
              },
              "BR4": {
                "bit": 4,
                "description": "Port Reset bit"
              },
              "BR5": {
                "bit": 5,
                "description": "Port Reset bit"
              },
              "BR6": {
                "bit": 6,
                "description": "Port Reset bit"
              },
              "BR7": {
                "bit": 7,
                "description": "Port Reset bit"
              },
              "BR8": {
                "bit": 8,
                "description": "Port Reset bit"
              },
              "BR9": {
                "bit": 9,
                "description": "Port Reset bit"
              },
              "BR10": {
                "bit": 10,
                "description": "Port Reset bit"
              },
              "BR11": {
                "bit": 11,
                "description": "Port Reset bit"
              },
              "BR12": {
                "bit": 12,
                "description": "Port Reset bit"
              },
              "BR13": {
                "bit": 13,
                "description": "Port Reset bit"
              },
              "BR14": {
                "bit": 14,
                "description": "Port Reset bit"
              },
              "BR15": {
                "bit": 15,
                "description": "Port Reset bit"
              }
            }
          }
        },
        "RNG": {
          "instances": [
            {
              "name": "RNG",
              "base": "0x40025000"
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "status register"
            },
            "DR": {
              "offset": "0x08",
              "size": 32,
              "description": "data register"
            }
          },
          "bits": {
            "CR": {
              "RNGEN": {
                "bit": 2,
                "description": "Random number generator\n              enable"
              },
              "IE": {
                "bit": 3,
                "description": "Interrupt enable"
              },
              "CED": {
                "bit": 5,
                "description": "Clock error detection"
              },
              "BYP": {
                "bit": 6,
                "description": "Bypass mode enable"
              }
            },
            "SR": {
              "SEIS": {
                "bit": 6,
                "description": "Seed error interrupt\n              status"
              },
              "CEIS": {
                "bit": 5,
                "description": "Clock error interrupt\n              status"
              },
              "SECS": {
                "bit": 2,
                "description": "Seed error current status"
              },
              "CECS": {
                "bit": 1,
                "description": "Clock error current status"
              },
              "DRDY": {
                "bit": 0,
                "description": "Data ready"
              }
            },
            "DR": {
              "RNDATA": {
                "bit": 0,
                "description": "Random data",
                "width": 32
              }
            }
          }
        },
        "CRC": {
          "instances": [
            {
              "name": "CRC",
              "base": "0x40023000",
              "irq": 30
            }
          ],
          "registers": {
            "DR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data register"
            },
            "IDR": {
              "offset": "0x04",
              "size": 32,
              "description": "Independent data register"
            },
            "CR": {
              "offset": "0x08",
              "size": 32,
              "description": "Control register"
            },
            "INIT": {
              "offset": "0x10",
              "size": 32,
              "description": "Initial CRC value"
            },
            "POL": {
              "offset": "0x14",
              "size": 32,
              "description": "polynomial"
            }
          },
          "bits": {
            "DR": {
              "DR": {
                "bit": 0,
                "description": "Data register bits",
                "width": 32
              }
            },
            "IDR": {
              "IDR": {
                "bit": 0,
                "description": "General-purpose 32-bit data register\n              bits",
                "width": 32
              }
            },
            "CR": {
              "REV_OUT": {
                "bit": 7,
                "description": "Reverse output data"
              },
              "REV_IN": {
                "bit": 5,
                "description": "Reverse input data",
                "width": 2
              },
              "POLYSIZE": {
                "bit": 3,
                "description": "Polynomial size",
                "width": 2
              },
              "RESET": {
                "bit": 0,
                "description": "RESET bit"
              }
            },
            "INIT": {
              "CRC_INIT": {
                "bit": 0,
                "description": "Programmable initial CRC\n              value",
                "width": 32
              }
            },
            "POL": {
              "POL": {
                "bit": 0,
                "description": "Programmable polynomial",
                "width": 32
              }
            }
          }
        },
        "EXTI": {
          "instances": [
            {
              "name": "EXTI",
              "base": "0x40021800",
              "irq": 5
            }
          ],
          "registers": {
            "RTSR1": {
              "offset": "0x00",
              "size": 32,
              "description": "EXTI rising trigger selection\n          register"
            },
            "FTSR1": {
              "offset": "0x04",
              "size": 32,
              "description": "EXTI falling trigger selection\n          register"
            },
            "SWIER1": {
              "offset": "0x08",
              "size": 32,
              "description": "EXTI software interrupt event\n          register"
            },
            "RPR1": {
              "offset": "0x0C",
              "size": 32,
              "description": "EXTI rising edge pending\n          register"
            },
            "FPR1": {
              "offset": "0x10",
              "size": 32,
              "description": "EXTI falling edge pending\n          register"
            },
            "EXTICR1": {
              "offset": "0x60",
              "size": 32,
              "description": "EXTI external interrupt selection\n          register"
            },
            "EXTICR2": {
              "offset": "0x64",
              "size": 32,
              "description": "EXTI external interrupt selection\n          register"
            },
            "EXTICR3": {
              "offset": "0x68",
              "size": 32,
              "description": "EXTI external interrupt selection\n          register"
            },
            "EXTICR4": {
              "offset": "0x6C",
              "size": 32,
              "description": "EXTI external interrupt selection\n          register"
            },
            "IMR1": {
              "offset": "0x80",
              "size": 32,
              "description": "EXTI CPU wakeup with interrupt mask\n          register"
            },
            "EMR1": {
              "offset": "0x84",
              "size": 32,
              "description": "EXTI CPU wakeup with event mask\n          register"
            }
          },
          "bits": {
            "RTSR1": {
              "RT0": {
                "bit": 0,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT1": {
                "bit": 1,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT2": {
                "bit": 2,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT3": {
                "bit": 3,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT4": {
                "bit": 4,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT5": {
                "bit": 5,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT6": {
                "bit": 6,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT7": {
                "bit": 7,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT8": {
                "bit": 8,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT9": {
                "bit": 9,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT10": {
                "bit": 10,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT11": {
                "bit": 11,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT12": {
                "bit": 12,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT13": {
                "bit": 13,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT14": {
                "bit": 14,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              },
              "RT15": {
                "bit": 15,
                "description": "Rising trigger event configuration bit\n              of Configurable Event line"
              }
            },
            "FTSR1": {
              "FT0": {
                "bit": 0,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT1": {
                "bit": 1,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT2": {
                "bit": 2,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT3": {
                "bit": 3,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT4": {
                "bit": 4,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT5": {
                "bit": 5,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT6": {
                "bit": 6,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT7": {
                "bit": 7,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT8": {
                "bit": 8,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT9": {
                "bit": 9,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT10": {
                "bit": 10,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT11": {
                "bit": 11,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT12": {
                "bit": 12,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT13": {
                "bit": 13,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT14": {
                "bit": 14,
                "description": "Falling trigger event configuration bit of configurable line"
              },
              "FT15": {
                "bit": 15,
                "description": "Falling trigger event configuration bit of configurable line"
              }
            },
            "SWIER1": {
              "SWI0": {
                "bit": 0,
                "description": "Software rising edge event trigger on line"
              },
              "SWI1": {
                "bit": 1,
                "description": "Software rising edge event trigger on line"
              },
              "SWI2": {
                "bit": 2,
                "description": "Software rising edge event trigger on line"
              },
              "SWI3": {
                "bit": 3,
                "description": "Software rising edge event trigger on line"
              },
              "SWI4": {
                "bit": 4,
                "description": "Software rising edge event trigger on line"
              },
              "SWI5": {
                "bit": 5,
                "description": "Software rising edge event trigger on line"
              },
              "SWI6": {
                "bit": 6,
                "description": "Software rising edge event trigger on line"
              },
              "SWI7": {
                "bit": 7,
                "description": "Software rising edge event trigger on line"
              },
              "SWI8": {
                "bit": 8,
                "description": "Software rising edge event trigger on line"
              },
              "SWI9": {
                "bit": 9,
                "description": "Software rising edge event trigger on line"
              },
              "SWI10": {
                "bit": 10,
                "description": "Software rising edge event trigger on line"
              },
              "SWI11": {
                "bit": 11,
                "description": "Software rising edge event trigger on line"
              },
              "SWI12": {
                "bit": 12,
                "description": "Software rising edge event trigger on line"
              },
              "SWI13": {
                "bit": 13,
                "description": "Software rising edge event trigger on line"
              },
              "SWI14": {
                "bit": 14,
                "description": "Software rising edge event trigger on line"
              },
              "SWI15": {
                "bit": 15,
                "description": "Software rising edge event trigger on line"
              }
            },
            "RPR1": {
              "RPIF0": {
                "bit": 0,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF1": {
                "bit": 1,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF2": {
                "bit": 2,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF3": {
                "bit": 3,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF4": {
                "bit": 4,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF5": {
                "bit": 5,
                "description": "configurable event inputs x rising edge\n              Pending bit"
              },
              "RPIF6": {
                "bit": 6,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF7": {
                "bit": 7,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF8": {
                "bit": 8,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF9": {
                "bit": 9,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF10": {
                "bit": 10,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF11": {
                "bit": 11,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF12": {
                "bit": 12,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF13": {
                "bit": 13,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF14": {
                "bit": 14,
                "description": "Rising edge event pending for configurable line"
              },
              "RPIF15": {
                "bit": 15,
                "description": "Rising edge event pending for configurable line"
              }
            },
            "FPR1": {
              "FPIF0": {
                "bit": 0,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF1": {
                "bit": 1,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF2": {
                "bit": 2,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF3": {
                "bit": 3,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF4": {
                "bit": 4,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF5": {
                "bit": 5,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF6": {
                "bit": 6,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF7": {
                "bit": 7,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF8": {
                "bit": 8,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF9": {
                "bit": 9,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF10": {
                "bit": 10,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF11": {
                "bit": 11,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF12": {
                "bit": 12,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF13": {
                "bit": 13,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF14": {
                "bit": 14,
                "description": "Falling edge event pending for configurable line"
              },
              "FPIF15": {
                "bit": 15,
                "description": "Falling edge event pending for configurable line"
              }
            },
            "EXTICR1": {
              "EXTI0_7": {
                "bit": 0,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI8_15": {
                "bit": 8,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI16_23": {
                "bit": 16,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI24_31": {
                "bit": 24,
                "description": "GPIO port selection",
                "width": 8
              }
            },
            "EXTICR2": {
              "EXTI0_7": {
                "bit": 0,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI8_15": {
                "bit": 8,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI16_23": {
                "bit": 16,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI24_31": {
                "bit": 24,
                "description": "GPIO port selection",
                "width": 8
              }
            },
            "EXTICR3": {
              "EXTI0_7": {
                "bit": 0,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI8_15": {
                "bit": 8,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI16_23": {
                "bit": 16,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI24_31": {
                "bit": 24,
                "description": "GPIO port selection",
                "width": 8
              }
            },
            "EXTICR4": {
              "EXTI0_7": {
                "bit": 0,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI8_15": {
                "bit": 8,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI16_23": {
                "bit": 16,
                "description": "GPIO port selection",
                "width": 8
              },
              "EXTI24_31": {
                "bit": 24,
                "description": "GPIO port selection",
                "width": 8
              }
            },
            "IMR1": {
              "IM0": {
                "bit": 0,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM1": {
                "bit": 1,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM2": {
                "bit": 2,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM3": {
                "bit": 3,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM4": {
                "bit": 4,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM5": {
                "bit": 5,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM6": {
                "bit": 6,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM7": {
                "bit": 7,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM8": {
                "bit": 8,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM9": {
                "bit": 9,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM10": {
                "bit": 10,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM11": {
                "bit": 11,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM12": {
                "bit": 12,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM13": {
                "bit": 13,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM14": {
                "bit": 14,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM15": {
                "bit": 15,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM19": {
                "bit": 19,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM21": {
                "bit": 21,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM22": {
                "bit": 22,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM23": {
                "bit": 23,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM24": {
                "bit": 24,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM25": {
                "bit": 25,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM26": {
                "bit": 26,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              },
              "IM31": {
                "bit": 31,
                "description": "CPU wakeup with interrupt mask on event\n              input"
              }
            },
            "EMR1": {
              "EM0": {
                "bit": 0,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM1": {
                "bit": 1,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM2": {
                "bit": 2,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM3": {
                "bit": 3,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM4": {
                "bit": 4,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM5": {
                "bit": 5,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM6": {
                "bit": 6,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM7": {
                "bit": 7,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM8": {
                "bit": 8,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM9": {
                "bit": 9,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM10": {
                "bit": 10,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM11": {
                "bit": 11,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM12": {
                "bit": 12,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM13": {
                "bit": 13,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM14": {
                "bit": 14,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM15": {
                "bit": 15,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM19": {
                "bit": 19,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM21": {
                "bit": 21,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM23": {
                "bit": 23,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM25": {
                "bit": 25,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM26": {
                "bit": 26,
                "description": "CPU wakeup with event mask on event\n              input"
              },
              "EM31": {
                "bit": 31,
                "description": "CPU wakeup with event mask on event\n              input"
              }
            }
          }
        },
        "TIM": {
          "instances": [
            {
              "name": "TIM15",
              "base": "0x40014000",
              "irq": 20
            },
            {
              "name": "TIM16",
              "base": "0x40014400",
              "irq": 21
            },
            {
              "name": "TIM17",
              "base": "0x40014800",
              "irq": 22
            },
            {
              "name": "TIM1",
              "base": "0x40012C00",
              "irq": 13
            },
            {
              "name": "LPTIM1",
              "base": "0x40007C00"
            },
            {
              "name": "LPTIM2",
              "base": "0x40009400"
            },
            {
              "name": "TIM14",
              "base": "0x40002000",
              "irq": 19
            },
            {
              "name": "TIM6",
              "base": "0x40001000",
              "irq": 17
            },
            {
              "name": "TIM7",
              "base": "0x40001400",
              "irq": 18
            },
            {
              "name": "TIM2",
              "base": "0x40000000",
              "irq": 15
            },
            {
              "name": "TIM3",
              "base": "0x40000400"
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "control register 2"
            },
            "SMCR": {
              "offset": "0x08",
              "size": 32,
              "description": "slave mode control register"
            },
            "DIER": {
              "offset": "0x0C",
              "size": 32,
              "description": "DMA/Interrupt enable register"
            },
            "SR": {
              "offset": "0x10",
              "size": 32,
              "description": "status register"
            },
            "EGR": {
              "offset": "0x14",
              "size": 32,
              "description": "event generation register"
            },
            "CCMR1_Output": {
              "offset": "0x18",
              "size": 32,
              "description": "capture/compare mode register (output\n          mode)"
            },
            "CCMR1_Input": {
              "offset": "0x18",
              "size": 32,
              "description": "capture/compare mode register 1 (input\n          mode)"
            },
            "CCER": {
              "offset": "0x20",
              "size": 32,
              "description": "capture/compare enable\n          register"
            },
            "CNT": {
              "offset": "0x24",
              "size": 32,
              "description": "counter"
            },
            "PSC": {
              "offset": "0x28",
              "size": 32,
              "description": "prescaler"
            },
            "ARR": {
              "offset": "0x2C",
              "size": 32,
              "description": "auto-reload register"
            },
            "RCR": {
              "offset": "0x30",
              "size": 32,
              "description": "repetition counter register"
            },
            "CCR1": {
              "offset": "0x34",
              "size": 32,
              "description": "capture/compare register 1"
            },
            "CCR2": {
              "offset": "0x38",
              "size": 32,
              "description": "capture/compare register 2"
            },
            "BDTR": {
              "offset": "0x44",
              "size": 32,
              "description": "break and dead-time register"
            },
            "DCR": {
              "offset": "0x48",
              "size": 32,
              "description": "DMA control register"
            },
            "DMAR": {
              "offset": "0x4C",
              "size": 32,
              "description": "DMA address for full transfer"
            }
          },
          "bits": {
            "CR1": {
              "CEN": {
                "bit": 0,
                "description": "Counter enable\nNote: External clock and gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware."
              },
              "UDIS": {
                "bit": 1,
                "description": "Update disable\nThis bit is set and cleared by software to enable/disable UEV event generation.\nCounter overflow/underflow\nSetting the UG bit\nUpdate generation through the slave mode controller\nBuffered registers are then loaded with their preload values."
              },
              "URS": {
                "bit": 2,
                "description": "Update request source\nThis bit is set and cleared by software to select the UEV event sources.\nCounter overflow/underflow\nSetting the UG bit\nUpdate generation through the slave mode controller"
              },
              "OPM": {
                "bit": 3,
                "description": "One-pulse mode"
              },
              "ARPE": {
                "bit": 7,
                "description": "Auto-reload preload enable"
              },
              "CKD": {
                "bit": 8,
                "description": "Clock division\nThis bitfield indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (tDTS) used by the dead-time generators and the digital filters (TIx)",
                "width": 2
              },
              "UIFREMAP": {
                "bit": 11,
                "description": "UIF status bit remapping"
              }
            },
            "CR2": {
              "CCPC": {
                "bit": 0,
                "description": "Capture/compare preloaded control\nNote: This bit acts only on channels that have a complementary output."
              },
              "CCUS": {
                "bit": 2,
                "description": "Capture/compare control update selection\nNote: This bit acts only on channels that have a complementary output."
              },
              "CCDS": {
                "bit": 3,
                "description": "Capture/compare DMA selection"
              },
              "MMS": {
                "bit": 4,
                "description": "Master mode selection\nThese bits allow to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows:",
                "width": 3
              },
              "TI1S": {
                "bit": 7,
                "description": "TI1 selection"
              },
              "OIS1": {
                "bit": 8,
                "description": "Output Idle state 1 (OC1 output)\nNote: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIM15_BDTR register)."
              },
              "OIS1N": {
                "bit": 9,
                "description": "Output Idle state 1 (OC1N output)\nNote: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIM15_BDTR register)."
              },
              "OIS2": {
                "bit": 10,
                "description": "Output idle state 2 (OC2 output)\nNote: This bit cannot be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in the TIM15_BDTR register)."
              }
            },
            "SMCR": {
              "SMS1": {
                "bit": 0,
                "description": "Slave mode selection\nWhen external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description.\nOther codes: reserved.\nNote: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=\u00e2\u0080\u009900100\u00e2\u0080\u0099). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal.\nNote: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.",
                "width": 3
              },
              "TS1": {
                "bit": 4,
                "description": "Trigger selection\nThis bit field selects the trigger input to be used to synchronize the counter.\nOther: Reserved\nSee  for more details on ITRx meaning for each Timer.\nNote: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.",
                "width": 3
              },
              "MSM": {
                "bit": 7,
                "description": "Master/slave mode"
              },
              "SMS2": {
                "bit": 16,
                "description": "Slave mode selection\nWhen external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description.\nOther codes: reserved.\nNote: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=\u00e2\u0080\u009900100\u00e2\u0080\u0099). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal.\nNote: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer."
              },
              "TS2": {
                "bit": 20,
                "description": "Trigger selection\nThis bit field selects the trigger input to be used to synchronize the counter.\nOther: Reserved\nSee  for more details on ITRx meaning for each Timer.\nNote: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.",
                "width": 2
              }
            },
            "DIER": {
              "UIE": {
                "bit": 0,
                "description": "Update interrupt enable"
              },
              "CC1IE": {
                "bit": 1,
                "description": "Capture/Compare 1 interrupt enable"
              },
              "CC2IE": {
                "bit": 2,
                "description": "Capture/Compare 2 interrupt enable"
              },
              "COMIE": {
                "bit": 5,
                "description": "COM interrupt enable"
              },
              "TIE": {
                "bit": 6,
                "description": "Trigger interrupt enable"
              },
              "BIE": {
                "bit": 7,
                "description": "Break interrupt enable"
              },
              "UDE": {
                "bit": 8,
                "description": "Update DMA request enable"
              },
              "CC1DE": {
                "bit": 9,
                "description": "Capture/Compare 1 DMA request enable"
              },
              "CC2DE": {
                "bit": 10,
                "description": "Capture/Compare 2 DMA request enable"
              },
              "COMDE": {
                "bit": 13,
                "description": "COM DMA request enable"
              },
              "TDE": {
                "bit": 14,
                "description": "Trigger DMA request enable"
              }
            },
            "SR": {
              "UIF": {
                "bit": 0,
                "description": "Update interrupt flag\nThis bit is set by hardware on an update event. It is cleared by software.\nAt overflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register.\nWhen CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register.\nWhen CNT is reinitialized by a trigger event (refer to control register (TIM15_SMCR)), if URS=0 and UDIS=0 in the TIMx_CR1 register."
              },
              "CC1IF": {
                "bit": 1,
                "description": "Capture/Compare 1 interrupt flag\nThis flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only).\nIf channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description.\nIf channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER)."
              },
              "CC2IF": {
                "bit": 2,
                "description": "Capture/Compare 2 interrupt flag\nrefer to CC1IF description"
              },
              "COMIF": {
                "bit": 5,
                "description": "COM interrupt flag\nThis flag is set by hardware on a COM event (once the capture/compare control bits \u00e2\u0080\u0093CCxE, CCxNE, OCxM\u00e2\u0080\u0093 have been updated). It is cleared by software."
              },
              "TIF": {
                "bit": 6,
                "description": "Trigger interrupt flag\nThis flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode, both edges in case gated mode is selected). It is set when the counter starts or stops when gated mode is selected. It is cleared by software."
              },
              "BIF": {
                "bit": 7,
                "description": "Break interrupt flag\nThis flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active."
              },
              "CC1OF": {
                "bit": 9,
                "description": "Capture/Compare 1 overcapture flag\nThis flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0\u00e2\u0080\u0099."
              },
              "CC2OF": {
                "bit": 10,
                "description": "Capture/Compare 2 overcapture flag\nRefer to CC1OF description"
              }
            },
            "EGR": {
              "UG": {
                "bit": 0,
                "description": "Update generation\nThis bit can be set by software, it is automatically cleared by hardware."
              },
              "CC1G": {
                "bit": 1,
                "description": "Capture/Compare 1 generation\nThis bit is set by software in order to generate an event, it is automatically cleared by hardware.\nIf channel CC1 is configured as output:\nCC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled.\nIf channel CC1 is configured as input:\nThe current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high."
              },
              "CC2G": {
                "bit": 2,
                "description": "Capture/Compare 2 generation\nRefer to CC1G description"
              },
              "COMG": {
                "bit": 5,
                "description": "Capture/Compare control update generation\nThis bit can be set by software, it is automatically cleared by hardware.\nNote: This bit acts only on channels that have a complementary output."
              },
              "TG": {
                "bit": 6,
                "description": "Trigger generation\nThis bit is set by software in order to generate an event, it is automatically cleared by hardware."
              },
              "BG": {
                "bit": 7,
                "description": "Break generation\nThis bit is set by software in order to generate an event, it is automatically cleared by hardware."
              }
            },
            "CCMR1_Output": {
              "CC1S": {
                "bit": 0,
                "description": "Capture/Compare 1 selection\nThis bit-field defines the direction of the channel (input/output) as well as the used input.\nNote: CC1S bits are writable only when the channel is OFF (CC1E = '0\u00e2\u0080\u0099 in TIMx_CCER).",
                "width": 2
              },
              "OC1FE": {
                "bit": 2,
                "description": "Output Compare 1 fast enable\nThis bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger."
              },
              "OC1PE": {
                "bit": 3,
                "description": "Output Compare 1 preload enable\nNote: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=\u00e2\u0080\u009900\u00e2\u0080\u0099 (the channel is configured in output).\nThe PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed."
              },
              "OC1M1": {
                "bit": 4,
                "description": "Output Compare 1 mode\nThese bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits.\nNote: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=\u00e2\u0080\u009900\u00e2\u0080\u0099 (the channel is configured in output).\nIn PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from \u00e2\u0080\u009cfrozen\u00e2\u0080\u009d mode to \u00e2\u0080\u009cPWM\u00e2\u0080\u009d mode.\nOn channels that have a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated.\nThe OC1M[3] bit is not contiguous, located in bit 16.",
                "width": 3
              },
              "CC2S": {
                "bit": 8,
                "description": "Capture/Compare 2 selection\nThis bit-field defines the direction of the channel (input/output) as well as the used input.\nNote: CC2S bits are writable only when the channel is OFF (CC2E = '0\u00e2\u0080\u0099 in TIMx_CCER).",
                "width": 2
              },
              "OC2FE": {
                "bit": 10,
                "description": "Output Compare 2 fast enable"
              },
              "OC2PE": {
                "bit": 11,
                "description": "Output Compare 2 preload enable"
              },
              "OC2M1": {
                "bit": 12,
                "description": "Output Compare 2 mode",
                "width": 3
              },
              "OC1M2": {
                "bit": 16,
                "description": "Output Compare 1 mode\nThese bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits.\nNote: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=\u00e2\u0080\u009900\u00e2\u0080\u0099 (the channel is configured in output).\nIn PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from \u00e2\u0080\u009cfrozen\u00e2\u0080\u009d mode to \u00e2\u0080\u009cPWM\u00e2\u0080\u009d mode.\nOn channels that have a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated.\nThe OC1M[3] bit is not contiguous, located in bit 16."
              },
              "OC2M2": {
                "bit": 24,
                "description": "Output Compare 2 mode"
              }
            },
            "CCMR1_Input": {
              "CC1S": {
                "bit": 0,
                "description": "Capture/Compare 1 Selection\nThis bit-field defines the direction of the channel (input/output) as well as the used input.\nNote: CC1S bits are writable only when the channel is OFF (CC1E = '0\u00e2\u0080\u0099 in TIMx_CCER).",
                "width": 2
              },
              "IC1PSC": {
                "bit": 2,
                "description": "Input capture 1 prescaler\nThis bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=\u00e2\u0080\u00990\u00e2\u0080\u0099 (TIMx_CCER register).",
                "width": 2
              },
              "IC1F": {
                "bit": 4,
                "description": "Input capture 1 filter\nThis bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:",
                "width": 4
              },
              "CC2S": {
                "bit": 8,
                "description": "Capture/Compare 2 selection\nThis bit-field defines the direction of the channel (input/output) as well as the used input.\nNote: CC2S bits are writable only when the channel is OFF (CC2E = '0\u00e2\u0080\u0099 in TIMx_CCER).",
                "width": 2
              },
              "IC2PSC": {
                "bit": 10,
                "description": "Input capture 2 prescaler",
                "width": 2
              },
              "IC2F": {
                "bit": 12,
                "description": "Input capture 2 filter",
                "width": 4
              }
            },
            "CCER": {
              "CC1E": {
                "bit": 0,
                "description": "Capture/Compare 1 output enable\nWhen CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to  for details."
              },
              "CC1P": {
                "bit": 1,
                "description": "Capture/Compare 1 output polarity\nWhen CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations.\nCC1NP=0, CC1P=0:\tnon-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode).\nCC1NP=0, CC1P=1:\tinverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode).\nCC1NP=1, CC1P=1:\tnon-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode.\nCC1NP=1, CC1P=0: this configuration is reserved, it must not be used.\nNote: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).\nOn channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated."
              },
              "CC1NE": {
                "bit": 2,
                "description": "Capture/Compare 1 complementary output enable"
              },
              "CC1NP": {
                "bit": 3,
                "description": "Capture/Compare 1 complementary output polarity\nCC1 channel configured as output:\nCC1 channel configured as input:\nThis bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer\nto CC1P description.\nNote: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=\u00e2\u0080\u009d00\u00e2\u0080\u009d (the channel is configured in output).\nOn channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated."
              },
              "CC2E": {
                "bit": 4,
                "description": "Capture/Compare 2 output enable\nRefer to CC1E description"
              },
              "CC2P": {
                "bit": 5,
                "description": "Capture/Compare 2 output polarity\nRefer to CC1P description"
              },
              "CC2NP": {
                "bit": 7,
                "description": "Capture/Compare 2 complementary output polarity\nRefer to CC1NP description"
              }
            },
            "CNT": {
              "CNT": {
                "bit": 0,
                "description": "counter value",
                "width": 16
              },
              "UIFCPY": {
                "bit": 31,
                "description": "UIF Copy"
              }
            },
            "PSC": {
              "PSC": {
                "bit": 0,
                "description": "Prescaler value",
                "width": 16
              }
            },
            "ARR": {
              "ARR": {
                "bit": 0,
                "description": "Auto-reload value",
                "width": 16
              }
            },
            "RCR": {
              "REP": {
                "bit": 0,
                "description": "Repetition counter value",
                "width": 8
              }
            },
            "CCR1": {
              "CCR1": {
                "bit": 0,
                "description": "Capture/Compare 1 value",
                "width": 16
              }
            },
            "CCR2": {
              "CCR2": {
                "bit": 0,
                "description": "Capture/Compare 2 value",
                "width": 16
              }
            },
            "BDTR": {
              "DTG": {
                "bit": 0,
                "description": "Dead-time generator setup\nThis bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration.\nDTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS\nDTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS\nDTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS\nDTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS\nExample if TDTS=125ns (8MHz), dead-time possible values are:\n0 to 15875 ns by 125 ns steps,\n16 \u00c2\u00b5s to 31750 ns by 250 ns steps,\n32 \u00c2\u00b5s to 63 \u00c2\u00b5s by 1 \u00c2\u00b5s steps,\n64 \u00c2\u00b5s to 126 \u00c2\u00b5s by 2 \u00c2\u00b5s steps\nNote: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).",
                "width": 8
              },
              "LOCK": {
                "bit": 8,
                "description": "Lock configuration\nThese bits offer a write protection against software errors.\nNote: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.",
                "width": 2
              },
              "OSSI": {
                "bit": 10,
                "description": "Off-state selection for Idle mode\nThis bit is used when MOE=0 on channels configured as outputs.\nSee OC/OCN enable description for more details (enable register (TIM15_CCER) on page\u00c2\u00a0818).\nNote: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register)."
              },
              "OSSR": {
                "bit": 11,
                "description": "Off-state selection for Run mode\nThis bit is used when MOE=1 on channels that have a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer.\nSee OC/OCN enable description for more details (enable register (TIM15_CCER) on page\u00c2\u00a0818).\nNote: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register)."
              },
              "BKE": {
                "bit": 12,
                "description": "Break enable\n1; Break inputs (BRK and CCS clock failure event) enabled\nThis bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).\nNote: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective."
              },
              "BKP": {
                "bit": 13,
                "description": "Break polarity\nNote: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).\nAny write operation to this bit takes a delay of 1 APB clock cycle to become effective."
              },
              "AOE": {
                "bit": 14,
                "description": "Automatic output enable\nNote: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register)."
              },
              "MOE": {
                "bit": 15,
                "description": "Main output enable\nThis bit is cleared asynchronously by hardware as soon as the break input is active. It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output.\nSee OC/OCN enable description for more details (enable register (TIM15_CCER) on page\u00c2\u00a0818)."
              },
              "BKF": {
                "bit": 16,
                "description": "Break filter\nThis bit-field defines the frequency used to sample the BRK input signal and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N events are needed to validate a transition on the output:\nNote: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).",
                "width": 4
              },
              "BKDSRM": {
                "bit": 26,
                "description": "Break Disarm\nThis bit is cleared by hardware when no break source is active.\nThe BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared.\nNote: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective."
              },
              "BKBID": {
                "bit": 28,
                "description": "Break Bidirectional\nIn the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices.\nNote: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).\nNote: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective."
              }
            },
            "DCR": {
              "DBA": {
                "bit": 0,
                "description": "DMA base address\nThis 5-bit field defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register.\nExample:\n...",
                "width": 5
              },
              "DBL": {
                "bit": 8,
                "description": "DMA burst length\nThis 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address).\n...",
                "width": 5
              }
            },
            "DMAR": {
              "DMAB": {
                "bit": 0,
                "description": "DMA register for burst\n              accesses",
                "width": 16
              }
            }
          }
        },
        "USART": {
          "instances": [
            {
              "name": "USART1",
              "base": "0x40013800",
              "irq": 27
            },
            {
              "name": "USART2",
              "base": "0x40004400",
              "irq": 28
            },
            {
              "name": "USART3",
              "base": "0x40004800",
              "irq": 29
            },
            {
              "name": "USART4",
              "base": "0x40004C00"
            },
            {
              "name": "LPUART",
              "base": "0x40008000"
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "Control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "Control register 2"
            },
            "CR3": {
              "offset": "0x08",
              "size": 32,
              "description": "Control register 3"
            },
            "BRR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Baud rate register"
            },
            "GTPR": {
              "offset": "0x10",
              "size": 32,
              "description": "Guard time and prescaler\n          register"
            },
            "RTOR": {
              "offset": "0x14",
              "size": 32,
              "description": "Receiver timeout register"
            },
            "RQR": {
              "offset": "0x18",
              "size": 32,
              "description": "Request register"
            },
            "ISR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Interrupt & status\n          register"
            },
            "ICR": {
              "offset": "0x20",
              "size": 32,
              "description": "Interrupt flag clear register"
            },
            "RDR": {
              "offset": "0x24",
              "size": 32,
              "description": "Receive data register"
            },
            "TDR": {
              "offset": "0x28",
              "size": 32,
              "description": "Transmit data register"
            },
            "PRESC": {
              "offset": "0x2C",
              "size": 32,
              "description": "Prescaler register"
            }
          },
          "bits": {
            "CR1": {
              "RXFFIE": {
                "bit": 31,
                "description": "RXFIFO Full interrupt\n              enable"
              },
              "TXFEIE": {
                "bit": 30,
                "description": "TXFIFO empty interrupt\n              enable"
              },
              "FIFOEN": {
                "bit": 29,
                "description": "FIFO mode enable"
              },
              "M1": {
                "bit": 28,
                "description": "Word length"
              },
              "EOBIE": {
                "bit": 27,
                "description": "End of Block interrupt\n              enable"
              },
              "RTOIE": {
                "bit": 26,
                "description": "Receiver timeout interrupt\n              enable"
              },
              "DEAT": {
                "bit": 21,
                "description": "DEAT",
                "width": 5
              },
              "DEDT": {
                "bit": 16,
                "description": "DEDT",
                "width": 5
              },
              "OVER8": {
                "bit": 15,
                "description": "Oversampling mode"
              },
              "CMIE": {
                "bit": 14,
                "description": "Character match interrupt\n              enable"
              },
              "MME": {
                "bit": 13,
                "description": "Mute mode enable"
              },
              "M0": {
                "bit": 12,
                "description": "Word length"
              },
              "WAKE": {
                "bit": 11,
                "description": "Receiver wakeup method"
              },
              "PCE": {
                "bit": 10,
                "description": "Parity control enable"
              },
              "PS": {
                "bit": 9,
                "description": "Parity selection"
              },
              "PEIE": {
                "bit": 8,
                "description": "PE interrupt enable"
              },
              "TXEIE": {
                "bit": 7,
                "description": "interrupt enable"
              },
              "TCIE": {
                "bit": 6,
                "description": "Transmission complete interrupt\n              enable"
              },
              "RXNEIE": {
                "bit": 5,
                "description": "RXNE interrupt enable"
              },
              "IDLEIE": {
                "bit": 4,
                "description": "IDLE interrupt enable"
              },
              "TE": {
                "bit": 3,
                "description": "Transmitter enable"
              },
              "RE": {
                "bit": 2,
                "description": "Receiver enable"
              },
              "UESM": {
                "bit": 1,
                "description": "USART enable in Stop mode"
              },
              "UE": {
                "bit": 0,
                "description": "USART enable"
              }
            },
            "CR2": {
              "ADD4_7": {
                "bit": 28,
                "description": "Address of the USART node",
                "width": 4
              },
              "ADD0_3": {
                "bit": 24,
                "description": "Address of the USART node",
                "width": 4
              },
              "RTOEN": {
                "bit": 23,
                "description": "Receiver timeout enable"
              },
              "ABRMOD": {
                "bit": 21,
                "description": "Auto baud rate mode",
                "width": 2
              },
              "ABREN": {
                "bit": 20,
                "description": "Auto baud rate enable"
              },
              "MSBFIRST": {
                "bit": 19,
                "description": "Most significant bit first"
              },
              "TAINV": {
                "bit": 18,
                "description": "Binary data inversion"
              },
              "TXINV": {
                "bit": 17,
                "description": "TX pin active level\n              inversion"
              },
              "RXINV": {
                "bit": 16,
                "description": "RX pin active level\n              inversion"
              },
              "SWAP": {
                "bit": 15,
                "description": "Swap TX/RX pins"
              },
              "LINEN": {
                "bit": 14,
                "description": "LIN mode enable"
              },
              "STOP": {
                "bit": 12,
                "description": "STOP bits",
                "width": 2
              },
              "CLKEN": {
                "bit": 11,
                "description": "Clock enable"
              },
              "CPOL": {
                "bit": 10,
                "description": "Clock polarity"
              },
              "CPHA": {
                "bit": 9,
                "description": "Clock phase"
              },
              "LBCL": {
                "bit": 8,
                "description": "Last bit clock pulse"
              },
              "LBDIE": {
                "bit": 6,
                "description": "LIN break detection interrupt\n              enable"
              },
              "LBDL": {
                "bit": 5,
                "description": "LIN break detection length"
              },
              "ADDM7": {
                "bit": 4,
                "description": "7-bit Address Detection/4-bit Address\n              Detection"
              },
              "DIS_NSS": {
                "bit": 3,
                "description": "When the DSI_NSS bit is set, the NSS pin\n              input will be ignored"
              },
              "SLVEN": {
                "bit": 0,
                "description": "Synchronous Slave mode\n              enable"
              }
            },
            "CR3": {
              "TXFTCFG": {
                "bit": 29,
                "description": "TXFIFO threshold\n              configuration",
                "width": 3
              },
              "RXFTIE": {
                "bit": 28,
                "description": "RXFIFO threshold interrupt\n              enable"
              },
              "RXFTCFG": {
                "bit": 25,
                "description": "Receive FIFO threshold\n              configuration",
                "width": 3
              },
              "TCBGTIE": {
                "bit": 24,
                "description": "Tr Complete before guard time, interrupt\n              enable"
              },
              "TXFTIE": {
                "bit": 23,
                "description": "threshold interrupt enable"
              },
              "WUFIE": {
                "bit": 22,
                "description": "Wakeup from Stop mode interrupt\n              enable"
              },
              "WUS": {
                "bit": 20,
                "description": "Wakeup from Stop mode interrupt flag\n              selection",
                "width": 2
              },
              "SCARCNT": {
                "bit": 17,
                "description": "Smartcard auto-retry count",
                "width": 3
              },
              "DEP": {
                "bit": 15,
                "description": "Driver enable polarity\n              selection"
              },
              "DEM": {
                "bit": 14,
                "description": "Driver enable mode"
              },
              "DDRE": {
                "bit": 13,
                "description": "DMA Disable on Reception\n              Error"
              },
              "OVRDIS": {
                "bit": 12,
                "description": "Overrun Disable"
              },
              "ONEBIT": {
                "bit": 11,
                "description": "One sample bit method\n              enable"
              },
              "CTSIE": {
                "bit": 10,
                "description": "CTS interrupt enable"
              },
              "CTSE": {
                "bit": 9,
                "description": "CTS enable"
              },
              "RTSE": {
                "bit": 8,
                "description": "RTS enable"
              },
              "DMAT": {
                "bit": 7,
                "description": "DMA enable transmitter"
              },
              "DMAR": {
                "bit": 6,
                "description": "DMA enable receiver"
              },
              "SCEN": {
                "bit": 5,
                "description": "Smartcard mode enable"
              },
              "NACK": {
                "bit": 4,
                "description": "Smartcard NACK enable"
              },
              "HDSEL": {
                "bit": 3,
                "description": "Half-duplex selection"
              },
              "IRLP": {
                "bit": 2,
                "description": "Ir low-power"
              },
              "IREN": {
                "bit": 1,
                "description": "Ir mode enable"
              },
              "EIE": {
                "bit": 0,
                "description": "Error interrupt enable"
              }
            },
            "BRR": {
              "BRR_4_15": {
                "bit": 4,
                "description": "BRR_4_15",
                "width": 12
              },
              "BRR_0_3": {
                "bit": 0,
                "description": "BRR_0_3",
                "width": 4
              }
            },
            "GTPR": {
              "GT": {
                "bit": 8,
                "description": "Guard time value",
                "width": 8
              },
              "PSC": {
                "bit": 0,
                "description": "Prescaler value",
                "width": 8
              }
            },
            "RTOR": {
              "BLEN": {
                "bit": 24,
                "description": "Block Length",
                "width": 8
              },
              "RTO": {
                "bit": 0,
                "description": "Receiver timeout value",
                "width": 24
              }
            },
            "RQR": {
              "TXFRQ": {
                "bit": 4,
                "description": "Transmit data flush\n              request"
              },
              "RXFRQ": {
                "bit": 3,
                "description": "Receive data flush request"
              },
              "MMRQ": {
                "bit": 2,
                "description": "Mute mode request"
              },
              "SBKRQ": {
                "bit": 1,
                "description": "Send break request"
              },
              "ABRRQ": {
                "bit": 0,
                "description": "Auto baud rate request"
              }
            },
            "ISR": {
              "TXFT": {
                "bit": 27,
                "description": "TXFIFO threshold flag"
              },
              "RXFT": {
                "bit": 26,
                "description": "RXFIFO threshold flag"
              },
              "TCBGT": {
                "bit": 25,
                "description": "Transmission complete before guard time\n              flag"
              },
              "RXFF": {
                "bit": 24,
                "description": "RXFIFO Full"
              },
              "TXFE": {
                "bit": 23,
                "description": "TXFIFO Empty"
              },
              "REACK": {
                "bit": 22,
                "description": "REACK"
              },
              "TEACK": {
                "bit": 21,
                "description": "TEACK"
              },
              "WUF": {
                "bit": 20,
                "description": "WUF"
              },
              "RWU": {
                "bit": 19,
                "description": "RWU"
              },
              "SBKF": {
                "bit": 18,
                "description": "SBKF"
              },
              "CMF": {
                "bit": 17,
                "description": "CMF"
              },
              "BUSY": {
                "bit": 16,
                "description": "BUSY"
              },
              "ABRF": {
                "bit": 15,
                "description": "ABRF"
              },
              "ABRE": {
                "bit": 14,
                "description": "ABRE"
              },
              "UDR": {
                "bit": 13,
                "description": "SPI slave underrun error\n              flag"
              },
              "EOBF": {
                "bit": 12,
                "description": "EOBF"
              },
              "RTOF": {
                "bit": 11,
                "description": "RTOF"
              },
              "CTS": {
                "bit": 10,
                "description": "CTS"
              },
              "CTSIF": {
                "bit": 9,
                "description": "CTSIF"
              },
              "LBDF": {
                "bit": 8,
                "description": "LBDF"
              },
              "TXE": {
                "bit": 7,
                "description": "TXE"
              },
              "TC": {
                "bit": 6,
                "description": "TC"
              },
              "RXNE": {
                "bit": 5,
                "description": "RXNE"
              },
              "IDLE": {
                "bit": 4,
                "description": "IDLE"
              },
              "ORE": {
                "bit": 3,
                "description": "ORE"
              },
              "NF": {
                "bit": 2,
                "description": "NF"
              },
              "FE": {
                "bit": 1,
                "description": "FE"
              },
              "PE": {
                "bit": 0,
                "description": "PE"
              }
            },
            "ICR": {
              "WUCF": {
                "bit": 20,
                "description": "Wakeup from Stop mode clear\n              flag"
              },
              "CMCF": {
                "bit": 17,
                "description": "Character match clear flag"
              },
              "UDRCF": {
                "bit": 13,
                "description": "SPI slave underrun clear\n              flag"
              },
              "EOBCF": {
                "bit": 12,
                "description": "End of block clear flag"
              },
              "RTOCF": {
                "bit": 11,
                "description": "Receiver timeout clear\n              flag"
              },
              "CTSCF": {
                "bit": 9,
                "description": "CTS clear flag"
              },
              "LBDCF": {
                "bit": 8,
                "description": "LIN break detection clear\n              flag"
              },
              "TCBGTCF": {
                "bit": 7,
                "description": "Transmission complete before Guard time\n              clear flag"
              },
              "TCCF": {
                "bit": 6,
                "description": "Transmission complete clear\n              flag"
              },
              "TXFECF": {
                "bit": 5,
                "description": "TXFIFO empty clear flag"
              },
              "IDLECF": {
                "bit": 4,
                "description": "Idle line detected clear\n              flag"
              },
              "ORECF": {
                "bit": 3,
                "description": "Overrun error clear flag"
              },
              "NCF": {
                "bit": 2,
                "description": "Noise detected clear flag"
              },
              "FECF": {
                "bit": 1,
                "description": "Framing error clear flag"
              },
              "PECF": {
                "bit": 0,
                "description": "Parity error clear flag"
              }
            },
            "RDR": {
              "RDR": {
                "bit": 0,
                "description": "Receive data value",
                "width": 9
              }
            },
            "TDR": {
              "TDR": {
                "bit": 0,
                "description": "Transmit data value",
                "width": 9
              }
            },
            "PRESC": {
              "PRESCALER": {
                "bit": 0,
                "description": "Clock prescaler",
                "width": 4
              }
            }
          }
        },
        "SPI": {
          "instances": [
            {
              "name": "SPI1",
              "base": "0x40013000",
              "irq": 25
            },
            {
              "name": "SPI2",
              "base": "0x40003800",
              "irq": 26
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "control register 2"
            },
            "SR": {
              "offset": "0x08",
              "size": 32,
              "description": "status register"
            },
            "DR": {
              "offset": "0x0C",
              "size": 32,
              "description": "data register"
            },
            "CRCPR": {
              "offset": "0x10",
              "size": 32,
              "description": "CRC polynomial register"
            },
            "RXCRCR": {
              "offset": "0x14",
              "size": 32,
              "description": "RX CRC register"
            },
            "TXCRCR": {
              "offset": "0x18",
              "size": 32,
              "description": "TX CRC register"
            },
            "I2SCFGR": {
              "offset": "0x1C",
              "size": 32,
              "description": "configuration register"
            },
            "I2SPR": {
              "offset": "0x20",
              "size": 32,
              "description": "prescaler register"
            },
            "HWCFGR": {
              "offset": "0x3F0",
              "size": 32,
              "description": "hardware configuration\n          register"
            },
            "VERR": {
              "offset": "0x3F4",
              "size": 32,
              "description": "EXTI IP Version register"
            },
            "IPIDR": {
              "offset": "0x3F8",
              "size": 32,
              "description": "EXTI Identification register"
            },
            "SIDR": {
              "offset": "0x3FC",
              "size": 32,
              "description": "EXTI Size ID register"
            }
          },
          "bits": {
            "CR1": {
              "BIDIMODE": {
                "bit": 15,
                "description": "Bidirectional data mode\n              enable"
              },
              "BIDIOE": {
                "bit": 14,
                "description": "Output enable in bidirectional\n              mode"
              },
              "CRCEN": {
                "bit": 13,
                "description": "Hardware CRC calculation\n              enable"
              },
              "CRCNEXT": {
                "bit": 12,
                "description": "CRC transfer next"
              },
              "DFF": {
                "bit": 11,
                "description": "Data frame format"
              },
              "RXONLY": {
                "bit": 10,
                "description": "Receive only"
              },
              "SSM": {
                "bit": 9,
                "description": "Software slave management"
              },
              "SSI": {
                "bit": 8,
                "description": "Internal slave select"
              },
              "LSBFIRST": {
                "bit": 7,
                "description": "Frame format"
              },
              "SPE": {
                "bit": 6,
                "description": "SPI enable"
              },
              "BR": {
                "bit": 3,
                "description": "Baud rate control",
                "width": 3
              },
              "MSTR": {
                "bit": 2,
                "description": "Master selection"
              },
              "CPOL": {
                "bit": 1,
                "description": "Clock polarity"
              },
              "CPHA": {
                "bit": 0,
                "description": "Clock phase"
              }
            },
            "CR2": {
              "RXDMAEN": {
                "bit": 0,
                "description": "Rx buffer DMA enable"
              },
              "TXDMAEN": {
                "bit": 1,
                "description": "Tx buffer DMA enable"
              },
              "SSOE": {
                "bit": 2,
                "description": "SS output enable"
              },
              "NSSP": {
                "bit": 3,
                "description": "NSS pulse management"
              },
              "FRF": {
                "bit": 4,
                "description": "Frame format"
              },
              "ERRIE": {
                "bit": 5,
                "description": "Error interrupt enable"
              },
              "RXNEIE": {
                "bit": 6,
                "description": "RX buffer not empty interrupt\n              enable"
              },
              "TXEIE": {
                "bit": 7,
                "description": "Tx buffer empty interrupt\n              enable"
              },
              "DS": {
                "bit": 8,
                "description": "Data size",
                "width": 4
              },
              "FRXTH": {
                "bit": 12,
                "description": "FIFO reception threshold"
              },
              "LDMA_RX": {
                "bit": 13,
                "description": "Last DMA transfer for\n              reception"
              },
              "LDMA_TX": {
                "bit": 14,
                "description": "Last DMA transfer for\n              transmission"
              }
            },
            "SR": {
              "RXNE": {
                "bit": 0,
                "description": "Receive buffer not empty"
              },
              "TXE": {
                "bit": 1,
                "description": "Transmit buffer empty"
              },
              "CHSIDE": {
                "bit": 2,
                "description": "Channel side"
              },
              "UDR": {
                "bit": 3,
                "description": "Underrun flag"
              },
              "CRCERR": {
                "bit": 4,
                "description": "CRC error flag"
              },
              "MODF": {
                "bit": 5,
                "description": "Mode fault"
              },
              "OVR": {
                "bit": 6,
                "description": "Overrun flag"
              },
              "BSY": {
                "bit": 7,
                "description": "Busy flag"
              },
              "TIFRFE": {
                "bit": 8,
                "description": "TI frame format error"
              },
              "FRLVL": {
                "bit": 9,
                "description": "FIFO reception level",
                "width": 2
              },
              "FTLVL": {
                "bit": 11,
                "description": "FIFO transmission level",
                "width": 2
              }
            },
            "DR": {
              "DR": {
                "bit": 0,
                "description": "Data register",
                "width": 16
              }
            },
            "CRCPR": {
              "CRCPOLY": {
                "bit": 0,
                "description": "CRC polynomial register",
                "width": 16
              }
            },
            "RXCRCR": {
              "RxCRC": {
                "bit": 0,
                "description": "Rx CRC register",
                "width": 16
              }
            },
            "TXCRCR": {
              "TxCRC": {
                "bit": 0,
                "description": "Tx CRC register",
                "width": 16
              }
            },
            "I2SCFGR": {
              "CHLEN": {
                "bit": 0,
                "description": "Channel length (number of bits per audio\n              channel)"
              },
              "DATLEN": {
                "bit": 1,
                "description": "Data length to be\n              transferred",
                "width": 2
              },
              "CKPOL": {
                "bit": 3,
                "description": "Inactive state clock\n              polarity"
              },
              "I2SSTD": {
                "bit": 4,
                "description": "standard selection",
                "width": 2
              },
              "PCMSYNC": {
                "bit": 7,
                "description": "PCM frame synchronization"
              },
              "I2SCFG": {
                "bit": 8,
                "description": "I2S configuration mode",
                "width": 2
              },
              "SE2": {
                "bit": 10,
                "description": "I2S enable"
              },
              "I2SMOD": {
                "bit": 11,
                "description": "I2S mode selection"
              }
            },
            "I2SPR": {
              "I2SDIV": {
                "bit": 0,
                "description": "linear prescaler",
                "width": 8
              },
              "ODD": {
                "bit": 8,
                "description": "Odd factor for the\n              prescaler"
              },
              "MCKOE": {
                "bit": 9,
                "description": "Master clock output enable"
              }
            },
            "HWCFGR": {
              "CRCCFG": {
                "bit": 0,
                "description": "CRC capable at SPI mode",
                "width": 4
              },
              "I2SCFG": {
                "bit": 4,
                "description": "I2S mode implementation",
                "width": 4
              },
              "I2SCKCFG": {
                "bit": 8,
                "description": "I2S master clock generator at I2S\n              mode",
                "width": 4
              },
              "DSCFG": {
                "bit": 12,
                "description": "SPI data size\n              configuration",
                "width": 4
              },
              "NSSCFG": {
                "bit": 16,
                "description": "NSS pulse feature enhancement at SPI\n              master",
                "width": 4
              }
            },
            "VERR": {
              "MINREV": {
                "bit": 0,
                "description": "Minor Revision number",
                "width": 4
              },
              "MAJREV": {
                "bit": 4,
                "description": "Major Revision number",
                "width": 4
              }
            },
            "IPIDR": {
              "IPID": {
                "bit": 0,
                "description": "IP Identification",
                "width": 32
              }
            },
            "SIDR": {
              "SID": {
                "bit": 0,
                "description": "Size Identification",
                "width": 32
              }
            }
          }
        },
        "COMP": {
          "instances": [
            {
              "name": "COMP",
              "base": "0x40010200"
            }
          ],
          "registers": {
            "COMP1_CSR": {
              "offset": "0x00",
              "size": 32,
              "description": "Comparator 1 control and status\n          register"
            },
            "COMP2_CSR": {
              "offset": "0x04",
              "size": 32,
              "description": "Comparator 2 control and status\n          register"
            }
          },
          "bits": {
            "COMP1_CSR": {
              "EN": {
                "bit": 0,
                "description": "COMP channel 1 enable bit"
              },
              "INMSEL": {
                "bit": 4,
                "description": "Comparator 2 signal selector for\n              inverting input INM",
                "width": 4
              },
              "INPSEL": {
                "bit": 8,
                "description": "Comparator 2 signal selector for\n              non-inverting input",
                "width": 2
              },
              "WINMODE": {
                "bit": 11,
                "description": "Comparator 2 non-inverting input\n              selector for window mode"
              },
              "WINOUT": {
                "bit": 14,
                "description": "Comparator 2 output\n              selector"
              },
              "POLARITY": {
                "bit": 15,
                "description": "Comparator 2 polarity\n              selector"
              },
              "HYST": {
                "bit": 16,
                "description": "Comparator 2 hysteresis\n              selector",
                "width": 2
              },
              "PWRMODE": {
                "bit": 18,
                "description": "Comparator 2 power mode\n              selector",
                "width": 2
              },
              "BLANKSEL": {
                "bit": 20,
                "description": "Comparator 2 blanking source\n              selector",
                "width": 5
              },
              "VALUE": {
                "bit": 30,
                "description": "Comparator 2 output status"
              },
              "LOCK": {
                "bit": 31,
                "description": "COMP2_CSR register lock"
              }
            },
            "COMP2_CSR": {
              "EN": {
                "bit": 0,
                "description": "COMP channel 1 enable bit"
              },
              "INMSEL": {
                "bit": 4,
                "description": "Comparator 2 signal selector for\n              inverting input INM",
                "width": 4
              },
              "INPSEL": {
                "bit": 8,
                "description": "Comparator 2 signal selector for\n              non-inverting input",
                "width": 2
              },
              "WINMODE": {
                "bit": 11,
                "description": "Comparator 2 non-inverting input\n              selector for window mode"
              },
              "WINOUT": {
                "bit": 14,
                "description": "Comparator 2 output\n              selector"
              },
              "POLARITY": {
                "bit": 15,
                "description": "Comparator 2 polarity\n              selector"
              },
              "HYST": {
                "bit": 16,
                "description": "Comparator 2 hysteresis\n              selector",
                "width": 2
              },
              "PWRMODE": {
                "bit": 18,
                "description": "Comparator 2 power mode\n              selector",
                "width": 2
              },
              "BLANKSEL": {
                "bit": 20,
                "description": "Comparator 2 blanking source\n              selector",
                "width": 5
              },
              "VALUE": {
                "bit": 30,
                "description": "Comparator 2 output status"
              },
              "LOCK": {
                "bit": 31,
                "description": "COMP2_CSR register lock"
              }
            }
          }
        },
        "SYSCFG": {
          "instances": [
            {
              "name": "SYSCFG",
              "base": "0x40010000"
            }
          ],
          "registers": {
            "CFGR1": {
              "offset": "0x00",
              "size": 32,
              "description": "SYSCFG configuration register\n          1"
            },
            "CFGR2": {
              "offset": "0x18",
              "size": 32,
              "description": "SYSCFG configuration register\n          1"
            },
            "ITLINE0": {
              "offset": "0x80",
              "size": 32,
              "description": "interrupt line 0 status\n          register"
            },
            "ITLINE2": {
              "offset": "0x88",
              "size": 32,
              "description": "interrupt line 2 status\n          register"
            },
            "ITLINE3": {
              "offset": "0x8C",
              "size": 32,
              "description": "interrupt line 3 status\n          register"
            },
            "ITLINE4": {
              "offset": "0x90",
              "size": 32,
              "description": "interrupt line 4 status\n          register"
            },
            "ITLINE5": {
              "offset": "0x94",
              "size": 32,
              "description": "interrupt line 5 status\n          register"
            },
            "ITLINE6": {
              "offset": "0x98",
              "size": 32,
              "description": "interrupt line 6 status\n          register"
            },
            "ITLINE7": {
              "offset": "0x9C",
              "size": 32,
              "description": "interrupt line 7 status\n          register"
            },
            "ITLINE8": {
              "offset": "0xA0",
              "size": 32,
              "description": "interrupt line 8 status\n          register"
            },
            "ITLINE9": {
              "offset": "0xA4",
              "size": 32,
              "description": "interrupt line 9 status\n          register"
            },
            "ITLINE10": {
              "offset": "0xA8",
              "size": 32,
              "description": "interrupt line 10 status\n          register"
            },
            "ITLINE11": {
              "offset": "0xAC",
              "size": 32,
              "description": "interrupt line 11 status\n          register"
            },
            "ITLINE12": {
              "offset": "0xB0",
              "size": 32,
              "description": "interrupt line 12 status\n          register"
            },
            "ITLINE13": {
              "offset": "0xB4",
              "size": 32,
              "description": "interrupt line 13 status\n          register"
            },
            "ITLINE14": {
              "offset": "0xB8",
              "size": 32,
              "description": "interrupt line 14 status\n          register"
            },
            "ITLINE16": {
              "offset": "0xC0",
              "size": 32,
              "description": "interrupt line 16 status\n          register"
            },
            "ITLINE17": {
              "offset": "0xC4",
              "size": 32,
              "description": "interrupt line 17 status\n          register"
            },
            "ITLINE18": {
              "offset": "0xC8",
              "size": 32,
              "description": "interrupt line 18 status\n          register"
            },
            "ITLINE19": {
              "offset": "0xCC",
              "size": 32,
              "description": "interrupt line 19 status\n          register"
            },
            "ITLINE20": {
              "offset": "0xD0",
              "size": 32,
              "description": "interrupt line 20 status\n          register"
            },
            "ITLINE21": {
              "offset": "0xD4",
              "size": 32,
              "description": "interrupt line 21 status\n          register"
            },
            "ITLINE22": {
              "offset": "0xD8",
              "size": 32,
              "description": "interrupt line 22 status\n          register"
            },
            "ITLINE23": {
              "offset": "0xDC",
              "size": 32,
              "description": "interrupt line 23 status\n          register"
            },
            "ITLINE24": {
              "offset": "0xE0",
              "size": 32,
              "description": "interrupt line 24 status\n          register"
            },
            "ITLINE25": {
              "offset": "0xE4",
              "size": 32,
              "description": "interrupt line 25 status\n          register"
            },
            "ITLINE26": {
              "offset": "0xE8",
              "size": 32,
              "description": "interrupt line 26 status\n          register"
            },
            "ITLINE27": {
              "offset": "0xEC",
              "size": 32,
              "description": "interrupt line 27 status\n          register"
            },
            "ITLINE28": {
              "offset": "0xF0",
              "size": 32,
              "description": "interrupt line 28 status\n          register"
            },
            "ITLINE29": {
              "offset": "0xF4",
              "size": 32,
              "description": "interrupt line 29 status\n          register"
            }
          },
          "bits": {
            "CFGR1": {
              "I2C3_FMP": {
                "bit": 24,
                "description": "I2C3_FMP"
              },
              "I2C_PA10_FMP": {
                "bit": 23,
                "description": "Fast Mode Plus (FM+) driving capability\n              activation bits"
              },
              "I2C_PA9_FMP": {
                "bit": 22,
                "description": "Fast Mode Plus (FM+) driving capability\n              activation bits"
              },
              "I2C2_FMP": {
                "bit": 21,
                "description": "FM+ driving capability activation for\n              I2C2"
              },
              "I2C1_FMP": {
                "bit": 20,
                "description": "FM+ driving capability activation for\n              I2C1"
              },
              "I2C_PB9_FMP": {
                "bit": 19,
                "description": "I2C_PB9_FMP",
                "width": 4
              },
              "I2C_PB8_FMP": {
                "bit": 18,
                "description": "I2C_PB8_FMP",
                "width": 4
              },
              "I2C_PB7_FMP": {
                "bit": 17,
                "description": "I2C_PB7_FMP",
                "width": 4
              },
              "I2C_PBx_FMP": {
                "bit": 16,
                "description": "Fast Mode Plus (FM+) driving capability\n              activation bits",
                "width": 4
              },
              "UCPD2_STROBE": {
                "bit": 10,
                "description": "Strobe signal bit for\n              UCPD2"
              },
              "UCPD1_STROBE": {
                "bit": 9,
                "description": "Strobe signal bit for\n              UCPD1"
              },
              "BOOSTEN": {
                "bit": 8,
                "description": "I/O analog switch voltage booster\n              enable"
              },
              "IR_MOD": {
                "bit": 6,
                "description": "IR Modulation Envelope signal\n              selection.",
                "width": 2
              },
              "IR_POL": {
                "bit": 5,
                "description": "IR output polarity\n              selection"
              },
              "PA12_RMP": {
                "bit": 4,
                "description": "PA11 and PA12 remapping\n              bit."
              },
              "PA11_RMP": {
                "bit": 3,
                "description": "PA11_RMP"
              },
              "MEM_MODE": {
                "bit": 0,
                "description": "Memory mapping selection\n              bits",
                "width": 2
              }
            },
            "CFGR2": {
              "LOCKUP_LOCK": {
                "bit": 0,
                "description": "Cortex-M0+ LOCKUP bit enable\n              bit"
              },
              "SRAM_PARITY_LOCK": {
                "bit": 1,
                "description": "SRAM parity lock bit"
              },
              "ECC_LOCK": {
                "bit": 3,
                "description": "ECC error lock bit"
              },
              "SRAM_PEF": {
                "bit": 8,
                "description": "SRAM parity error flag"
              }
            },
            "ITLINE0": {
              "WWDG": {
                "bit": 0,
                "description": "Window watchdog interrupt pending\n              flag"
              }
            },
            "ITLINE2": {
              "TAMP": {
                "bit": 0,
                "description": "TAMP"
              },
              "RTC": {
                "bit": 1,
                "description": "RTC"
              }
            },
            "ITLINE3": {
              "FLASH_ITF": {
                "bit": 0,
                "description": "FLASH_ITF"
              },
              "FLASH_ECC": {
                "bit": 1,
                "description": "FLASH_ECC"
              }
            },
            "ITLINE4": {
              "RCC": {
                "bit": 0,
                "description": "RCC"
              }
            },
            "ITLINE5": {
              "EXTI0": {
                "bit": 0,
                "description": "EXTI0"
              },
              "EXTI1": {
                "bit": 1,
                "description": "EXTI1"
              }
            },
            "ITLINE6": {
              "EXTI2": {
                "bit": 0,
                "description": "EXTI2"
              },
              "EXTI3": {
                "bit": 1,
                "description": "EXTI3"
              }
            },
            "ITLINE7": {
              "EXTI4": {
                "bit": 0,
                "description": "EXTI4"
              },
              "EXTI5": {
                "bit": 1,
                "description": "EXTI5"
              },
              "EXTI6": {
                "bit": 2,
                "description": "EXTI6"
              },
              "EXTI7": {
                "bit": 3,
                "description": "EXTI7"
              },
              "EXTI8": {
                "bit": 4,
                "description": "EXTI8"
              },
              "EXTI9": {
                "bit": 5,
                "description": "EXTI9"
              },
              "EXTI10": {
                "bit": 6,
                "description": "EXTI10"
              },
              "EXTI11": {
                "bit": 7,
                "description": "EXTI11"
              },
              "EXTI12": {
                "bit": 8,
                "description": "EXTI12"
              },
              "EXTI13": {
                "bit": 9,
                "description": "EXTI13"
              },
              "EXTI14": {
                "bit": 10,
                "description": "EXTI14"
              },
              "EXTI15": {
                "bit": 11,
                "description": "EXTI15"
              }
            },
            "ITLINE8": {
              "USB": {
                "bit": 2,
                "description": "USB"
              }
            },
            "ITLINE9": {
              "DMA1_CH1": {
                "bit": 0,
                "description": "DMA1_CH1"
              }
            },
            "ITLINE10": {
              "DMA1_CH2": {
                "bit": 0,
                "description": "DMA1_CH1"
              },
              "DMA1_CH3": {
                "bit": 1,
                "description": "DMA1_CH3"
              }
            },
            "ITLINE11": {
              "DMAMUX": {
                "bit": 0,
                "description": "DMAMUX"
              },
              "DMA1_CH4": {
                "bit": 1,
                "description": "DMA1_CH4"
              },
              "DMA1_CH5": {
                "bit": 2,
                "description": "DMA1_CH5"
              },
              "DMA1_CH6": {
                "bit": 3,
                "description": "DMA1_CH6"
              },
              "DMA1_CH7": {
                "bit": 4,
                "description": "DMA1_CH7"
              },
              "DMA2_CH1": {
                "bit": 5,
                "description": "DMA2_CH1"
              },
              "DMA2_CH2": {
                "bit": 6,
                "description": "DMA2_CH2"
              },
              "DMA2_CH3": {
                "bit": 7,
                "description": "DMA2_CH3"
              },
              "DMA2_CH4": {
                "bit": 8,
                "description": "DMA2_CH4"
              },
              "DMA2_CH5": {
                "bit": 9,
                "description": "DMA2_CH5"
              }
            },
            "ITLINE12": {
              "ADC": {
                "bit": 0,
                "description": "ADC"
              }
            },
            "ITLINE13": {
              "TIM1_CCU": {
                "bit": 0,
                "description": "TIM1_CCU"
              },
              "TIM1_TRG": {
                "bit": 1,
                "description": "TIM1_TRG"
              },
              "TIM1_UPD": {
                "bit": 2,
                "description": "TIM1_UPD"
              },
              "TIM1_BRK": {
                "bit": 3,
                "description": "TIM1_BRK"
              }
            },
            "ITLINE14": {
              "TIM1_CC": {
                "bit": 0,
                "description": "TIM1_CC"
              }
            },
            "ITLINE16": {
              "TIM3": {
                "bit": 0,
                "description": "TIM3"
              },
              "TIM4": {
                "bit": 1,
                "description": "TIM4"
              }
            },
            "ITLINE17": {
              "TIM6": {
                "bit": 0,
                "description": "TIM6"
              }
            },
            "ITLINE18": {
              "TIM7": {
                "bit": 0,
                "description": "TIM7"
              }
            },
            "ITLINE19": {
              "TIM14": {
                "bit": 0,
                "description": "TIM14"
              }
            },
            "ITLINE20": {
              "TIM15": {
                "bit": 0,
                "description": "TIM15"
              }
            },
            "ITLINE21": {
              "TIM16": {
                "bit": 0,
                "description": "TIM16"
              }
            },
            "ITLINE22": {
              "TIM17": {
                "bit": 0,
                "description": "TIM17"
              }
            },
            "ITLINE23": {
              "I2C1": {
                "bit": 0,
                "description": "I2C1"
              }
            },
            "ITLINE24": {
              "I2C2": {
                "bit": 0,
                "description": "I2C2"
              },
              "I2C3": {
                "bit": 1,
                "description": "I2C3"
              }
            },
            "ITLINE25": {
              "SPI1": {
                "bit": 0,
                "description": "SPI1"
              }
            },
            "ITLINE26": {
              "SPI2": {
                "bit": 0,
                "description": "SPI2"
              },
              "SPI3": {
                "bit": 14,
                "description": "SPI3"
              }
            },
            "ITLINE27": {
              "USART1": {
                "bit": 0,
                "description": "USART1"
              }
            },
            "ITLINE28": {
              "USART2": {
                "bit": 0,
                "description": "USART2"
              }
            },
            "ITLINE29": {
              "USART3": {
                "bit": 0,
                "description": "USART3"
              },
              "USART4": {
                "bit": 1,
                "description": "USART4"
              },
              "USART5": {
                "bit": 3,
                "description": "USART5"
              },
              "USART6": {
                "bit": 4,
                "description": "USART6"
              }
            }
          }
        },
        "TAMP": {
          "instances": [
            {
              "name": "TAMP",
              "base": "0x4000B000"
            }
          ],
          "registers": {
            "TAMP_CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "TAMP control register 1"
            },
            "TAMP_CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "TAMP control register 2"
            },
            "TAMP_FLTCR": {
              "offset": "0x0C",
              "size": 32,
              "description": "TAMP filter control register"
            },
            "TAMP_IER": {
              "offset": "0x2C",
              "size": 32,
              "description": "TAMP interrupt enable register"
            },
            "TAMP_SR": {
              "offset": "0x30",
              "size": 32,
              "description": "TAMP status register"
            },
            "TAMP_MISR": {
              "offset": "0x34",
              "size": 32,
              "description": "TAMP masked interrupt status register"
            },
            "TAMP_SCR": {
              "offset": "0x3C",
              "size": 32,
              "description": "TAMP status clear register"
            },
            "TAMP_BKP0R": {
              "offset": "0x100",
              "size": 32,
              "description": "TAMP backup 0 register"
            },
            "TAMP_BKP1R": {
              "offset": "0x104",
              "size": 32,
              "description": "TAMP backup 1 register"
            },
            "TAMP_BKP2R": {
              "offset": "0x108",
              "size": 32,
              "description": "TAMP backup 2 register"
            },
            "TAMP_BKP3R": {
              "offset": "0x10C",
              "size": 32,
              "description": "TAMP backup 3 register"
            },
            "TAMP_BKP4R": {
              "offset": "0x110",
              "size": 32,
              "description": "TAMP backup 4 register"
            }
          },
          "bits": {
            "TAMP_CR1": {
              "TAMP1E": {
                "bit": 0,
                "description": "Tamper detection on TAMP_IN1 enable"
              },
              "TAMP2E": {
                "bit": 1,
                "description": "Tamper detection on TAMP_IN2 enable"
              },
              "TAMP3E": {
                "bit": 2,
                "description": "Tamper detection on TAMP_IN3 enable"
              },
              "ITAMP3E": {
                "bit": 18,
                "description": "Internal tamper 3 enable: LSE monitoring"
              },
              "ITAMP4E": {
                "bit": 19,
                "description": "Internal tamper 4 enable: HSE monitoring"
              },
              "ITAMP5E": {
                "bit": 20,
                "description": "Internal tamper 5 enable: RTC calendar overflow"
              },
              "ITAMP6E": {
                "bit": 21,
                "description": "Internal tamper 6 enable: ST manufacturer readout"
              }
            },
            "TAMP_CR2": {
              "TAMP1NOER": {
                "bit": 0,
                "description": "Tamper 1 no erase"
              },
              "TAMP2NOER": {
                "bit": 1,
                "description": "Tamper 2 no erase"
              },
              "TAMP3NOER": {
                "bit": 2,
                "description": "Tamper 3 no erase"
              },
              "TAMP1MSK": {
                "bit": 16,
                "description": "Tamper 1 mask\nThe tamper 1 interrupt must not be enabled when TAMP1MSK is set."
              },
              "TAMP2MSK": {
                "bit": 17,
                "description": "Tamper 2 mask\nThe tamper 2 interrupt must not be enabled when TAMP2MSK is set."
              },
              "TAMP3MSK": {
                "bit": 18,
                "description": "Tamper 3 mask\nThe tamper 3 interrupt must not be enabled when TAMP3MSK is set."
              },
              "TAMP1TRG": {
                "bit": 24,
                "description": "Active level for tamper 1 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 1 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 1 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP2TRG": {
                "bit": 25,
                "description": "Active level for tamper 2 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 2 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 2 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP3TRG": {
                "bit": 26,
                "description": "Active level for tamper 3 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 3 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 3 input falling edge and low level triggers a tamper detection event."
              }
            },
            "TAMP_FLTCR": {
              "TAMPFREQ": {
                "bit": 0,
                "description": "Tamper sampling frequency\nDetermines the frequency at which each of the TAMP_INx inputs are sampled.",
                "width": 3
              },
              "TAMPFLT": {
                "bit": 3,
                "description": "TAMP_INx filter count\nThese bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs.",
                "width": 2
              },
              "TAMPPRCH": {
                "bit": 5,
                "description": "TAMP_INx precharge duration\nThese bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs.",
                "width": 2
              },
              "TAMPPUDIS": {
                "bit": 7,
                "description": "TAMP_INx pull-up disable\nThis bit determines if each of the TAMPx pins are precharged before each sample."
              }
            },
            "TAMP_IER": {
              "TAMP1IE": {
                "bit": 0,
                "description": "Tamper 1 interrupt enable"
              },
              "TAMP2IE": {
                "bit": 1,
                "description": "Tamper 2 interrupt enable"
              },
              "TAMP3IE": {
                "bit": 2,
                "description": "Tamper 3 interrupt enable"
              },
              "ITAMP3IE": {
                "bit": 18,
                "description": "Internal tamper 3 interrupt enable: LSE monitoring"
              },
              "ITAMP4IE": {
                "bit": 19,
                "description": "Internal tamper 4 interrupt enable: HSE monitoring"
              },
              "ITAMP5IE": {
                "bit": 20,
                "description": "Internal tamper 5 interrupt enable: RTC calendar overflow"
              },
              "ITAMP6IE": {
                "bit": 21,
                "description": "Internal tamper 6 interrupt enable: ST manufacturer readout"
              }
            },
            "TAMP_SR": {
              "TAMP1F": {
                "bit": 0,
                "description": "TAMP1 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP1 input."
              },
              "TAMP2F": {
                "bit": 1,
                "description": "TAMP2 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP2 input."
              },
              "TAMP3F": {
                "bit": 2,
                "description": "TAMP3 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP3 input."
              },
              "ITAMP3F": {
                "bit": 18,
                "description": "LSE monitoring tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 3."
              },
              "ITAMP4F": {
                "bit": 19,
                "description": "HSE monitoring tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 4."
              },
              "ITAMP5F": {
                "bit": 20,
                "description": "RTC calendar overflow tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 5."
              },
              "ITAMP6F": {
                "bit": 21,
                "description": "ST manufacturer readout tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 6."
              }
            },
            "TAMP_MISR": {
              "TAMP1MF": {
                "bit": 0,
                "description": "TAMP1 interrupt masked flag\nThis flag is set by hardware when the tamper 1 interrupt is raised."
              },
              "TAMP2MF": {
                "bit": 1,
                "description": "TAMP2 interrupt masked flag\nThis flag is set by hardware when the tamper 2 interrupt is raised."
              },
              "TAMP3MF": {
                "bit": 2,
                "description": "TAMP3 interrupt masked flag\nThis flag is set by hardware when the tamper 3 interrupt is raised."
              },
              "ITAMP3MF": {
                "bit": 18,
                "description": "LSE monitoring tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 3 interrupt is raised."
              },
              "ITAMP4MF": {
                "bit": 19,
                "description": "HSE monitoring tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 4 interrupt is raised."
              },
              "ITAMP5MF": {
                "bit": 20,
                "description": "RTC calendar overflow tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 5 interrupt is raised."
              },
              "ITAMP6MF": {
                "bit": 21,
                "description": "ST manufacturer readout tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 6 interrupt is raised."
              }
            },
            "TAMP_SCR": {
              "CTAMP1F": {
                "bit": 0,
                "description": "Clear TAMP1 detection flag\nWriting 1 in this bit clears the TAMP1F bit in the TAMP_SR register."
              },
              "CTAMP2F": {
                "bit": 1,
                "description": "Clear TAMP2 detection flag\nWriting 1 in this bit clears the TAMP2F bit in the TAMP_SR register."
              },
              "CTAMP3F": {
                "bit": 2,
                "description": "Clear TAMP3 detection flag\nWriting 1 in this bit clears the TAMP3F bit in the TAMP_SR register."
              },
              "CITAMP3F": {
                "bit": 18,
                "description": "Clear ITAMP3 detection flag\nWriting 1 in this bit clears the ITAMP3F bit in the TAMP_SR register."
              },
              "CITAMP4F": {
                "bit": 19,
                "description": "Clear ITAMP4 detection flag\nWriting 1 in this bit clears the ITAMP4F bit in the TAMP_SR register."
              },
              "CITAMP5F": {
                "bit": 20,
                "description": "Clear ITAMP5 detection flag\nWriting 1 in this bit clears the ITAMP5F bit in the TAMP_SR register."
              },
              "CITAMP6F": {
                "bit": 21,
                "description": "Clear ITAMP6 detection flag\nWriting 1 in this bit clears the ITAMP6F bit in the TAMP_SR register."
              }
            },
            "TAMP_BKP0R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the default configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP1R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the default configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP2R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the default configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP3R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the default configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP4R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the default configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            }
          }
        },
        "UCPD1": {
          "instances": [
            {
              "name": "UCPD1",
              "base": "0x4000A000",
              "irq": 8
            }
          ],
          "registers": {
            "CFG1": {
              "offset": "0x00",
              "size": 32,
              "description": "UCPD configuration register"
            },
            "CFG2": {
              "offset": "0x04",
              "size": 32,
              "description": "UCPD configuration register 2"
            },
            "CFG3": {
              "offset": "0x08",
              "size": 32,
              "description": "UCPD configuration register 3"
            },
            "CR": {
              "offset": "0x0C",
              "size": 32,
              "description": "UCPD control register"
            },
            "IMR": {
              "offset": "0x10",
              "size": 32,
              "description": "UCPD Interrupt Mask Register"
            },
            "SR": {
              "offset": "0x14",
              "size": 32,
              "description": "UCPD Status Register"
            },
            "ICR": {
              "offset": "0x18",
              "size": 32,
              "description": "UCPD Interrupt Clear Register"
            },
            "TX_ORDSET": {
              "offset": "0x1C",
              "size": 32,
              "description": "UCPD Tx Ordered Set Type\n          Register"
            },
            "TX_PAYSZ": {
              "offset": "0x20",
              "size": 32,
              "description": "UCPD Tx Paysize Register"
            },
            "TXDR": {
              "offset": "0x24",
              "size": 32,
              "description": "UCPD Tx Data Register"
            },
            "RX_ORDSET": {
              "offset": "0x28",
              "size": 32,
              "description": "UCPD Rx Ordered Set Register"
            },
            "RX_PAYSZ": {
              "offset": "0x2C",
              "size": 32,
              "description": "UCPD Rx Paysize Register"
            },
            "RXDR": {
              "offset": "0x30",
              "size": 32,
              "description": "UCPD Receive Data Register"
            },
            "RX_ORDEXT1": {
              "offset": "0x34",
              "size": 32,
              "description": "UCPD Rx Ordered Set Extension\n          Register"
            },
            "RX_ORDEXT2": {
              "offset": "0x38",
              "size": 32,
              "description": "UCPD Rx Ordered Set Extension\n          Register"
            },
            "IPVER": {
              "offset": "0x3F4",
              "size": 32,
              "description": "UCPD IP ID register"
            },
            "IPID": {
              "offset": "0x3F8",
              "size": 32,
              "description": "UCPD IP ID register"
            },
            "MID": {
              "offset": "0x3FC",
              "size": 32,
              "description": "UCPD IP ID register"
            }
          },
          "bits": {
            "CFG1": {
              "HBITCLKDIV": {
                "bit": 0,
                "description": "HBITCLKDIV",
                "width": 6
              },
              "IFRGAP": {
                "bit": 6,
                "description": "IFRGAP",
                "width": 5
              },
              "TRANSWIN": {
                "bit": 11,
                "description": "TRANSWIN",
                "width": 5
              },
              "PSC_USBPDCLK": {
                "bit": 17,
                "description": "PSC_USBPDCLK",
                "width": 3
              },
              "RXORDSETEN": {
                "bit": 20,
                "description": "RXORDSETEN",
                "width": 9
              },
              "TXDMAEN": {
                "bit": 29,
                "description": "TXDMAEN"
              },
              "RXDMAEN": {
                "bit": 30,
                "description": "RXDMAEN:"
              },
              "UCPDEN": {
                "bit": 31,
                "description": "UCPDEN"
              }
            },
            "CFG2": {
              "RXFILTDIS": {
                "bit": 0,
                "description": "RXFILTDIS"
              },
              "RXFILT2N3": {
                "bit": 1,
                "description": "RXFILT2N3"
              },
              "FORCECLK": {
                "bit": 2,
                "description": "FORCECLK"
              },
              "WUPEN": {
                "bit": 3,
                "description": "WUPEN"
              }
            },
            "CFG3": {
              "TRIM1_NG_CCRPD": {
                "bit": 0,
                "description": "TRIM1_NG_CCRPD",
                "width": 4
              },
              "TRIM1_NG_CC1A5": {
                "bit": 4,
                "description": "TRIM1_NG_CC1A5",
                "width": 5
              },
              "TRIM1_NG_CC3A0": {
                "bit": 9,
                "description": "TRIM1_NG_CC3A0",
                "width": 4
              },
              "TRIM2_NG_CCRPD": {
                "bit": 16,
                "description": "TRIM2_NG_CCRPD",
                "width": 4
              },
              "TRIM2_NG_CC1A5": {
                "bit": 20,
                "description": "TRIM2_NG_CC1A5",
                "width": 5
              },
              "TRIM2_NG_CC3A0": {
                "bit": 25,
                "description": "TRIM2_NG_CC3A0",
                "width": 4
              }
            },
            "CR": {
              "TXMODE": {
                "bit": 0,
                "description": "TXMODE",
                "width": 2
              },
              "TXSEND": {
                "bit": 2,
                "description": "TXSEND"
              },
              "TXHRST": {
                "bit": 3,
                "description": "TXHRST"
              },
              "RXMODE": {
                "bit": 4,
                "description": "RXMODE"
              },
              "PHYRXEN": {
                "bit": 5,
                "description": "PHYRXEN"
              },
              "PHYCCSEL": {
                "bit": 6,
                "description": "PHYCCSEL"
              },
              "ANASUBMODE": {
                "bit": 7,
                "description": "ANASUBMODE",
                "width": 2
              },
              "ANAMODE": {
                "bit": 9,
                "description": "ANAMODE"
              },
              "CCENABLE": {
                "bit": 10,
                "description": "CCENABLE",
                "width": 2
              },
              "DBATTEN": {
                "bit": 15,
                "description": "DBATTEN"
              },
              "FRSRXEN": {
                "bit": 16,
                "description": "FRSRXEN"
              },
              "FRSTX": {
                "bit": 17,
                "description": "FRSTX"
              },
              "RDCH": {
                "bit": 18,
                "description": "RDCH"
              },
              "CC1TCDIS": {
                "bit": 20,
                "description": "CC1TCDIS"
              },
              "CC2TCDIS": {
                "bit": 21,
                "description": "CC2TCDIS"
              }
            },
            "IMR": {
              "TXISIE": {
                "bit": 0,
                "description": "TXISIE"
              },
              "TXMSGDISCIE": {
                "bit": 1,
                "description": "TXMSGDISCIE"
              },
              "TXMSGSENTIE": {
                "bit": 2,
                "description": "TXMSGSENTIE"
              },
              "TXMSGABTIE": {
                "bit": 3,
                "description": "TXMSGABTIE"
              },
              "HRSTDISCIE": {
                "bit": 4,
                "description": "HRSTDISCIE"
              },
              "HRSTSENTIE": {
                "bit": 5,
                "description": "HRSTSENTIE"
              },
              "TXUNDIE": {
                "bit": 6,
                "description": "TXUNDIE"
              },
              "RXNEIE": {
                "bit": 8,
                "description": "RXNEIE"
              },
              "RXORDDETIE": {
                "bit": 9,
                "description": "RXORDDETIE"
              },
              "RXHRSTDETIE": {
                "bit": 10,
                "description": "RXHRSTDETIE"
              },
              "RXOVRIE": {
                "bit": 11,
                "description": "RXOVRIE"
              },
              "RXMSGENDIE": {
                "bit": 12,
                "description": "RXMSGENDIE"
              },
              "TYPECEVT1IE": {
                "bit": 14,
                "description": "TYPECEVT1IE"
              },
              "TYPECEVT2IE": {
                "bit": 15,
                "description": "TYPECEVT2IE"
              },
              "FRSEVTIE": {
                "bit": 20,
                "description": "FRSEVTIE"
              }
            },
            "SR": {
              "TXIS": {
                "bit": 0,
                "description": "TXIS"
              },
              "TXMSGDISC": {
                "bit": 1,
                "description": "TXMSGDISC"
              },
              "TXMSGSENT": {
                "bit": 2,
                "description": "TXMSGSENT"
              },
              "TXMSGABT": {
                "bit": 3,
                "description": "TXMSGABT"
              },
              "HRSTDISC": {
                "bit": 4,
                "description": "HRSTDISC"
              },
              "HRSTSENT": {
                "bit": 5,
                "description": "HRSTSENT"
              },
              "TXUND": {
                "bit": 6,
                "description": "TXUND"
              },
              "RXNE": {
                "bit": 8,
                "description": "RXNE"
              },
              "RXORDDET": {
                "bit": 9,
                "description": "RXORDDET"
              },
              "RXHRSTDET": {
                "bit": 10,
                "description": "RXHRSTDET"
              },
              "RXOVR": {
                "bit": 11,
                "description": "RXOVR"
              },
              "RXMSGEND": {
                "bit": 12,
                "description": "RXMSGEND"
              },
              "RXERR": {
                "bit": 13,
                "description": "RXERR"
              },
              "TYPECEVT1": {
                "bit": 14,
                "description": "TYPECEVT1"
              },
              "TYPECEVT2": {
                "bit": 15,
                "description": "TYPECEVT2"
              },
              "TYPEC_VSTATE_CC1": {
                "bit": 16,
                "description": "TYPEC_VSTATE_CC1",
                "width": 2
              },
              "TYPEC_VSTATE_CC2": {
                "bit": 18,
                "description": "TYPEC_VSTATE_CC2",
                "width": 2
              },
              "FRSEVT": {
                "bit": 20,
                "description": "FRSEVT"
              }
            },
            "ICR": {
              "TXMSGDISCCF": {
                "bit": 1,
                "description": "TXMSGDISCCF"
              },
              "TXMSGSENTCF": {
                "bit": 2,
                "description": "TXMSGSENTCF"
              },
              "TXMSGABTCF": {
                "bit": 3,
                "description": "TXMSGABTCF"
              },
              "HRSTDISCCF": {
                "bit": 4,
                "description": "HRSTDISCCF"
              },
              "HRSTSENTCF": {
                "bit": 5,
                "description": "HRSTSENTCF"
              },
              "TXUNDCF": {
                "bit": 6,
                "description": "TXUNDCF"
              },
              "RXORDDETCF": {
                "bit": 9,
                "description": "RXORDDETCF"
              },
              "RXHRSTDETCF": {
                "bit": 10,
                "description": "RXHRSTDETCF"
              },
              "RXOVRCF": {
                "bit": 11,
                "description": "RXOVRCF"
              },
              "RXMSGENDCF": {
                "bit": 12,
                "description": "RXMSGENDCF"
              },
              "TYPECEVT1CF": {
                "bit": 14,
                "description": "TYPECEVT1CF"
              },
              "TYPECEVT2CF": {
                "bit": 15,
                "description": "TYPECEVT2CF"
              },
              "FRSEVTCF": {
                "bit": 20,
                "description": "FRSEVTCF"
              }
            },
            "TX_ORDSET": {
              "TXORDSET": {
                "bit": 0,
                "description": "TXORDSET",
                "width": 20
              }
            },
            "TX_PAYSZ": {
              "TXPAYSZ": {
                "bit": 0,
                "description": "TXPAYSZ",
                "width": 10
              }
            },
            "TXDR": {
              "TXDATA": {
                "bit": 0,
                "description": "TXDATA",
                "width": 8
              }
            },
            "RX_ORDSET": {
              "RXORDSET": {
                "bit": 0,
                "description": "RXORDSET",
                "width": 3
              },
              "RXSOP3OF4": {
                "bit": 3,
                "description": "RXSOP3OF4"
              },
              "RXSOPKINVALID": {
                "bit": 4,
                "description": "RXSOPKINVALID",
                "width": 3
              }
            },
            "RX_PAYSZ": {
              "RXPAYSZ": {
                "bit": 0,
                "description": "RXPAYSZ",
                "width": 10
              }
            },
            "RXDR": {
              "RXDATA": {
                "bit": 0,
                "description": "RXDATA",
                "width": 8
              }
            },
            "RX_ORDEXT1": {
              "RXSOPX1": {
                "bit": 0,
                "description": "RXSOPX1",
                "width": 20
              }
            },
            "RX_ORDEXT2": {
              "RXSOPX2": {
                "bit": 0,
                "description": "RXSOPX2",
                "width": 20
              }
            },
            "IPVER": {
              "IPVER": {
                "bit": 0,
                "description": "IPVER",
                "width": 32
              }
            },
            "IPID": {
              "IPID": {
                "bit": 0,
                "description": "IPID",
                "width": 32
              }
            },
            "MID": {
              "IPID": {
                "bit": 0,
                "description": "IPID",
                "width": 32
              }
            }
          }
        },
        "UCPD2": {
          "instances": [
            {
              "name": "UCPD2",
              "base": "0x4000A400"
            }
          ],
          "registers": {}
        },
        "HDMI": {
          "instances": [
            {
              "name": "HDMI_CEC",
              "base": "0x40007800"
            }
          ],
          "registers": {
            "CEC_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "CEC control register"
            },
            "CEC_CFGR": {
              "offset": "0x04",
              "size": 32,
              "description": "This register is used to configure the\n          HDMI-CEC controller. It is mandatory to write CEC_CFGR\n          only when CECEN=0."
            },
            "CEC_TXDR": {
              "offset": "0x08",
              "size": 32,
              "description": "CEC Tx data register"
            },
            "CEC_RXDR": {
              "offset": "0x0C",
              "size": 32,
              "description": "CEC Rx Data Register"
            },
            "CEC_ISR": {
              "offset": "0x10",
              "size": 32,
              "description": "CEC Interrupt and Status\n          Register"
            },
            "CEC_IER": {
              "offset": "0x14",
              "size": 32,
              "description": "CEC interrupt enable register"
            }
          },
          "bits": {
            "CEC_CR": {
              "CECEN": {
                "bit": 0,
                "description": "CEC Enable The CECEN bit is set and\n              cleared by software. CECEN=1 starts message reception\n              and enables the TXSOM control. CECEN=0 disables the\n              CEC peripheral, clears all bits of CEC_CR register\n              and aborts any on-going reception or\n              transmission."
              },
              "TXSOM": {
                "bit": 1,
                "description": "Tx Start Of Message TXSOM is set by\n              software to command transmission of the first byte of\n              a CEC message. If the CEC message consists of only\n              one byte, TXEOM must be set before of TXSOM.\n              Start-Bit is effectively started on the CEC line\n              after SFT is counted. If TXSOM is set while a message\n              reception is ongoing, transmission will start after\n              the end of reception. TXSOM is cleared by hardware\n              after the last byte of the message is sent with a\n              positive acknowledge (TXEND=1), in case of\n              transmission underrun (TXUDR=1), negative acknowledge\n              (TXACKE=1), and transmission error (TXERR=1). It is\n              also cleared by CECEN=0. It is not cleared and\n              transmission is automatically retried in case of\n              arbitration lost (ARBLST=1). TXSOM can be also used\n              as a status bit informing application whether any\n              transmission request is pending or under execution.\n              The application can abort a transmission request at\n              any time by clearing the CECEN bit. Note: TXSOM must\n              be set when CECEN=1 TXSOM must be set when\n              transmission data is available into TXDR HEADERs\n              first four bits containing own peripheral address are\n              taken from TXDR[7:4], not from CEC_CFGR.OAR which is\n              used only for reception"
              },
              "TXEOM": {
                "bit": 2,
                "description": "Tx End Of Message The TXEOM bit is set\n              by software to command transmission of the last byte\n              of a CEC message. TXEOM is cleared by hardware at the\n              same time and under the same conditions as for TXSOM.\n              Note: TXEOM must be set when CECEN=1 TXEOM must be\n              set before writing transmission data to TXDR If TXEOM\n              is set when TXSOM=0, transmitted message will consist\n              of 1 byte (HEADER) only (PING message)"
              }
            },
            "CEC_CFGR": {
              "SFT": {
                "bit": 0,
                "description": "Signal Free Time SFT bits are set by\n              software. In the SFT=0x0 configuration the number of\n              nominal data bit periods waited before transmission\n              is ruled by hardware according to the transmission\n              history. In all the other configurations the SFT\n              number is determined by software. * 0x0 ** 2.5\n              Data-Bit periods if CEC is the last bus initiator\n              with unsuccessful transmission (ARBLST=1, TXERR=1,\n              TXUDR=1 or TXACKE= 1) ** 4 Data-Bit periods if CEC is\n              the new bus initiator ** 6 Data-Bit periods if CEC is\n              the last bus initiator with successful transmission\n              (TXEOM=1) * 0x1: 0.5 nominal data bit periods * 0x2:\n              1.5 nominal data bit periods * 0x3: 2.5 nominal data\n              bit periods * 0x4: 3.5 nominal data bit periods *\n              0x5: 4.5 nominal data bit periods * 0x6: 5.5 nominal\n              data bit periods * 0x7: 6.5 nominal data bit\n              periods",
                "width": 3
              },
              "RXTOL": {
                "bit": 3,
                "description": "Rx-Tolerance The RXTOL bit is set and\n              cleared by software. ** Start-Bit, +/- 200 s rise,\n              +/- 200 s fall. ** Data-Bit: +/- 200 s rise. +/- 350\n              s fall. ** Start-Bit: +/- 400 s rise, +/- 400 s fall\n              ** Data-Bit: +/-300 s rise, +/- 500 s\n              fall"
              },
              "BRESTP": {
                "bit": 4,
                "description": "Rx-Stop on Bit Rising Error The BRESTP\n              bit is set and cleared by software."
              },
              "BREGEN": {
                "bit": 5,
                "description": "Generate Error-Bit on Bit Rising Error\n              The BREGEN bit is set and cleared by software. Note:\n              If BRDNOGEN=0, an Error-bit is generated upon BRE\n              detection with BRESTP=1 in broadcast even if\n              BREGEN=0"
              },
              "LBPEGEN": {
                "bit": 6,
                "description": "Generate Error-Bit on Long Bit Period\n              Error The LBPEGEN bit is set and cleared by software.\n              Note: If BRDNOGEN=0, an Error-bit is generated upon\n              LBPE detection in broadcast even if\n              LBPEGEN=0"
              },
              "BRDNOGEN": {
                "bit": 7,
                "description": "Avoid Error-Bit Generation in Broadcast\n              The BRDNOGEN bit is set and cleared by\n              software."
              },
              "SFTOPT": {
                "bit": 8,
                "description": "SFT Option Bit The SFTOPT bit is set and\n              cleared by software."
              },
              "OAR": {
                "bit": 16,
                "description": "Own addresses configuration The OAR bits\n              are set by software to select which destination\n              logical addresses has to be considered in receive\n              mode. Each bit, when set, enables the CEC logical\n              address identified by the given bit position. At the\n              end of HEADER reception, the received destination\n              address is compared with the enabled addresses. In\n              case of matching address, the incoming message is\n              acknowledged and received. In case of non-matching\n              address, the incoming message is received only in\n              listen mode (LSTN=1), but without acknowledge sent.\n              Broadcast messages are always received. Example: OAR\n              = 0b000 0000 0010 0001 means that CEC acknowledges\n              addresses 0x0 and 0x5. Consequently, each message\n              directed to one of these addresses is\n              received.",
                "width": 15
              },
              "LSTN": {
                "bit": 31,
                "description": "Listen mode LSTN bit is set and cleared\n              by software."
              }
            },
            "CEC_TXDR": {
              "TXD": {
                "bit": 0,
                "description": "Tx Data register. TXD is a write-only\n              register containing the data byte to be transmitted.\n              Note: TXD must be written when\n              TXSTART=1",
                "width": 8
              }
            },
            "CEC_RXDR": {
              "RXD": {
                "bit": 0,
                "description": "Rx Data register. RXD is read-only and\n              contains the last data byte which has been received\n              from the CEC line.",
                "width": 8
              }
            },
            "CEC_ISR": {
              "RXBR": {
                "bit": 0,
                "description": "Rx-Byte Received The RXBR bit is set by\n              hardware to inform application that a new byte has\n              been received from the CEC line and stored into the\n              RXD buffer. RXBR is cleared by software write at\n              1."
              },
              "RXEND": {
                "bit": 1,
                "description": "End Of Reception RXEND is set by\n              hardware to inform application that the last byte of\n              a CEC message is received from the CEC line and\n              stored into the RXD buffer. RXEND is set at the same\n              time of RXBR. RXEND is cleared by software write at\n              1."
              },
              "RXOVR": {
                "bit": 2,
                "description": "Rx-Overrun RXOVR is set by hardware if\n              RXBR is not yet cleared at the time a new byte is\n              received on the CEC line and stored into RXD. RXOVR\n              assertion stops message reception so that no\n              acknowledge is sent. In case of broadcast, a negative\n              acknowledge is sent. RXOVR is cleared by software\n              write at 1."
              },
              "BRE": {
                "bit": 3,
                "description": "Rx-Bit Rising Error BRE is set by\n              hardware in case a Data-Bit waveform is detected with\n              Bit Rising Error. BRE is set either at the time the\n              misplaced rising edge occurs, or at the end of the\n              maximum BRE tolerance allowed by RXTOL, in case\n              rising edge is still longing. BRE stops message\n              reception if BRESTP=1. BRE generates an Error-Bit on\n              the CEC line if BREGEN=1. BRE is cleared by software\n              write at 1."
              },
              "SBPE": {
                "bit": 4,
                "description": "Rx-Short Bit Period Error SBPE is set by\n              hardware in case a Data-Bit waveform is detected with\n              Short Bit Period Error. SBPE is set at the time the\n              anticipated falling edge occurs. SBPE generates an\n              Error-Bit on the CEC line. SBPE is cleared by\n              software write at 1."
              },
              "LBPE": {
                "bit": 5,
                "description": "Rx-Long Bit Period Error LBPE is set by\n              hardware in case a Data-Bit waveform is detected with\n              Long Bit Period Error. LBPE is set at the end of the\n              maximum bit-extension tolerance allowed by RXTOL, in\n              case falling edge is still longing. LBPE always stops\n              reception of the CEC message. LBPE generates an\n              Error-Bit on the CEC line if LBPEGEN=1. In case of\n              broadcast, Error-Bit is generated even in case of\n              LBPEGEN=0. LBPE is cleared by software write at\n              1."
              },
              "RXACKE": {
                "bit": 6,
                "description": "Rx-Missing Acknowledge In receive mode,\n              RXACKE is set by hardware to inform application that\n              no acknowledge was seen on the CEC line. RXACKE\n              applies only for broadcast messages and in listen\n              mode also for not directly addressed messages\n              (destination address not enabled in OAR). RXACKE\n              aborts message reception. RXACKE is cleared by\n              software write at 1."
              },
              "ARBLST": {
                "bit": 7,
                "description": "Arbitration Lost ARBLST is set by\n              hardware to inform application that CEC device is\n              switching to reception due to arbitration lost event\n              following the TXSOM command. ARBLST can be due either\n              to a contending CEC device starting earlier or\n              starting at the same time but with higher HEADER\n              priority. After ARBLST assertion TXSOM bit keeps\n              pending for next transmission attempt. ARBLST is\n              cleared by software write at 1."
              },
              "TXBR": {
                "bit": 8,
                "description": "Tx-Byte Request TXBR is set by hardware\n              to inform application that the next transmission data\n              has to be written to TXDR. TXBR is set when the 4th\n              bit of currently transmitted byte is sent.\n              Application must write the next byte to TXDR within 6\n              nominal data-bit periods before transmission underrun\n              error occurs (TXUDR). TXBR is cleared by software\n              write at 1."
              },
              "TXEND": {
                "bit": 9,
                "description": "End of Transmission TXEND is set by\n              hardware to inform application that the last byte of\n              the CEC message has been successfully transmitted.\n              TXEND clears the TXSOM and TXEOM control bits. TXEND\n              is cleared by software write at 1."
              },
              "TXUDR": {
                "bit": 10,
                "description": "Tx-Buffer Underrun In transmission mode,\n              TXUDR is set by hardware if application was not in\n              time to load TXDR before of next byte transmission.\n              TXUDR aborts message transmission and clears TXSOM\n              and TXEOM control bits. TXUDR is cleared by software\n              write at 1"
              },
              "TXERR": {
                "bit": 11,
                "description": "Tx-Error In transmission mode, TXERR is\n              set by hardware if the CEC initiator detects low\n              impedance on the CEC line while it is released. TXERR\n              aborts message transmission and clears TXSOM and\n              TXEOM controls. TXERR is cleared by software write at\n              1."
              },
              "TXACKE": {
                "bit": 12,
                "description": "Tx-Missing Acknowledge Error In\n              transmission mode, TXACKE is set by hardware to\n              inform application that no acknowledge was received.\n              In case of broadcast transmission, TXACKE informs\n              application that a negative acknowledge was received.\n              TXACKE aborts message transmission and clears TXSOM\n              and TXEOM controls. TXACKE is cleared by software\n              write at 1."
              }
            },
            "CEC_IER": {
              "RXBRIE": {
                "bit": 0,
                "description": "Rx-Byte Received Interrupt Enable The\n              RXBRIE bit is set and cleared by\n              software."
              },
              "RXENDIE": {
                "bit": 1,
                "description": "End Of Reception Interrupt Enable The\n              RXENDIE bit is set and cleared by\n              software."
              },
              "RXOVRIE": {
                "bit": 2,
                "description": "Rx-Buffer Overrun Interrupt Enable The\n              RXOVRIE bit is set and cleared by\n              software."
              },
              "BREIE": {
                "bit": 3,
                "description": "Bit Rising Error Interrupt Enable The\n              BREIE bit is set and cleared by\n              software."
              },
              "SBPEIE": {
                "bit": 4,
                "description": "Short Bit Period Error Interrupt Enable\n              The SBPEIE bit is set and cleared by\n              software."
              },
              "LBPEIE": {
                "bit": 5,
                "description": "Long Bit Period Error Interrupt Enable\n              The LBPEIE bit is set and cleared by\n              software."
              },
              "RXACKIE": {
                "bit": 6,
                "description": "Rx-Missing Acknowledge Error Interrupt\n              Enable The RXACKIE bit is set and cleared by\n              software."
              },
              "ARBLSTIE": {
                "bit": 7,
                "description": "Arbitration Lost Interrupt Enable The\n              ARBLSTIE bit is set and cleared by\n              software."
              },
              "TXBRIE": {
                "bit": 8,
                "description": "Tx-Byte Request Interrupt Enable The\n              TXBRIE bit is set and cleared by\n              software."
              },
              "TXENDIE": {
                "bit": 9,
                "description": "Tx-End Of Message Interrupt Enable The\n              TXENDIE bit is set and cleared by\n              software."
              },
              "TXUDRIE": {
                "bit": 10,
                "description": "Tx-Underrun Interrupt Enable The TXUDRIE\n              bit is set and cleared by software."
              },
              "TXERRIE": {
                "bit": 11,
                "description": "Tx-Error Interrupt Enable The TXERRIE\n              bit is set and cleared by software."
              },
              "TXACKIE": {
                "bit": 12,
                "description": "Tx-Missing Acknowledge Error Interrupt\n              Enable The TXACKEIE bit is set and cleared by\n              software."
              }
            }
          }
        },
        "DAC": {
          "instances": [
            {
              "name": "DAC",
              "base": "0x40007400"
            }
          ],
          "registers": {
            "DAC_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "DAC control register"
            },
            "DAC_SWTRGR": {
              "offset": "0x04",
              "size": 32,
              "description": "DAC software trigger register"
            },
            "DAC_DHR12R1": {
              "offset": "0x08",
              "size": 32,
              "description": "DAC channel1 12-bit right-aligned data\n          holding register"
            },
            "DAC_DHR12L1": {
              "offset": "0x0C",
              "size": 32,
              "description": "DAC channel1 12-bit left aligned data\n          holding register"
            },
            "DAC_DHR8R1": {
              "offset": "0x10",
              "size": 32,
              "description": "DAC channel1 8-bit right aligned data\n          holding register"
            },
            "DAC_DHR12R2": {
              "offset": "0x14",
              "size": 32,
              "description": "DAC channel2 12-bit right aligned data\n          holding register"
            },
            "DAC_DHR12L2": {
              "offset": "0x18",
              "size": 32,
              "description": "DAC channel2 12-bit left aligned data\n          holding register"
            },
            "DAC_DHR8R2": {
              "offset": "0x1C",
              "size": 32,
              "description": "DAC channel2 8-bit right-aligned data\n          holding register"
            },
            "DAC_DHR12RD": {
              "offset": "0x20",
              "size": 32,
              "description": "Dual DAC 12-bit right-aligned data holding\n          register"
            },
            "DAC_DHR12LD": {
              "offset": "0x24",
              "size": 32,
              "description": "DUAL DAC 12-bit left aligned data holding\n          register"
            },
            "DAC_DHR8RD": {
              "offset": "0x28",
              "size": 32,
              "description": "DUAL DAC 8-bit right aligned data holding\n          register"
            },
            "DAC_DOR1": {
              "offset": "0x2C",
              "size": 32,
              "description": "DAC channel1 data output\n          register"
            },
            "DAC_DOR2": {
              "offset": "0x30",
              "size": 32,
              "description": "DAC channel2 data output\n          register"
            },
            "DAC_SR": {
              "offset": "0x34",
              "size": 32,
              "description": "DAC status register"
            },
            "DAC_CCR": {
              "offset": "0x38",
              "size": 32,
              "description": "DAC calibration control\n          register"
            },
            "DAC_MCR": {
              "offset": "0x3C",
              "size": 32,
              "description": "DAC mode control register"
            },
            "DAC_SHSR1": {
              "offset": "0x40",
              "size": 32,
              "description": "DAC Sample and Hold sample time register\n          1"
            },
            "DAC_SHSR2": {
              "offset": "0x44",
              "size": 32,
              "description": "DAC Sample and Hold sample time register\n          2"
            },
            "DAC_SHHR": {
              "offset": "0x48",
              "size": 32,
              "description": "DAC Sample and Hold hold time\n          register"
            },
            "DAC_SHRR": {
              "offset": "0x4C",
              "size": 32,
              "description": "DAC Sample and Hold refresh time\n          register"
            },
            "IP_HWCFGR0": {
              "offset": "0x3F0",
              "size": 32,
              "description": "DAC IP Hardware Configuration\n          Register"
            },
            "VERR": {
              "offset": "0x3F4",
              "size": 32,
              "description": "EXTI IP Version register"
            },
            "IPIDR": {
              "offset": "0x3F8",
              "size": 32,
              "description": "EXTI Identification register"
            },
            "SIDR": {
              "offset": "0x3FC",
              "size": 32,
              "description": "EXTI Size ID register"
            }
          },
          "bits": {
            "DAC_CR": {
              "EN1": {
                "bit": 0,
                "description": "DAC channel1 enable This bit is set and\n              cleared by software to enable/disable DAC\n              channel1."
              },
              "TEN1": {
                "bit": 1,
                "description": "DAC channel1 trigger\n              enable"
              },
              "TSEL1": {
                "bit": 2,
                "description": "DAC channel1 trigger selection These\n              bits select the external event used to trigger DAC\n              channel1. Note: Only used if bit TEN1 = 1 (DAC\n              channel1 trigger enabled).",
                "width": 4
              },
              "WAVE1": {
                "bit": 6,
                "description": "DAC channel1 noise/triangle wave\n              generation enable These bits are set and cleared by\n              software. Note: Only used if bit TEN1 = 1 (DAC\n              channel1 trigger enabled).",
                "width": 2
              },
              "MAMP1": {
                "bit": 8,
                "description": "DAC channel1 mask/amplitude selector\n              These bits are written by software to select mask in\n              wave generation mode or amplitude in triangle\n              generation mode. = 1011: Unmask bits[11:0] of LFSR/\n              triangle amplitude equal to 4095",
                "width": 4
              },
              "DMAEN1": {
                "bit": 12,
                "description": "DAC channel1 DMA enable This bit is set\n              and cleared by software."
              },
              "DMAUDRIE1": {
                "bit": 13,
                "description": "DAC channel1 DMA Underrun Interrupt\n              enable This bit is set and cleared by\n              software."
              },
              "CEN1": {
                "bit": 14,
                "description": "DAC Channel 1 calibration enable This\n              bit is set and cleared by software to enable/disable\n              DAC channel 1 calibration, it can be written only if\n              bit EN1=0 into DAC_CR (the calibration mode can be\n              entered/exit only when the DAC channel is disabled)\n              Otherwise, the write operation is\n              ignored."
              },
              "EN2": {
                "bit": 16,
                "description": "DAC channel2 enable This bit is set and\n              cleared by software to enable/disable DAC\n              channel2."
              },
              "TEN2": {
                "bit": 17,
                "description": "DAC channel2 trigger\n              enable"
              },
              "TSEL2": {
                "bit": 18,
                "description": "DAC channel2 trigger selection These\n              bits select the external event used to trigger DAC\n              channel2 Note: Only used if bit TEN2 = 1 (DAC\n              channel2 trigger enabled).",
                "width": 4
              },
              "WAVE2": {
                "bit": 22,
                "description": "DAC channel2 noise/triangle wave\n              generation enable These bits are set/reset by\n              software. 1x: Triangle wave generation enabled Note:\n              Only used if bit TEN2 = 1 (DAC channel2 trigger\n              enabled)",
                "width": 2
              },
              "MAMP2": {
                "bit": 24,
                "description": "DAC channel2 mask/amplitude selector\n              These bits are written by software to select mask in\n              wave generation mode or amplitude in triangle\n              generation mode. = 1011: Unmask bits[11:0] of LFSR/\n              triangle amplitude equal to 4095",
                "width": 4
              },
              "DMAEN2": {
                "bit": 28,
                "description": "DAC channel2 DMA enable This bit is set\n              and cleared by software."
              },
              "DMAUDRIE2": {
                "bit": 29,
                "description": "DAC channel2 DMA underrun interrupt\n              enable This bit is set and cleared by\n              software."
              },
              "CEN2": {
                "bit": 30,
                "description": "DAC Channel 2 calibration enable This\n              bit is set and cleared by software to enable/disable\n              DAC channel 2 calibration, it can be written only if\n              bit EN2=0 into DAC_CR (the calibration mode can be\n              entered/exit only when the DAC channel is disabled)\n              Otherwise, the write operation is\n              ignored."
              }
            },
            "DAC_SWTRGR": {
              "SWTRIG1": {
                "bit": 0,
                "description": "DAC channel1 software trigger This bit\n              is set by software to trigger the DAC in software\n              trigger mode. Note: This bit is cleared by hardware\n              (one APB1 clock cycle later) once the DAC_DHR1\n              register value has been loaded into the DAC_DOR1\n              register."
              },
              "SWTRIG2": {
                "bit": 1,
                "description": "DAC channel2 software trigger This bit\n              is set by software to trigger the DAC in software\n              trigger mode. Note: This bit is cleared by hardware\n              (one APB1 clock cycle later) once the DAC_DHR2\n              register value has been loaded into the DAC_DOR2\n              register."
              }
            },
            "DAC_DHR12R1": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 12-bit right-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel1.",
                "width": 12
              }
            },
            "DAC_DHR12L1": {
              "DACC1DHR": {
                "bit": 4,
                "description": "DAC channel1 12-bit left-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel1.",
                "width": 12
              }
            },
            "DAC_DHR8R1": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 8-bit right-aligned data\n              These bits are written by software which specifies\n              8-bit data for DAC channel1.",
                "width": 8
              }
            },
            "DAC_DHR12R2": {
              "DACC2DHR": {
                "bit": 0,
                "description": "DAC channel2 12-bit right-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel2.",
                "width": 12
              }
            },
            "DAC_DHR12L2": {
              "DACC2DHR": {
                "bit": 4,
                "description": "DAC channel2 12-bit left-aligned data\n              These bits are written by software which specify\n              12-bit data for DAC channel2.",
                "width": 12
              }
            },
            "DAC_DHR8R2": {
              "DACC2DHR": {
                "bit": 0,
                "description": "DAC channel2 8-bit right-aligned data\n              These bits are written by software which specifies\n              8-bit data for DAC channel2.",
                "width": 8
              }
            },
            "DAC_DHR12RD": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 12-bit right-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel1.",
                "width": 12
              },
              "DACC2DHR": {
                "bit": 16,
                "description": "DAC channel2 12-bit right-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel2.",
                "width": 12
              }
            },
            "DAC_DHR12LD": {
              "DACC1DHR": {
                "bit": 4,
                "description": "DAC channel1 12-bit left-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel1.",
                "width": 12
              },
              "DACC2DHR": {
                "bit": 20,
                "description": "DAC channel2 12-bit left-aligned data\n              These bits are written by software which specifies\n              12-bit data for DAC channel2.",
                "width": 12
              }
            },
            "DAC_DHR8RD": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 8-bit right-aligned data\n              These bits are written by software which specifies\n              8-bit data for DAC channel1.",
                "width": 8
              },
              "DACC2DHR": {
                "bit": 8,
                "description": "DAC channel2 8-bit right-aligned data\n              These bits are written by software which specifies\n              8-bit data for DAC channel2.",
                "width": 8
              }
            },
            "DAC_DOR1": {
              "DACC1DOR": {
                "bit": 0,
                "description": "DAC channel1 data output These bits are\n              read-only, they contain data output for DAC\n              channel1.",
                "width": 12
              }
            },
            "DAC_DOR2": {
              "DACC2DOR": {
                "bit": 0,
                "description": "DAC channel2 data output These bits are\n              read-only, they contain data output for DAC\n              channel2.",
                "width": 12
              }
            },
            "DAC_SR": {
              "DMAUDR1": {
                "bit": 13,
                "description": "DAC channel1 DMA underrun flag This bit\n              is set by hardware and cleared by software (by\n              writing it to 1)."
              },
              "CAL_FLAG1": {
                "bit": 14,
                "description": "DAC Channel 1 calibration offset status\n              This bit is set and cleared by hardware"
              },
              "BWST1": {
                "bit": 15,
                "description": "DAC Channel 1 busy writing sample time\n              flag This bit is systematically set just after Sample\n              & Hold mode enable and is set each time the\n              software writes the register DAC_SHSR1, It is cleared\n              by hardware when the write operation of DAC_SHSR1 is\n              complete. (It takes about 3LSI periods of\n              synchronization)."
              },
              "DMAUDR2": {
                "bit": 29,
                "description": "DAC channel2 DMA underrun flag This bit\n              is set by hardware and cleared by software (by\n              writing it to 1)."
              },
              "CAL_FLAG2": {
                "bit": 30,
                "description": "DAC Channel 2 calibration offset status\n              This bit is set and cleared by hardware"
              },
              "BWST2": {
                "bit": 31,
                "description": "DAC Channel 2 busy writing sample time\n              flag This bit is systematically set just after Sample\n              & Hold mode enable and is set each time the\n              software writes the register DAC_SHSR2, It is cleared\n              by hardware when the write operation of DAC_SHSR2 is\n              complete. (It takes about 3 LSI periods of\n              synchronization)."
              }
            },
            "DAC_CCR": {
              "OTRIM1": {
                "bit": 0,
                "description": "DAC Channel 1 offset trimming\n              value",
                "width": 5
              },
              "OTRIM2": {
                "bit": 16,
                "description": "DAC Channel 2 offset trimming\n              value",
                "width": 5
              }
            },
            "DAC_MCR": {
              "MODE1": {
                "bit": 0,
                "description": "DAC Channel 1 mode These bits can be\n              written only when the DAC is disabled and not in the\n              calibration mode (when bit EN1=0 and bit CEN1 =0 in\n              the DAC_CR register). If EN1=1 or CEN1 =1 the write\n              operation is ignored. They can be set and cleared by\n              software to select the DAC Channel 1 mode: DAC\n              Channel 1 in normal Mode DAC Channel 1 in sample\n              &amp; hold mode",
                "width": 3
              },
              "MODE2": {
                "bit": 16,
                "description": "DAC Channel 2 mode These bits can be\n              written only when the DAC is disabled and not in the\n              calibration mode (when bit EN2=0 and bit CEN2 =0 in\n              the DAC_CR register). If EN2=1 or CEN2 =1 the write\n              operation is ignored. They can be set and cleared by\n              software to select the DAC Channel 2 mode: DAC\n              Channel 2 in normal Mode DAC Channel 2 in sample\n              &amp; hold mode",
                "width": 3
              }
            },
            "DAC_SHSR1": {
              "TSAMPLE1": {
                "bit": 0,
                "description": "DAC Channel 1 sample Time (only valid in\n              sample &amp; hold mode) These bits can be written\n              when the DAC channel1 is disabled or also during\n              normal operation. in the latter case, the write can\n              be done only when BWSTx of DAC_SR register is low, If\n              BWSTx=1, the write operation is\n              ignored.",
                "width": 10
              }
            },
            "DAC_SHSR2": {
              "TSAMPLE2": {
                "bit": 0,
                "description": "DAC Channel 2 sample Time (only valid in\n              sample &amp; hold mode) These bits can be written\n              when the DAC channel2 is disabled or also during\n              normal operation. in the latter case, the write can\n              be done only when BWSTx of DAC_SR register is low, if\n              BWSTx=1, the write operation is\n              ignored.",
                "width": 10
              }
            },
            "DAC_SHHR": {
              "THOLD1": {
                "bit": 0,
                "description": "DAC Channel 1 hold Time (only valid in\n              sample &amp; hold mode) Hold time= (THOLD[9:0]) x\n              T LSI",
                "width": 10
              },
              "THOLD2": {
                "bit": 16,
                "description": "DAC Channel 2 hold time (only valid in\n              sample &amp; hold mode). Hold time= (THOLD[9:0])\n              x T LSI",
                "width": 10
              }
            },
            "DAC_SHRR": {
              "TREFRESH1": {
                "bit": 0,
                "description": "DAC Channel 1 refresh Time (only valid\n              in sample &amp; hold mode) Refresh time=\n              (TREFRESH[7:0]) x T LSI",
                "width": 8
              },
              "TREFRESH2": {
                "bit": 16,
                "description": "DAC Channel 2 refresh Time (only valid\n              in sample &amp; hold mode) Refresh time=\n              (TREFRESH[7:0]) x T LSI",
                "width": 8
              }
            },
            "IP_HWCFGR0": {
              "DUAL": {
                "bit": 0,
                "description": "Dual DAC capability",
                "width": 4
              },
              "LFSR": {
                "bit": 4,
                "description": "Pseudonoise wave generation\n              capability",
                "width": 4
              },
              "TRIANGLE": {
                "bit": 8,
                "description": "Triangle wave generation\n              capability",
                "width": 4
              },
              "SAMPLE": {
                "bit": 12,
                "description": "Sample and hold mode\n              capability",
                "width": 4
              },
              "OR_CFG": {
                "bit": 16,
                "description": "option register bit width",
                "width": 8
              }
            },
            "VERR": {
              "MINREV": {
                "bit": 0,
                "description": "Minor Revision number",
                "width": 4
              },
              "MAJREV": {
                "bit": 4,
                "description": "Major Revision number",
                "width": 4
              }
            },
            "IPIDR": {
              "IPID": {
                "bit": 0,
                "description": "IP Identification",
                "width": 32
              }
            },
            "SIDR": {
              "SID": {
                "bit": 0,
                "description": "Size Identification",
                "width": 32
              }
            }
          }
        },
        "I2C": {
          "instances": [
            {
              "name": "I2C1",
              "base": "0x40005400",
              "irq": 23
            },
            {
              "name": "I2C2",
              "base": "0x40005800",
              "irq": 24
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "Control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "Control register 2"
            },
            "OAR1": {
              "offset": "0x08",
              "size": 32,
              "description": "Own address register 1"
            },
            "OAR2": {
              "offset": "0x0C",
              "size": 32,
              "description": "Own address register 2"
            },
            "TIMINGR": {
              "offset": "0x10",
              "size": 32,
              "description": "Timing register"
            },
            "TIMEOUTR": {
              "offset": "0x14",
              "size": 32,
              "description": "Status register 1"
            },
            "ISR": {
              "offset": "0x18",
              "size": 32,
              "description": "Interrupt and Status register"
            },
            "ICR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Interrupt clear register"
            },
            "PECR": {
              "offset": "0x20",
              "size": 32,
              "description": "PEC register"
            },
            "RXDR": {
              "offset": "0x24",
              "size": 32,
              "description": "Receive data register"
            },
            "TXDR": {
              "offset": "0x28",
              "size": 32,
              "description": "Transmit data register"
            }
          },
          "bits": {
            "CR1": {
              "PE": {
                "bit": 0,
                "description": "Peripheral enable"
              },
              "TXIE": {
                "bit": 1,
                "description": "TX Interrupt enable"
              },
              "RXIE": {
                "bit": 2,
                "description": "RX Interrupt enable"
              },
              "ADDRIE": {
                "bit": 3,
                "description": "Address match interrupt enable (slave\n              only)"
              },
              "NACKIE": {
                "bit": 4,
                "description": "Not acknowledge received interrupt\n              enable"
              },
              "STOPIE": {
                "bit": 5,
                "description": "STOP detection Interrupt\n              enable"
              },
              "TCIE": {
                "bit": 6,
                "description": "Transfer Complete interrupt\n              enable"
              },
              "ERRIE": {
                "bit": 7,
                "description": "Error interrupts enable"
              },
              "DNF": {
                "bit": 8,
                "description": "Digital noise filter",
                "width": 4
              },
              "ANFOFF": {
                "bit": 12,
                "description": "Analog noise filter OFF"
              },
              "TXDMAEN": {
                "bit": 14,
                "description": "DMA transmission requests\n              enable"
              },
              "RXDMAEN": {
                "bit": 15,
                "description": "DMA reception requests\n              enable"
              },
              "SBC": {
                "bit": 16,
                "description": "Slave byte control"
              },
              "NOSTRETCH": {
                "bit": 17,
                "description": "Clock stretching disable"
              },
              "WUPEN": {
                "bit": 18,
                "description": "Wakeup from STOP enable"
              },
              "GCEN": {
                "bit": 19,
                "description": "General call enable"
              },
              "SMBHEN": {
                "bit": 20,
                "description": "SMBus Host address enable"
              },
              "SMBDEN": {
                "bit": 21,
                "description": "SMBus Device Default address\n              enable"
              },
              "ALERTEN": {
                "bit": 22,
                "description": "SMBUS alert enable"
              },
              "PECEN": {
                "bit": 23,
                "description": "PEC enable"
              }
            },
            "CR2": {
              "PECBYTE": {
                "bit": 26,
                "description": "Packet error checking byte"
              },
              "AUTOEND": {
                "bit": 25,
                "description": "Automatic end mode (master\n              mode)"
              },
              "RELOAD": {
                "bit": 24,
                "description": "NBYTES reload mode"
              },
              "NBYTES": {
                "bit": 16,
                "description": "Number of bytes",
                "width": 8
              },
              "NACK": {
                "bit": 15,
                "description": "NACK generation (slave\n              mode)"
              },
              "STOP": {
                "bit": 14,
                "description": "Stop generation (master\n              mode)"
              },
              "START": {
                "bit": 13,
                "description": "Start generation"
              },
              "HEAD10R": {
                "bit": 12,
                "description": "10-bit address header only read\n              direction (master receiver mode)"
              },
              "ADD10": {
                "bit": 11,
                "description": "10-bit addressing mode (master\n              mode)"
              },
              "RD_WRN": {
                "bit": 10,
                "description": "Transfer direction (master\n              mode)"
              },
              "SADD": {
                "bit": 0,
                "description": "Slave address bit (master\n              mode)",
                "width": 10
              }
            },
            "OAR1": {
              "OA1_0": {
                "bit": 0,
                "description": "Interface address"
              },
              "OA1_7_1": {
                "bit": 1,
                "description": "Interface address",
                "width": 7
              },
              "OA1_8_9": {
                "bit": 8,
                "description": "Interface address",
                "width": 2
              },
              "OA1MODE": {
                "bit": 10,
                "description": "Own Address 1 10-bit mode"
              },
              "OA1EN": {
                "bit": 15,
                "description": "Own Address 1 enable"
              }
            },
            "OAR2": {
              "OA2": {
                "bit": 1,
                "description": "Interface address",
                "width": 7
              },
              "OA2MSK": {
                "bit": 8,
                "description": "Own Address 2 masks",
                "width": 3
              },
              "OA2EN": {
                "bit": 15,
                "description": "Own Address 2 enable"
              }
            },
            "TIMINGR": {
              "SCLL": {
                "bit": 0,
                "description": "SCL low period (master\n              mode)",
                "width": 8
              },
              "SCLH": {
                "bit": 8,
                "description": "SCL high period (master\n              mode)",
                "width": 8
              },
              "SDADEL": {
                "bit": 16,
                "description": "Data hold time",
                "width": 4
              },
              "SCLDEL": {
                "bit": 20,
                "description": "Data setup time",
                "width": 4
              },
              "PRESC": {
                "bit": 28,
                "description": "Timing prescaler",
                "width": 4
              }
            },
            "TIMEOUTR": {
              "TIMEOUTA": {
                "bit": 0,
                "description": "Bus timeout A",
                "width": 12
              },
              "TIDLE": {
                "bit": 12,
                "description": "Idle clock timeout\n              detection"
              },
              "TIMOUTEN": {
                "bit": 15,
                "description": "Clock timeout enable"
              },
              "TIMEOUTB": {
                "bit": 16,
                "description": "Bus timeout B",
                "width": 12
              },
              "TEXTEN": {
                "bit": 31,
                "description": "Extended clock timeout\n              enable"
              }
            },
            "ISR": {
              "ADDCODE": {
                "bit": 17,
                "description": "Address match code (Slave\n              mode)",
                "width": 7
              },
              "DIR": {
                "bit": 16,
                "description": "Transfer direction (Slave\n              mode)"
              },
              "BUSY": {
                "bit": 15,
                "description": "Bus busy"
              },
              "ALERT": {
                "bit": 13,
                "description": "SMBus alert"
              },
              "TIMEOUT": {
                "bit": 12,
                "description": "Timeout or t_low detection\n              flag"
              },
              "PECERR": {
                "bit": 11,
                "description": "PEC Error in reception"
              },
              "OVR": {
                "bit": 10,
                "description": "Overrun/Underrun (slave\n              mode)"
              },
              "ARLO": {
                "bit": 9,
                "description": "Arbitration lost"
              },
              "BERR": {
                "bit": 8,
                "description": "Bus error"
              },
              "TCR": {
                "bit": 7,
                "description": "Transfer Complete Reload"
              },
              "TC": {
                "bit": 6,
                "description": "Transfer Complete (master\n              mode)"
              },
              "STOPF": {
                "bit": 5,
                "description": "Stop detection flag"
              },
              "NACKF": {
                "bit": 4,
                "description": "Not acknowledge received\n              flag"
              },
              "ADDR": {
                "bit": 3,
                "description": "Address matched (slave\n              mode)"
              },
              "RXNE": {
                "bit": 2,
                "description": "Receive data register not empty\n              (receivers)"
              },
              "TXIS": {
                "bit": 1,
                "description": "Transmit interrupt status\n              (transmitters)"
              },
              "TXE": {
                "bit": 0,
                "description": "Transmit data register empty\n              (transmitters)"
              }
            },
            "ICR": {
              "ALERTCF": {
                "bit": 13,
                "description": "Alert flag clear"
              },
              "TIMOUTCF": {
                "bit": 12,
                "description": "Timeout detection flag\n              clear"
              },
              "PECCF": {
                "bit": 11,
                "description": "PEC Error flag clear"
              },
              "OVRCF": {
                "bit": 10,
                "description": "Overrun/Underrun flag\n              clear"
              },
              "ARLOCF": {
                "bit": 9,
                "description": "Arbitration lost flag\n              clear"
              },
              "BERRCF": {
                "bit": 8,
                "description": "Bus error flag clear"
              },
              "STOPCF": {
                "bit": 5,
                "description": "Stop detection flag clear"
              },
              "NACKCF": {
                "bit": 4,
                "description": "Not Acknowledge flag clear"
              },
              "ADDRCF": {
                "bit": 3,
                "description": "Address Matched flag clear"
              }
            },
            "PECR": {
              "PEC": {
                "bit": 0,
                "description": "Packet error checking\n              register",
                "width": 8
              }
            },
            "RXDR": {
              "RXDATA": {
                "bit": 0,
                "description": "8-bit receive data",
                "width": 8
              }
            },
            "TXDR": {
              "TXDATA": {
                "bit": 0,
                "description": "8-bit transmit data",
                "width": 8
              }
            }
          }
        },
        "RTC": {
          "instances": [
            {
              "name": "RTC",
              "base": "0x40002800",
              "irq": 2
            }
          ],
          "registers": {
            "RTC_TR": {
              "offset": "0x00",
              "size": 32,
              "description": "RTC time register"
            },
            "RTC_DR": {
              "offset": "0x04",
              "size": 32,
              "description": "RTC date register"
            },
            "RTC_SSR": {
              "offset": "0x08",
              "size": 32,
              "description": "RTC sub second register"
            },
            "RTC_ICSR": {
              "offset": "0x0C",
              "size": 32,
              "description": "RTC initialization control and status register"
            },
            "RTC_PRER": {
              "offset": "0x10",
              "size": 32,
              "description": "RTC prescaler register"
            },
            "RTC_WUTR": {
              "offset": "0x14",
              "size": 32,
              "description": "RTC wakeup timer register"
            },
            "RTC_CR": {
              "offset": "0x18",
              "size": 32,
              "description": "control register"
            },
            "RTC_WPR": {
              "offset": "0x24",
              "size": 32,
              "description": "write protection register"
            },
            "RTC_CALR": {
              "offset": "0x28",
              "size": 32,
              "description": "RTC calibration register"
            },
            "RTC_SHIFTR": {
              "offset": "0x2C",
              "size": 32,
              "description": "RTC shift control register"
            },
            "RTC_TSTR": {
              "offset": "0x30",
              "size": 32,
              "description": "RTC timestamp time register"
            },
            "RTC_TSDR": {
              "offset": "0x34",
              "size": 32,
              "description": "RTC timestamp date register"
            },
            "RTC_TSSSR": {
              "offset": "0x38",
              "size": 32,
              "description": "RTC timestamp sub second register"
            },
            "RTC_ALRMAR": {
              "offset": "0x40",
              "size": 32,
              "description": "RTC alarm A register"
            },
            "RTC_ALRMASSR": {
              "offset": "0x44",
              "size": 32,
              "description": "RTC alarm A sub second register"
            },
            "RTC_ALRMBR": {
              "offset": "0x48",
              "size": 32,
              "description": "RTC alarm B register"
            },
            "RTC_ALRMBSSR": {
              "offset": "0x4C",
              "size": 32,
              "description": "RTC alarm B sub second register"
            },
            "RTC_SR": {
              "offset": "0x50",
              "size": 32,
              "description": "RTC status register"
            },
            "RTC_MISR": {
              "offset": "0x54",
              "size": 32,
              "description": "RTC masked interrupt status register"
            },
            "RTC_SCR": {
              "offset": "0x5C",
              "size": 32,
              "description": "RTC status clear register"
            }
          },
          "bits": {
            "RTC_TR": {
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              }
            },
            "RTC_DR": {
              "DU": {
                "bit": 0,
                "description": "Date units in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 4,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "MU": {
                "bit": 8,
                "description": "Month units in BCD format",
                "width": 4
              },
              "MT": {
                "bit": 12,
                "description": "Month tens in BCD format"
              },
              "WDU": {
                "bit": 13,
                "description": "Week day units\n...",
                "width": 3
              },
              "YU": {
                "bit": 16,
                "description": "Year units in BCD format",
                "width": 4
              },
              "YT": {
                "bit": 20,
                "description": "Year tens in BCD format",
                "width": 4
              }
            },
            "RTC_SSR": {
              "SS": {
                "bit": 0,
                "description": "Sub second value\nSS[15:0] is the value in the synchronous prescaler counter. The fraction of a second is given by the formula below:\nSecond fraction = (PREDIV_S - SS) / (PREDIV_S + 1)\nNote: SS can be larger than PREDIV_S only after a shift operation. In that case, the correct time/date is one second less than as indicated by RTC_TR/RTC_DR.",
                "width": 16
              }
            },
            "RTC_ICSR": {
              "ALRAWF": {
                "bit": 0,
                "description": "Alarm A write flag\nThis bit is set by hardware when alarm A values can be changed, after the ALRAE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."
              },
              "ALRBWF": {
                "bit": 1,
                "description": "Alarm B write flag\nThis bit is set by hardware when alarm B values can be changed, after the ALRBE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."
              },
              "WUTWF": {
                "bit": 2,
                "description": "Wakeup timer write flag\nThis bit is set by hardware when WUT value can be changed, after the WUTE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."
              },
              "SHPF": {
                "bit": 3,
                "description": "Shift operation pending\nThis flag is set by hardware as soon as a shift operation is initiated by a write to the RTC_SHIFTR register. It is cleared by hardware when the corresponding shift operation has been executed. Writing to the SHPF bit has no effect."
              },
              "INITS": {
                "bit": 4,
                "description": "Initialization status flag\nThis bit is set by hardware when the calendar year field is different from 0 (Backup domain reset state)."
              },
              "RSF": {
                "bit": 5,
                "description": "Registers synchronization flag\nThis bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_SSR, RTC_TR and RTC_DR). This bit is cleared by hardware in initialization mode, while a shift operation is pending (SHPF = 1), or when in bypass shadow register mode (BYPSHAD = 1). This bit can also be cleared by software.\nIt is cleared either by software or by hardware in initialization mode."
              },
              "INITF": {
                "bit": 6,
                "description": "Initialization flag\nWhen this bit is set to 1, the RTC is in initialization state, and the time, date and prescaler registers can be updated."
              },
              "INIT": {
                "bit": 7,
                "description": "Initialization mode"
              },
              "RECALPF": {
                "bit": 16,
                "description": "Recalibration pending Flag\nThe RECALPF status flag is automatically set to 1 when software writes to the RTC_CALR register, indicating that the RTC_CALR register is blocked. When the new calibration settings are taken into account, this bit returns to 0. Refer to ."
              }
            },
            "RTC_PRER": {
              "PREDIV_S": {
                "bit": 0,
                "description": "Synchronous prescaler factor\nThis is the synchronous division factor:\nck_spre frequency = ck_apre frequency/(PREDIV_S+1)",
                "width": 15
              },
              "PREDIV_A": {
                "bit": 16,
                "description": "Asynchronous prescaler factor\nThis is the asynchronous division factor:\nck_apre frequency = RTCCLK frequency/(PREDIV_A+1)",
                "width": 7
              }
            },
            "RTC_WUTR": {
              "WUT": {
                "bit": 0,
                "description": "Wakeup auto-reload value bits\nWhen the wakeup timer is enabled (WUTE set to 1), the WUTF flag is set every (WUT[15:0]+1) ck_wut cycles. The ck_wut period is selected through WUCKSEL[2:0] bits of the RTC_CR register.\nWhen WUCKSEL[2] = 1, the wakeup timer becomes 17-bits and WUCKSEL[1] effectively becomes WUT[16] the most-significant bit to be reloaded into the timer.\nThe first assertion of WUTF occurs between WUT and (WUT + 1) ck_wut cycles after WUTE is set. Setting WUT[15:0] to 0x0000 with WUCKSEL[2:0] = 011 (RTCCLK/2) is forbidden.",
                "width": 16
              }
            },
            "RTC_CR": {
              "WUCKSEL": {
                "bit": 0,
                "description": "ck_wut wakeup clock selection\n10x: ck_spre (usually 1Hz) clock is selected\n11x: ck_spre (usually 1Hz) clock is selected and 216is added to the WUT counter value",
                "width": 3
              },
              "TSEDGE": {
                "bit": 3,
                "description": "Timestamp event active edge\nTSE must be reset when TSEDGE is changed to avoid unwanted TSF setting."
              },
              "REFCKON": {
                "bit": 4,
                "description": "RTC_REFIN reference clock detection enable (50 or 60Hz)\nNote: PREDIV_S must be 0x00FF."
              },
              "BYPSHAD": {
                "bit": 5,
                "description": "Bypass the shadow registers\nNote: If the frequency of the APB1 clock is less than seven times the frequency of RTCCLK, BYPSHAD must be set to 1."
              },
              "FMT": {
                "bit": 6,
                "description": "Hour format"
              },
              "ALRAE": {
                "bit": 8,
                "description": "Alarm A enable"
              },
              "ALRBE": {
                "bit": 9,
                "description": "Alarm B enable"
              },
              "WUTE": {
                "bit": 10,
                "description": "Wakeup timer enable\nNote: When the wakeup timer is disabled, wait for WUTWF=1 before enabling it again."
              },
              "TSE": {
                "bit": 11,
                "description": "timestamp enable"
              },
              "ALRAIE": {
                "bit": 12,
                "description": "Alarm A interrupt enable"
              },
              "ALRBIE": {
                "bit": 13,
                "description": "Alarm B interrupt enable"
              },
              "WUTIE": {
                "bit": 14,
                "description": "Wakeup timer interrupt enable"
              },
              "TSIE": {
                "bit": 15,
                "description": "Timestamp interrupt enable"
              },
              "ADD1H": {
                "bit": 16,
                "description": "Add 1 hour (summer time change)\nWhen this bit is set outside initialization mode, 1 hour is added to the calendar time. This bit is always read as 0."
              },
              "SUB1H": {
                "bit": 17,
                "description": "Subtract 1 hour (winter time change)\nWhen this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0. This bit is always read as 0.\nSetting this bit has no effect when current hour is 0."
              },
              "BKP": {
                "bit": 18,
                "description": "Backup\nThis bit can be written by the user to memorize whether the daylight saving time change has been performed or not."
              },
              "COSEL": {
                "bit": 19,
                "description": "Calibration output selection\nWhen COE = 1, this bit selects which signal is output on CALIB.\nThese frequencies are valid for RTCCLK at 32.768kHz and prescalers at their default values (PREDIV_A = 127 and PREDIV_S = 255). Refer to ."
              },
              "POL": {
                "bit": 20,
                "description": "Output polarity\nThis bit is used to configure the polarity of TAMPALRM output."
              },
              "OSEL": {
                "bit": 21,
                "description": "Output selection\nThese bits are used to select the flag to be routed to TAMPALRM output.",
                "width": 2
              },
              "COE": {
                "bit": 23,
                "description": "Calibration output enable\nThis bit enables the CALIB output"
              },
              "ITSE": {
                "bit": 24,
                "description": "timestamp on internal event enable"
              },
              "TAMPTS": {
                "bit": 25,
                "description": "Activate timestamp on tamper detection event\nTAMPTS is valid even if TSE = 0 in the RTC_CR register. Timestamp flag is set after the tamper flags, therefore if TAMPTS and TSIE are set, it is recommended to disable the tamper interrupts in order to avoid servicing 2 interrupts."
              },
              "TAMPOE": {
                "bit": 26,
                "description": "Tamper detection output enable on TAMPALRM"
              },
              "TAMPALRM_PU": {
                "bit": 29,
                "description": "TAMPALRM pull-up enable"
              },
              "TAMPALRM_TYPE": {
                "bit": 30,
                "description": "TAMPALRM output type"
              },
              "OUT2EN": {
                "bit": 31,
                "description": "RTC_OUT2 output enable\nSetting this bit allows to remap the RTC outputs on RTC_OUT2 as follows:\nOUT2EN = 0: RTC output 2 disable\nIf OSEL \u00e2\u0089\u00a0 00 or TAMPOE = 1: TAMPALRM is output on RTC_OUT1\nIf OSEL = 00 and TAMPOE = 0 and COE = 1: CALIB is output on RTC_OUT1\nOUT2EN = 1: RTC output 2 enable\nIf (OSEL \u00e2\u0089\u00a0 00 or TAMPOE = 1) and COE = 0: TAMPALRM is output on RTC_OUT2\nIf OSEL = 00 and TAMPOE = 0 and COE = 1: CALIB is output on RTC_OUT2\nIf (OSEL\u00e2\u0089\u00a0 00 or TAMPOE = 1) and COE = 1: CALIB is output on RTC_OUT2 and TAMPALRM is output on RTC_OUT1."
              }
            },
            "RTC_WPR": {
              "KEY": {
                "bit": 0,
                "description": "Write protection key\nThis byte is written by software.\nReading this byte always returns 0x00.\nRefer to  for a description of how to unlock RTC register write protection.",
                "width": 8
              }
            },
            "RTC_CALR": {
              "CALM": {
                "bit": 0,
                "description": "Calibration minus\nThe frequency of the calendar is reduced by masking CALM out of 220 RTCCLK pulses (32 seconds if the input frequency is 32768Hz). This decreases the frequency of the calendar with a resolution of 0.9537ppm.\nTo increase the frequency of the calendar, this feature should be used in conjunction with CALP. See .",
                "width": 9
              },
              "CALW16": {
                "bit": 13,
                "description": "Use a 16-second calibration cycle period\nWhen CALW16 is set to 1, the 16-second calibration cycle period is selected. This bit must not be set to 1 if CALW8 = 1.\nNote: CALM[0] is stuck at 0 when CALW16 = 1. Refer to calibration."
              },
              "CALW8": {
                "bit": 14,
                "description": "Use an 8-second calibration cycle period\nWhen CALW8 is set to 1, the 8-second calibration cycle period is selected.\nNote: CALM[1:0] are stuck at 00 when CALW8 = 1. Refer to digital calibration."
              },
              "CALP": {
                "bit": 15,
                "description": "Increase frequency of RTC by 488.5ppm\nThis feature is intended to be used in conjunction with CALM, which lowers the frequency of the calendar with a fine resolution. if the input frequency is 32768Hz, the number of RTCCLK pulses added during a 32-second window is calculated as follows: (512 \u00c3\u0097 CALP) - CALM.\nRefer to ."
              }
            },
            "RTC_SHIFTR": {
              "SUBFS": {
                "bit": 0,
                "description": "Subtract a fraction of a second\nThese bits are write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR).\nThe value which is written to SUBFS is added to the synchronous prescaler counter. Since this counter counts down, this operation effectively subtracts from (delays) the clock by:\nDelay (seconds) = SUBFS / (PREDIV_S + 1)\nA fraction of a second can effectively be added to the clock (advancing the clock) when the ADD1S function is used in conjunction with SUBFS, effectively advancing the clock by:\nAdvance (seconds) = (1 - (SUBFS / (PREDIV_S + 1))).\nNote: Writing to SUBFS causes RSF to be cleared. Software can then wait until RSF = 1 to be sure that the shadow registers have been updated with the shifted time.",
                "width": 15
              },
              "ADD1S": {
                "bit": 31,
                "description": "Add one second\nThis bit is write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR).\nThis function is intended to be used with SUBFS (see description below) in order to effectively add a fraction of a second to the clock in an atomic operation."
              }
            },
            "RTC_TSTR": {
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format.",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format.",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format.",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format.",
                "width": 3
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format.",
                "width": 4
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format.",
                "width": 2
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              }
            },
            "RTC_TSDR": {
              "DU": {
                "bit": 0,
                "description": "Date units in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 4,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "MU": {
                "bit": 8,
                "description": "Month units in BCD format",
                "width": 4
              },
              "MT": {
                "bit": 12,
                "description": "Month tens in BCD format"
              },
              "WDU": {
                "bit": 13,
                "description": "Week day units",
                "width": 3
              }
            },
            "RTC_TSSSR": {
              "SS": {
                "bit": 0,
                "description": "Sub second value\nSS[15:0] is the value of the synchronous prescaler counter when the timestamp event occurred.",
                "width": 16
              }
            },
            "RTC_ALRMAR": {
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format.",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format.",
                "width": 3
              },
              "MSK1": {
                "bit": 7,
                "description": "Alarm A seconds mask"
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "MSK2": {
                "bit": 15,
                "description": "Alarm A minutes mask"
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              },
              "MSK3": {
                "bit": 23,
                "description": "Alarm A hours mask"
              },
              "DU": {
                "bit": 24,
                "description": "Date units or day in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 28,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "WDSEL": {
                "bit": 30,
                "description": "Week day selection"
              },
              "MSK4": {
                "bit": 31,
                "description": "Alarm A date mask"
              }
            },
            "RTC_ALRMASSR": {
              "SS": {
                "bit": 0,
                "description": "Sub seconds value\nThis value is compared with the contents of the synchronous prescaler counter to determine if alarm A is to be activated. Only bits 0 up MASKSS-1 are compared.",
                "width": 15
              },
              "MASKSS": {
                "bit": 24,
                "description": "Mask the most-significant bits starting at this bit\n2:\tSS[14:2] are don't care in alarm A comparison. Only SS[1:0] are compared.\n3:\tSS[14:3] are don't care in alarm A comparison. Only SS[2:0] are compared.\n...\n12:\tSS[14:12] are don't care in alarm A comparison. SS[11:0] are compared.\n13:\tSS[14:13] are don't care in alarm A comparison. SS[12:0] are compared.\n14:\tSS[14] is don't care in alarm A comparison. SS[13:0] are compared.\n15:\tAll 15 SS bits are compared and must match to activate alarm.\nThe overflow bits of the synchronous counter (bits 15) is never compared. This bit can be different from 0 only after a shift operation.\nNote: The overflow bits of the synchronous counter (bits 15) is never compared. This bit can be different from 0 only after a shift operation.",
                "width": 4
              }
            },
            "RTC_ALRMBR": {
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "MSK1": {
                "bit": 7,
                "description": "Alarm B seconds mask"
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "MSK2": {
                "bit": 15,
                "description": "Alarm B minutes mask"
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              },
              "MSK3": {
                "bit": 23,
                "description": "Alarm B hours mask"
              },
              "DU": {
                "bit": 24,
                "description": "Date units or day in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 28,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "WDSEL": {
                "bit": 30,
                "description": "Week day selection"
              },
              "MSK4": {
                "bit": 31,
                "description": "Alarm B date mask"
              }
            },
            "RTC_ALRMBSSR": {
              "SS": {
                "bit": 0,
                "description": "Sub seconds value\nThis value is compared with the contents of the synchronous prescaler counter to determine if alarm B is to be activated. Only bits 0 up to MASKSS-1 are compared.",
                "width": 15
              },
              "MASKSS": {
                "bit": 24,
                "description": "Mask the most-significant bits starting at this bit\n...\nThe overflow bits of the synchronous counter (bits 15) is never compared. This bit can be different from 0 only after a shift operation.",
                "width": 4
              }
            },
            "RTC_SR": {
              "ALRAF": {
                "bit": 0,
                "description": "Alarm A flag\nThis flag is set by hardware when the time/date registers (RTC_TR and RTC_DR) match the alarm A register (RTC_ALRMAR)."
              },
              "ALRBF": {
                "bit": 1,
                "description": "Alarm B flag\nThis flag is set by hardware when the time/date registers (RTC_TR and RTC_DR) match the alarm B register (RTC_ALRMBR)."
              },
              "WUTF": {
                "bit": 2,
                "description": "Wakeup timer flag\nThis flag is set by hardware when the wakeup auto-reload counter reaches 0.\nThis flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again."
              },
              "TSF": {
                "bit": 3,
                "description": "Timestamp flag\nThis flag is set by hardware when a timestamp event occurs.\nIf ITSF flag is set, TSF must be cleared together with ITSF."
              },
              "TSOVF": {
                "bit": 4,
                "description": "Timestamp overflow flag\nThis flag is set by hardware when a timestamp event occurs while TSF is already set.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared."
              },
              "ITSF": {
                "bit": 5,
                "description": "Internal timestamp flag\nThis flag is set by hardware when a timestamp on the internal event occurs."
              }
            },
            "RTC_MISR": {
              "ALRAMF": {
                "bit": 0,
                "description": "Alarm A masked flag\nThis flag is set by hardware when the alarm A interrupt occurs."
              },
              "ALRBMF": {
                "bit": 1,
                "description": "Alarm B masked flag\nThis flag is set by hardware when the alarm B interrupt occurs."
              },
              "WUTMF": {
                "bit": 2,
                "description": "Wakeup timer masked flag\nThis flag is set by hardware when the wakeup timer interrupt occurs.\nThis flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again."
              },
              "TSMF": {
                "bit": 3,
                "description": "Timestamp masked flag\nThis flag is set by hardware when a timestamp interrupt occurs.\nIf ITSF flag is set, TSF must be cleared together with ITSF."
              },
              "TSOVMF": {
                "bit": 4,
                "description": "Timestamp overflow masked flag\nThis flag is set by hardware when a timestamp interrupt occurs while TSMF is already set.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared."
              },
              "ITSMF": {
                "bit": 5,
                "description": "Internal timestamp masked flag\nThis flag is set by hardware when a timestamp on the internal event occurs and timestampinterrupt is raised."
              }
            },
            "RTC_SCR": {
              "CALRAF": {
                "bit": 0,
                "description": "Clear alarm A flag\nWriting 1 in this bit clears the ALRAF bit in the RTC_SR register."
              },
              "CALRBF": {
                "bit": 1,
                "description": "Clear alarm B flag\nWriting 1 in this bit clears the ALRBF bit in the RTC_SR register."
              },
              "CWUTF": {
                "bit": 2,
                "description": "Clear wakeup timer flag\nWriting 1 in this bit clears the WUTF bit in the RTC_SR register."
              },
              "CTSF": {
                "bit": 3,
                "description": "Clear timestamp flag\nWriting 1 in this bit clears the TSOVF bit in the RTC_SR register.\nIf ITSF flag is set, TSF must be cleared together with ITSF by setting CRSF and CITSF."
              },
              "CTSOVF": {
                "bit": 4,
                "description": "Clear timestamp overflow flag\nWriting 1 in this bit clears the TSOVF bit in the RTC_SR register.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared."
              },
              "CITSF": {
                "bit": 5,
                "description": "Clear internal timestamp flag\nWriting 1 in this bit clears the ITSF bit in the RTC_SR register."
              }
            }
          }
        }
      },
      "interrupts": {
        "count": 47,
        "vectors": [
          {
            "number": 0,
            "name": "Initial_SP"
          },
          {
            "number": 1,
            "name": "Reset_Handler"
          },
          {
            "number": 2,
            "name": "NMI_Handler"
          },
          {
            "number": 3,
            "name": "HardFault_Handler"
          },
          {
            "number": 4,
            "name": "MemManage_Handler"
          },
          {
            "number": 5,
            "name": "BusFault_Handler"
          },
          {
            "number": 6,
            "name": "UsageFault_Handler"
          },
          {
            "number": 11,
            "name": "SVC_Handler"
          },
          {
            "number": 12,
            "name": "DebugMon_Handler"
          },
          {
            "number": 14,
            "name": "PendSV_Handler"
          },
          {
            "number": 15,
            "name": "SysTick_Handler"
          },
          {
            "number": 16,
            "name": "WWDG_IRQHandler"
          },
          {
            "number": 18,
            "name": "RTC_STAMP_IRQHandler"
          },
          {
            "number": 19,
            "name": "FLASH_IRQHandler"
          },
          {
            "number": 20,
            "name": "RCC_IRQHandler"
          },
          {
            "number": 21,
            "name": "EXTI0_1_IRQHandler"
          },
          {
            "number": 22,
            "name": "EXTI2_3_IRQHandler"
          },
          {
            "number": 23,
            "name": "EXTI4_15_IRQHandler"
          },
          {
            "number": 24,
            "name": "UCPD1_UCPD2_IRQHandler"
          },
          {
            "number": 25,
            "name": "DMA_Channel1_IRQHandler"
          },
          {
            "number": 26,
            "name": "DMA_Channel2_3_IRQHandler"
          },
          {
            "number": 27,
            "name": "DMA_Channel4_5_6_7_IRQHandler"
          },
          {
            "number": 28,
            "name": "ADC_IRQHandler"
          },
          {
            "number": 29,
            "name": "TIM1_BRK_UP_TRG_COMP_IRQHandler"
          },
          {
            "number": 30,
            "name": "TIM1_CC_IRQHandler"
          },
          {
            "number": 31,
            "name": "TIM2_IRQHandler"
          },
          {
            "number": 32,
            "name": "TIM3_IRQHandler"
          },
          {
            "number": 33,
            "name": "TIM6_DAC_LPTIM1_IRQHandler"
          },
          {
            "number": 34,
            "name": "TIM7_LPTIM2_IRQHandler"
          },
          {
            "number": 35,
            "name": "TIM14_IRQHandler"
          },
          {
            "number": 36,
            "name": "TIM15_IRQHandler"
          },
          {
            "number": 37,
            "name": "TIM16_IRQHandler"
          },
          {
            "number": 38,
            "name": "TIM17_IRQHandler"
          },
          {
            "number": 39,
            "name": "I2C1_IRQHandler"
          },
          {
            "number": 40,
            "name": "I2C2_IRQHandler"
          },
          {
            "number": 41,
            "name": "SPI1_IRQHandler"
          },
          {
            "number": 42,
            "name": "SPI2_IRQHandler"
          },
          {
            "number": 43,
            "name": "USART1_IRQHandler"
          },
          {
            "number": 44,
            "name": "USART2_IRQHandler"
          },
          {
            "number": 45,
            "name": "USART3_USART4_LPUART1_IRQHandler"
          },
          {
            "number": 46,
            "name": "CEC_IRQHandler"
          }
        ]
      }
    }
  }
}