{
  "family": "STM32U5",
  "architecture": "arm-cortex-m3",
  "vendor": "Unknown",
  "mcus": {
    "STM32U575": {
      "flash": {
        "size_kb": 64,
        "base_address": "0x08000000",
        "page_size_kb": 1
      },
      "ram": {
        "size_kb": 20,
        "base_address": "0x20000000"
      },
      "peripherals": {
        "EXTI": {
          "instances": [
            {
              "name": "EXTI",
              "base": "0x46022000",
              "irq": 1
            }
          ],
          "registers": {
            "EXTI_RTSR1": {
              "offset": "0x00",
              "size": 32,
              "description": "EXTI rising trigger selection register"
            },
            "EXTI_FTSR1": {
              "offset": "0x04",
              "size": 32,
              "description": "EXTI falling trigger selection register"
            },
            "EXTI_SWIER1": {
              "offset": "0x08",
              "size": 32,
              "description": "EXTI software interrupt event register"
            },
            "EXTI_RPR1": {
              "offset": "0x0C",
              "size": 32,
              "description": "EXTI rising edge pending register"
            },
            "EXTI_FPR1": {
              "offset": "0x10",
              "size": 32,
              "description": "EXTI falling edge pending register"
            },
            "EXTI_SECCFGR1": {
              "offset": "0x14",
              "size": 32,
              "description": "EXTI security configuration register"
            },
            "EXTI_PRIVCFGR1": {
              "offset": "0x18",
              "size": 32,
              "description": "EXTI privilege configuration register"
            },
            "EXTI_EXTICR1": {
              "offset": "0x60",
              "size": 32,
              "description": "EXTI external interrupt selection register"
            },
            "EXTI_EXTICR2": {
              "offset": "0x64",
              "size": 32,
              "description": "EXTI external interrupt selection register"
            },
            "EXTI_EXTICR3": {
              "offset": "0x68",
              "size": 32,
              "description": "EXTI external interrupt selection register"
            },
            "EXTI_EXTICR4": {
              "offset": "0x6C",
              "size": 32,
              "description": "EXTI external interrupt selection register"
            },
            "EXTI_LOCKR": {
              "offset": "0x70",
              "size": 32,
              "description": "EXTI lock register"
            },
            "EXTI_IMR1": {
              "offset": "0x80",
              "size": 32,
              "description": "EXTI CPU wake-up with interrupt mask register"
            },
            "EXTI_EMR1": {
              "offset": "0x84",
              "size": 32,
              "description": "EXTI CPU wake-up with event mask register"
            }
          },
          "bits": {
            "EXTI_RTSR1": {
              "RT0": {
                "bit": 0,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT1": {
                "bit": 1,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT2": {
                "bit": 2,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT3": {
                "bit": 3,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT4": {
                "bit": 4,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT5": {
                "bit": 5,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT6": {
                "bit": 6,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT7": {
                "bit": 7,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT8": {
                "bit": 8,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT9": {
                "bit": 9,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT10": {
                "bit": 10,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT11": {
                "bit": 11,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT12": {
                "bit": 12,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT13": {
                "bit": 13,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT14": {
                "bit": 14,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT15": {
                "bit": 15,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT16": {
                "bit": 16,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT17": {
                "bit": 17,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT18": {
                "bit": 18,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT19": {
                "bit": 19,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT20": {
                "bit": 20,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT21": {
                "bit": 21,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT22": {
                "bit": 22,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT23": {
                "bit": 23,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT24": {
                "bit": 24,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "RT25": {
                "bit": 25,
                "description": "Rising trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, RTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RTx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RTx can only be accessed with privileged access. Unprivileged write to this bit x is discarded, unprivileged read returns 0.\nNote: RT25, RT24, and RT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_FTSR1": {
              "FT0": {
                "bit": 0,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT1": {
                "bit": 1,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT2": {
                "bit": 2,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT3": {
                "bit": 3,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT4": {
                "bit": 4,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT5": {
                "bit": 5,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT6": {
                "bit": 6,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT7": {
                "bit": 7,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT8": {
                "bit": 8,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT9": {
                "bit": 9,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT10": {
                "bit": 10,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT11": {
                "bit": 11,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT12": {
                "bit": 12,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT13": {
                "bit": 13,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT14": {
                "bit": 14,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT15": {
                "bit": 15,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT16": {
                "bit": 16,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT17": {
                "bit": 17,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT18": {
                "bit": 18,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT19": {
                "bit": 19,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT20": {
                "bit": 20,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT21": {
                "bit": 21,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT22": {
                "bit": 22,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT23": {
                "bit": 23,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT24": {
                "bit": 24,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FT25": {
                "bit": 25,
                "description": "Falling trigger event configuration bit of configurable event input x\nWhen EXTI_SECCFGR.SECx is disabled, FTx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FTx can only be accessed with secure access. Non-secure write to this FTx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FTx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FTx can only be accessed with privileged access. Unprivileged write to this FTx is discarded, unprivileged read returns 0.\nNote: FT25, FT24, and FT23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_SWIER1": {
              "SWI0": {
                "bit": 0,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI1": {
                "bit": 1,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI2": {
                "bit": 2,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI3": {
                "bit": 3,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI4": {
                "bit": 4,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI5": {
                "bit": 5,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI6": {
                "bit": 6,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI7": {
                "bit": 7,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI8": {
                "bit": 8,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI9": {
                "bit": 9,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI10": {
                "bit": 10,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI11": {
                "bit": 11,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI12": {
                "bit": 12,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI13": {
                "bit": 13,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI14": {
                "bit": 14,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI15": {
                "bit": 15,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI16": {
                "bit": 16,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI17": {
                "bit": 17,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI18": {
                "bit": 18,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI19": {
                "bit": 19,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI20": {
                "bit": 20,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI21": {
                "bit": 21,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI22": {
                "bit": 22,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI23": {
                "bit": 23,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI24": {
                "bit": 24,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SWI25": {
                "bit": 25,
                "description": "Software interrupt on event x\nWhen EXTI_SECCFGR.SECx is disabled, SWIx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, SWIx can only be accessed with secure access. Non-secure write to this SWI x is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SWIx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SWIx can only be accessed with privileged access. Unprivileged write to this SWIx is discarded, unprivileged read returns 0.\nA software interrupt is generated independent from the setting in EXTI_RTSR and EXTI_FTSR. It always returns 0 when read.\nNote: SW25, SW24, and SW23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_RPR1": {
              "RPIF0": {
                "bit": 0,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF1": {
                "bit": 1,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF2": {
                "bit": 2,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF3": {
                "bit": 3,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF4": {
                "bit": 4,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF5": {
                "bit": 5,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF6": {
                "bit": 6,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF7": {
                "bit": 7,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF8": {
                "bit": 8,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF9": {
                "bit": 9,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF10": {
                "bit": 10,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF11": {
                "bit": 11,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF12": {
                "bit": 12,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF13": {
                "bit": 13,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF14": {
                "bit": 14,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF15": {
                "bit": 15,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF16": {
                "bit": 16,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF17": {
                "bit": 17,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF18": {
                "bit": 18,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF19": {
                "bit": 19,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF20": {
                "bit": 20,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF21": {
                "bit": 21,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF22": {
                "bit": 22,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF23": {
                "bit": 23,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF24": {
                "bit": 24,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              },
              "RPIF25": {
                "bit": 25,
                "description": "configurable event inputs x rising edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, RPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, RPIFx can only be accessed with secure access. Non-secure write to this RPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, RPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, RPIFx can only be accessed with privileged access. Unprivileged write to this RPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the rising edge event or an EXTI_SWIER software trigger arrives on the configurable event line. This bit is cleared by writing 1 to it.\nRPIF25, RPIF24, and RPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. \nNote: If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_FPR1": {
              "FPIF0": {
                "bit": 0,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF1": {
                "bit": 1,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF2": {
                "bit": 2,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF3": {
                "bit": 3,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF4": {
                "bit": 4,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF5": {
                "bit": 5,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF6": {
                "bit": 6,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF7": {
                "bit": 7,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF8": {
                "bit": 8,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF9": {
                "bit": 9,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF10": {
                "bit": 10,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF11": {
                "bit": 11,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF12": {
                "bit": 12,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF13": {
                "bit": 13,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF14": {
                "bit": 14,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF15": {
                "bit": 15,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF16": {
                "bit": 16,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF17": {
                "bit": 17,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF18": {
                "bit": 18,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF19": {
                "bit": 19,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF20": {
                "bit": 20,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF21": {
                "bit": 21,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF22": {
                "bit": 22,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF23": {
                "bit": 23,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF24": {
                "bit": 24,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "FPIF25": {
                "bit": 25,
                "description": "configurable event inputs x falling edge pending bit\nWhen EXTI_SECCFGR.SECx is disabled, FPIFx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, FPIFx can only be accessed with secure access. Non-secure write to this FPIFx is discarded, non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, FPIFx can be accessed with unprivileged and privileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, FPIFx can only be accessed with privileged access. Unprivileged write to this FPIFx is discarded, unprivileged read returns 0.\nThis bit is set when the falling edge event arrives on the configurable event line. This bit is cleared by writing 1 to it. \nNote: FPIF25, FPIF24, and FPIF23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_SECCFGR1": {
              "SEC0": {
                "bit": 0,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC1": {
                "bit": 1,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC2": {
                "bit": 2,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC3": {
                "bit": 3,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC4": {
                "bit": 4,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC5": {
                "bit": 5,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC6": {
                "bit": 6,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC7": {
                "bit": 7,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC8": {
                "bit": 8,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC9": {
                "bit": 9,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC10": {
                "bit": 10,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC11": {
                "bit": 11,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC12": {
                "bit": 12,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC13": {
                "bit": 13,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC14": {
                "bit": 14,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC15": {
                "bit": 15,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC16": {
                "bit": 16,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC17": {
                "bit": 17,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC18": {
                "bit": 18,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC19": {
                "bit": 19,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC20": {
                "bit": 20,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC21": {
                "bit": 21,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC22": {
                "bit": 22,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC23": {
                "bit": 23,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC24": {
                "bit": 24,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "SEC25": {
                "bit": 25,
                "description": "Security enable on event input x\nWhen EXTI_PRIVCFGR.PRIVx is disabled, SECx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, SECx can only be written with privileged access. Unprivileged write to this SECx is discarded.\nNote: SEC25, SEC24, and SEC23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_PRIVCFGR1": {
              "PRIV0": {
                "bit": 0,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV1": {
                "bit": 1,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV2": {
                "bit": 2,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV3": {
                "bit": 3,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV4": {
                "bit": 4,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV5": {
                "bit": 5,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV6": {
                "bit": 6,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV7": {
                "bit": 7,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV8": {
                "bit": 8,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV9": {
                "bit": 9,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV10": {
                "bit": 10,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV11": {
                "bit": 11,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV12": {
                "bit": 12,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV13": {
                "bit": 13,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV14": {
                "bit": 14,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV15": {
                "bit": 15,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV16": {
                "bit": 16,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV17": {
                "bit": 17,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV18": {
                "bit": 18,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV19": {
                "bit": 19,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV20": {
                "bit": 20,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV21": {
                "bit": 21,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV22": {
                "bit": 22,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV23": {
                "bit": 23,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV24": {
                "bit": 24,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "PRIV25": {
                "bit": 25,
                "description": "Security enable on event input x\nWhen EXTI_SECCFGR.SECx is disabled, PRIVx can be accessed with secure and non-secure access.\nWhen EXTI_SECCFGR.SECx is enabled, PRIVx can only be written with secure access. Non-secure write to this PRIVx is discarded.\nNote: PRIV25, PRIV24, and PRIV23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_EXTICR1": {
              "EXTI0": {
                "bit": 0,
                "description": "EXTIm GPIO port selection",
                "width": 8
              },
              "EXTI1": {
                "bit": 8,
                "description": "EXTIm+1 GPIO port selection",
                "width": 8
              },
              "EXTI2": {
                "bit": 16,
                "description": "EXTIm+2 GPIO port selection",
                "width": 8
              },
              "EXTI3": {
                "bit": 24,
                "description": "EXTIm+3 GPIO port selection",
                "width": 8
              }
            },
            "EXTI_EXTICR2": {
              "EXTI4": {
                "bit": 0,
                "description": "EXTIm GPIO port selection",
                "width": 8
              },
              "EXTI5": {
                "bit": 8,
                "description": "EXTIm+1 GPIO port selection",
                "width": 8
              },
              "EXTI6": {
                "bit": 16,
                "description": "EXTIm+2 GPIO port selection",
                "width": 8
              },
              "EXTI7": {
                "bit": 24,
                "description": "EXTIm+3 GPIO port selection",
                "width": 8
              }
            },
            "EXTI_EXTICR3": {
              "EXTI8": {
                "bit": 0,
                "description": "EXTIm GPIO port selection",
                "width": 8
              },
              "EXTI9": {
                "bit": 8,
                "description": "EXTIm+1 GPIO port selection",
                "width": 8
              },
              "EXTI10": {
                "bit": 16,
                "description": "EXTIm+2 GPIO port selection",
                "width": 8
              },
              "EXTI11": {
                "bit": 24,
                "description": "EXTIm+3 GPIO port selection",
                "width": 8
              }
            },
            "EXTI_EXTICR4": {
              "EXTI12": {
                "bit": 0,
                "description": "EXTIm GPIO port selection",
                "width": 8
              },
              "EXTI13": {
                "bit": 8,
                "description": "EXTIm+1 GPIO port selection",
                "width": 8
              },
              "EXTI14": {
                "bit": 16,
                "description": "EXTIm+2 GPIO port selection",
                "width": 8
              },
              "EXTI15": {
                "bit": 24,
                "description": "EXTIm+3 GPIO port selection",
                "width": 8
              }
            },
            "EXTI_LOCKR": {
              "LOCK": {
                "bit": 0,
                "description": "Global security and privilege configuration registers (EXTI_SECCFGR and EXTI_PRIVCFGR) lock \nThis bit is written once after reset."
              }
            },
            "EXTI_IMR1": {
              "IM0": {
                "bit": 0,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM1": {
                "bit": 1,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM2": {
                "bit": 2,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM3": {
                "bit": 3,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM4": {
                "bit": 4,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM5": {
                "bit": 5,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM6": {
                "bit": 6,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM7": {
                "bit": 7,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM8": {
                "bit": 8,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM9": {
                "bit": 9,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM10": {
                "bit": 10,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM11": {
                "bit": 11,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM12": {
                "bit": 12,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM13": {
                "bit": 13,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM14": {
                "bit": 14,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM15": {
                "bit": 15,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM16": {
                "bit": 16,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM17": {
                "bit": 17,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM18": {
                "bit": 18,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM19": {
                "bit": 19,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM20": {
                "bit": 20,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM21": {
                "bit": 21,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM22": {
                "bit": 22,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM23": {
                "bit": 23,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM24": {
                "bit": 24,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "IM25": {
                "bit": 25,
                "description": "CPU wake-up with interrupt mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, IMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, IMx can only be accessed with secure access. Non-secure write to this bit is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, IMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, IMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: IM25, IM24, and IM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            },
            "EXTI_EMR1": {
              "EM0": {
                "bit": 0,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM1": {
                "bit": 1,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM2": {
                "bit": 2,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM3": {
                "bit": 3,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM4": {
                "bit": 4,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM5": {
                "bit": 5,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM6": {
                "bit": 6,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM7": {
                "bit": 7,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM8": {
                "bit": 8,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM9": {
                "bit": 9,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM10": {
                "bit": 10,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM11": {
                "bit": 11,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM12": {
                "bit": 12,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM13": {
                "bit": 13,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM14": {
                "bit": 14,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM15": {
                "bit": 15,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM16": {
                "bit": 16,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM17": {
                "bit": 17,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM18": {
                "bit": 18,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM19": {
                "bit": 19,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM20": {
                "bit": 20,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM21": {
                "bit": 21,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM22": {
                "bit": 22,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM23": {
                "bit": 23,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM24": {
                "bit": 24,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              },
              "EM25": {
                "bit": 25,
                "description": "CPU wake-up with event generation mask on event input x\nWhen EXTI_SECCFGR.SECx is disabled, EMx can be accessed with non-secure and secure access.\nWhen EXTI_SECCFGR.SECx is enabled, EMx can only be accessed with secure access. Non-secure write to this bit x is discarded and non-secure read returns 0.\nWhen EXTI_PRIVCFGR.PRIVx is disabled, EMx can be accessed with privileged and unprivileged access.\nWhen EXTI_PRIVCFGR.PRIVx is enabled, EMx can only be accessed with privileged access. Unprivileged write to this bit is discarded.\nNote: EM25, EM24, and EM23 bits are only available on some devices in the STM32U5 Series. Refer to the EXTI line connections table for its availability. If not present, consider this bit as reserved and keep at reset value."
              }
            }
          }
        },
        "SEC": {
          "instances": [
            {
              "name": "SEC_EXTI",
              "base": "0x56022000"
            },
            {
              "name": "SEC_ICache",
              "base": "0x50030400"
            },
            {
              "name": "SEC_DCACHE",
              "base": "0x50031400"
            },
            {
              "name": "SEC_GTZC1_MPCBB1",
              "base": "0x50032C00"
            },
            {
              "name": "SEC_GTZC1_MPCBB2",
              "base": "0x50033000"
            },
            {
              "name": "SEC_GTZC1_MPCBB3",
              "base": "0x50033400"
            },
            {
              "name": "SEC_GTZC1_TZIC",
              "base": "0x50032800"
            },
            {
              "name": "SEC_GTZC1_TZSC",
              "base": "0x50032400"
            },
            {
              "name": "SEC_GTZC2_MPCBB4",
              "base": "0x56023800"
            },
            {
              "name": "SEC_GTZC2_TZIC",
              "base": "0x56023400"
            },
            {
              "name": "SEC_GTZC2_TZSC",
              "base": "0x56023000"
            },
            {
              "name": "SEC_SAI1",
              "base": "0x50015400"
            },
            {
              "name": "SEC_SAI2",
              "base": "0x50015800"
            },
            {
              "name": "SEC_SYSCFG",
              "base": "0x56000400"
            },
            {
              "name": "SEC_PKA",
              "base": "0x520C2000"
            },
            {
              "name": "SEC_VREFBUF",
              "base": "0x56007400"
            },
            {
              "name": "SEC_TSC",
              "base": "0x50024000"
            },
            {
              "name": "SEC_UCPD1",
              "base": "0x5000DC00"
            },
            {
              "name": "SEC_CRC",
              "base": "0x50023000"
            },
            {
              "name": "SEC_CRS",
              "base": "0x50006000"
            },
            {
              "name": "SEC_HASH",
              "base": "0x520C0400"
            },
            {
              "name": "SEC_TAMP",
              "base": "0x56007C00"
            },
            {
              "name": "SEC_MDF1",
              "base": "0x50025000"
            },
            {
              "name": "SEC_ADF1",
              "base": "0x56024000"
            },
            {
              "name": "SEC_FMC",
              "base": "0x520D0400"
            },
            {
              "name": "SEC_FMAC",
              "base": "0x50021400"
            },
            {
              "name": "SEC_CORDIC",
              "base": "0x50021000"
            },
            {
              "name": "SEC_OPAMP",
              "base": "0x56005000"
            },
            {
              "name": "SEC_DLYBOS1",
              "base": "0x520CF000"
            },
            {
              "name": "SEC_DLYBOS2",
              "base": "0x520CF400"
            },
            {
              "name": "SEC_DLYBSD1",
              "base": "0x520C8400"
            },
            {
              "name": "SEC_DLYBSD2",
              "base": "0x520C8800"
            },
            {
              "name": "SEC_OTG_FS",
              "base": "0x52040000"
            },
            {
              "name": "SEC_PSSI",
              "base": "0x5202C400"
            },
            {
              "name": "SEC_OTFDEC1",
              "base": "0x520C5000"
            },
            {
              "name": "SEC_OTFDEC2",
              "base": "0x520C5400"
            },
            {
              "name": "SEC_RAMCFG",
              "base": "0x50026000"
            },
            {
              "name": "SEC_DCMI",
              "base": "0x5202C000"
            }
          ],
          "registers": {}
        },
        "FLASH": {
          "instances": [
            {
              "name": "FLASH",
              "base": "0x40022000",
              "irq": 6
            },
            {
              "name": "SEC_FLASH",
              "base": "0x50022000"
            }
          ],
          "registers": {
            "FLASH_ACR": {
              "offset": "0x00",
              "size": 32,
              "description": "FLASH access control register"
            },
            "FLASH_NSKEYR": {
              "offset": "0x08",
              "size": 32,
              "description": "FLASH non-secure key register"
            },
            "FLASH_SECKEYR": {
              "offset": "0x0C",
              "size": 32,
              "description": "FLASH secure key register"
            },
            "FLASH_OPTKEYR": {
              "offset": "0x10",
              "size": 32,
              "description": "FLASH option key register"
            },
            "FLASH_PDKEY1R": {
              "offset": "0x18",
              "size": 32,
              "description": "FLASH bank 1 power-down key register"
            },
            "FLASH_PDKEY2R": {
              "offset": "0x1C",
              "size": 32,
              "description": "FLASH bank 2 power-down key register"
            },
            "FLASH_NSSR": {
              "offset": "0x20",
              "size": 32,
              "description": "FLASH non-secure status register"
            },
            "FLASH_SECSR": {
              "offset": "0x24",
              "size": 32,
              "description": "FLASH secure status register"
            },
            "FLASH_NSCR": {
              "offset": "0x28",
              "size": 32,
              "description": "FLASH non-secure control register"
            },
            "FLASH_SECCR": {
              "offset": "0x2C",
              "size": 32,
              "description": "FLASH secure control register"
            },
            "FLASH_ECCR": {
              "offset": "0x30",
              "size": 32,
              "description": "FLASH ECC register"
            },
            "FLASH_OPSR": {
              "offset": "0x34",
              "size": 32,
              "description": "FLASH operation status register"
            },
            "FLASH_OPTR": {
              "offset": "0x40",
              "size": 32,
              "description": "FLASH option register"
            },
            "FLASH_NSBOOTADD0R": {
              "offset": "0x44",
              "size": 32,
              "description": "FLASH non-secure boot address 0 register"
            },
            "FLASH_NSBOOTADD1R": {
              "offset": "0x48",
              "size": 32,
              "description": "FLASH non-secure boot address 1 register"
            },
            "FLASH_SECBOOTADD0R": {
              "offset": "0x4C",
              "size": 32,
              "description": "FLASH secure boot address 0 register"
            },
            "FLASH_SECWM1R1": {
              "offset": "0x50",
              "size": 32,
              "description": "FLASH secure watermark1 register 1"
            },
            "FLASH_SECWM1R2": {
              "offset": "0x54",
              "size": 32,
              "description": "FLASH secure watermark1 register 2"
            },
            "FLASH_WRP1AR": {
              "offset": "0x58",
              "size": 32,
              "description": "FLASH WRP1 area A address register"
            },
            "FLASH_WRP1BR": {
              "offset": "0x5C",
              "size": 32,
              "description": "FLASH WRP1 area B address register"
            },
            "FLASH_SECWM2R1": {
              "offset": "0x60",
              "size": 32,
              "description": "FLASH secure watermark2 register 1"
            },
            "FLASH_SECWM2R2": {
              "offset": "0x64",
              "size": 32,
              "description": "FLASH secure watermark2 register 2"
            },
            "FLASH_WRP2AR": {
              "offset": "0x68",
              "size": 32,
              "description": "FLASH WPR2 area A address register"
            },
            "FLASH_WRP2BR": {
              "offset": "0x6C",
              "size": 32,
              "description": "FLASH WPR2 area B address register"
            },
            "FLASH_OEM1KEYR1": {
              "offset": "0x70",
              "size": 32,
              "description": "FLASH OEM1 key register 1"
            },
            "FLASH_OEM1KEYR2": {
              "offset": "0x74",
              "size": 32,
              "description": "FLASH OEM1 key register 2"
            },
            "FLASH_OEM2KEYR1": {
              "offset": "0x78",
              "size": 32,
              "description": "FLASH OEM2 key register 1"
            },
            "FLASH_OEM2KEYR2": {
              "offset": "0x7C",
              "size": 32,
              "description": "FLASH OEM2 key register 2"
            },
            "FLASH_SEC1BBR1": {
              "offset": "0x80",
              "size": 32,
              "description": "FLASH secure block based bank 1 register 1"
            },
            "FLASH_SEC1BBR2": {
              "offset": "0x84",
              "size": 32,
              "description": "FLASH secure block based bank 1 register 2"
            },
            "FLASH_SEC1BBR3": {
              "offset": "0x88",
              "size": 32,
              "description": "FLASH secure block based bank 1 register 3"
            },
            "FLASH_SEC1BBR4": {
              "offset": "0x8C",
              "size": 32,
              "description": "FLASH secure block based bank 1 register 4"
            },
            "FLASH_SEC2BBR1": {
              "offset": "0xA0",
              "size": 32,
              "description": "FLASH secure block based bank 2 register 1"
            },
            "FLASH_SEC2BBR2": {
              "offset": "0xA4",
              "size": 32,
              "description": "FLASH secure block based bank 2 register 2"
            },
            "FLASH_SEC2BBR3": {
              "offset": "0xA8",
              "size": 32,
              "description": "FLASH secure block based bank 2 register 3"
            },
            "FLASH_SEC2BBR4": {
              "offset": "0xAC",
              "size": 32,
              "description": "FLASH secure block based bank 2 register 4"
            },
            "FLASH_SECHDPCR": {
              "offset": "0xC0",
              "size": 32,
              "description": "FLASH secure HDP control register"
            },
            "FLASH_PRIVCFGR": {
              "offset": "0xC4",
              "size": 32,
              "description": "FLASH privilege configuration register"
            },
            "FLASH_PRIV1BBR1": {
              "offset": "0xD0",
              "size": 32,
              "description": "FLASH privilege block based bank 1 register 1"
            },
            "FLASH_PRIV1BBR2": {
              "offset": "0xD4",
              "size": 32,
              "description": "FLASH privilege block based bank 1 register 2"
            },
            "FLASH_PRIV1BBR3": {
              "offset": "0xD8",
              "size": 32,
              "description": "FLASH privilege block based bank 1 register 3"
            },
            "FLASH_PRIV1BBR4": {
              "offset": "0xDC",
              "size": 32,
              "description": "FLASH privilege block based bank 1 register 4"
            },
            "FLASH_PRIV2BBR1": {
              "offset": "0xF0",
              "size": 32,
              "description": "FLASH privilege block based bank 2 register 1"
            },
            "FLASH_PRIV2BBR2": {
              "offset": "0xF4",
              "size": 32,
              "description": "FLASH privilege block based bank 2 register 2"
            },
            "FLASH_PRIV2BBR3": {
              "offset": "0xF8",
              "size": 32,
              "description": "FLASH privilege block based bank 2 register 3"
            },
            "FLASH_PRIV2BBR4": {
              "offset": "0xFC",
              "size": 32,
              "description": "FLASH privilege block based bank 2 register 4"
            }
          },
          "bits": {
            "FLASH_ACR": {
              "LATENCY": {
                "bit": 0,
                "description": "Latency\nThese bits represent the ratio between the HCLK (AHB clock) period and the Flash memory access time.\n...",
                "width": 4
              },
              "PRFTEN": {
                "bit": 8,
                "description": "Prefetch enable\nThis bit enables the prefetch buffer in the embedded Flash memory."
              },
              "LPM": {
                "bit": 11,
                "description": "Low-power read mode\nThis bit puts the Flash memory in low-power read mode."
              },
              "PDREQ1": {
                "bit": 12,
                "description": "Bank 1 power-down mode request\nThis bit is write-protected with FLASH_PDKEY1R. This bit requests bank 1 to enter power-down mode. When bank 1 enters power-down mode, this bit is cleared by hardware and the PDKEY1R is locked."
              },
              "PDREQ2": {
                "bit": 13,
                "description": "Bank 2 power-down mode request\nThis bit is write-protected with FLASH_PDKEY2R. This bit requests bank 2 to enter power-down mode. When bank 2 enters power-down mode, this bit is cleared by hardware and the PDKEY2R is locked."
              },
              "SLEEP_PD": {
                "bit": 14,
                "description": "Flash memory power-down mode during Sleep mode\nThis bit determines whether the Flash memory is in power-down mode or Idle mode when the device is in Sleep mode.\nThe Flash must not be put in power-down while a program or an erase operation is on-going."
              }
            },
            "FLASH_NSKEYR": {
              "NSKEY": {
                "bit": 0,
                "description": "Flash memory non-secure key",
                "width": 32
              }
            },
            "FLASH_SECKEYR": {
              "SECKEY": {
                "bit": 0,
                "description": "Flash memory secure key",
                "width": 32
              }
            },
            "FLASH_OPTKEYR": {
              "OPTKEY": {
                "bit": 0,
                "description": "Option byte key",
                "width": 32
              }
            },
            "FLASH_PDKEY1R": {
              "PDKEY1": {
                "bit": 0,
                "description": "Bank 1 power-down key",
                "width": 32
              }
            },
            "FLASH_PDKEY2R": {
              "PDKEY2": {
                "bit": 0,
                "description": "Bank 2 power-down key",
                "width": 32
              }
            },
            "FLASH_NSSR": {
              "EOP": {
                "bit": 0,
                "description": "Non-secure end of operation"
              },
              "OPERR": {
                "bit": 1,
                "description": "Non-secure operation error"
              },
              "PROGERR": {
                "bit": 3,
                "description": "Non-secure programming error\nThis bit is set by hardware when a non-secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1."
              },
              "WRPERR": {
                "bit": 4,
                "description": "Non-secure write protection error\nThis bit is set by hardware when an non-secure address to be erased/programmed belongs to a write-protected part (by WRP, HDP or RDP level 1) of the Flash memory. This bit is cleared by writing 1.\nRefer to  for full conditions of error flag setting."
              },
              "PGAERR": {
                "bit": 5,
                "description": "Non-secure programming alignment error\nThis bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address. This bit is cleared by writing 1."
              },
              "SIZERR": {
                "bit": 6,
                "description": "Non-secure size error\nThis bit is set by hardware when the size of the access is a byte or half-word during a non-secure program sequence. Only quad-word programming is allowed by means of successive word accesses. This bit is cleared by writing 1."
              },
              "PGSERR": {
                "bit": 7,
                "description": "Non-secure programming sequence error\nThis bit is set by hardware when programming sequence is not correct. It is cleared by writing 1.\nRefer to  for full conditions of error flag setting."
              },
              "OPTWERR": {
                "bit": 13,
                "description": "Option write error\nThis bit is set by hardware when the options bytes are written with an invalid configuration. It is cleared by writing 1.\nRefer to  for full conditions of error flag setting."
              },
              "BSY": {
                "bit": 16,
                "description": "Non-secure busy\nThis indicates that a Flash memory secure or non-secure operation is in progress. This bit is set at the beginning of a Flash operation and reset when the operation finishes or when an error occurs."
              },
              "WDW": {
                "bit": 17,
                "description": "Non-secure wait data to write\nThis bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory."
              },
              "OEM1LOCK": {
                "bit": 18,
                "description": "OEM1 lock\nThis bit indicates that the OEM1 RDP key read during the OBL is not virgin. When set, the OEM1 RDP lock mechanism is active."
              },
              "OEM2LOCK": {
                "bit": 19,
                "description": "OEM2 lock\nThis bit indicates that the OEM2 RDP key read during the OBL is not virgin. When set, the OEM2 RDP lock mechanism is active."
              },
              "PD1": {
                "bit": 20,
                "description": "Bank 1 in power-down mode\nThis bit indicates that the Flash memory bank 1 is in power-down state. It is reset when bank\u00a01 is in normal mode or being awaken."
              },
              "PD2": {
                "bit": 21,
                "description": "Bank 2 in power-down mode\nThis bit indicates that the Flash memory bank 2 is in power-down state. It is reset when bank\u00a02 is in normal mode or being awaken."
              }
            },
            "FLASH_SECSR": {
              "EOP": {
                "bit": 0,
                "description": "Secure end of operation\nThis bit is set by hardware when one or more Flash memory secure operation (program/erase) has been completed successfully. This bit is set only if the secure end of operation interrupts are enabled (EOPIE = 1 in FLASH_SECCR). This bit is cleared by writing\u00a01."
              },
              "OPERR": {
                "bit": 1,
                "description": "Secure operation error\nThis bit is set by hardware when a Flash memory secure operation (program/erase) completes unsuccessfully. This bit is set only if secure error interrupts are enabled (SECERRIE = 1). This bit is cleared by writing 1."
              },
              "PROGERR": {
                "bit": 3,
                "description": "Secure programming error\nThis bit is set by hardware when a secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1."
              },
              "WRPERR": {
                "bit": 4,
                "description": "Secure write protection error\nThis bit is set by hardware when an secure address to be erased/programmed belongs to a write-protected part (by WRP, PCROP, HDP or RDP level 1) of the Flash memory.This bit is cleared by writing 1.\nRefer to  for full conditions of error flag setting."
              },
              "PGAERR": {
                "bit": 5,
                "description": "Secure programming alignment error\nThis bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address.This bit is cleared by writing 1."
              },
              "SIZERR": {
                "bit": 6,
                "description": "Secure size error\nThis bit is set by hardware when the size of the access is a byte or half-word during a secure program sequence. Only quad-word programming is allowed by means of successive word accesses.This bit is cleared by writing 1."
              },
              "PGSERR": {
                "bit": 7,
                "description": "Secure programming sequence error\nThis bit is set by hardware when programming sequence is not correct. It is cleared by writing 1.\nRefer to  for full conditions of error flag setting."
              },
              "BSY": {
                "bit": 16,
                "description": "Secure busy\nThis bit indicates that a Flash memory secure or non-secure operation is in progress. This is set on the beginning of a Flash operation and reset when the operation finishes or when an error occurs."
              },
              "WDW": {
                "bit": 17,
                "description": "Secure wait data to write\nThis bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory."
              }
            },
            "FLASH_NSCR": {
              "PG": {
                "bit": 0,
                "description": "Non-secure programming"
              },
              "PER": {
                "bit": 1,
                "description": "Non-secure page erase"
              },
              "MER1": {
                "bit": 2,
                "description": "Non-secure bank 1 mass erase\nThis bit triggers the bank 1 non-secure mass erase (all bank 1 user pages) when set."
              },
              "PNB": {
                "bit": 3,
                "description": "Non-secure page number selection\nThese bits select the page to erase.\n...",
                "width": 7
              },
              "BKER": {
                "bit": 11,
                "description": "Non-secure bank selection for page erase"
              },
              "BWR": {
                "bit": 14,
                "description": "Non-secure burst write programming mode\nWhen set, this bit selects the burst write programming mode."
              },
              "MER2": {
                "bit": 15,
                "description": "Non-secure bank 2 mass erase\nThis bit triggers the bank 2 non-secure mass erase (all bank 2 user pages) when set."
              },
              "STRT": {
                "bit": 16,
                "description": "Non-secure start\nThis bit triggers a non-secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR bit in FLASH_NSSR is set (this condition is forbidden).\nThis bit is set only by software and is cleared when the BSY bit is cleared in FLASH_NSSR."
              },
              "OPTSTRT": {
                "bit": 17,
                "description": "Options modification start\nThis bit triggers an options operation when set. It can not be written if OPTLOCK bit is set. This bit is set only by software, and is cleared when the BSY bit is cleared in FLASH_NSSR."
              },
              "EOPIE": {
                "bit": 24,
                "description": "Non-secure end of operation interrupt enable\nThis bit enables the interrupt generation when the EOP bit in the FLASH_NSSR is set to 1."
              },
              "ERRIE": {
                "bit": 25,
                "description": "Non-secure error interrupt enable\nThis bit enables the interrupt generation when the OPERR bit in the FLASH_NSSR is set to 1."
              },
              "OBL_LAUNCH": {
                "bit": 27,
                "description": "Force the option byte loading\nWhen set to 1, this bit forces the option byte reloading. This bit is cleared only when the option byte loading is complete. It cannot be written if OPTLOCK is set."
              },
              "OPTLOCK": {
                "bit": 30,
                "description": "Option lock\nThis bit is set only. When set, all bits concerning user options in FLASH_NSCR register are locked. This bit is cleared by hardware after detecting the unlock sequence. The LOCK bit in the FLASH_NSCR must be cleared before doing the unlock sequence for OPTLOCK bit.\nIn case of an unsuccessful unlock operation, this bit remains set until the next reset."
              },
              "LOCK": {
                "bit": 31,
                "description": "Non-secure lock\nThis bit is set only. When set, the FLASH_NSCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_NSKEYR register.\nIn case of an unsuccessful unlock operation, this bit remains set until the next system reset."
              }
            },
            "FLASH_SECCR": {
              "PG": {
                "bit": 0,
                "description": "Secure programming"
              },
              "PER": {
                "bit": 1,
                "description": "Secure page erase"
              },
              "MER1": {
                "bit": 2,
                "description": "Secure bank 1 mass erase\nThis bit triggers the bank 1 secure mass erase (all bank 1 user pages) when set."
              },
              "PNB": {
                "bit": 3,
                "description": "Secure page number selection\nThese bits select the page to erase:\n...",
                "width": 7
              },
              "BKER": {
                "bit": 11,
                "description": "Secure bank selection for page erase"
              },
              "BWR": {
                "bit": 14,
                "description": "Secure burst write programming mode\nWhen set, this bit selects the burst write programming mode."
              },
              "MER2": {
                "bit": 15,
                "description": "Secure bank 2 mass erase\nThis bit triggers the bank 2 secure mass erase (all bank 2 user pages) when set."
              },
              "STRT": {
                "bit": 16,
                "description": "Secure start\nThis bit triggers a secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR in the FLASH_SECSR is set (this condition is forbidden).\nThis bit is set only by software and is cleared when the BSY bit is cleared in FLASH_SECSR."
              },
              "EOPIE": {
                "bit": 24,
                "description": "Secure End of operation interrupt enable\nThis bit enables the interrupt generation when the EOP bit in the FLASH_SECSR is set to 1."
              },
              "ERRIE": {
                "bit": 25,
                "description": "Secure error interrupt enable"
              },
              "RDERRIE": {
                "bit": 26,
                "description": "Secure PCROP read error interrupt enable"
              },
              "INV": {
                "bit": 29,
                "description": "Flash memory security state invert\nThis bit inverts the Flash memory security state."
              },
              "LOCK": {
                "bit": 31,
                "description": "Secure lock\nThis bit is set only. When set, the FLASH_SECCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_SECKEYR register.\nIn case of an unsuccessful unlock operation, this bit remains set until the next system reset."
              }
            },
            "FLASH_ECCR": {
              "ADDR_ECC": {
                "bit": 0,
                "description": "ECC fail address",
                "width": 20
              },
              "BK_ECC": {
                "bit": 21,
                "description": "ECC fail bank"
              },
              "SYSF_ECC": {
                "bit": 22,
                "description": "System Flash memory ECC fail\nThis bit indicates that the ECC error correction or double ECC error detection is located in the system Flash memory."
              },
              "ECCIE": {
                "bit": 24,
                "description": "ECC correction interrupt enable\nThis bit enables the interrupt generation when the ECCC bit in the FLASH_ECCR register is set."
              },
              "ECCC": {
                "bit": 30,
                "description": "ECC correction\nThis bit is set by hardware when one ECC error has been detected and corrected (only if ECCC and ECCD were previously cleared). An interrupt is generated if ECCIE is set. This bit is cleared by writing 1."
              },
              "ECCD": {
                "bit": 31,
                "description": "ECC detection\nThis bit is set by hardware when two ECC errors have been detected (only if ECCC and ECCD were previously cleared). When this bit is set, a NMI is generated. This bit is cleared by writing 1."
              }
            },
            "FLASH_OPSR": {
              "ADDR_OP": {
                "bit": 0,
                "description": "Interrupted operation address\nThis field indicates which address in the Flash memory was accessed when reset occurred. The address is given by bank from address 0x0\u00a00000 to 0xF\u00a0FFF0.",
                "width": 20
              },
              "BK_OP": {
                "bit": 21,
                "description": "Interrupted operation bank\nThis bit indicates which Flash memory bank was accessed when reset occurred"
              },
              "SYSF_OP": {
                "bit": 22,
                "description": "Operation in system Flash memory interrupted\nThis bit indicates that the reset occurred during an operation in the system Flash memory."
              },
              "CODE_OP": {
                "bit": 29,
                "description": "Flash memory operation code\nThis field indicates which Flash memory operation has been interrupted by a system reset:",
                "width": 3
              }
            },
            "FLASH_OPTR": {
              "RDP": {
                "bit": 0,
                "description": "Readout protection level\nOthers: Level 1 (memories readout protection active)\nNote: Refer to  for more details.",
                "width": 8
              },
              "BOR_LEV": {
                "bit": 8,
                "description": "BOR reset level\nThese bits contain the VDD supply level threshold that activates/releases the reset.",
                "width": 3
              },
              "nRST_STOP": {
                "bit": 12,
                "description": "Reset generation in Stop mode"
              },
              "nRST_STDBY": {
                "bit": 13,
                "description": "Reset generation in Standby mode"
              },
              "nRST_SHDW": {
                "bit": 14,
                "description": "Reset generation in Shutdown mode"
              },
              "SRAM1345_RST": {
                "bit": 15,
                "description": "SRAM1, SRAM3 and SRAM4 erase upon system reset"
              },
              "IWDG_SW": {
                "bit": 16,
                "description": "Independent watchdog selection"
              },
              "IWDG_STOP": {
                "bit": 17,
                "description": "Independent watchdog counter freeze in Stop mode"
              },
              "IWDG_STDBY": {
                "bit": 18,
                "description": "Independent watchdog counter freeze in Standby mode"
              },
              "WWDG_SW": {
                "bit": 19,
                "description": "Window watchdog selection"
              },
              "SWAP_BANK": {
                "bit": 20,
                "description": "Swap banks"
              },
              "DUALBANK": {
                "bit": 21,
                "description": "Dual-bank on 1-Mbyte and 512-Kbyte Flash memory devices"
              },
              "BKPRAM_ECC": {
                "bit": 22,
                "description": "Backup RAM ECC detection and correction enable"
              },
              "SRAM3_ECC": {
                "bit": 23,
                "description": "SRAM3 ECC detection and correction enable"
              },
              "SRAM2_ECC": {
                "bit": 24,
                "description": "SRAM2 ECC detection and correction enable"
              },
              "SRAM2_RST": {
                "bit": 25,
                "description": "SRAM2 erase when system reset"
              },
              "nSWBOOT0": {
                "bit": 26,
                "description": "Software BOOT0"
              },
              "nBOOT0": {
                "bit": 27,
                "description": "nBOOT0 option bit"
              },
              "PA15_PUPEN": {
                "bit": 28,
                "description": "PA15 pull-up enable"
              },
              "IO_VDD_HSLV": {
                "bit": 29,
                "description": "High-speed IO at low VDD voltage configuration bit\nThis bit can be set only with VDD below 2.5V"
              },
              "IO_VDDIO2_HSLV": {
                "bit": 30,
                "description": "High-speed IO at low VDDIO2 voltage configuration bit\nThis bit can be set only with VDDIO2 below 2.5\u00a0V."
              },
              "TZEN": {
                "bit": 31,
                "description": "Global TrustZone security enable"
              }
            },
            "FLASH_NSBOOTADD0R": {
              "NSBOOTADD0": {
                "bit": 7,
                "description": "Non-secure boot base address 0\nThe non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state.\nExamples:\nNSBOOTADD0[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000)\nNSBOOTADD0[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000)\nNSBOOTADD0[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)",
                "width": 25
              }
            },
            "FLASH_NSBOOTADD1R": {
              "NSBOOTADD1": {
                "bit": 7,
                "description": "Non-secure boot address 1\nThe non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state.\nExamples:\nNSBOOTADD1[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000)\nNSBOOTADD1[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000)\nNSBOOTADD1[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)",
                "width": 25
              }
            },
            "FLASH_SECBOOTADD0R": {
              "BOOT_LOCK": {
                "bit": 0,
                "description": "Boot lock\nWhen set, the boot is always forced to base address value programmed in SECBOOTADD0[24:0] option bytes whatever the boot selection option. When set, this bit can only be cleared by an RDP at level 0."
              },
              "SECBOOTADD0": {
                "bit": 7,
                "description": "Secure boot base address 0\nThe secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. This bits correspond to address [31:7] The SECBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state.\nExamples:\nSECBOOTADD0[24:0] = 0x018 0000: Boot from secure Flash memory (0x0C00 0000)\nSECBOOTADD0[24:0] = 0x01F F000: Boot from RSS (0x0FF8 0000)\nSECBOOTADD0[24:0] = 0x060 0000: Boot from secure SRAM1 on S-Bus (0x3000 0000)",
                "width": 25
              }
            },
            "FLASH_SECWM1R1": {
              "SECWM1_PSTRT": {
                "bit": 0,
                "description": "Start page of first secure area\nThis field contains the first page of the secure area in bank 1.",
                "width": 7
              },
              "SECWM1_PEND": {
                "bit": 16,
                "description": "End page of first secure area\nThis field contains the last page of the secure area in bank 1.",
                "width": 7
              }
            },
            "FLASH_SECWM1R2": {
              "HDP1_PEND": {
                "bit": 16,
                "description": "End page of first hide protection area\nThis field contains the last page of the HDP area in bank 1.",
                "width": 7
              },
              "HDP1EN": {
                "bit": 31,
                "description": "Hide protection first area enable"
              }
            },
            "FLASH_WRP1AR": {
              "WRP1A_PSTRT": {
                "bit": 0,
                "description": "bank 1 WPR first area A start page\nThis field contains the first page of the first WPR area for bank 1.",
                "width": 7
              },
              "WRP1A_PEND": {
                "bit": 16,
                "description": "Bank 1 WPR first area A end page\nThis field contains the last page of the first WPR area in bank 1.",
                "width": 7
              },
              "UNLOCK": {
                "bit": 31,
                "description": "Bank 1 WPR first area A unlock"
              }
            },
            "FLASH_WRP1BR": {
              "WRP1B_PSTRT": {
                "bit": 0,
                "description": "Bank 1 WRP second area B start page\nThis field contains the first page of the second WRP area for bank 1.",
                "width": 7
              },
              "WRP1B_PEND": {
                "bit": 16,
                "description": "Bank 1 WRP second area B end page\nThis field contains the last page of the second WRP area in bank 1.",
                "width": 7
              },
              "UNLOCK": {
                "bit": 31,
                "description": "Bank 1 WPR second area B unlock"
              }
            },
            "FLASH_SECWM2R1": {
              "SECWM2_PSTRT": {
                "bit": 0,
                "description": "Start page of second secure area\nThis field contains the first page of the secure area in bank 2.",
                "width": 7
              },
              "SECWM2_PEND": {
                "bit": 16,
                "description": "End page of second secure area\nThis field contains the last page of the secure area in bank 2.",
                "width": 7
              }
            },
            "FLASH_SECWM2R2": {
              "HDP2_PEND": {
                "bit": 16,
                "description": "End page of hide protection second area\nHDP2_PEND contains the last page of the HDP area in bank 2.",
                "width": 7
              },
              "HDP2EN": {
                "bit": 31,
                "description": "Hide protection second area enable"
              }
            },
            "FLASH_WRP2AR": {
              "WRP2A_PSTRT": {
                "bit": 0,
                "description": "Bank 2 WPR first area A start page\nThis field contains the first page of the first WRP area for bank 2.",
                "width": 7
              },
              "WRP2A_PEND": {
                "bit": 16,
                "description": "Bank 2 WPR first area A end page\nThis field contains the last page of the first WRP area in bank 2.",
                "width": 7
              },
              "UNLOCK": {
                "bit": 31,
                "description": "Bank 2 WPR first area A unlock"
              }
            },
            "FLASH_WRP2BR": {
              "WRP2B_PSTRT": {
                "bit": 0,
                "description": "Bank 2 WPR second area B start page\nThis field contains the first page of the second WRP area for bank 2.",
                "width": 7
              },
              "WRP2B_PEND": {
                "bit": 16,
                "description": "Bank 2 WPR second area B end page\nThis field contains the last page of the second WRP area in bank 2.",
                "width": 7
              },
              "UNLOCK": {
                "bit": 31,
                "description": "Bank 2 WPR second area B unlock"
              }
            },
            "FLASH_OEM1KEYR1": {
              "OEM1KEY": {
                "bit": 0,
                "description": "OEM1 least significant bytes key",
                "width": 32
              }
            },
            "FLASH_OEM1KEYR2": {
              "OEM1KEY": {
                "bit": 0,
                "description": "OEM1 most significant bytes key",
                "width": 32
              }
            },
            "FLASH_OEM2KEYR1": {
              "OEM2KEY": {
                "bit": 0,
                "description": "OEM2 least significant bytes key",
                "width": 32
              }
            },
            "FLASH_OEM2KEYR2": {
              "OEM2KEY": {
                "bit": 0,
                "description": "OEM2 most significant bytes key",
                "width": 32
              }
            },
            "FLASH_SEC1BBR1": {
              "SEC1BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC1BBR2": {
              "SEC1BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC1BBR3": {
              "SEC1BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC1BBR4": {
              "SEC1BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC1BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC2BBR1": {
              "SEC2BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC2BBR2": {
              "SEC2BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC2BBR3": {
              "SEC2BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SEC2BBR4": {
              "SEC2BB0": {
                "bit": 0,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB1": {
                "bit": 1,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB2": {
                "bit": 2,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB3": {
                "bit": 3,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB4": {
                "bit": 4,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB5": {
                "bit": 5,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB6": {
                "bit": 6,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB7": {
                "bit": 7,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB8": {
                "bit": 8,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB9": {
                "bit": 9,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB10": {
                "bit": 10,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB11": {
                "bit": 11,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB12": {
                "bit": 12,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB13": {
                "bit": 13,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB14": {
                "bit": 14,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB15": {
                "bit": 15,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB16": {
                "bit": 16,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB17": {
                "bit": 17,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB18": {
                "bit": 18,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB19": {
                "bit": 19,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB20": {
                "bit": 20,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB21": {
                "bit": 21,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB22": {
                "bit": 22,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB23": {
                "bit": 23,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB24": {
                "bit": 24,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB25": {
                "bit": 25,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB26": {
                "bit": 26,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB27": {
                "bit": 27,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB28": {
                "bit": 28,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB29": {
                "bit": 29,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB30": {
                "bit": 30,
                "description": "page secure/non-secure attribution"
              },
              "SEC2BB31": {
                "bit": 31,
                "description": "page secure/non-secure attribution"
              }
            },
            "FLASH_SECHDPCR": {
              "HDP1_ACCDIS": {
                "bit": 0,
                "description": "HDP1 area access disable\nWhen set, this bit is only cleared by a system reset."
              },
              "HDP2_ACCDIS": {
                "bit": 1,
                "description": "HDP2 area access disable\nWhen set, this bit is only cleared by a system reset."
              }
            },
            "FLASH_PRIVCFGR": {
              "SPRIV": {
                "bit": 0,
                "description": "Privileged protection for secure registers\nThis bit can be accessed only when TrustZone is enabled (TZEN\u00a0=\u00a01). This bit can be read by both privileged or unprivileged, secure and non-secure access.\nThe SPRIV bit can be written only by a secure privileged access. A non-secure write access on SPRIV bit is ignored. A secure unprivileged write access on SPRIV bit is ignored."
              },
              "NSPRIV": {
                "bit": 1,
                "description": "Privileged protection for non-secure registers\nThis bit can be read by both privileged or unprivileged, secure and non-secure access.\nThe NSPRIV bit can be written by a secure or non-secure privileged access. A secure or non-secure unprivileged write access on NSPRIV bit is ignored."
              }
            },
            "FLASH_PRIV1BBR1": {
              "PRIV1BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV1BBR2": {
              "PRIV1BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV1BBR3": {
              "PRIV1BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV1BBR4": {
              "PRIV1BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV1BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV2BBR1": {
              "PRIV2BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV2BBR2": {
              "PRIV2BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV2BBR3": {
              "PRIV2BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            },
            "FLASH_PRIV2BBR4": {
              "PRIV2BB0": {
                "bit": 0,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB1": {
                "bit": 1,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB2": {
                "bit": 2,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB3": {
                "bit": 3,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB4": {
                "bit": 4,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB5": {
                "bit": 5,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB6": {
                "bit": 6,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB7": {
                "bit": 7,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB8": {
                "bit": 8,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB9": {
                "bit": 9,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB10": {
                "bit": 10,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB11": {
                "bit": 11,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB12": {
                "bit": 12,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB13": {
                "bit": 13,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB14": {
                "bit": 14,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB15": {
                "bit": 15,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB16": {
                "bit": 16,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB17": {
                "bit": 17,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB18": {
                "bit": 18,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB19": {
                "bit": 19,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB20": {
                "bit": 20,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB21": {
                "bit": 21,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB22": {
                "bit": 22,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB23": {
                "bit": 23,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB24": {
                "bit": 24,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB25": {
                "bit": 25,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB26": {
                "bit": 26,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB27": {
                "bit": 27,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB28": {
                "bit": 28,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB29": {
                "bit": 29,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB30": {
                "bit": 30,
                "description": "page privileged/unprivileged attribution"
              },
              "PRIV2BB31": {
                "bit": 31,
                "description": "page privileged/unprivileged attribution"
              }
            }
          }
        },
        "GPIO": {
          "instances": [
            {
              "name": "GPIOA",
              "base": "0x42020000"
            },
            {
              "name": "SEC_GPIOA",
              "base": "0x52020000"
            },
            {
              "name": "GPIOB",
              "base": "0x42020400"
            },
            {
              "name": "SEC_GPIOB",
              "base": "0x52020400"
            },
            {
              "name": "GPIOC",
              "base": "0x42020800"
            },
            {
              "name": "SEC_GPIOC",
              "base": "0x52020800"
            },
            {
              "name": "GPIOD",
              "base": "0x42020C00"
            },
            {
              "name": "SEC_GPIOD",
              "base": "0x52020C00"
            },
            {
              "name": "GPIOE",
              "base": "0x42021000"
            },
            {
              "name": "SEC_GPIOE",
              "base": "0x52021000"
            },
            {
              "name": "GPIOF",
              "base": "0x42021400"
            },
            {
              "name": "SEC_GPIOF",
              "base": "0x52021400"
            },
            {
              "name": "GPIOG",
              "base": "0x42021800"
            },
            {
              "name": "SEC_GPIOG",
              "base": "0x52021800"
            },
            {
              "name": "GPIOH",
              "base": "0x42021C00"
            },
            {
              "name": "SEC_GPIOH",
              "base": "0x52021C00"
            },
            {
              "name": "GPIOI",
              "base": "0x42022000"
            },
            {
              "name": "SEC_GPIOI",
              "base": "0x52022000"
            },
            {
              "name": "LPGPIO1",
              "base": "0x46020000"
            },
            {
              "name": "SEC_LPGPIO1",
              "base": "0x56020000"
            }
          ],
          "registers": {
            "GPIO_MODER": {
              "offset": "0x00",
              "size": 32,
              "description": "GPIO port mode register"
            },
            "GPIO_OTYPER": {
              "offset": "0x04",
              "size": 32,
              "description": "GPIO port output type register"
            },
            "GPIO_OSPEEDR": {
              "offset": "0x08",
              "size": 32,
              "description": "GPIO port output speed register"
            },
            "GPIO_PUPDR": {
              "offset": "0x0C",
              "size": 32,
              "description": "GPIO port pull-up/pull-down register"
            },
            "GPIO_IDR": {
              "offset": "0x10",
              "size": 32,
              "description": "GPIO port input data register"
            },
            "GPIO_ODR": {
              "offset": "0x14",
              "size": 32,
              "description": "GPIO port output data register"
            },
            "GPIO_BSRR": {
              "offset": "0x18",
              "size": 32,
              "description": "GPIO port bit set/reset register"
            },
            "GPIO_LCKR": {
              "offset": "0x1C",
              "size": 32,
              "description": "GPIO port configuration lock register"
            },
            "GPIO_AFRL": {
              "offset": "0x20",
              "size": 32,
              "description": "GPIO alternate function low register"
            },
            "GPIO_AFRH": {
              "offset": "0x24",
              "size": 32,
              "description": "GPIO alternate function high register"
            },
            "GPIO_BRR": {
              "offset": "0x28",
              "size": 32,
              "description": "GPIO port bit reset register"
            },
            "GPIO_HSLVR": {
              "offset": "0x2C",
              "size": 32,
              "description": "GPIO high-speed low-voltage register"
            },
            "GPIO_SECCFGR": {
              "offset": "0x30",
              "size": 32,
              "description": "GPIO secure configuration register"
            }
          },
          "bits": {
            "GPIO_MODER": {
              "MODE0": {
                "bit": 0,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE1": {
                "bit": 2,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE2": {
                "bit": 4,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE3": {
                "bit": 6,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE4": {
                "bit": 8,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE5": {
                "bit": 10,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE6": {
                "bit": 12,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE7": {
                "bit": 14,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE8": {
                "bit": 16,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE9": {
                "bit": 18,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE10": {
                "bit": 20,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE11": {
                "bit": 22,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE12": {
                "bit": 24,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE13": {
                "bit": 26,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE14": {
                "bit": 28,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "MODE15": {
                "bit": 30,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O mode.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              }
            },
            "GPIO_OTYPER": {
              "OT0": {
                "bit": 0,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT1": {
                "bit": 1,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT2": {
                "bit": 2,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT3": {
                "bit": 3,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT4": {
                "bit": 4,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT5": {
                "bit": 5,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT6": {
                "bit": 6,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT7": {
                "bit": 7,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT8": {
                "bit": 8,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT9": {
                "bit": 9,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT10": {
                "bit": 10,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT11": {
                "bit": 11,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT12": {
                "bit": 12,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT13": {
                "bit": 13,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT14": {
                "bit": 14,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OT15": {
                "bit": 15,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output type.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_OSPEEDR": {
              "OSPEED0": {
                "bit": 0,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED1": {
                "bit": 2,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED2": {
                "bit": 4,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED3": {
                "bit": 6,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED4": {
                "bit": 8,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED5": {
                "bit": 10,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED6": {
                "bit": 12,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED7": {
                "bit": 14,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED8": {
                "bit": 16,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED9": {
                "bit": 18,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED10": {
                "bit": 20,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED11": {
                "bit": 22,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED12": {
                "bit": 24,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED13": {
                "bit": 26,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED14": {
                "bit": 28,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "OSPEED15": {
                "bit": 30,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O output speed.\nNote: Refer to the device datasheet for the frequency specifications, and the power supply and load conditions for each speed.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              }
            },
            "GPIO_PUPDR": {
              "PUPD0": {
                "bit": 0,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD1": {
                "bit": 2,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD2": {
                "bit": 4,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD3": {
                "bit": 6,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD4": {
                "bit": 8,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD5": {
                "bit": 10,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD6": {
                "bit": 12,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD7": {
                "bit": 14,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD8": {
                "bit": 16,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD9": {
                "bit": 18,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD10": {
                "bit": 20,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD11": {
                "bit": 22,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD12": {
                "bit": 24,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD13": {
                "bit": 26,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD14": {
                "bit": 28,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              },
              "PUPD15": {
                "bit": 30,
                "description": "Port x configuration I/O pin y\nThese bits are written by software to configure the I/O pull-up or pull-down\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 2
              }
            },
            "GPIO_IDR": {
              "ID0": {
                "bit": 0,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID1": {
                "bit": 1,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID2": {
                "bit": 2,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID3": {
                "bit": 3,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID4": {
                "bit": 4,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID5": {
                "bit": 5,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID6": {
                "bit": 6,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID7": {
                "bit": 7,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID8": {
                "bit": 8,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID9": {
                "bit": 9,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID10": {
                "bit": 10,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID11": {
                "bit": 11,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID12": {
                "bit": 12,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID13": {
                "bit": 13,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID14": {
                "bit": 14,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "ID15": {
                "bit": 15,
                "description": "Port x input data I/O pin y\nThese bits are read-only. They contain the input value of the corresponding I/O port.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_ODR": {
              "OD0": {
                "bit": 0,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD1": {
                "bit": 1,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD2": {
                "bit": 2,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD3": {
                "bit": 3,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD4": {
                "bit": 4,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD5": {
                "bit": 5,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD6": {
                "bit": 6,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD7": {
                "bit": 7,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD8": {
                "bit": 8,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD9": {
                "bit": 9,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD10": {
                "bit": 10,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD11": {
                "bit": 11,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD12": {
                "bit": 12,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD13": {
                "bit": 13,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD14": {
                "bit": 14,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "OD15": {
                "bit": 15,
                "description": "Port output data I/O pin y\nThese bits can be read and written by software.\nNote: For atomic bit set/reset, these bits can be individually set and/or reset by writing to\ufffdGPIOx_BSRR or GPIOx_BRR (x = A to J).\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_BSRR": {
              "BS0": {
                "bit": 0,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS1": {
                "bit": 1,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS2": {
                "bit": 2,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS3": {
                "bit": 3,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS4": {
                "bit": 4,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS5": {
                "bit": 5,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS6": {
                "bit": 6,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS7": {
                "bit": 7,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS8": {
                "bit": 8,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS9": {
                "bit": 9,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS10": {
                "bit": 10,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS11": {
                "bit": 11,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS12": {
                "bit": 12,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS13": {
                "bit": 13,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS14": {
                "bit": 14,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BS15": {
                "bit": 15,
                "description": "Port x set I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: The bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR0": {
                "bit": 16,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR1": {
                "bit": 17,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR2": {
                "bit": 18,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR3": {
                "bit": 19,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR4": {
                "bit": 20,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR5": {
                "bit": 21,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR6": {
                "bit": 22,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR7": {
                "bit": 23,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR8": {
                "bit": 24,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR9": {
                "bit": 25,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR10": {
                "bit": 26,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR11": {
                "bit": 27,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR12": {
                "bit": 28,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR13": {
                "bit": 29,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR14": {
                "bit": 30,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR15": {
                "bit": 31,
                "description": "Port x reset I/O pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: If both BSy and BRy are set, BSy has priority.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_LCKR": {
              "LCK0": {
                "bit": 0,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK1": {
                "bit": 1,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK2": {
                "bit": 2,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK3": {
                "bit": 3,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK4": {
                "bit": 4,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK5": {
                "bit": 5,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK6": {
                "bit": 6,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK7": {
                "bit": 7,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK8": {
                "bit": 8,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK9": {
                "bit": 9,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK10": {
                "bit": 10,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK11": {
                "bit": 11,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK12": {
                "bit": 12,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK13": {
                "bit": 13,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK14": {
                "bit": 14,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCK15": {
                "bit": 15,
                "description": "Port x lock I/O pin y\nThese bits are read/write but can only be written when the LCKK bit is 0\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "LCKK": {
                "bit": 16,
                "description": "Lock key\nThis bit can be read any time. It can only be modified using the lock key write sequence.\n- LOCK key write sequence:\nWR LCKR[16] = 1 + LCKR[15:0]\nWR LCKR[16] = 0 + LCKR[15:0]\nWR LCKR[16] = 1 + LCKR[15:0]\n- LOCK key read\nRD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active)\nNote: During the lock key write sequence, the value of LCK[15:0] must not change.\nNote: Any error in the lock sequence aborts the LOCK.\nNote: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset."
              }
            },
            "GPIO_AFRL": {
              "AFSEL0": {
                "bit": 0,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL1": {
                "bit": 4,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL2": {
                "bit": 8,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL3": {
                "bit": 12,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL4": {
                "bit": 16,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL5": {
                "bit": 20,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL6": {
                "bit": 24,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL7": {
                "bit": 28,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              }
            },
            "GPIO_AFRH": {
              "AFSEL8": {
                "bit": 0,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL9": {
                "bit": 4,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL10": {
                "bit": 8,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL11": {
                "bit": 12,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL12": {
                "bit": 16,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL13": {
                "bit": 20,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL14": {
                "bit": 24,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              },
              "AFSEL15": {
                "bit": 28,
                "description": "Alternate function selection for port x I/O pin y\nThese bits are written by the software to configure alternate function I/Os.\nNote: This field is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package.",
                "width": 4
              }
            },
            "GPIO_BRR": {
              "BR0": {
                "bit": 0,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR1": {
                "bit": 1,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR2": {
                "bit": 2,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR3": {
                "bit": 3,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR4": {
                "bit": 4,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR5": {
                "bit": 5,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR6": {
                "bit": 6,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR7": {
                "bit": 7,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR8": {
                "bit": 8,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR9": {
                "bit": 9,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR10": {
                "bit": 10,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR11": {
                "bit": 11,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR12": {
                "bit": 12,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR13": {
                "bit": 13,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR14": {
                "bit": 14,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "BR15": {
                "bit": 15,
                "description": "Port x reset IO pin y\nThese bits are write-only. A read to these bits returns the value 0x0000.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_HSLVR": {
              "HSLV0": {
                "bit": 0,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV1": {
                "bit": 1,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV2": {
                "bit": 2,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV3": {
                "bit": 3,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV4": {
                "bit": 4,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV5": {
                "bit": 5,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV6": {
                "bit": 6,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV7": {
                "bit": 7,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV8": {
                "bit": 8,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV9": {
                "bit": 9,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV10": {
                "bit": 10,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV11": {
                "bit": 11,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV12": {
                "bit": 12,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV13": {
                "bit": 13,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV14": {
                "bit": 14,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              },
              "HSLV15": {
                "bit": 15,
                "description": "Port x high-speed low-voltage configuration\nThese bits are written by software to optimize the I/O speed when the I/O supply is low.\nEach bit is active only if the corresponding IO_VDD_HSLV/IO_VDDIO2_HSLV user option bit is set. It must be used only if the I/O supply voltage is below 2.7 V. \nSetting these bits when the I/O supply (VDD or VDDIO2) is higher than 2.7 V may be destructive. \nNote: Not all I/Os support the HSLV mode. Refer to the I/O structure in the corresponding datasheet for the list of I/Os supporting this feature. Other I/Os HSLV configuration must be kept at reset value.\nNote: This bit is reserved and must be kept at reset value when the corresponding I/O is not available on the selected package."
              }
            },
            "GPIO_SECCFGR": {
              "SEC0": {
                "bit": 0,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC1": {
                "bit": 1,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC2": {
                "bit": 2,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC3": {
                "bit": 3,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC4": {
                "bit": 4,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC5": {
                "bit": 5,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC6": {
                "bit": 6,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC7": {
                "bit": 7,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC8": {
                "bit": 8,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC9": {
                "bit": 9,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC10": {
                "bit": 10,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC11": {
                "bit": 11,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC12": {
                "bit": 12,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC13": {
                "bit": 13,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC14": {
                "bit": 14,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              },
              "SEC15": {
                "bit": 15,
                "description": "I/O pin of Port x secure bit enable y\nThese bits are written by software to enable or disable the I/O port pin security. \nNote: The bit is reserved and must be kept to reset value when the corresponding I/O is not available on the selected package."
              }
            }
          }
        },
        "I2C": {
          "instances": [
            {
              "name": "I2C1",
              "base": "0x40005400",
              "irq": 55
            },
            {
              "name": "SEC_I2C1",
              "base": "0x50005400"
            },
            {
              "name": "I2C2",
              "base": "0x40005800",
              "irq": 57
            },
            {
              "name": "SEC_I2C2",
              "base": "0x50005800"
            },
            {
              "name": "I2C3",
              "base": "0x46002800",
              "irq": 88
            },
            {
              "name": "SEC_I2C3",
              "base": "0x56002800"
            },
            {
              "name": "I2C4",
              "base": "0x40008400",
              "irq": 100
            },
            {
              "name": "SEC_I2C4",
              "base": "0x50008400"
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "Control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "Control register 2"
            },
            "OAR1": {
              "offset": "0x08",
              "size": 32,
              "description": "Own address register 1"
            },
            "OAR2": {
              "offset": "0x0C",
              "size": 32,
              "description": "Own address register 2"
            },
            "TIMINGR": {
              "offset": "0x10",
              "size": 32,
              "description": "Timing register"
            },
            "TIMEOUTR": {
              "offset": "0x14",
              "size": 32,
              "description": "Status register 1"
            },
            "ISR": {
              "offset": "0x18",
              "size": 32,
              "description": "Interrupt and Status register"
            },
            "ICR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Interrupt clear register"
            },
            "PECR": {
              "offset": "0x20",
              "size": 32,
              "description": "PEC register"
            },
            "RXDR": {
              "offset": "0x24",
              "size": 32,
              "description": "Receive data register"
            },
            "TXDR": {
              "offset": "0x28",
              "size": 32,
              "description": "Transmit data register"
            },
            "I2C_AUTOCR": {
              "offset": "0x2C",
              "size": 32,
              "description": "I2C Autonomous mode control register"
            }
          },
          "bits": {
            "CR1": {
              "PE": {
                "bit": 0,
                "description": "Peripheral enable"
              },
              "TXIE": {
                "bit": 1,
                "description": "TX Interrupt enable"
              },
              "RXIE": {
                "bit": 2,
                "description": "RX Interrupt enable"
              },
              "ADDRIE": {
                "bit": 3,
                "description": "Address match interrupt enable (slave\n              only)"
              },
              "NACKIE": {
                "bit": 4,
                "description": "Not acknowledge received interrupt\n              enable"
              },
              "STOPIE": {
                "bit": 5,
                "description": "STOP detection Interrupt\n              enable"
              },
              "TCIE": {
                "bit": 6,
                "description": "Transfer Complete interrupt\n              enable"
              },
              "ERRIE": {
                "bit": 7,
                "description": "Error interrupts enable"
              },
              "DNF": {
                "bit": 8,
                "description": "Digital noise filter",
                "width": 4
              },
              "ANFOFF": {
                "bit": 12,
                "description": "Analog noise filter OFF"
              },
              "TXDMAEN": {
                "bit": 14,
                "description": "DMA transmission requests\n              enable"
              },
              "RXDMAEN": {
                "bit": 15,
                "description": "DMA reception requests\n              enable"
              },
              "SBC": {
                "bit": 16,
                "description": "Slave byte control"
              },
              "NOSTRETCH": {
                "bit": 17,
                "description": "Clock stretching disable"
              },
              "WUPEN": {
                "bit": 18,
                "description": "Wakeup from STOP enable"
              },
              "GCEN": {
                "bit": 19,
                "description": "General call enable"
              },
              "SMBHEN": {
                "bit": 20,
                "description": "SMBus Host address enable"
              },
              "SMBDEN": {
                "bit": 21,
                "description": "SMBus Device Default address\n              enable"
              },
              "ALERTEN": {
                "bit": 22,
                "description": "SMBUS alert enable"
              },
              "PECEN": {
                "bit": 23,
                "description": "PEC enable"
              },
              "FMP": {
                "bit": 24,
                "description": "Fast-mode Plus 20 mA drive enable"
              },
              "ADDRACLR": {
                "bit": 30,
                "description": "Address match flag (ADDR) automatic clear"
              },
              "STOPFACLR": {
                "bit": 31,
                "description": "STOP detection flag (STOPF) automatic clear"
              }
            },
            "CR2": {
              "PECBYTE": {
                "bit": 26,
                "description": "Packet error checking byte"
              },
              "AUTOEND": {
                "bit": 25,
                "description": "Automatic end mode (master\n              mode)"
              },
              "RELOAD": {
                "bit": 24,
                "description": "NBYTES reload mode"
              },
              "NBYTES": {
                "bit": 16,
                "description": "Number of bytes",
                "width": 8
              },
              "NACK": {
                "bit": 15,
                "description": "NACK generation (slave\n              mode)"
              },
              "STOP": {
                "bit": 14,
                "description": "Stop generation (master\n              mode)"
              },
              "START": {
                "bit": 13,
                "description": "Start generation"
              },
              "HEAD10R": {
                "bit": 12,
                "description": "10-bit address header only read\n              direction (master receiver mode)"
              },
              "ADD10": {
                "bit": 11,
                "description": "10-bit addressing mode (master\n              mode)"
              },
              "RD_WRN": {
                "bit": 10,
                "description": "Transfer direction (master\n              mode)"
              },
              "SADD": {
                "bit": 0,
                "description": "Slave address bit (master\n              mode)",
                "width": 10
              }
            },
            "OAR1": {
              "OA1": {
                "bit": 0,
                "description": "Interface address",
                "width": 10
              },
              "OA1MODE": {
                "bit": 10,
                "description": "Own Address 1 10-bit mode"
              },
              "OA1EN": {
                "bit": 15,
                "description": "Own Address 1 enable"
              }
            },
            "OAR2": {
              "OA2": {
                "bit": 1,
                "description": "Interface address",
                "width": 7
              },
              "OA2MSK": {
                "bit": 8,
                "description": "Own Address 2 masks",
                "width": 3
              },
              "OA2EN": {
                "bit": 15,
                "description": "Own Address 2 enable"
              }
            },
            "TIMINGR": {
              "SCLL": {
                "bit": 0,
                "description": "SCL low period (master\n              mode)",
                "width": 8
              },
              "SCLH": {
                "bit": 8,
                "description": "SCL high period (master\n              mode)",
                "width": 8
              },
              "SDADEL": {
                "bit": 16,
                "description": "Data hold time",
                "width": 4
              },
              "SCLDEL": {
                "bit": 20,
                "description": "Data setup time",
                "width": 4
              },
              "PRESC": {
                "bit": 28,
                "description": "Timing prescaler",
                "width": 4
              }
            },
            "TIMEOUTR": {
              "TIMEOUTA": {
                "bit": 0,
                "description": "Bus timeout A",
                "width": 12
              },
              "TIDLE": {
                "bit": 12,
                "description": "Idle clock timeout\n              detection"
              },
              "TIMOUTEN": {
                "bit": 15,
                "description": "Clock timeout enable"
              },
              "TIMEOUTB": {
                "bit": 16,
                "description": "Bus timeout B",
                "width": 12
              },
              "TEXTEN": {
                "bit": 31,
                "description": "Extended clock timeout\n              enable"
              }
            },
            "ISR": {
              "ADDCODE": {
                "bit": 17,
                "description": "Address match code (Slave\n              mode)",
                "width": 7
              },
              "DIR": {
                "bit": 16,
                "description": "Transfer direction (Slave\n              mode)"
              },
              "BUSY": {
                "bit": 15,
                "description": "Bus busy"
              },
              "ALERT": {
                "bit": 13,
                "description": "SMBus alert"
              },
              "TIMEOUT": {
                "bit": 12,
                "description": "Timeout or t_low detection\n              flag"
              },
              "PECERR": {
                "bit": 11,
                "description": "PEC Error in reception"
              },
              "OVR": {
                "bit": 10,
                "description": "Overrun/Underrun (slave\n              mode)"
              },
              "ARLO": {
                "bit": 9,
                "description": "Arbitration lost"
              },
              "BERR": {
                "bit": 8,
                "description": "Bus error"
              },
              "TCR": {
                "bit": 7,
                "description": "Transfer Complete Reload"
              },
              "TC": {
                "bit": 6,
                "description": "Transfer Complete (master\n              mode)"
              },
              "STOPF": {
                "bit": 5,
                "description": "Stop detection flag"
              },
              "NACKF": {
                "bit": 4,
                "description": "Not acknowledge received\n              flag"
              },
              "ADDR": {
                "bit": 3,
                "description": "Address matched (slave\n              mode)"
              },
              "RXNE": {
                "bit": 2,
                "description": "Receive data register not empty\n              (receivers)"
              },
              "TXIS": {
                "bit": 1,
                "description": "Transmit interrupt status\n              (transmitters)"
              },
              "TXE": {
                "bit": 0,
                "description": "Transmit data register empty\n              (transmitters)"
              }
            },
            "ICR": {
              "ALERTCF": {
                "bit": 13,
                "description": "Alert flag clear"
              },
              "TIMOUTCF": {
                "bit": 12,
                "description": "Timeout detection flag\n              clear"
              },
              "PECCF": {
                "bit": 11,
                "description": "PEC Error flag clear"
              },
              "OVRCF": {
                "bit": 10,
                "description": "Overrun/Underrun flag\n              clear"
              },
              "ARLOCF": {
                "bit": 9,
                "description": "Arbitration lost flag\n              clear"
              },
              "BERRCF": {
                "bit": 8,
                "description": "Bus error flag clear"
              },
              "STOPCF": {
                "bit": 5,
                "description": "Stop detection flag clear"
              },
              "NACKCF": {
                "bit": 4,
                "description": "Not Acknowledge flag clear"
              },
              "ADDRCF": {
                "bit": 3,
                "description": "Address Matched flag clear"
              }
            },
            "PECR": {
              "PEC": {
                "bit": 0,
                "description": "Packet error checking\n              register",
                "width": 8
              }
            },
            "RXDR": {
              "RXDATA": {
                "bit": 0,
                "description": "8-bit receive data",
                "width": 8
              }
            },
            "TXDR": {
              "TXDATA": {
                "bit": 0,
                "description": "8-bit transmit data",
                "width": 8
              }
            },
            "I2C_AUTOCR": {
              "TCDMAEN": {
                "bit": 6,
                "description": "DMA request enable on Transfer Complete event"
              },
              "TCRDMAEN": {
                "bit": 7,
                "description": "DMA request enable on Transfer Complete Reload event"
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "Trigger selection",
                "width": 4
              },
              "TRIGPOL": {
                "bit": 20,
                "description": "Trigger polarity"
              },
              "TRIGEN": {
                "bit": 21,
                "description": "Trigger enable"
              }
            }
          }
        },
        "ICache": {
          "instances": [
            {
              "name": "ICache",
              "base": "0x40030400",
              "irq": 107
            }
          ],
          "registers": {
            "ICACHE_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "ICACHE control register"
            },
            "ICACHE_SR": {
              "offset": "0x04",
              "size": 32,
              "description": "ICACHE status register"
            },
            "ICACHE_IER": {
              "offset": "0x08",
              "size": 32,
              "description": "ICACHE interrupt enable\n          register"
            },
            "ICACHE_FCR": {
              "offset": "0x0C",
              "size": 32,
              "description": "ICACHE flag clear register"
            },
            "ICACHE_HMONR": {
              "offset": "0x10",
              "size": 32,
              "description": "ICACHE hit monitor register"
            },
            "ICACHE_MMONR": {
              "offset": "0x14",
              "size": 32,
              "description": "ICACHE miss monitor register"
            },
            "ICACHE_CRR0": {
              "offset": "0x20",
              "size": 32,
              "description": "ICACHE region configuration\n          register"
            },
            "ICACHE_CRR1": {
              "offset": "0x24",
              "size": 32,
              "description": "ICACHE region configuration\n          register"
            },
            "ICACHE_CRR2": {
              "offset": "0x28",
              "size": 32,
              "description": "ICACHE region configuration\n          register"
            },
            "ICACHE_CRR3": {
              "offset": "0x2C",
              "size": 32,
              "description": "ICACHE region configuration\n          register"
            }
          },
          "bits": {
            "ICACHE_CR": {
              "EN": {
                "bit": 0,
                "description": "EN"
              },
              "CACHEINV": {
                "bit": 1,
                "description": "CACHEINV"
              },
              "WAYSEL": {
                "bit": 2,
                "description": "WAYSEL"
              },
              "HITMEN": {
                "bit": 16,
                "description": "HITMEN"
              },
              "MISSMEN": {
                "bit": 17,
                "description": "MISSMEN"
              },
              "HITMRST": {
                "bit": 18,
                "description": "HITMRST"
              },
              "MISSMRST": {
                "bit": 19,
                "description": "MISSMRST"
              }
            },
            "ICACHE_SR": {
              "BUSYF": {
                "bit": 0,
                "description": "BUSYF"
              },
              "BSYENDF": {
                "bit": 1,
                "description": "BSYENDF"
              },
              "ERRF": {
                "bit": 2,
                "description": "ERRF"
              }
            },
            "ICACHE_IER": {
              "BSYENDIE": {
                "bit": 1,
                "description": "BSYENDIE"
              },
              "ERRIE": {
                "bit": 2,
                "description": "ERRIE"
              }
            },
            "ICACHE_FCR": {
              "CBSYENDF": {
                "bit": 1,
                "description": "CBSYENDF"
              },
              "CERRF": {
                "bit": 2,
                "description": "CERRF"
              }
            },
            "ICACHE_HMONR": {
              "HITMON": {
                "bit": 0,
                "description": "HITMON",
                "width": 32
              }
            },
            "ICACHE_MMONR": {
              "MISSMON": {
                "bit": 0,
                "description": "MISSMON",
                "width": 16
              }
            },
            "ICACHE_CRR0": {
              "BASEADDR": {
                "bit": 0,
                "description": "BASEADDR",
                "width": 8
              },
              "RSIZE": {
                "bit": 9,
                "description": "RSIZE",
                "width": 3
              },
              "REN": {
                "bit": 15,
                "description": "REN"
              },
              "REMAPADDR": {
                "bit": 16,
                "description": "REMAPADDR",
                "width": 11
              },
              "MSTSEL": {
                "bit": 28,
                "description": "MSTSEL"
              },
              "HBURST": {
                "bit": 31,
                "description": "HBURST"
              }
            },
            "ICACHE_CRR1": {
              "BASEADDR": {
                "bit": 0,
                "description": "BASEADDR",
                "width": 8
              },
              "RSIZE": {
                "bit": 9,
                "description": "RSIZE",
                "width": 3
              },
              "REN": {
                "bit": 15,
                "description": "REN"
              },
              "REMAPADDR": {
                "bit": 16,
                "description": "REMAPADDR",
                "width": 11
              },
              "MSTSEL": {
                "bit": 28,
                "description": "MSTSEL"
              },
              "HBURST": {
                "bit": 31,
                "description": "HBURST"
              }
            },
            "ICACHE_CRR2": {
              "BASEADDR": {
                "bit": 0,
                "description": "BASEADDR",
                "width": 8
              },
              "RSIZE": {
                "bit": 9,
                "description": "RSIZE",
                "width": 3
              },
              "REN": {
                "bit": 15,
                "description": "REN"
              },
              "REMAPADDR": {
                "bit": 16,
                "description": "REMAPADDR",
                "width": 11
              },
              "MSTSEL": {
                "bit": 28,
                "description": "MSTSEL"
              },
              "HBURST": {
                "bit": 31,
                "description": "HBURST"
              }
            },
            "ICACHE_CRR3": {
              "BASEADDR": {
                "bit": 0,
                "description": "BASEADDR",
                "width": 8
              },
              "RSIZE": {
                "bit": 9,
                "description": "RSIZE",
                "width": 3
              },
              "REN": {
                "bit": 15,
                "description": "REN"
              },
              "REMAPADDR": {
                "bit": 16,
                "description": "REMAPADDR",
                "width": 11
              },
              "MSTSEL": {
                "bit": 28,
                "description": "MSTSEL"
              },
              "HBURST": {
                "bit": 31,
                "description": "HBURST"
              }
            }
          }
        },
        "DCACHE": {
          "instances": [
            {
              "name": "DCACHE",
              "base": "0x40031400",
              "irq": 111
            }
          ],
          "registers": {
            "DCACHE_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "DCACHE control register"
            },
            "DCACHE_SR": {
              "offset": "0x04",
              "size": 32,
              "description": "DCACHE status register"
            },
            "DCACHE_IER": {
              "offset": "0x08",
              "size": 32,
              "description": "DCACHE interrupt enable\n          register"
            },
            "DCACHE_FCR": {
              "offset": "0x0C",
              "size": 32,
              "description": "DCACHE flag clear register"
            },
            "DCACHE_RHMONR": {
              "offset": "0x10",
              "size": 32,
              "description": "DCACHE read-hit monitor register"
            },
            "DCACHE_RMMONR": {
              "offset": "0x14",
              "size": 32,
              "description": "DCACHE read-miss monitor register"
            },
            "DCACHE_WHMONR": {
              "offset": "0x20",
              "size": 32,
              "description": "write-hit monitor register"
            },
            "DCACHE_WMMONR": {
              "offset": "0x24",
              "size": 32,
              "description": "write-miss monitor register"
            },
            "DCACHE_CMDRSADDRR": {
              "offset": "0x28",
              "size": 32,
              "description": "command range start address register"
            },
            "DCACHE_CMDREADDRR": {
              "offset": "0x2C",
              "size": 32,
              "description": "command range start address register"
            }
          },
          "bits": {
            "DCACHE_CR": {
              "EN": {
                "bit": 0,
                "description": "EN"
              },
              "CACHEINV": {
                "bit": 1,
                "description": "CACHEINV"
              },
              "CACHECMD": {
                "bit": 8,
                "description": "CACHECMD",
                "width": 3
              },
              "STARTCMD": {
                "bit": 11,
                "description": "STARTCMD"
              },
              "RHITMEN": {
                "bit": 16,
                "description": "RHITMEN"
              },
              "RMISSMEN": {
                "bit": 17,
                "description": "RMISSMEN"
              },
              "RHITMRST": {
                "bit": 18,
                "description": "RHITMRST"
              },
              "RMISSMRST": {
                "bit": 19,
                "description": "RMISSMRST"
              },
              "WHITMEN": {
                "bit": 20,
                "description": "WHITMEN"
              },
              "WMISSMEN": {
                "bit": 21,
                "description": "WMISSMEN"
              },
              "WHITMRST": {
                "bit": 22,
                "description": "WHITMRST"
              },
              "WMISSMRST": {
                "bit": 23,
                "description": "WMISSMRST"
              },
              "HBURST": {
                "bit": 31,
                "description": "HBURST"
              }
            },
            "DCACHE_SR": {
              "BUSYF": {
                "bit": 0,
                "description": "BUSYF"
              },
              "BSYENDF": {
                "bit": 1,
                "description": "BSYENDF"
              },
              "ERRF": {
                "bit": 2,
                "description": "ERRF"
              },
              "BUSYCMDF": {
                "bit": 3,
                "description": "BUSYCMDF"
              },
              "CMDENDF": {
                "bit": 4,
                "description": "CMDENDF"
              }
            },
            "DCACHE_IER": {
              "BSYENDIE": {
                "bit": 1,
                "description": "BSYENDIE"
              },
              "ERRIE": {
                "bit": 2,
                "description": "ERRIE"
              },
              "CMDENDIE": {
                "bit": 4,
                "description": "CMDENDIE"
              }
            },
            "DCACHE_FCR": {
              "CBSYENDF": {
                "bit": 1,
                "description": "CBSYENDF"
              },
              "CERRF": {
                "bit": 2,
                "description": "CERRF"
              },
              "CCMDENDF": {
                "bit": 4,
                "description": "CCMDENDF"
              }
            },
            "DCACHE_RHMONR": {
              "RHITMON": {
                "bit": 0,
                "description": "RHITMON",
                "width": 32
              }
            },
            "DCACHE_RMMONR": {
              "MRISSMON": {
                "bit": 0,
                "description": "RMISSMON",
                "width": 16
              }
            },
            "DCACHE_WHMONR": {
              "WHITMON": {
                "bit": 0,
                "description": "WHITMON",
                "width": 32
              }
            },
            "DCACHE_WMMONR": {
              "WMISSMON": {
                "bit": 0,
                "description": "WMISSMON",
                "width": 16
              }
            },
            "DCACHE_CMDRSADDRR": {
              "CMDSTARTADDR": {
                "bit": 0,
                "description": "CMDSTARTADDR",
                "width": 32
              }
            },
            "DCACHE_CMDREADDRR": {
              "CMDENDADDR": {
                "bit": 0,
                "description": "CMDENDADDR",
                "width": 32
              }
            }
          }
        },
        "WDG": {
          "instances": [
            {
              "name": "IWDG",
              "base": "0x40003000"
            },
            {
              "name": "SEC_IWDG",
              "base": "0x50003000"
            },
            {
              "name": "WWDG",
              "base": "0x40002C00",
              "irq": 0
            },
            {
              "name": "SEC_WWDG",
              "base": "0x50002C00"
            }
          ],
          "registers": {
            "KR": {
              "offset": "0x00",
              "size": 32,
              "description": "Key register"
            },
            "PR": {
              "offset": "0x04",
              "size": 32,
              "description": "Prescaler register"
            },
            "RLR": {
              "offset": "0x08",
              "size": 32,
              "description": "Reload register"
            },
            "SR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Status register"
            },
            "WINR": {
              "offset": "0x10",
              "size": 32,
              "description": "Window register"
            },
            "EWCR": {
              "offset": "0x14",
              "size": 32,
              "description": "IWDG early wakeup interrupt register"
            }
          },
          "bits": {
            "KR": {
              "KEY": {
                "bit": 0,
                "description": "Key value (write only, read\n              0x0000)",
                "width": 16
              }
            },
            "PR": {
              "PR": {
                "bit": 0,
                "description": "Prescaler divider",
                "width": 4
              }
            },
            "RLR": {
              "RL": {
                "bit": 0,
                "description": "Watchdog counter reload\n              value",
                "width": 12
              }
            },
            "SR": {
              "EWIF": {
                "bit": 14,
                "description": "Watchdog Early interrupt flag"
              },
              "EWU": {
                "bit": 3,
                "description": "Watchdog interrupt comparator value update"
              },
              "WVU": {
                "bit": 2,
                "description": "Watchdog counter window value\n              update"
              },
              "RVU": {
                "bit": 1,
                "description": "Watchdog counter reload value\n              update"
              },
              "PVU": {
                "bit": 0,
                "description": "Watchdog prescaler value\n              update"
              }
            },
            "WINR": {
              "WIN": {
                "bit": 0,
                "description": "Watchdog counter window\n              value",
                "width": 12
              }
            },
            "EWCR": {
              "EWIT": {
                "bit": 0,
                "description": "Watchdog counter window value",
                "width": 12
              },
              "EWIC": {
                "bit": 14,
                "description": "Watchdog early interrupt acknowledge"
              },
              "EWIE": {
                "bit": 15,
                "description": "Watchdog early interrupt enable"
              }
            }
          }
        },
        "TIM": {
          "instances": [
            {
              "name": "LPTIM1",
              "base": "0x46004400",
              "irq": 67
            },
            {
              "name": "SEC_LPTIM1",
              "base": "0x56004400"
            },
            {
              "name": "LPTIM2",
              "base": "0x40009400",
              "irq": 68
            },
            {
              "name": "SEC_LPTIM2",
              "base": "0x50009400"
            },
            {
              "name": "LPTIM3",
              "base": "0x46004800",
              "irq": 98
            },
            {
              "name": "SEC_LPTIM3",
              "base": "0x56004800"
            },
            {
              "name": "LPTIM4",
              "base": "0x46004C00",
              "irq": 110
            },
            {
              "name": "SEC_LPTIM4",
              "base": "0x56004C00"
            },
            {
              "name": "TIM1",
              "base": "0x40012C00",
              "irq": 41
            },
            {
              "name": "SEC_TIM1",
              "base": "0x50012C00"
            },
            {
              "name": "TIM8",
              "base": "0x40013400",
              "irq": 51
            },
            {
              "name": "SEC_TIM8",
              "base": "0x50013400"
            },
            {
              "name": "TIM2",
              "base": "0x40000000",
              "irq": 45
            },
            {
              "name": "SEC_TIM2",
              "base": "0x50000000"
            },
            {
              "name": "TIM3",
              "base": "0x40000400",
              "irq": 46
            },
            {
              "name": "SEC_TIM3",
              "base": "0x50000400"
            },
            {
              "name": "TIM4",
              "base": "0x40000800",
              "irq": 47
            },
            {
              "name": "SEC_TIM4",
              "base": "0x50000800"
            },
            {
              "name": "TIM5",
              "base": "0x40000C00",
              "irq": 48
            },
            {
              "name": "SEC_TIM5",
              "base": "0x50000C00"
            },
            {
              "name": "TIM15",
              "base": "0x40014000",
              "irq": 69
            },
            {
              "name": "SEC_TIM15",
              "base": "0x50014000"
            },
            {
              "name": "TIM16",
              "base": "0x40014400",
              "irq": 70
            },
            {
              "name": "SEC_TIM16",
              "base": "0x50014400"
            },
            {
              "name": "TIM17",
              "base": "0x40014800",
              "irq": 71
            },
            {
              "name": "SEC_TIM17",
              "base": "0x50014800"
            },
            {
              "name": "TIM6",
              "base": "0x40001000",
              "irq": 49
            },
            {
              "name": "SEC_TIM6",
              "base": "0x50001000"
            },
            {
              "name": "TIM7",
              "base": "0x40001400",
              "irq": 50
            },
            {
              "name": "SEC_TIM7",
              "base": "0x50001400"
            }
          ],
          "registers": {
            "ISR_output": {
              "offset": "0x00",
              "size": 32,
              "description": "Interrupt and Status Register (output mode)"
            },
            "ISR_input": {
              "offset": "0x00",
              "size": 32,
              "description": "Interrupt and Status Register (intput mode)"
            },
            "ICR_output": {
              "offset": "0x04",
              "size": 32,
              "description": "Interrupt Clear Register (output mode)"
            },
            "ICR_input": {
              "offset": "0x04",
              "size": 32,
              "description": "Interrupt Clear Register (intput mode)"
            },
            "DIER_output": {
              "offset": "0x08",
              "size": 32,
              "description": "LPTIM interrupt Enable Register (output mode)"
            },
            "DIER_input": {
              "offset": "0x08",
              "size": 32,
              "description": "LPTIM interrupt Enable Register (intput mode)"
            },
            "CFGR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Configuration Register"
            },
            "CR": {
              "offset": "0x10",
              "size": 32,
              "description": "Control Register"
            },
            "CCR1": {
              "offset": "0x14",
              "size": 32,
              "description": "Compare Register"
            },
            "ARR": {
              "offset": "0x18",
              "size": 32,
              "description": "Autoreload Register"
            },
            "CNT": {
              "offset": "0x1C",
              "size": 32,
              "description": "Counter Register"
            },
            "CFGR2": {
              "offset": "0x24",
              "size": 32,
              "description": "LPTIM configuration register 2"
            },
            "RCR": {
              "offset": "0x28",
              "size": 32,
              "description": "LPTIM repetition register"
            },
            "CCMR1": {
              "offset": "0x2C",
              "size": 32,
              "description": "LPTIM capture/compare mode register 1"
            },
            "CCR2": {
              "offset": "0x34",
              "size": 32,
              "description": "LPTIM Compare Register 2"
            },
            "HWCFGR2": {
              "offset": "0x3EC",
              "size": 32,
              "description": "LPTIM peripheral hardware configuration register 2"
            },
            "HWCFGR1": {
              "offset": "0x3F0",
              "size": 32,
              "description": "LPTIM peripheral hardware configuration register 1"
            }
          },
          "bits": {
            "ISR_output": {
              "DIEROK": {
                "bit": 24,
                "description": "Interrupt enable register update OK"
              },
              "CMP2OK": {
                "bit": 19,
                "description": "Compare register 2 update OK"
              },
              "CC2IF": {
                "bit": 9,
                "description": "Compare 2 interrupt flag"
              },
              "REPOK": {
                "bit": 8,
                "description": "Repetition register update\n              Ok"
              },
              "UE": {
                "bit": 7,
                "description": "LPTIM update event\n              occurred"
              },
              "DOWN": {
                "bit": 6,
                "description": "Counter direction change up to\n              down"
              },
              "UP": {
                "bit": 5,
                "description": "Counter direction change down to\n              up"
              },
              "ARROK": {
                "bit": 4,
                "description": "Autoreload register update\n              OK"
              },
              "CMP1OK": {
                "bit": 3,
                "description": "Compare register 1 update OK"
              },
              "EXTTRIG": {
                "bit": 2,
                "description": "External trigger edge\n              event"
              },
              "ARRM": {
                "bit": 1,
                "description": "Autoreload match"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Compare 1 interrupt flag"
              }
            },
            "ISR_input": {
              "DIEROK": {
                "bit": 24,
                "description": "Interrupt enable register update OK"
              },
              "CC2OF": {
                "bit": 13,
                "description": "Capture 2 over-capture flag"
              },
              "CC1OF": {
                "bit": 12,
                "description": "Capture 1 over-capture flag"
              },
              "CC2IF": {
                "bit": 9,
                "description": "Capture 2 interrupt flag"
              },
              "REPOK": {
                "bit": 8,
                "description": "Repetition register update\n              Ok"
              },
              "UE": {
                "bit": 7,
                "description": "LPTIM update event\n              occurred"
              },
              "DOWN": {
                "bit": 6,
                "description": "Counter direction change up to\n              down"
              },
              "UP": {
                "bit": 5,
                "description": "Counter direction change down to\n              up"
              },
              "ARROK": {
                "bit": 4,
                "description": "Autoreload register update\n              OK"
              },
              "EXTTRIG": {
                "bit": 2,
                "description": "External trigger edge\n              event"
              },
              "ARRM": {
                "bit": 1,
                "description": "Autoreload match"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Compare 1 interrupt flag"
              }
            },
            "ICR_output": {
              "DIEROKCF": {
                "bit": 24,
                "description": "Interrupt enable register update OK clear flag"
              },
              "CMP2OKCF": {
                "bit": 19,
                "description": "Compare register 2 update OK clear flag"
              },
              "CC2CF": {
                "bit": 9,
                "description": "Capture/compare 2 clear flag"
              },
              "REPOKCF": {
                "bit": 8,
                "description": "Repetition register update OK clear\n              flag"
              },
              "UECF": {
                "bit": 7,
                "description": "Update event clear flag"
              },
              "DOWNCF": {
                "bit": 6,
                "description": "Direction change to down Clear\n              Flag"
              },
              "UPCF": {
                "bit": 5,
                "description": "Direction change to UP Clear\n              Flag"
              },
              "ARROKCF": {
                "bit": 4,
                "description": "Autoreload register update OK Clear\n              Flag"
              },
              "CMP1OKCF": {
                "bit": 3,
                "description": "Compare register 1 update OK Clear\n              Flag"
              },
              "EXTTRIGCF": {
                "bit": 2,
                "description": "External trigger valid edge Clear\n              Flag"
              },
              "ARRMCF": {
                "bit": 1,
                "description": "Autoreload match Clear\n              Flag"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Capture/compare 1 clear flag"
              }
            },
            "ICR_input": {
              "DIEROKCF": {
                "bit": 24,
                "description": "Interrupt enable register update OK clear flag"
              },
              "CC2OCF": {
                "bit": 13,
                "description": "Capture/compare 2 over-capture clear flag"
              },
              "CC1OCF": {
                "bit": 12,
                "description": "Capture/compare 1 over-capture clear flag"
              },
              "CC2CF": {
                "bit": 9,
                "description": "Capture/compare 2 clear flag"
              },
              "REPOKCF": {
                "bit": 8,
                "description": "Repetition register update OK clear\n              flag"
              },
              "UECF": {
                "bit": 7,
                "description": "Update event clear flag"
              },
              "DOWNCF": {
                "bit": 6,
                "description": "Direction change to down Clear\n              Flag"
              },
              "UPCF": {
                "bit": 5,
                "description": "Direction change to UP Clear\n              Flag"
              },
              "ARROKCF": {
                "bit": 4,
                "description": "Autoreload register update OK Clear\n              Flag"
              },
              "EXTTRIGCF": {
                "bit": 2,
                "description": "External trigger valid edge Clear\n              Flag"
              },
              "ARRMCF": {
                "bit": 1,
                "description": "Autoreload match Clear\n              Flag"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Capture/compare 1 clear flag"
              }
            },
            "DIER_output": {
              "UEDE": {
                "bit": 23,
                "description": "Update event DMA request enable"
              },
              "CMP2OKIE": {
                "bit": 19,
                "description": "Compare register 2 update OK interrupt enable"
              },
              "CC2IE": {
                "bit": 9,
                "description": "Capture/compare 2 interrupt enable"
              },
              "REPOKIE": {
                "bit": 8,
                "description": "REPOKIE"
              },
              "UEIE": {
                "bit": 7,
                "description": "Update event interrupt\n              enable"
              },
              "DOWNIE": {
                "bit": 6,
                "description": "Direction change to down Interrupt\n              Enable"
              },
              "UPIE": {
                "bit": 5,
                "description": "Direction change to UP Interrupt\n              Enable"
              },
              "ARROKIE": {
                "bit": 4,
                "description": "Autoreload register update OK Interrupt\n              Enable"
              },
              "CMP1OKIE": {
                "bit": 3,
                "description": "Compare register 1 update OK Interrupt\n              Enable"
              },
              "EXTTRIGIE": {
                "bit": 2,
                "description": "External trigger valid edge Interrupt\n              Enable"
              },
              "ARRMIE": {
                "bit": 1,
                "description": "Autoreload match Interrupt\n              Enable"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Capture/compare 1 clear flag"
              }
            },
            "DIER_input": {
              "CC2DE": {
                "bit": 25,
                "description": "Capture/compare 2 DMA request enable"
              },
              "CC1DE": {
                "bit": 16,
                "description": "Capture/compare 1 DMA request enable"
              },
              "CC2OIE": {
                "bit": 13,
                "description": "Capture/compare 2 over-capture interrupt enable"
              },
              "CC1OIE": {
                "bit": 12,
                "description": "Capture/compare 1 over-capture interrupt enable"
              },
              "CC2IE": {
                "bit": 9,
                "description": "Capture/compare 2 interrupt enable"
              },
              "REPOKIE": {
                "bit": 8,
                "description": "REPOKIE"
              },
              "UEIE": {
                "bit": 7,
                "description": "Update event interrupt\n              enable"
              },
              "DOWNIE": {
                "bit": 6,
                "description": "Direction change to down Interrupt\n              Enable"
              },
              "UPIE": {
                "bit": 5,
                "description": "Direction change to UP Interrupt\n              Enable"
              },
              "ARROKIE": {
                "bit": 4,
                "description": "Autoreload register update OK Interrupt\n              Enable"
              },
              "EXTTRIGIE": {
                "bit": 2,
                "description": "External trigger valid edge Interrupt\n              Enable"
              },
              "ARRMIE": {
                "bit": 1,
                "description": "Autoreload match Interrupt\n              Enable"
              },
              "CC1IF": {
                "bit": 0,
                "description": "Capture/compare 1 clear flag"
              }
            },
            "CFGR": {
              "ENC": {
                "bit": 24,
                "description": "Encoder mode enable"
              },
              "COUNTMODE": {
                "bit": 23,
                "description": "counter mode enabled"
              },
              "PRELOAD": {
                "bit": 22,
                "description": "Registers update mode"
              },
              "WAVPOL": {
                "bit": 21,
                "description": "Waveform shape polarity"
              },
              "WAVE": {
                "bit": 20,
                "description": "Waveform shape"
              },
              "TIMOUT": {
                "bit": 19,
                "description": "Timeout enable"
              },
              "TRIGEN": {
                "bit": 17,
                "description": "Trigger enable and\n              polarity",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 13,
                "description": "Trigger selector",
                "width": 3
              },
              "PRESC": {
                "bit": 9,
                "description": "Clock prescaler",
                "width": 3
              },
              "TRGFLT": {
                "bit": 6,
                "description": "Configurable digital filter for\n              trigger",
                "width": 2
              },
              "CKFLT": {
                "bit": 3,
                "description": "Configurable digital filter for external\n              clock",
                "width": 2
              },
              "CKPOL": {
                "bit": 1,
                "description": "Clock Polarity",
                "width": 2
              },
              "CKSEL": {
                "bit": 0,
                "description": "Clock selector"
              }
            },
            "CR": {
              "RSTARE": {
                "bit": 4,
                "description": "Reset after read enable"
              },
              "COUNTRST": {
                "bit": 3,
                "description": "Counter reset"
              },
              "CNTSTRT": {
                "bit": 2,
                "description": "Timer start in continuous\n              mode"
              },
              "SNGSTRT": {
                "bit": 1,
                "description": "LPTIM start in single mode"
              },
              "ENABLE": {
                "bit": 0,
                "description": "LPTIM Enable"
              }
            },
            "CCR1": {
              "CCR1": {
                "bit": 0,
                "description": "Capture/compare 1 value",
                "width": 16
              }
            },
            "ARR": {
              "ARR": {
                "bit": 0,
                "description": "Auto reload value",
                "width": 16
              }
            },
            "CNT": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 16
              }
            },
            "CFGR2": {
              "IC2SEL": {
                "bit": 20,
                "description": "LPTIM input capture 2 selection",
                "width": 2
              },
              "IC1SEL": {
                "bit": 16,
                "description": "LPTIM input capture 1 selection",
                "width": 2
              },
              "IN2SEL": {
                "bit": 4,
                "description": "LPTIM input 2 selection",
                "width": 2
              },
              "IN1SEL": {
                "bit": 0,
                "description": "LPTIM input 1 selection",
                "width": 2
              }
            },
            "RCR": {
              "REP": {
                "bit": 0,
                "description": "Repetition register value",
                "width": 8
              }
            },
            "CCMR1": {
              "CC1SEL": {
                "bit": 0,
                "description": "Capture/compare 1 selection"
              },
              "CC1E": {
                "bit": 1,
                "description": "Capture/compare 1 output enable"
              },
              "CC1P": {
                "bit": 2,
                "description": "Capture/compare 1 output polarity",
                "width": 2
              },
              "IC1PSC": {
                "bit": 8,
                "description": "Input capture 1 prescaler",
                "width": 2
              },
              "IC1F": {
                "bit": 12,
                "description": "Input capture 1 filter",
                "width": 2
              },
              "CC2SEL": {
                "bit": 16,
                "description": "Capture/compare 2 selection"
              },
              "CC2E": {
                "bit": 17,
                "description": "Capture/compare 2 output enable"
              },
              "CC2P": {
                "bit": 18,
                "description": "Capture/compare 2 output polarity",
                "width": 2
              },
              "IC2PSC": {
                "bit": 24,
                "description": "Input capture 2 prescaler",
                "width": 2
              },
              "IC2F": {
                "bit": 28,
                "description": "Input capture 2 filter",
                "width": 2
              }
            },
            "CCR2": {
              "CCR2": {
                "bit": 0,
                "description": "Capture/compare 2 value",
                "width": 16
              }
            },
            "HWCFGR2": {
              "CFG1": {
                "bit": 0,
                "description": "peripheral hardware configuration 1",
                "width": 4
              },
              "CFG2": {
                "bit": 8,
                "description": "peripheral hardware configuration 2",
                "width": 8
              },
              "CFG3": {
                "bit": 16,
                "description": "peripheral hardware configuration 3"
              }
            },
            "HWCFGR1": {
              "CFG1": {
                "bit": 0,
                "description": "peripheral hardware configuration 1",
                "width": 8
              },
              "CFG2": {
                "bit": 8,
                "description": "peripheral hardware configuration 2",
                "width": 8
              },
              "CFG3": {
                "bit": 16,
                "description": "peripheral hardware configuration 3",
                "width": 4
              },
              "CFG4": {
                "bit": 24,
                "description": "peripheral hardware configuration 4",
                "width": 8
              }
            }
          }
        },
        "GTZC1": {
          "instances": [
            {
              "name": "GTZC1_MPCBB1",
              "base": "0x40032C00"
            },
            {
              "name": "GTZC1_MPCBB2",
              "base": "0x40033000"
            },
            {
              "name": "GTZC1_MPCBB3",
              "base": "0x40033400"
            },
            {
              "name": "GTZC1_TZIC",
              "base": "0x40032800"
            },
            {
              "name": "GTZC1_TZSC",
              "base": "0x40032400"
            }
          ],
          "registers": {
            "MPCBB1_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "MPCBB control register"
            },
            "MPCBB1_CFGLOCKR1": {
              "offset": "0x10",
              "size": 32,
              "description": "GTZC1 SRAMz MPCBB configuration lock register"
            },
            "MPCBB1_SECCFGR0": {
              "offset": "0x100",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR1": {
              "offset": "0x104",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR2": {
              "offset": "0x108",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR3": {
              "offset": "0x10C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR4": {
              "offset": "0x110",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR5": {
              "offset": "0x114",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR6": {
              "offset": "0x118",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR7": {
              "offset": "0x11C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR8": {
              "offset": "0x120",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR9": {
              "offset": "0x124",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR10": {
              "offset": "0x128",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR11": {
              "offset": "0x12C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR12": {
              "offset": "0x130",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR13": {
              "offset": "0x134",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR14": {
              "offset": "0x138",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR15": {
              "offset": "0x13C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR16": {
              "offset": "0x140",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR17": {
              "offset": "0x144",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR18": {
              "offset": "0x148",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR19": {
              "offset": "0x14C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR20": {
              "offset": "0x150",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR21": {
              "offset": "0x154",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR22": {
              "offset": "0x158",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR23": {
              "offset": "0x15C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR24": {
              "offset": "0x160",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR25": {
              "offset": "0x164",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR26": {
              "offset": "0x168",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR27": {
              "offset": "0x16C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR28": {
              "offset": "0x170",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR29": {
              "offset": "0x174",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR30": {
              "offset": "0x178",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_SECCFGR31": {
              "offset": "0x17C",
              "size": 32,
              "description": "MPCBBx security configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR0": {
              "offset": "0x200",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR1": {
              "offset": "0x204",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR2": {
              "offset": "0x208",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR3": {
              "offset": "0x20C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR4": {
              "offset": "0x210",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR5": {
              "offset": "0x214",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR6": {
              "offset": "0x218",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR7": {
              "offset": "0x21C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR8": {
              "offset": "0x220",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR9": {
              "offset": "0x224",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR10": {
              "offset": "0x228",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR11": {
              "offset": "0x22C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR12": {
              "offset": "0x230",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR13": {
              "offset": "0x234",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR14": {
              "offset": "0x238",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR15": {
              "offset": "0x23C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR16": {
              "offset": "0x240",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR17": {
              "offset": "0x244",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR18": {
              "offset": "0x248",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR19": {
              "offset": "0x24C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR20": {
              "offset": "0x250",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR21": {
              "offset": "0x254",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR22": {
              "offset": "0x258",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR23": {
              "offset": "0x25C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR24": {
              "offset": "0x260",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR25": {
              "offset": "0x264",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR26": {
              "offset": "0x268",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR27": {
              "offset": "0x26C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR28": {
              "offset": "0x270",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR29": {
              "offset": "0x274",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR30": {
              "offset": "0x278",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            },
            "MPCBB1_PRIVCFGR31": {
              "offset": "0x27C",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block x register"
            }
          },
          "bits": {
            "MPCBB1_CR": {
              "GLOCK": {
                "bit": 0,
                "description": "lock the control register of the MPCBB until next reset"
              },
              "INVSECSTATE": {
                "bit": 30,
                "description": "SRAMx clocks security state"
              },
              "SRWILADIS": {
                "bit": 31,
                "description": "secure read/write illegal access disable"
              }
            },
            "MPCBB1_CFGLOCKR1": {
              "SPLCK0": {
                "bit": 0,
                "description": "SPLCK0"
              },
              "SPLCK1": {
                "bit": 1,
                "description": "SPLCK1"
              },
              "SPLCK2": {
                "bit": 2,
                "description": "SPLCK2"
              },
              "SPLCK3": {
                "bit": 3,
                "description": "SPLCK3"
              },
              "SPLCK4": {
                "bit": 4,
                "description": "SPLCK4"
              },
              "SPLCK5": {
                "bit": 5,
                "description": "SPLCK5"
              },
              "SPLCK6": {
                "bit": 6,
                "description": "SPLCK6"
              },
              "SPLCK7": {
                "bit": 7,
                "description": "SPLCK7"
              },
              "SPLCK8": {
                "bit": 8,
                "description": "SPLCK8"
              },
              "SPLCK9": {
                "bit": 9,
                "description": "SPLCK9"
              },
              "SPLCK10": {
                "bit": 10,
                "description": "SPLCK10"
              },
              "SPLCK11": {
                "bit": 11,
                "description": "SPLCK11"
              },
              "SPLCK12": {
                "bit": 12,
                "description": "SPLCK12"
              },
              "SPLCK13": {
                "bit": 13,
                "description": "SPLCK13"
              },
              "SPLCK14": {
                "bit": 14,
                "description": "SPLCK14"
              },
              "SPLCK15": {
                "bit": 15,
                "description": "SPLCK15"
              },
              "SPLCK16": {
                "bit": 16,
                "description": "SPLCK16"
              },
              "SPLCK17": {
                "bit": 17,
                "description": "SPLCK17"
              },
              "SPLCK18": {
                "bit": 18,
                "description": "SPLCK18"
              },
              "SPLCK19": {
                "bit": 19,
                "description": "SPLCK19"
              },
              "SPLCK20": {
                "bit": 20,
                "description": "SPLCK20"
              },
              "SPLCK21": {
                "bit": 21,
                "description": "SPLCK21"
              },
              "SPLCK22": {
                "bit": 22,
                "description": "SPLCK22"
              },
              "SPLCK23": {
                "bit": 23,
                "description": "SPLCK23"
              },
              "SPLCK24": {
                "bit": 24,
                "description": "SPLCK24"
              },
              "SPLCK25": {
                "bit": 25,
                "description": "SPLCK25"
              },
              "SPLCK26": {
                "bit": 26,
                "description": "SPLCK26"
              },
              "SPLCK27": {
                "bit": 27,
                "description": "SPLCK27"
              },
              "SPLCK28": {
                "bit": 28,
                "description": "SPLCK28"
              },
              "SPLCK29": {
                "bit": 29,
                "description": "SPLCK29"
              },
              "SPLCK30": {
                "bit": 30,
                "description": "SPLCK30"
              },
              "SPLCK31": {
                "bit": 31,
                "description": "SPLCK31"
              }
            },
            "MPCBB1_SECCFGR0": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR1": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR2": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR3": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR4": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR5": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR6": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR7": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR8": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR9": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR10": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR11": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR12": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR13": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR14": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR15": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR16": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR17": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR18": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR19": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR20": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR21": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR22": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR23": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR24": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR25": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR26": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR27": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR28": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR29": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR30": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_SECCFGR31": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB1_PRIVCFGR0": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR1": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR2": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR3": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR4": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR5": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR6": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR7": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR8": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR9": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR10": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR11": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR12": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR13": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR14": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR15": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR16": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR17": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR18": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR19": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR20": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR21": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR22": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR23": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR24": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR25": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR26": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR27": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR28": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR29": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR30": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            },
            "MPCBB1_PRIVCFGR31": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            }
          }
        },
        "GTZC2": {
          "instances": [
            {
              "name": "GTZC2_MPCBB4",
              "base": "0x46023800"
            },
            {
              "name": "GTZC2_TZIC",
              "base": "0x46023400"
            },
            {
              "name": "GTZC2_TZSC",
              "base": "0x46023000"
            }
          ],
          "registers": {
            "MPCBB4_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "MPCBB control register"
            },
            "MPCBB4_CFGLOCK": {
              "offset": "0x10",
              "size": 32,
              "description": "GTZC2 SRAM4 MPCBB configuration lock register"
            },
            "MPCBB4_SECCFGR0": {
              "offset": "0x100",
              "size": 32,
              "description": "MPCBB security configuration for super-block 0 register"
            },
            "MPCBB4_PRIVCFGR0": {
              "offset": "0x200",
              "size": 32,
              "description": "MPCBB privileged configuration for super-block 0 register"
            }
          },
          "bits": {
            "MPCBB4_CR": {
              "GLOCK": {
                "bit": 0,
                "description": "lock the control register of the MPCBB until next reset"
              },
              "INVSECSTATE": {
                "bit": 30,
                "description": "SRAMx clocks security state"
              },
              "SRWILADIS": {
                "bit": 31,
                "description": "secure read/write illegal access disable"
              }
            },
            "MPCBB4_CFGLOCK": {
              "SPLCK0": {
                "bit": 0,
                "description": "Security/privilege configuration lock for super-block 0"
              }
            },
            "MPCBB4_SECCFGR0": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              },
              "SEC16": {
                "bit": 16,
                "description": "SEC16"
              },
              "SEC17": {
                "bit": 17,
                "description": "SEC17"
              },
              "SEC18": {
                "bit": 18,
                "description": "SEC18"
              },
              "SEC19": {
                "bit": 19,
                "description": "SEC19"
              },
              "SEC20": {
                "bit": 20,
                "description": "SEC20"
              },
              "SEC21": {
                "bit": 21,
                "description": "SEC21"
              },
              "SEC22": {
                "bit": 22,
                "description": "SEC22"
              },
              "SEC23": {
                "bit": 23,
                "description": "SEC23"
              },
              "SEC24": {
                "bit": 24,
                "description": "SEC24"
              },
              "SEC25": {
                "bit": 25,
                "description": "SEC25"
              },
              "SEC26": {
                "bit": 26,
                "description": "SEC26"
              },
              "SEC27": {
                "bit": 27,
                "description": "SEC27"
              },
              "SEC28": {
                "bit": 28,
                "description": "SEC28"
              },
              "SEC29": {
                "bit": 29,
                "description": "SEC29"
              },
              "SEC30": {
                "bit": 30,
                "description": "SEC30"
              },
              "SEC31": {
                "bit": 31,
                "description": "SEC31"
              }
            },
            "MPCBB4_PRIVCFGR0": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              },
              "PRIV16": {
                "bit": 16,
                "description": "PRIV16"
              },
              "PRIV17": {
                "bit": 17,
                "description": "PRIV17"
              },
              "PRIV18": {
                "bit": 18,
                "description": "PRIV18"
              },
              "PRIV19": {
                "bit": 19,
                "description": "PRIV19"
              },
              "PRIV20": {
                "bit": 20,
                "description": "PRIV20"
              },
              "PRIV21": {
                "bit": 21,
                "description": "PRIV21"
              },
              "PRIV22": {
                "bit": 22,
                "description": "PRIV22"
              },
              "PRIV23": {
                "bit": 23,
                "description": "PRIV23"
              },
              "PRIV24": {
                "bit": 24,
                "description": "PRIV24"
              },
              "PRIV25": {
                "bit": 25,
                "description": "PRIV25"
              },
              "PRIV26": {
                "bit": 26,
                "description": "PRIV26"
              },
              "PRIV27": {
                "bit": 27,
                "description": "PRIV27"
              },
              "PRIV28": {
                "bit": 28,
                "description": "PRIV28"
              },
              "PRIV29": {
                "bit": 29,
                "description": "PRIV29"
              },
              "PRIV30": {
                "bit": 30,
                "description": "PRIV30"
              },
              "PRIV31": {
                "bit": 31,
                "description": "PRIV31"
              }
            }
          }
        },
        "PWR": {
          "instances": [
            {
              "name": "PWR",
              "base": "0x46020800",
              "irq": 77
            },
            {
              "name": "SEC_PWR",
              "base": "0x56020800"
            }
          ],
          "registers": {
            "PWR_CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "PWR control register 1"
            },
            "PWR_CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "PWR control register 2"
            },
            "PWR_CR3": {
              "offset": "0x08",
              "size": 32,
              "description": "PWR control register 3"
            },
            "PWR_VOSR": {
              "offset": "0x0C",
              "size": 32,
              "description": "PWR voltage scaling register"
            },
            "PWR_SVMCR": {
              "offset": "0x10",
              "size": 32,
              "description": "PWR supply voltage monitoring control register"
            },
            "PWR_WUCR1": {
              "offset": "0x14",
              "size": 32,
              "description": "PWR wakeup control register 1"
            },
            "PWR_WUCR2": {
              "offset": "0x18",
              "size": 32,
              "description": "PWR wakeup control register 2"
            },
            "PWR_WUCR3": {
              "offset": "0x1C",
              "size": 32,
              "description": "PWR wakeup control register 3"
            },
            "PWR_BDCR1": {
              "offset": "0x20",
              "size": 32,
              "description": "PWR Backup domain control register 1"
            },
            "PWR_BDCR2": {
              "offset": "0x24",
              "size": 32,
              "description": "PWR Backup domain control register 2"
            },
            "PWR_DBPR": {
              "offset": "0x28",
              "size": 32,
              "description": "PWR disable Backup domain register"
            },
            "PWR_UCPDR": {
              "offset": "0x2C",
              "size": 32,
              "description": "PWR USB Type-C\u2122 and Power Delivery register"
            },
            "PWR_SECCFGR": {
              "offset": "0x30",
              "size": 32,
              "description": "PWR security configuration register"
            },
            "PWR_PRIVCFGR": {
              "offset": "0x34",
              "size": 32,
              "description": "PWR privilege control register"
            },
            "PWR_SR": {
              "offset": "0x38",
              "size": 32,
              "description": "PWR status register"
            },
            "PWR_SVMSR": {
              "offset": "0x3C",
              "size": 32,
              "description": "Regulator selection"
            },
            "PWR_BDSR": {
              "offset": "0x40",
              "size": 32,
              "description": "PWR Backup domain status register"
            },
            "PWR_WUSR": {
              "offset": "0x44",
              "size": 32,
              "description": "PWR wakeup status register"
            },
            "PWR_WUSCR": {
              "offset": "0x48",
              "size": 32,
              "description": "PWR wakeup status clear register"
            },
            "PWR_APCR": {
              "offset": "0x4C",
              "size": 32,
              "description": "PWR apply pull configuration register"
            },
            "PWR_PUCRA": {
              "offset": "0x50",
              "size": 32,
              "description": "PWR port A pull-up control register"
            },
            "PWR_PDCRA": {
              "offset": "0x54",
              "size": 32,
              "description": "PWR port A pull-down control register"
            },
            "PWR_PUCRB": {
              "offset": "0x58",
              "size": 32,
              "description": "PWR port B pull-up control register"
            },
            "PWR_PDCRB": {
              "offset": "0x5C",
              "size": 32,
              "description": "PWR port B pull-down control register"
            },
            "PWR_PUCRC": {
              "offset": "0x60",
              "size": 32,
              "description": "PWR port C pull-up control register"
            },
            "PWR_PDCRC": {
              "offset": "0x64",
              "size": 32,
              "description": "PWR port C pull-down control register"
            },
            "PWR_PUCRD": {
              "offset": "0x68",
              "size": 32,
              "description": "PWR port D pull-up control register"
            },
            "PWR_PDCRD": {
              "offset": "0x6C",
              "size": 32,
              "description": "PWR port D pull-down control register"
            },
            "PWR_PUCRE": {
              "offset": "0x70",
              "size": 32,
              "description": "PWR port E pull-up control register"
            },
            "PWR_PDCRE": {
              "offset": "0x74",
              "size": 32,
              "description": "PWR port E pull-down control register"
            },
            "PWR_PUCRF": {
              "offset": "0x78",
              "size": 32,
              "description": "PWR port F pull-up control register"
            },
            "PWR_PDCRF": {
              "offset": "0x7C",
              "size": 32,
              "description": "PWR port F pull-down control register"
            },
            "PWR_PUCRG": {
              "offset": "0x80",
              "size": 32,
              "description": "PWR port G pull-up control register"
            },
            "PWR_PDCRG": {
              "offset": "0x84",
              "size": 32,
              "description": "PWR port G pull-down control register"
            },
            "PWR_PUCRH": {
              "offset": "0x88",
              "size": 32,
              "description": "PWR port H pull-up control register"
            },
            "PWR_PDCRH": {
              "offset": "0x8C",
              "size": 32,
              "description": "PWR port H pull-down control register"
            },
            "PWR_PUCRI": {
              "offset": "0x90",
              "size": 32,
              "description": "PWR port I pull-up control register"
            },
            "PWR_PDCRI": {
              "offset": "0x94",
              "size": 32,
              "description": "PWR port I pull-down control register"
            }
          },
          "bits": {
            "PWR_CR1": {
              "LPMS": {
                "bit": 0,
                "description": "Low-power mode selection\nThese bits select the low-power mode entered when the CPU enters the Deepsleep mode.\n10x: Standby mode (Standby mode also entered if LPMS\u00a0=\u00a011X in PWR_CR1\nwith BREN\u00a0=\u00a01 in PWR_BDCR1)\n11x: Shutdown mode if BREN = 0 in PWR_BDCR1",
                "width": 3
              },
              "RRSB1": {
                "bit": 5,
                "description": "SRAM2 page 1 retention in Stop 3 and Standby modes\nThis bit is used to keep the SRAM2 page 1 content in Stop 3 and Standby modes. The SRAM2 page 1 corresponds to the first 8 Kbytes of the SRAM2\n(from SRAM2 base address to SRAM2 base address + 0x1FFF).\nNote: This bit has no effect in Shutdown mode."
              },
              "RRSB2": {
                "bit": 6,
                "description": "SRAM2 page 2 retention in Stop 3 and Standby modes\nThis bit is used to keep the SRAM2 page 2 content in Stop 3 and Standby modes. The SRAM2 page 2 corresponds to the last 56 Kbytes of the SRAM2\n(from SRAM2 base address + 0x2000 to SRAM2 base address + 0xFFFF).\nNote: This bit has no effect in Shutdown mode."
              },
              "ULPMEN": {
                "bit": 7,
                "description": "BOR ultra-low power mode\nThis bit is used to reduce the consumption by configuring the BOR in discontinuous mode.\nThis bit must be set to reach the lowest power consumption in the low-power modes."
              },
              "SRAM1PD": {
                "bit": 8,
                "description": "SRAM1 power down\nThis bit is used to reduce the consumption by powering off the SRAM1."
              },
              "SRAM2PD": {
                "bit": 9,
                "description": "SRAM2 power down\nThis bit is used to reduce the consumption by powering off the SRAM2."
              },
              "SRAM3PD": {
                "bit": 10,
                "description": "SRAM3 power down\nThis bit is used to reduce the consumption by powering off the SRAM3."
              },
              "SRAM4PD": {
                "bit": 11,
                "description": "SRAM4 power down\nThis bit is used to reduce the consumption by powering off the SRAM4."
              }
            },
            "PWR_CR2": {
              "SRAM1PDS1": {
                "bit": 0,
                "description": "SRAM1 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM1PDS2": {
                "bit": 1,
                "description": "SRAM1 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM1PDS3": {
                "bit": 2,
                "description": "SRAM1 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM2PDS1": {
                "bit": 4,
                "description": "SRAM2 page 1 (8 Kbytes) power-down in Stop modes (Stop 0, 1, 2)\nNote: The SRAM2 page 1 retention in Stop 3 is controlled by RRSB1 bit in PWR_CR1."
              },
              "SRAM2PDS2": {
                "bit": 5,
                "description": "SRAM2 page 2 (56 Kbytes) power-down in Stop modes (Stop 0, 1, 2)\nNote: The SRAM2 page 2 retention in Stop 3 is controlled by RRSB2 bit in PWR_CR1."
              },
              "SRAM4PDS": {
                "bit": 6,
                "description": "SRAM4 power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "ICRAMPDS": {
                "bit": 8,
                "description": "ICACHE SRAM power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "DC1RAMPDS": {
                "bit": 9,
                "description": "DCACHE1 SRAM power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "DMA2DRAMPDS": {
                "bit": 10,
                "description": "DMA2D SRAM power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "PRAMPDS": {
                "bit": 11,
                "description": "FMAC, FDCAN and USB peripherals SRAM power-down in Stop modes (Stop\u00a00,\u00a01,\u00a02,\u00a03)"
              },
              "PKARAMPDS": {
                "bit": 12,
                "description": "PKA SRAM power-down"
              },
              "SRAM4FWU": {
                "bit": 13,
                "description": "SRAM4 fast wakeup from Stop 0, Stop 1 and Stop 2 modes\nThis bit is used to obtain the best trade-off between low-power consumption and wakeup time. SRAM4 wakeup time increases the wakeup time when exiting Stop 0, 1 and 2 modes, and also increases the LPDMA access time to SRAM4 during Stop modes."
              },
              "FLASHFWU": {
                "bit": 14,
                "description": "Flash memory fast wakeup from Stop 0 and Stop 1 modes\nThis bit is used to obtain the best trade-off between low-power consumption and wakeup time when exiting the Stop 0 or Stop 1 modes.\nWhen this bit is set, the Flash memory remains in normal mode in Stop 0 and Stop 1 modes, which offers a faster startup time with higher consumption."
              },
              "SRAM3PDS1": {
                "bit": 16,
                "description": "SRAM3 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS2": {
                "bit": 17,
                "description": "SRAM3 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS3": {
                "bit": 18,
                "description": "SRAM3 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS4": {
                "bit": 19,
                "description": "SRAM3 page 4 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS5": {
                "bit": 20,
                "description": "SRAM3 page 5 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS6": {
                "bit": 21,
                "description": "SRAM3 page 6 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS7": {
                "bit": 22,
                "description": "SRAM3 page 7 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRAM3PDS8": {
                "bit": 23,
                "description": "SRAM3 page 8 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)"
              },
              "SRDRUN": {
                "bit": 31,
                "description": "SmartRun domain in Run mode"
              }
            },
            "PWR_CR3": {
              "REGSEL": {
                "bit": 1,
                "description": "Regulator selection\nNote: REGSEL is reserved and must be kept at reset value in packages without SMPS."
              },
              "FSTEN": {
                "bit": 2,
                "description": "Fast soft start"
              }
            },
            "PWR_VOSR": {
              "BOOSTRDY": {
                "bit": 14,
                "description": "EPOD booster ready\nThis bit is set to 1 by hardware when the power booster startup time is reached. The system clock frequency can be switched higher than 50 MHz only after this bit is set."
              },
              "VOSRDY": {
                "bit": 15,
                "description": "Ready bit for VCORE voltage scaling output selection"
              },
              "VOS": {
                "bit": 16,
                "description": "Voltage scaling range selection\nThis field is protected against non-secure access when SYSCLKSEC\u00a0=\u00a01 in RCC_SECCFGR. It is protected against unprivileged access when SYSCLKSEC\u00a0=\u00a01 in RCC_SECCFGR and SPRIV\u00a0=\u00a01 in PWR_PRIVCFGR, or when SYSCLKSEC\u00a0=\u00a00 and NSPRIV\u00a0=\u00a01.",
                "width": 2
              },
              "BOOSTEN": {
                "bit": 18,
                "description": "EPOD booster enable"
              }
            },
            "PWR_SVMCR": {
              "PVDE": {
                "bit": 4,
                "description": "Power voltage detector enable"
              },
              "PVDLS": {
                "bit": 5,
                "description": "Power voltage detector level selection\nThese bits select the voltage threshold detected by the power voltage detector:",
                "width": 3
              },
              "UVMEN": {
                "bit": 24,
                "description": "VDDUSB independent USB voltage monitor enable"
              },
              "IO2VMEN": {
                "bit": 25,
                "description": "VDDIO2 independent I/Os voltage monitor enable"
              },
              "AVM1EN": {
                "bit": 26,
                "description": "VDDA independent analog supply voltage monitor 1 enable (1.6\u00a0V threshold)"
              },
              "AVM2EN": {
                "bit": 27,
                "description": "VDDA independent analog supply voltage monitor 2 enable (1.8\u00a0V threshold)"
              },
              "USV": {
                "bit": 28,
                "description": "VDDUSB independent USB supply valid"
              },
              "IO2SV": {
                "bit": 29,
                "description": "VDDIO2 independent I/Os supply valid\nThis bit is used to validate the VDDIO2 supply for electrical and logical isolation purpose.\nSetting this bit is mandatory to use PG[15:2]. If VDDIO2 is not always present in the application, the VDDIO2 voltage monitor can be used to determine whether this supply is ready or not."
              },
              "ASV": {
                "bit": 30,
                "description": "VDDA independent analog supply valid"
              }
            },
            "PWR_WUCR1": {
              "WUPEN1": {
                "bit": 0,
                "description": "Wakeup pin WKUP1 enable"
              },
              "WUPEN2": {
                "bit": 1,
                "description": "Wakeup pin WKUP2 enable"
              },
              "WUPEN3": {
                "bit": 2,
                "description": "Wakeup pin WKUP3 enable"
              },
              "WUPEN4": {
                "bit": 3,
                "description": "Wakeup pin WKUP4 enable"
              },
              "WUPEN5": {
                "bit": 4,
                "description": "Wakeup pin WKUP5 enable"
              },
              "WUPEN6": {
                "bit": 5,
                "description": "Wakeup pin WKUP6 enable"
              },
              "WUPEN7": {
                "bit": 6,
                "description": "Wakeup pin WKUP7 enable"
              },
              "WUPEN8": {
                "bit": 7,
                "description": "Wakeup pin WKUP8 enable"
              }
            },
            "PWR_WUCR2": {
              "WUPP1": {
                "bit": 0,
                "description": "Wakeup pin WKUP1 polarity.\nThis bit must be configured when WUPEN1 = 0."
              },
              "WUPP2": {
                "bit": 1,
                "description": "Wakeup pin WKUP2 polarity\nThis bit must be configured when WUPEN2 = 0."
              },
              "WUPP3": {
                "bit": 2,
                "description": "Wakeup pin WKUP3 polarity\nThis bit must be configured when WUPEN3 = 0."
              },
              "WUPP4": {
                "bit": 3,
                "description": "Wakeup pin WKUP4 polarity\nThis bit must be configured when WUPEN4 = 0."
              },
              "WUPP5": {
                "bit": 4,
                "description": "Wakeup pin WKUP5 polarity\nThis bit must be configured when WUPEN5 = 0."
              },
              "WUPP6": {
                "bit": 5,
                "description": "Wakeup pin WKUP6 polarity\nThis bit must be configured when WUPEN6 = 0."
              },
              "WUPP7": {
                "bit": 6,
                "description": "Wakeup pin WKUP7 polarity\nThis bit must be configured when WUPEN7 = 0."
              },
              "WUPP8": {
                "bit": 7,
                "description": "Wakeup pin WKUP8 polarity\nThis bit must be configured when WUPEN8\u00a0=\u00a00."
              }
            },
            "PWR_WUCR3": {
              "WUSEL1": {
                "bit": 0,
                "description": "Wakeup pin WKUP1 selection\nThis field must be configured when WUPEN1 = 0.",
                "width": 2
              },
              "WUSEL2": {
                "bit": 2,
                "description": "Wakeup pin WKUP2 selection\nThis field must be configured when WUPEN2 = 0.",
                "width": 2
              },
              "WUSEL3": {
                "bit": 4,
                "description": "Wakeup pin WKUP3 selection\nThis field must be configured when WUPEN3 = 0.",
                "width": 2
              },
              "WUSEL4": {
                "bit": 6,
                "description": "Wakeup pin WKUP4 selection\nThis field must be configured when WUPEN4 = 0.",
                "width": 2
              },
              "WUSEL5": {
                "bit": 8,
                "description": "Wakeup pin WKUP5 selection\nThis field must be configured when WUPEN5 = 0.",
                "width": 2
              },
              "WUSEL6": {
                "bit": 10,
                "description": "Wakeup pin WKUP6 selection\nThis field must be configured when WUPEN6 = 0.",
                "width": 2
              },
              "WUSEL7": {
                "bit": 12,
                "description": "Wakeup pin WKUP7 selection\nThis field must be configured when WUPEN7 = 0.",
                "width": 2
              },
              "WUSEL8": {
                "bit": 14,
                "description": "Wakeup pin WKUP8 selection\nThis field must be configured when WUPEN8 = 0.",
                "width": 2
              }
            },
            "PWR_BDCR1": {
              "BREN": {
                "bit": 0,
                "description": "Backup RAM retention in Standby and VBAT modes\nWhen this bit is set, the backup RAM content is kept in Standby and VBAT modes.\nIf BREN is reset, the backup RAM can still be used in Run, Sleep and Stop modes. However, its content is lost in Standby, Shutdown and VBAT modes. This bit can be written only when the regulator is LDO, which must be configured before switching to SMPS.\nNote: Backup RAM cannot be preserved in Shutdown mode."
              },
              "MONEN": {
                "bit": 4,
                "description": "Backup domain voltage and temperature monitoring enable"
              }
            },
            "PWR_BDCR2": {
              "VBE": {
                "bit": 0,
                "description": "VBAT charging enable"
              },
              "VBRS": {
                "bit": 1,
                "description": "VBAT charging resistor selection"
              }
            },
            "PWR_DBPR": {
              "DBP": {
                "bit": 0,
                "description": "Disable Backup domain write protection\nIn reset state, all registers and SRAM in Backup domain are protected against parasitic write access. This bit must be set to enable the write access to these registers."
              }
            },
            "PWR_UCPDR": {
              "UCPD_DBDIS": {
                "bit": 0,
                "description": "UCPD dead battery disable\nAfter exiting reset, the USB Type-C \u201cdead battery\u201d behavior is enabled, which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it in all cases, either to stop this pull-down or to handover control to the UCPD (the UCPD must be initialized before doing the disable)."
              },
              "UCPD_STBY": {
                "bit": 1,
                "description": "UCPD Standby mode\nWhen set, this bit is used to memorize the UCPD configuration in Standby mode.\nThis bit must be written to 1 just before entering Standby mode when using UCPD.\nIt must be written to 0 after exiting the Standby mode and before writing any UCPD registers."
              }
            },
            "PWR_SECCFGR": {
              "WUP1SEC": {
                "bit": 0,
                "description": "WUP1 secure protection"
              },
              "WUP2SEC": {
                "bit": 1,
                "description": "WUP2 secure protection"
              },
              "WUP3SEC": {
                "bit": 2,
                "description": "WUP3 secure protection"
              },
              "WUP4SEC": {
                "bit": 3,
                "description": "WUP4 secure protection"
              },
              "WUP5SEC": {
                "bit": 4,
                "description": "WUP5 secure protection"
              },
              "WUP6SEC": {
                "bit": 5,
                "description": "WUP6 secure protection"
              },
              "WUP7SEC": {
                "bit": 6,
                "description": "WUP7 secure protection"
              },
              "WUP8SEC": {
                "bit": 7,
                "description": "WUP8 secure protection"
              },
              "LPMSEC": {
                "bit": 12,
                "description": "Low-power modes secure protection"
              },
              "VDMSEC": {
                "bit": 13,
                "description": "Voltage detection and monitoring secure protection"
              },
              "VBSEC": {
                "bit": 14,
                "description": "Backup domain secure protection"
              },
              "APCSEC": {
                "bit": 15,
                "description": "Pull-up/pull-down secure protection"
              }
            },
            "PWR_PRIVCFGR": {
              "SPRIV": {
                "bit": 0,
                "description": "PWR secure functions privilege configuration\nThis bit is set and reset by software. It can be written only by a secure privileged access."
              },
              "NSPRIV": {
                "bit": 1,
                "description": "PWR non-secure functions privilege configuration\nThis bit is set and reset by software. It can be written only by privileged access, secure or non-secure."
              }
            },
            "PWR_SR": {
              "CSSF": {
                "bit": 0,
                "description": "Clear Stop and Standby flags\nThis bit is protected against non-secure access when LPMSEC\u00a0=\u00a01 in PWR_SECCFGR.\nThis bit is protected against unprivileged access when LPMSEC\u00a0=\u00a01 and SPRIV\u00a0=\u00a01 in PWR_PRIVCFGR, or when LPMSEC\u00a0=\u00a00 and NSPRIV\u00a0=\u00a01.\nWriting 1 to this bit clears the STOPF and SBF flags."
              },
              "STOPF": {
                "bit": 1,
                "description": "Stop flag\nThis bit is set by hardware when the device enters a Stop mode, and is cleared by software by writing 1 to the CSSF bit."
              },
              "SBF": {
                "bit": 2,
                "description": "Standby flag\nThis bit is set by hardware when the device enters the Standby mode, and is cleared by writing 1 to the CSSF bit, or by a power-on reset. It is not cleared by the system reset."
              }
            },
            "PWR_SVMSR": {
              "REGS": {
                "bit": 1,
                "description": "Regulator selection"
              },
              "PVDO": {
                "bit": 4,
                "description": "VDD voltage detector output"
              },
              "ACTVOSRDY": {
                "bit": 15,
                "description": "Voltage level ready for currently used VOS"
              },
              "ACTVOS": {
                "bit": 16,
                "description": "VOS currently applied to VCORE\nThis field provides the last VOS value.",
                "width": 2
              },
              "VDDUSBRDY": {
                "bit": 24,
                "description": "VDDUSB ready"
              },
              "VDDIO2RDY": {
                "bit": 25,
                "description": "VDDIO2 ready"
              },
              "VDDA1RDY": {
                "bit": 26,
                "description": "VDDA ready versus 1.6V voltage monitor"
              },
              "VDDA2RDY": {
                "bit": 27,
                "description": "VDDA ready versus 1.8\u00a0V voltage monitor"
              }
            },
            "PWR_BDSR": {
              "VBATH": {
                "bit": 1,
                "description": "Backup domain voltage level monitoring versus high threshold"
              },
              "TEMPL": {
                "bit": 2,
                "description": "Temperature level monitoring versus low threshold"
              },
              "TEMPH": {
                "bit": 3,
                "description": "Temperature level monitoring versus high threshold"
              }
            },
            "PWR_WUSR": {
              "WUF1": {
                "bit": 0,
                "description": "Wakeup flag 1\nThis bit is set when a wakeup event is detected on WKUP1 pin. This bit is cleared by writing 1 in the CWUF1 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN1\u00a0=\u00a00."
              },
              "WUF2": {
                "bit": 1,
                "description": "Wakeup flag 2\nThis bit is set when a wakeup event is detected on WKUP2 pin. This bit is cleared by writing 1 in the CWUF2 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN2\u00a0=\u00a00."
              },
              "WUF3": {
                "bit": 2,
                "description": "Wakeup flag 3\nThis bit is set when a wakeup event is detected on WKUP3 pin. This bit is cleared by writing 1 in the CWUF3 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN3\u00a0=\u00a00."
              },
              "WUF4": {
                "bit": 3,
                "description": "Wakeup flag 4\nThis bit is set when a wakeup event is detected on WKUP4 pin. This bit is cleared by writing 1 in the CWUF4 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN4\u00a0=\u00a00."
              },
              "WUF5": {
                "bit": 4,
                "description": "Wakeup flag 5\nThis bit is set when a wakeup event is detected on WKUP5 pin. This bit is cleared by writing 1 in the CWUF5 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN5\u00a0=\u00a00."
              },
              "WUF6": {
                "bit": 5,
                "description": "Wakeup flag 6\nThis bit is set when a wakeup event is detected on WKUP6 pin. This bit is cleared by writing 1 in the CWUF6 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN6\u00a0=\u00a00.\nIf WUSEL\u00a0=\u00a011, this bit is cleared by hardware when all internal wakeup source are cleared."
              },
              "WUF7": {
                "bit": 6,
                "description": "Wakeup flag 7\nThis bit is set when a wakeup event is detected on WKUP7 pin. This bit is cleared by writing 1 in the CWUF7 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN7\u00a0=\u00a00.\nIf WUSEL\u00a0=\u00a011, this bit is cleared by hardware when all internal wakeup source are cleared."
              },
              "WUF8": {
                "bit": 7,
                "description": "Wakeup flag 8\nThis bit is set when a wakeup event is detected on WKUP8 pin. This bit is cleared by writing 1 in the CWUF8 bit of PWR_WUSCR when WUSEL \u2260 11, or by hardware when WUPEN8\u00a0=\u00a00.\nIf WUSEL\u00a0=\u00a011, this bit is cleared by hardware when all internal wakeup source are cleared."
              }
            },
            "PWR_WUSCR": {
              "CWUF1": {
                "bit": 0,
                "description": "Wakeup flag 1\nWriting 1 to this bit clears the WUF1 flag in PWR_WUSR."
              },
              "CWUF2": {
                "bit": 1,
                "description": "Wakeup flag 2\nWriting 1 to this bit clears the WUF2 flag in PWR_WUSR."
              },
              "CWUF3": {
                "bit": 2,
                "description": "Wakeup flag 3\nWriting 1 to this bit clears the WUF3 flag in PWR_WUSR."
              },
              "CWUF4": {
                "bit": 3,
                "description": "Wakeup flag 4\nWriting 1 to this bit clears the WUF4 flag in PWR_WUSR."
              },
              "CWUF5": {
                "bit": 4,
                "description": "Wakeup flag 5\nWriting 1 to this bit clears the WUF5 flag in PWR_WUSR."
              },
              "CWUF6": {
                "bit": 5,
                "description": "Wakeup flag 6\nWriting 1 to this bit clears the WUF6 flag in PWR_WUSR."
              },
              "CWUF7": {
                "bit": 6,
                "description": "Wakeup flag 7\nWriting 1 to this bit clears the WUF7 flag in PWR_WUSR."
              },
              "CWUF8": {
                "bit": 7,
                "description": "Wakeup flag 8\nWriting 1 to this bit clears the WUF8 flag in PWR_WUSR."
              }
            },
            "PWR_APCR": {
              "APC": {
                "bit": 0,
                "description": "Apply pull-up and pull-down configuration\nWhen this bit is set, the I/O pull-up and pull-down configurations defined in PWR_PUCRx and PWR_PDCRx are applied. When this bit is cleared, PWR_PUCRx and PWR_PDCRx are not applied to the I/Os."
              }
            },
            "PWR_PUCRA": {
              "PU0": {
                "bit": 0,
                "description": "Port A pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port A pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port A pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port A pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port A pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port A pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port A pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port A pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port A pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port A pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port A pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port A pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port A pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port A pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port A pull-up bit 15\nWhen set, this bit activates the pull-up on PA15 when the APC bit is set in PWR_APCR. The pull-up is not activated if the corresponding PD15 bit is also set."
              }
            },
            "PWR_PDCRA": {
              "PD0": {
                "bit": 0,
                "description": "Port A pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port A pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port A pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port A pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port A pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port A pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port A pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port A pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port A pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port A pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port A pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port A pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port A pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port A pull-down bit"
              }
            },
            "PWR_PUCRB": {
              "PU0": {
                "bit": 0,
                "description": "Port B pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port B pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port B pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port B pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port B pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port B pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port B pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port B pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port B pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port B pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port B pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port B pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port B pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port B pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port B pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port B pull-up bit"
              }
            },
            "PWR_PDCRB": {
              "PD0": {
                "bit": 0,
                "description": "Port B pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port B pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port B pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port B pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port B pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port B pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port B pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port B pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port B pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port B pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port B pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port B pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port B pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port B pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port B pull-down bit"
              }
            },
            "PWR_PUCRC": {
              "PU0": {
                "bit": 0,
                "description": "Port C pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port C pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port C pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port C pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port C pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port C pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port C pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port C pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port C pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port C pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port C pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port C pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port C pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port C pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port C pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port C pull-up bit"
              }
            },
            "PWR_PDCRC": {
              "PD0": {
                "bit": 0,
                "description": "Port C pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port C pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port C pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port C pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port C pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port C pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port C pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port C pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port C pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port C pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port C pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port C pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port C pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port C pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port C pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port C pull-down bit"
              }
            },
            "PWR_PUCRD": {
              "PU0": {
                "bit": 0,
                "description": "Port D pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port D pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port D pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port D pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port D pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port D pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port D pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port D pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port D pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port D pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port D pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port D pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port D pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port D pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port D pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port D pull-up bit"
              }
            },
            "PWR_PDCRD": {
              "PD0": {
                "bit": 0,
                "description": "Port D pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port D pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port D pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port D pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port D pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port D pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port D pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port D pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port D pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port D pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port D pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port D pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port D pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port D pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port D pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port D pull-down bit"
              }
            },
            "PWR_PUCRE": {
              "PU0": {
                "bit": 0,
                "description": "Port E pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port E pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port E pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port E pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port E pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port E pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port E pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port E pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port E pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port E pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port E pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port E pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port E pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port E pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port E pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port E pull-up bit"
              }
            },
            "PWR_PDCRE": {
              "PD0": {
                "bit": 0,
                "description": "Port E pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port E pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port E pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port E pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port E pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port E pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port E pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port E pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port E pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port E pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port E pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port E pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port E pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port E pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port E pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port E pull-down bit"
              }
            },
            "PWR_PUCRF": {
              "PU0": {
                "bit": 0,
                "description": "Port F pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port F pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port F pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port F pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port F pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port F pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port F pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port F pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port F pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port F pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port F pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port F pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port F pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port F pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port F pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port F pull-up bit"
              }
            },
            "PWR_PDCRF": {
              "PD0": {
                "bit": 0,
                "description": "Port F pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port F pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port F pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port F pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port F pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port F pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port F pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port F pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port F pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port F pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port F pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port F pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port F pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port F pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port F pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port F pull-down bit"
              }
            },
            "PWR_PUCRG": {
              "PU0": {
                "bit": 0,
                "description": "Port G pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port G pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port G pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port G pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port G pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port G pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port G pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port G pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port G pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port G pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port G pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port G pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port G pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port G pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port G pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port G pull-up bit"
              }
            },
            "PWR_PDCRG": {
              "PD0": {
                "bit": 0,
                "description": "Port G pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port G pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port G pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port G pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port G pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port G pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port G pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port G pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port G pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port G pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port G pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port G pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port G pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port G pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port G pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port G pull-down bit"
              }
            },
            "PWR_PUCRH": {
              "PU0": {
                "bit": 0,
                "description": "Port H pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port H pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port H pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port H pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port H pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port H pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port H pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port H pull-up bit"
              },
              "PU8": {
                "bit": 8,
                "description": "Port H pull-up bit"
              },
              "PU9": {
                "bit": 9,
                "description": "Port H pull-up bit"
              },
              "PU10": {
                "bit": 10,
                "description": "Port H pull-up bit"
              },
              "PU11": {
                "bit": 11,
                "description": "Port H pull-up bit"
              },
              "PU12": {
                "bit": 12,
                "description": "Port H pull-up bit"
              },
              "PU13": {
                "bit": 13,
                "description": "Port H pull-up bit"
              },
              "PU14": {
                "bit": 14,
                "description": "Port H pull-up bit"
              },
              "PU15": {
                "bit": 15,
                "description": "Port H pull-up bit"
              }
            },
            "PWR_PDCRH": {
              "PD0": {
                "bit": 0,
                "description": "Port H pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port H pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port H pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port H pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port H pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port H pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port H pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port H pull-down bit"
              },
              "PD8": {
                "bit": 8,
                "description": "Port H pull-down bit"
              },
              "PD9": {
                "bit": 9,
                "description": "Port H pull-down bit"
              },
              "PD10": {
                "bit": 10,
                "description": "Port H pull-down bit"
              },
              "PD11": {
                "bit": 11,
                "description": "Port H pull-down bit"
              },
              "PD12": {
                "bit": 12,
                "description": "Port H pull-down bit"
              },
              "PD13": {
                "bit": 13,
                "description": "Port H pull-down bit"
              },
              "PD14": {
                "bit": 14,
                "description": "Port H pull-down bit"
              },
              "PD15": {
                "bit": 15,
                "description": "Port H pull-down bit"
              }
            },
            "PWR_PUCRI": {
              "PU0": {
                "bit": 0,
                "description": "Port I pull-up bit"
              },
              "PU1": {
                "bit": 1,
                "description": "Port I pull-up bit"
              },
              "PU2": {
                "bit": 2,
                "description": "Port I pull-up bit"
              },
              "PU3": {
                "bit": 3,
                "description": "Port I pull-up bit"
              },
              "PU4": {
                "bit": 4,
                "description": "Port I pull-up bit"
              },
              "PU5": {
                "bit": 5,
                "description": "Port I pull-up bit"
              },
              "PU6": {
                "bit": 6,
                "description": "Port I pull-up bit"
              },
              "PU7": {
                "bit": 7,
                "description": "Port I pull-up bit"
              }
            },
            "PWR_PDCRI": {
              "PD0": {
                "bit": 0,
                "description": "Port I pull-down bit"
              },
              "PD1": {
                "bit": 1,
                "description": "Port I pull-down bit"
              },
              "PD2": {
                "bit": 2,
                "description": "Port I pull-down bit"
              },
              "PD3": {
                "bit": 3,
                "description": "Port I pull-down bit"
              },
              "PD4": {
                "bit": 4,
                "description": "Port I pull-down bit"
              },
              "PD5": {
                "bit": 5,
                "description": "Port I pull-down bit"
              },
              "PD6": {
                "bit": 6,
                "description": "Port I pull-down bit"
              },
              "PD7": {
                "bit": 7,
                "description": "Port I pull-down bit"
              }
            }
          }
        },
        "RCC": {
          "instances": [
            {
              "name": "RCC",
              "base": "0x46020C00",
              "irq": 9
            },
            {
              "name": "SEC_RCC",
              "base": "0x56020C00"
            }
          ],
          "registers": {
            "RCC_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "RCC clock control register"
            },
            "RCC_ICSCR1": {
              "offset": "0x08",
              "size": 32,
              "description": "RCC internal clock sources calibration register 1"
            },
            "RCC_ICSCR2": {
              "offset": "0x0C",
              "size": 32,
              "description": "RCC internal clock sources calibration register 2"
            },
            "RCC_ICSCR3": {
              "offset": "0x10",
              "size": 32,
              "description": "RCC internal clock sources calibration register 3"
            },
            "RCC_CRRCR": {
              "offset": "0x14",
              "size": 32,
              "description": "RCC clock recovery RC register"
            },
            "RCC_CFGR1": {
              "offset": "0x1C",
              "size": 32,
              "description": "RCC clock configuration register 1"
            },
            "RCC_CFGR2": {
              "offset": "0x20",
              "size": 32,
              "description": "RCC clock configuration register 2"
            },
            "RCC_CFGR3": {
              "offset": "0x24",
              "size": 32,
              "description": "RCC clock configuration register 3"
            },
            "RCC_PLL1CFGR": {
              "offset": "0x28",
              "size": 32,
              "description": "RCC PLL1 configuration register"
            },
            "RCC_PLL2CFGR": {
              "offset": "0x2C",
              "size": 32,
              "description": "RCC PLL2 configuration register"
            },
            "RCC_PLL3CFGR": {
              "offset": "0x30",
              "size": 32,
              "description": "RCC PLL3 configuration register"
            },
            "RCC_PLL1DIVR": {
              "offset": "0x34",
              "size": 32,
              "description": "RCC PLL1 dividers register"
            },
            "RCC_PLL1FRACR": {
              "offset": "0x38",
              "size": 32,
              "description": "RCC PLL1 fractional divider register"
            },
            "RCC_PLL2DIVR": {
              "offset": "0x3C",
              "size": 32,
              "description": "RCC PLL2 dividers configuration register"
            },
            "RCC_PLL2FRACR": {
              "offset": "0x40",
              "size": 32,
              "description": "RCC PLL2 fractional divider register"
            },
            "RCC_PLL3DIVR": {
              "offset": "0x44",
              "size": 32,
              "description": "RCC PLL3 dividers configuration register"
            },
            "RCC_PLL3FRACR": {
              "offset": "0x48",
              "size": 32,
              "description": "RCC PLL3 fractional divider register"
            },
            "RCC_CIER": {
              "offset": "0x50",
              "size": 32,
              "description": "RCC clock interrupt enable register"
            },
            "RCC_CIFR": {
              "offset": "0x54",
              "size": 32,
              "description": "RCC clock interrupt flag register"
            },
            "RCC_CICR": {
              "offset": "0x58",
              "size": 32,
              "description": "RCC clock interrupt clear register"
            },
            "RCC_AHB1RSTR": {
              "offset": "0x60",
              "size": 32,
              "description": "RCC AHB1 peripheral reset register"
            },
            "RCC_AHB2RSTR1": {
              "offset": "0x64",
              "size": 32,
              "description": "RCC AHB2 peripheral reset register 1"
            },
            "RCC_AHB2RSTR2": {
              "offset": "0x68",
              "size": 32,
              "description": "RCC AHB2 peripheral reset register 2"
            },
            "RCC_AHB3RSTR": {
              "offset": "0x6C",
              "size": 32,
              "description": "RCC AHB3 peripheral reset register"
            },
            "RCC_APB1RSTR1": {
              "offset": "0x74",
              "size": 32,
              "description": "RCC APB1 peripheral reset register 1"
            },
            "RCC_APB1RSTR2": {
              "offset": "0x78",
              "size": 32,
              "description": "RCC APB1 peripheral reset register 2"
            },
            "RCC_APB2RSTR": {
              "offset": "0x7C",
              "size": 32,
              "description": "RCC APB2 peripheral reset register"
            },
            "RCC_APB3RSTR": {
              "offset": "0x80",
              "size": 32,
              "description": "RCC APB3 peripheral reset register"
            },
            "RCC_AHB1ENR": {
              "offset": "0x88",
              "size": 32,
              "description": "RCC AHB1 peripheral clock enable register"
            },
            "RCC_AHB2ENR1": {
              "offset": "0x8C",
              "size": 32,
              "description": "RCC AHB2 peripheral clock enable register 1"
            },
            "RCC_AHB2ENR2": {
              "offset": "0x90",
              "size": 32,
              "description": "RCC AHB2 peripheral clock enable register 2"
            },
            "RCC_AHB3ENR": {
              "offset": "0x94",
              "size": 32,
              "description": "RCC AHB3 peripheral clock enable register"
            },
            "RCC_APB1ENR1": {
              "offset": "0x9C",
              "size": 32,
              "description": "RCC APB1 peripheral clock enable register 1"
            },
            "RCC_APB1ENR2": {
              "offset": "0xA0",
              "size": 32,
              "description": "RCC APB1 peripheral clock enable register 2"
            },
            "RCC_APB2ENR": {
              "offset": "0xA4",
              "size": 32,
              "description": "RCC APB2 peripheral clock enable register"
            },
            "RCC_APB3ENR": {
              "offset": "0xA8",
              "size": 32,
              "description": "RCC APB3 peripheral clock enable register"
            },
            "RCC_AHB1SMENR": {
              "offset": "0xB0",
              "size": 32,
              "description": "RCC AHB1 peripheral clock enable in Sleep and Stop modes register"
            },
            "RCC_AHB2SMENR1": {
              "offset": "0xB4",
              "size": 32,
              "description": "RCC AHB2 peripheral clock enable in Sleep and\tStop modes register 1"
            },
            "RCC_AHB2SMENR2": {
              "offset": "0xB8",
              "size": 32,
              "description": "RCC AHB2 peripheral clock enable in Sleep and\tStop modes register 2"
            },
            "RCC_AHB3SMENR": {
              "offset": "0xBC",
              "size": 32,
              "description": "RCC AHB3 peripheral clock enable in Sleep and Stop modes register"
            },
            "RCC_APB1SMENR1": {
              "offset": "0xC4",
              "size": 32,
              "description": "RCC APB1 peripheral clock enable in Sleep and Stop modes\tregister 1"
            },
            "RCC_APB1SMENR2": {
              "offset": "0xC8",
              "size": 32,
              "description": "RCC APB1 peripheral clocks enable in Sleep and\tStop modes register 2"
            },
            "RCC_APB2SMENR": {
              "offset": "0xCC",
              "size": 32,
              "description": "RCC APB2 peripheral clocks enable in Sleep and Stop modes register"
            },
            "RCC_APB3SMENR": {
              "offset": "0xD0",
              "size": 32,
              "description": "RCC APB3 peripheral clock enable in Sleep and Stop modes register"
            },
            "RCC_SRDAMR": {
              "offset": "0xD8",
              "size": 32,
              "description": "RCC SmartRun domain peripheral autonomous mode register"
            },
            "RCC_CCIPR1": {
              "offset": "0xE0",
              "size": 32,
              "description": "RCC peripherals independent clock configuration register 1"
            },
            "RCC_CCIPR2": {
              "offset": "0xE4",
              "size": 32,
              "description": "RCC peripherals independent clock configuration register 2"
            },
            "RCC_CCIPR3": {
              "offset": "0xE8",
              "size": 32,
              "description": "RCC peripherals independent clock configuration register 3"
            },
            "RCC_BDCR": {
              "offset": "0xF0",
              "size": 32,
              "description": "RCC backup domain control register"
            },
            "RCC_CSR": {
              "offset": "0xF4",
              "size": 32,
              "description": "RCC control/status register"
            },
            "RCC_SECCFGR": {
              "offset": "0x110",
              "size": 32,
              "description": "RCC secure configuration register"
            },
            "RCC_PRIVCFGR": {
              "offset": "0x114",
              "size": 32,
              "description": "RCC privilege configuration register"
            }
          },
          "bits": {
            "RCC_CR": {
              "MSISON": {
                "bit": 0,
                "description": "MSIS clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the MSIS oscillator when entering Stop, Standby or Shutdown mode. This bit is set by hardware to force the\ufffdMSIS oscillator on when exiting Standby or Shutdown mode. It is set by hardware to force the MSIS oscillator ON when STOPWUCK = 0 when exiting Stop modes, or in case of a failure of the HSE oscillator.\nSet by hardware when used directly or indirectly as system clock."
              },
              "MSIKERON": {
                "bit": 1,
                "description": "MSI enable for some peripheral kernels\nThis bit is set and cleared by software to force MSI ON even in Stop modes. Keeping the MSI on in Stop mode allows the communication speed not to be reduced by the MSI startup time. This bit has no effect on MSISON and MSIKON values (see Section\ufffd11.4.24 for more details). This bit must be configured at 0 before entering Stop 3 mode."
              },
              "MSISRDY": {
                "bit": 2,
                "description": "MSIS clock ready flag\nThis bit is set by hardware to indicate that the MSIS oscillator is stable. It is set only when MSIS is enabled by software (by setting MSISON).\nNote: Once the MSISON bit is cleared, MSISRDY goes low after six MSIS clock cycles."
              },
              "MSIPLLEN": {
                "bit": 3,
                "description": "MSI clock PLL-mode enable\nThis bit is set and cleared by software to enable/disable the PLL part of the MSI clock source.\nMSIPLLEN must be enabled after LSE is enabled (LSEON enabled) and ready (LSERDY set by hardware). A hardware protection prevents from enabling MSIPLLEN if LSE is not ready. This bit is cleared by hardware when LSE is disabled (LSEON = 0) or when the CSS on LSE detects a LSE failure (see RCC_CSR)."
              },
              "MSIKON": {
                "bit": 4,
                "description": "MSIK clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the MSIK when entering Stop, Standby, or Shutdown mode. This bit is set by hardware to force the MSIK oscillator ON when exiting Standby or Shutdown mode. It is set by hardware to force the MSIK oscillator on when STOPWUCK = 0 or STOPKERWUCK\ufffd=\ufffd0 when exiting Stop modes, or in case of a failure of the HSE oscillator."
              },
              "MSIKRDY": {
                "bit": 5,
                "description": "MSIK clock ready flag\nThis bit is set by hardware to indicate that the MSIK is stable. It is set only when MSI kernel oscillator is enabled by software by setting MSIKON.\nNote: Once MSIKON bit is cleared, MSIKRDY goes low after six MSIK oscillator clock cycles."
              },
              "MSIPLLSEL": {
                "bit": 6,
                "description": "MSI clock with PLL mode selection\nThis bit is set and cleared by software to select which MSI output clock uses the PLL mode. It\ufffdcan be written only when the MSI PLL mode is disabled (MSIPLLEN = 0). \nNote: If the MSI kernel clock output uses the same oscillator source than the MSI system clock output, then the PLL mode is applied to both clock outputs."
              },
              "MSIPLLFAST": {
                "bit": 7,
                "description": "MSI PLL mode fast startup\nThis bit is set and reset by software to enable/disable the fast PLL mode start-up of the MSI clock source. This bit is used only if PLL mode is selected (MSIPLLEN = 1).\nThe fast start-up feature is not active the first time the PLL mode is selected. The\ufffdfast start-up is active when the MSI in PLL mode returns from switch off."
              },
              "HSION": {
                "bit": 8,
                "description": "HSI16 clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the HSI16 oscillator when entering Stop, Standby, or Shutdown mode. This bit is set by hardware to force the\ufffdHSI16 oscillator on when STOPWUCK = 1 when leaving Stop modes, or in case of failure of the HSE crystal oscillator. This bit is set by hardware if the HSI16 is used directly or indirectly as system clock."
              },
              "HSIKERON": {
                "bit": 9,
                "description": "HSI16 enable for some peripheral kernels\nThis bit is set and cleared by software to force HSI16 ON even in Stop modes. Keeping HSI16 on in Stop mode allows the communication speed not to be reduced by the HSI16 startup time. This bit has no effect on HSION value. Refer to Section\ufffd11.4.24 for more details.\nThis bit must be configured at 0 before entering Stop 3 mode."
              },
              "HSIRDY": {
                "bit": 10,
                "description": "HSI16 clock ready flag\nThis bit is set by hardware to indicate that HSI16 oscillator is stable. It is set only when HSI16 is enabled by software (by setting HSION). \nNote: Once the HSION bit is cleared, HSIRDY goes low after six HSI16 clock cycles."
              },
              "HSI48ON": {
                "bit": 12,
                "description": "HSI48 clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the HSI48 when entering in Stop, Standby, or Shutdown modes."
              },
              "HSI48RDY": {
                "bit": 13,
                "description": "HSI48 clock ready flag\nThis bit is set by hardware to indicate that HSI48 oscillator is stable. Itis set only when HSI48 is enabled by software (by setting HSI48ON)."
              },
              "SHSION": {
                "bit": 14,
                "description": "SHSI clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the SHSI when entering in Stop, Standby, or Shutdown modes."
              },
              "SHSIRDY": {
                "bit": 15,
                "description": "SHSI clock ready flag\nThis bit is set by hardware to indicate that the SHSI oscillator is stable. It is set only when SHSI is enabled by software (by setting SHSION).\nNote: Once the SHSION bit is cleared, SHSIRDY goes low after six SHSI clock cycles."
              },
              "HSEON": {
                "bit": 16,
                "description": "HSE clock enable\nThis bit is set and cleared by software. It is cleared by hardware to stop the HSE oscillator when entering Stop, Standby, or Shutdown mode. This bit cannot be reset if the HSE oscillator is used directly or indirectly as the system clock."
              },
              "HSERDY": {
                "bit": 17,
                "description": "HSE clock ready flag\nThis bit is set by hardware to indicate that the HSE oscillator is stable. \nNote: Once the HSEON bit is cleared, HSERDY goes low after six HSE clock cycles."
              },
              "HSEBYP": {
                "bit": 18,
                "description": "HSE crystal oscillator bypass\nThis bit is set and cleared by software to bypass the oscillator with an external clock. The\ufffdexternal clock must be enabled with the HSEON bit set, to be used by the device. This\ufffdbit can be written only if the HSE oscillator is disabled."
              },
              "CSSON": {
                "bit": 19,
                "description": "Clock security system enable\nThis bit is set by software to enable the clock security system. When CSSON is set, the clock detector is enabled by hardware when the HSE oscillator is ready, and disabled by hardware if a HSE clock failure is detected. This bit is set only and is cleared by reset."
              },
              "HSEEXT": {
                "bit": 20,
                "description": "HSE external clock bypass mode\nThis bit is set and reset by software to select the external clock mode in bypass mode. External clock mode must be configured with HSEON bit to be used by the device. This bit can be written only if the HSE oscillator is disabled. This bit is active only if the HSE bypass mode is enabled."
              },
              "PLL1ON": {
                "bit": 24,
                "description": "PLL1 enable\nThis bit is set and cleared by software to enable the main PLL. It is cleared by hardware when entering Stop, Standby, or Shutdown mode. This bit cannot be reset if the PLL1 clock is used as the system clock."
              },
              "PLL1RDY": {
                "bit": 25,
                "description": "PLL1 clock ready flag\nThis bit is set by hardware to indicate that the PLL1 is locked."
              },
              "PLL2ON": {
                "bit": 26,
                "description": "PLL2 enable\nThis bit is set and cleared by software to enable PLL2. It is cleared by hardware when entering Stop, Standby, or Shutdown mode."
              },
              "PLL2RDY": {
                "bit": 27,
                "description": "PLL2 clock ready flag\nThis bit is set by hardware to indicate that the PLL2 is locked."
              },
              "PLL3ON": {
                "bit": 28,
                "description": "PLL3 enable\nThis bit is set and cleared by software to enable PLL3. It is cleared by hardware when entering Stop, Standby, or Shutdown mode."
              },
              "PLL3RDY": {
                "bit": 29,
                "description": "PLL3 clock ready flag\nThis bit is set by hardware to indicate that the PLL3 is locked."
              }
            },
            "RCC_ICSCR1": {
              "MSICAL3": {
                "bit": 0,
                "description": "MSIRC3 clock calibration for MSI ranges 12 to 15\nThese bits are initialized at startup with the factory-programmed MSIRC3 calibration trim value for ranges 12 to 15. When MSITRIM3 is written, MSICAL3 is updated with the sum of MSITRIM3[4:0] and the factory calibration trim value MSIRC2[4:0].\nThere is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.",
                "width": 5
              },
              "MSICAL2": {
                "bit": 5,
                "description": "MSIRC2 clock calibration for MSI ranges 8 to 11\nThese bits are initialized at startup with the factory-programmed MSIRC2 calibration trim value for ranges 8 to 11. When MSITRIM2 is written, MSICAL2 is updated with the sum of MSITRIM2[4:0] and the factory calibration trim value MSIRC2[4:0].\nThere is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.",
                "width": 5
              },
              "MSICAL1": {
                "bit": 10,
                "description": "MSIRC1 clock calibration for MSI ranges 4 to 7\nThese bits are initialized at startup with the factory-programmed MSIRC1 calibration trim value for ranges 4 to 7. When MSITRIM1 is written, MSICAL1 is updated with the sum of MSITRIM1[4:0] and the factory calibration trim value MSIRC1[4:0].\nThere is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.",
                "width": 5
              },
              "MSICAL0": {
                "bit": 15,
                "description": "MSIRC0 clock calibration for MSI ranges 0 to 3\nThese bits are initialized at startup with the factory-programmed MSIRC0 calibration trim value for ranges 0 to 3. When MSITRIM0 is written, MSICAL0 is updated with the sum of MSITRIM0[4:0] and the factory-programmed calibration trim value MSIRC0[4:0].\nThere is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.",
                "width": 5
              },
              "MSIBIAS": {
                "bit": 22,
                "description": "MSI bias mode selection\nThis bit is set by software to select the MSI bias mode. By default, the MSI bias is in\ufffdcontinuous mode in order to maintain the output clocks accuracy. Setting this bit reduces the MSI consumption when the regulator is in range 4, or when the device is in Stop 1 or Stop\ufffd2 mode, but it\ufffddecreases the MSI accuracy"
              },
              "MSIRGSEL": {
                "bit": 23,
                "description": "MSI clock range selection\nThis bit is set by software to select the MSIS and MSIK clocks range with MSISRANGE[3:0] and MSIKRANGE[3:0]. Write 0 has no effect.\nAfter exiting Standby or Shutdown mode, or after a reset, this bit is at 0 and the MSIS and MSIK ranges are provided by MSISSRANGE[3:0] and MSIKSRANGE[3:0] in RCC_CSR."
              },
              "MSIKRANGE": {
                "bit": 24,
                "description": "MSIK clock ranges\nThese bits are configured by software to choose the frequency range of MSIK oscillator when MSIRGSEL is set. 16 frequency ranges are available:\nNote: MSIKRANGE can be modified when MSIK is off (MSISON = 0) or when MSIK is ready (MSIKRDY\ufffd=\ufffd1). MSIKRANGE must NOT be modified when MSIK is on and NOT ready (MSIKON = 1 and MSIKRDY = 0)\nNote: MSIKRANGE is kept when the device wakes up from Stop mode, except when the\ufffdMSIK range is above 24 MHz. In this case MSIKRANGE is changed by hardware into\ufffdrange 2 (24 MHz).",
                "width": 4
              },
              "MSISRANGE": {
                "bit": 28,
                "description": "MSIS clock ranges\nThese bits are configured by software to choose the frequency range of MSIS oscillator when MSIRGSEL is set. 16 frequency ranges are available:\nNote: MSISRANGE can be modified when MSIS is off (MSISON = 0) or when MSIS is ready (MSISRDY\ufffd=\ufffd1). MSISRANGE must NOT be modified when MSIS is on and NOT ready (MSISON\ufffd=\ufffd1 and MSISRDY\ufffd=\ufffd0)\nNote: MSISRANGE is kept when the device wakes up from Stop mode, except when the\ufffdMSIS range is above 24 MHz. In this case MSISRANGE is changed by hardware into range 2 (24 MHz).",
                "width": 4
              }
            },
            "RCC_ICSCR2": {
              "MSITRIM3": {
                "bit": 0,
                "description": "MSI clock trimming for ranges 12 to 15\nThese bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC3[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.",
                "width": 5
              },
              "MSITRIM2": {
                "bit": 5,
                "description": "MSI clock trimming for ranges 8 to 11\nThese bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC2[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.",
                "width": 5
              },
              "MSITRIM1": {
                "bit": 10,
                "description": "MSI clock trimming for ranges 4 to 7\nThese bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC1[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.",
                "width": 5
              },
              "MSITRIM0": {
                "bit": 15,
                "description": "MSI clock trimming for ranges 0 to 3\nThese bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC0[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.",
                "width": 5
              }
            },
            "RCC_ICSCR3": {
              "HSICAL": {
                "bit": 0,
                "description": "HSI clock calibration\nThese bits are initialized at startup with the factory-programmed HSI calibration trim value. When HSITRIM is written, HSICAL is updated with the sum of HSITRIM and the factory trim value.",
                "width": 12
              },
              "HSITRIM": {
                "bit": 16,
                "description": "HSI clock trimming \nThese bits provide an additional user-programmable trimming value that is added to HSICAL[11:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the HSI.",
                "width": 5
              }
            },
            "RCC_CRRCR": {
              "HSI48CAL": {
                "bit": 0,
                "description": "HSI48 clock calibration\nThese bits are initialized at startup with the factory-programmed HSI48 calibration trim value.",
                "width": 9
              }
            },
            "RCC_CFGR1": {
              "SW": {
                "bit": 0,
                "description": "system clock switch\nThis bitfield is set and cleared by software to select system clock source (SYSCLK). It is configured by hardware to force MSIS oscillator selection when exiting Standby or Shutdown mode. This bitfield is configured by hardware to force MSIS or HSI16 oscillator selection when exiting Stop mode or in case of HSE oscillator failure, depending on STOPWUCK.",
                "width": 2
              },
              "SWS": {
                "bit": 2,
                "description": "system clock switch status\nThis bitfield is set and cleared by hardware to indicate which clock source is used as system clock.",
                "width": 2
              },
              "STOPWUCK": {
                "bit": 4,
                "description": "wake-up from Stop and CSS backup clock selection\nThis bit is set and cleared by software to select the system clock used when exiting Stop mode. The selected clock is also used as emergency clock for the clock security system on\ufffdHSE. \nSTOPWUCK must not be modified when the CSS is enabled by HSECSSON in\ufffdRCC_CR, and the system clock is HSE (SWS = 10) or a switch on HSE is\ufffdrequested (SW\ufffd=\ufffd10)."
              },
              "STOPKERWUCK": {
                "bit": 5,
                "description": "wake-up from Stop kernel clock automatic enable selection\nThis bit is set and cleared by software to enable automatically another oscillator when exiting Stop mode. This oscillator can be used as independent kernel clock by peripherals."
              },
              "MCOSEL": {
                "bit": 24,
                "description": "microcontroller clock output\nThis bitfield is set and cleared by software.\nOthers: reserved\nNote: This clock output may have some truncated cycles at startup or during MCO clock source switching.",
                "width": 4
              },
              "MCOPRE": {
                "bit": 28,
                "description": "microcontroller clock output prescaler\nThis bitfield is set and cleared by software. It is highly recommended to change this prescaler before MCO output is enabled.\nOthers: not allowed",
                "width": 3
              }
            },
            "RCC_CFGR2": {
              "HPRE": {
                "bit": 0,
                "description": "AHB prescaler\nThis bitfiled is set and cleared by software to control the division factor of the AHB clock (HCLK).\nDepending on the device voltage range, the software must set these bits correctly to ensure that the system frequency does not exceed the maximum allowed frequency (for more details, refer to Table\ufffd118). After a write operation to these bits and before decreasing the voltage range, this register must be read to be sure that the new value is taken into account.\n0xxx: SYSCLK not divided",
                "width": 4
              },
              "PPRE1": {
                "bit": 4,
                "description": "APB1 prescaler\nThis bitfiled is set and cleared by software to control the division factor of APB1 clock (PCLK1).\n0xx: PCLK1 not divided",
                "width": 3
              },
              "PPRE2": {
                "bit": 8,
                "description": "APB2 prescaler\nThis bitfiled is set and cleared by software to control the division factor of APB2 clock (PCLK2).\n0xx: PCLK2 not divided",
                "width": 3
              },
              "DPRE": {
                "bit": 12,
                "description": "DSI PHY prescaler\nThis bitfiled is set and cleared by software to control the division factor of DSI PHY bus clock (DCLK).\n0xx: DCLK not divided\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 3
              },
              "AHB1DIS": {
                "bit": 16,
                "description": "AHB1 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the AHB1 peripherals (except those listed hereafter) are used and when their clocks are disabled in RCC_AHB1ENR. When this bit is set, all the AHB1 peripherals clocks are off, except for FLASH, BKPSRAM, ICACHE, DCACHE1 and SRAM1."
              },
              "AHB2DIS1": {
                "bit": 17,
                "description": "AHB2_1 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR1 (except SRAM2 and SRAM3) are used and when their clocks are disabled in RCC_AHB2ENR1. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2ENR1 are off, except for SRAM2 and SRAM3."
              },
              "AHB2DIS2": {
                "bit": 18,
                "description": "AHB2_2 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR2 are used and when their clocks are disabled in RCC_AHB2ENR2. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2ENR2 are off."
              },
              "APB1DIS": {
                "bit": 19,
                "description": "APB1 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the APB1 peripherals (except IWDG) are used and when their clocks are disabled in RCC_APB1ENR. When this bit is set, all the APB1 peripherals clocks are off, except for IWDG."
              },
              "APB2DIS": {
                "bit": 20,
                "description": "APB2 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the APB2 peripherals are used and when their clocks are disabled in RCC_APB2ENR. When this bit is set, all APB2 peripherals clocks are off."
              }
            },
            "RCC_CFGR3": {
              "PPRE3": {
                "bit": 4,
                "description": "APB3 prescaler\nThis bitfield is set and cleared by software to control the division factor of the APB3 clock (PCLK3).\n0xx: HCLK not divided",
                "width": 3
              },
              "AHB3DIS": {
                "bit": 16,
                "description": "AHB3 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the AHB3 peripherals (except SRAM4) are used and when their clocks are disabled in RCC_AHB3ENR. When this bit is set, all the AHB3 peripherals clocks are off, except for SRAM4."
              },
              "APB3DIS": {
                "bit": 17,
                "description": "APB3 clock disable\nThis bit can be set in order to further reduce power consumption, when none of the APB3 peripherals from RCC_APB3ENR are used and when their clocks are disabled in RCC_APB3ENR. When this bit is set, all the APB3 peripherals clocks are off."
              }
            },
            "RCC_PLL1CFGR": {
              "PLL1SRC": {
                "bit": 0,
                "description": "PLL1 entry clock source\nThis bitfield is set and cleared by software to select PLL1 clock source. It can be written only when the PLL1 is disabled. In order to save power, when no PLL1 is used, this bitfield value must be zero.",
                "width": 2
              },
              "PLL1RGE": {
                "bit": 2,
                "description": "PLL1 input frequency range\nThis bit is set and reset by software to select the proper reference frequency range used for PLL1. It must be written before enabling the PLL1.\n00-01-10: PLL1 input (ref1_ck) clock range frequency between 4 and 8 MHz",
                "width": 2
              },
              "PLL1FRACEN": {
                "bit": 4,
                "description": "PLL1 fractional latch enable\nThis bit is set and reset by software to latch the content of PLL1FRACN in the \u03a3\u0394 modulator. In\u00a0order to latch the PLL1FRACN value into the \u03a3\u0394 modulator, PLL1FRACEN must be set\u00a0to\u00a00, then set to 1: the transition 0 to 1 transfers the content of PLL1FRACN into the modulator (see PLL initialization phase for details)."
              },
              "PLL1M": {
                "bit": 8,
                "description": "Prescaler for PLL1\nThis bitfield is set and cleared by software to configure the prescaler of the PLL1. The VCO1 input frequency is PLL1 input clock frequency/PLL1M.\nThis bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). \n...",
                "width": 4
              },
              "PLL1MBOOST": {
                "bit": 12,
                "description": "Prescaler for EPOD booster input clock\nThis bitfield is set and cleared by software to configure the prescaler of the PLL1, used for the EPOD booster. The EPOD booster input frequency is PLL1\ufffdinput\ufffdclock\ufffdfrequency/PLL1MBOOST.\nThis bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0) and EPODboost mode is disabled (see Section\ufffd10: Power control (PWR)).\nothers: reserved",
                "width": 4
              },
              "PLL1PEN": {
                "bit": 16,
                "description": "PLL1 DIVP divider output enable\nThis bit is set and reset by software to enable the pll1_p_ck output of the PLL1. To save power, PLL1PEN and PLL1P bits must be set to 0 when pll1_p_ck is not used."
              },
              "PLL1QEN": {
                "bit": 17,
                "description": "PLL1 DIVQ divider output enable\nThis bit is set and reset by software to enable the pll1_q_ck output of the PLL1. To save power, PLL1QEN and PLL1Q bits must be set to 0 when pll1_q_ck is not used."
              },
              "PLL1REN": {
                "bit": 18,
                "description": "PLL1 DIVR divider output enable\nThis bit is set and reset by software to enable the pll1_r_ck output of the PLL1. To save power, PLL1RENPLL2REN and PLL1R bits must be set to 0 when pll1_r_ck is not used. This bit can be cleared only when the PLL1 is not used as SYSCLK."
              }
            },
            "RCC_PLL2CFGR": {
              "PLL2SRC": {
                "bit": 0,
                "description": "PLL2 entry clock source\nThis bitfield is set and cleared by software to select PLL2 clock source. It can be written only when the PLL2 is disabled. To save power, when no PLL2 is used, this bitfield value must be\ufffdzero.",
                "width": 2
              },
              "PLL2RGE": {
                "bit": 2,
                "description": "PLL2 input frequency range\nThis bitfield is set and reset by software to select the proper reference frequency range used for\ufffdPLL2. It must be written before enabling the PLL2.\n00-01-10: PLL2 input (ref2_ck) clock range frequency between 4 and 8 MHz",
                "width": 2
              },
              "PLL2FRACEN": {
                "bit": 4,
                "description": "PLL2 fractional latch enable\nThis bit is set and reset by software to latch the content of PLL2FRACN in the \u03a3\u0394 modulator. In order to latch the PLL2FRACN value into the \u03a3\u0394 modulator, PLL2FRACEN must be set\u00a0to\u00a00, then set to 1: the transition 0 to 1 transfers the content of PLL2FRACN into the modulator (see PLL initialization phase for details)."
              },
              "PLL2M": {
                "bit": 8,
                "description": "Prescaler for PLL2\nThis bitfield is set and cleared by software to configure the prescaler of the PLL2. The VCO2 input frequency is PLL2 input clock frequency/PLL2M.\nThis bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). \n...",
                "width": 4
              },
              "PLL2PEN": {
                "bit": 16,
                "description": "PLL2 DIVP divider output enable\nThis bit is set and reset by software to enable the pll2_p_ck output of the PLL2. To save power, PLL2PEN and PLL2P bits must be set to 0 when pll2_p_ck is not used."
              },
              "PLL2QEN": {
                "bit": 17,
                "description": "PLL2 DIVQ divider output enable\nThis bit is set and reset by software to enable the pll2_q_ck output of the PLL2. To save power, PLL2QEN and PLL2Q bits must be set to 0 when pll2_q_ck is not used."
              },
              "PLL2REN": {
                "bit": 18,
                "description": "PLL2 DIVR divider output enable\nThis bit is set and reset by software to enable the pll2_r_ck output of the PLL2. To save power, PLL2REN and PLL2R bits must be set to 0 when pll2_r_ck is not used."
              }
            },
            "RCC_PLL3CFGR": {
              "PLL3SRC": {
                "bit": 0,
                "description": "PLL3 entry clock source\nThis bitfield is set and cleared by software to select PLL3 clock source. It can be written only when the PLL3 is disabled. To save power, when no PLL3 is used, this bitfield value must be\ufffdzero.",
                "width": 2
              },
              "PLL3RGE": {
                "bit": 2,
                "description": "PLL3 input frequency range\nThis bit is set and reset by software to select the proper reference frequency range used for\ufffdPLL3. It must be written before enabling the PLL3.\n00-01-10: PLL3 input (ref3_ck) clock range frequency between 4 and 8 MHz",
                "width": 2
              },
              "PLL3FRACEN": {
                "bit": 4,
                "description": "PLL3 fractional latch enable\nThis bit is set and reset by software to latch the content of PLL3FRACN in the \u03a3\u0394 modulator. In order to latch the PLL3FRACN value into the \u03a3\u0394 modulator, PLL3FRACEN must be set\u00a0to\u00a00, then set to 1: the transition 0 to 1 transfers the content of PLL3FRACN into the modulator (see PLL initialization phase for details)."
              },
              "PLL3M": {
                "bit": 8,
                "description": "Prescaler for PLL3\nThis bitfield is set and cleared by software to configure the prescaler of the PLL3. The VCO3 input frequency is PLL3 input clock frequency/PLL3M. This bitfield can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). \n...",
                "width": 4
              },
              "PLL3PEN": {
                "bit": 16,
                "description": "PLL3 DIVP divider output enable\nThis bit is set and reset by software to enable the pll3_p_ck output of the PLL3. To save power, PLL3PEN and PLL3P bits must be set to 0 when pll3_p_ck is not used."
              },
              "PLL3QEN": {
                "bit": 17,
                "description": "PLL3 DIVQ divider output enable\nThis bit is set and reset by software to enable the pll3_q_ck output of the PLL3. To save power, PLL3QEN and PLL3Q bits must be set to 0 when pll3_q_ck is not used."
              },
              "PLL3REN": {
                "bit": 18,
                "description": "PLL3 DIVR divider output enable\nThis bit is set and reset by software to enable the pll3_r_ck output of the PLL3. To save power, PLL3REN and PLL3R bits must be set to 0 when pll3_r_ck is not used."
              }
            },
            "RCC_PLL1DIVR": {
              "PLL1N": {
                "bit": 0,
                "description": "Multiplication factor for PLL1 VCO\nThis bitfield is set and reset by software to control the multiplication factor of the VCO. It can be written only when the PLL is disabled (PLL1ON = 0 and PLL1RDY = 0).\n...\n...\nOthers: reserved\nVCO output frequency = F<sub>ref1_ck</sub> x PLL1N, when fractional value 0 has been loaded in PLL1FRACN, with: \nPLL1N between 4 and 512\ninput frequency F<sub>ref1_ck</sub> between 4 and 16\ufffdMHz",
                "width": 9
              },
              "PLL1P": {
                "bit": 9,
                "description": "PLL1 DIVP division factor\nThis bitfield is set and reset by software to control the frequency of the pll1_p_ck clock. It can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).\n...",
                "width": 7
              },
              "PLL1Q": {
                "bit": 16,
                "description": "PLL1 DIVQ division factor\nThis bitfield is set and reset by software to control the frequency of the pll1_q_ck clock. It can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).\n...",
                "width": 7
              },
              "PLL1R": {
                "bit": 24,
                "description": "PLL1 DIVR division factor\nThis bitfield is set and reset by software to control frequency of the pll1_r_ck clock. It can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). Only division by one and even division factors are allowed.\n...",
                "width": 7
              }
            },
            "RCC_PLL1FRACR": {
              "PLL1FRACN": {
                "bit": 3,
                "description": "Fractional part of the multiplication factor for PLL1 VCO\nThis bitfield is set and reset by software to control the fractional part of the VCO multiplication factor. It can be written at any time, allowing dynamic fine-tuning of the PLL1 VCO.\nVCO output frequency = F<sub>ref1_ck</sub> x (PLL1N + (PLL1FRACN / 2<sup>13</sup>)), with: \nPLL1N must be between 4 and 512.\nPLL1FRACN can be between 0 and 2<sup>13</sup>- 1.\nThe input frequency F<sub>ref1_ck</sub> must be between 4 and 16 MHz. \nTo change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as\ufffdfollows:\nSet PLL1FRACEN = 0. \nWrite the new fractional value into PLL1FRACN. \nSet PLL1FRACEN = 1.",
                "width": 13
              }
            },
            "RCC_PLL2DIVR": {
              "PLL2N": {
                "bit": 0,
                "description": "Multiplication factor for PLL2 VCO\nThis bitfield is set and reset by software to control the multiplication factor of the VCO. It can be written only when the PLL is disabled (PLL2ON = 0 and PLL2RDY = 0).\n... \n...\nOthers: reserved\nVCO output frequency = F<sub>ref2_ck</sub> x PLL2N, when fractional value 0 has been loaded in PLL2FRACN, with: \nPLL2N between 4 and 512\ninput frequency F<sub>ref2_ck</sub> between 1MHz and 16MHz",
                "width": 9
              },
              "PLL2P": {
                "bit": 9,
                "description": "PLL2 DIVP division factor\nThis bitfield is set and reset by software to control the frequency of the pll2_p_ck clock. It can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).\n...",
                "width": 7
              },
              "PLL2Q": {
                "bit": 16,
                "description": "PLL2 DIVQ division factor\nThis bitfield is set and reset by software to control the frequency of the pll2_q_ck clock. It can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).\n...",
                "width": 7
              },
              "PLL2R": {
                "bit": 24,
                "description": "PLL2 DIVR division factor\nThis bitfield is set and reset by software to control the frequency of the pll2_r_ck clock. It can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).\n...",
                "width": 7
              }
            },
            "RCC_PLL2FRACR": {
              "PLL2FRACN": {
                "bit": 3,
                "description": "Fractional part of the multiplication factor for PLL2 VCO\nThis bitfield is set and reset by software to control the fractional part of the VCO multiplication factor. It can be written at any time, allowing dynamic fine-tuning of the PLL2 VCO.\nVCO output frequency = F<sub>ref2_ck</sub> x (PLL2N + (PLL2FRACN / 2<sup>13</sup>)), with \nPLL2N must be between 4 and 512.\nPLL2FRACN can be between 0 and 2<sup>13 </sup>- 1.\nThe input frequency F<sub>ref2_ck</sub> must be between 4 and 16 MHz.\nIn order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows:\nSet the bit PLL2FRACEN to 0. \nWrite the new fractional value into PLL2FRACN. \nSet the bit PLL2FRACEN to 1.",
                "width": 13
              }
            },
            "RCC_PLL3DIVR": {
              "PLL3N": {
                "bit": 0,
                "description": "Multiplication factor for PLL3 VCO\nThis bitfield is set and reset by software to control the multiplication factor of the VCO. It can be written only when the PLL is disabled (PLL3ON = 0 and PLL3RDY = 0).\n...\n...\nOthers: reserved\nVCO output frequency = F<sub>ref3_ck</sub> x PLL3N, when fractional value 0 has been loaded in PLL3FRACN, with: \nPLL3N between 4 and 512\ninput frequency F<sub>ref3_ck</sub> between 4 and 16MHz",
                "width": 9
              },
              "PLL3P": {
                "bit": 9,
                "description": "PLL3 DIVP division factor\nThis bitfield is set and reset by software to control the frequency of the pll3_p_ck clock. It can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).\n...",
                "width": 7
              },
              "PLL3Q": {
                "bit": 16,
                "description": "PLL3 DIVQ division factor\nThis bitfield is set and reset by software to control the frequency of the pll3_q_ck clock. It can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).\n...",
                "width": 7
              },
              "PLL3R": {
                "bit": 24,
                "description": "PLL3 DIVR division factor\nThis bitfield is set and reset by software to control the frequency of the pll3_r_ck clock. It can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).\n...",
                "width": 7
              }
            },
            "RCC_PLL3FRACR": {
              "PLL3FRACN": {
                "bit": 3,
                "description": "Fractional part of the multiplication factor for PLL3 VCO\nThis bitfield is set and reset by software to control the fractional part of the VCO multiplication factor. It can be written at any time, allowing dynamic fine-tuning of the PLL3 VCO.\nVCO output frequency = F<sub>ref3_ck</sub> x (PLL3N + (PLL3FRACN / 2<sup>13</sup>)), with: \nPLL3N must be between 4 and 512.\nPLL3FRACN can be between 0 and 2<sup>13 </sup>- 1.\nThe input frequency F<sub>ref3_ck</sub> must be between 4 and 16 MHz.\nIn order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows:\nSet the bit PLL3FRACEN to 0. \nWrite the new fractional value into PLL3FRACN. \nSet the bit PLL3FRACEN to 1.",
                "width": 13
              }
            },
            "RCC_CIER": {
              "LSIRDYIE": {
                "bit": 0,
                "description": "LSI ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the LSI oscillator stabilization."
              },
              "LSERDYIE": {
                "bit": 1,
                "description": "LSE ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the LSE oscillator stabilization."
              },
              "MSISRDYIE": {
                "bit": 2,
                "description": "MSIS ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the MSIS oscillator stabilization."
              },
              "HSIRDYIE": {
                "bit": 3,
                "description": "HSI16 ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the HSI16 oscillator stabilization."
              },
              "HSERDYIE": {
                "bit": 4,
                "description": "HSE ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the HSE oscillator stabilization."
              },
              "HSI48RDYIE": {
                "bit": 5,
                "description": "HSI48 ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the HSI48 oscillator stabilization."
              },
              "PLL1RDYIE": {
                "bit": 6,
                "description": "PLL ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by PLL1 lock."
              },
              "PLL2RDYIE": {
                "bit": 7,
                "description": "PLL2 ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by PLL2 lock."
              },
              "PLL3RDYIE": {
                "bit": 8,
                "description": "PLL3 ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by PLL3 lock."
              },
              "MSIKRDYIE": {
                "bit": 11,
                "description": "MSIK ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the MSIK oscillator stabilization."
              },
              "SHSIRDYIE": {
                "bit": 12,
                "description": "SHSI ready interrupt enable\nThis bit is set and cleared by software to enable/disable interrupt caused by the SHSI oscillator stabilization."
              }
            },
            "RCC_CIFR": {
              "LSIRDYF": {
                "bit": 0,
                "description": "LSI ready interrupt flag\nThis bit is set by hardware when the LSI clock becomes stable and LSIRDYIE is set. It is cleared by software by\ufffdsetting the LSIRDYC bit."
              },
              "LSERDYF": {
                "bit": 1,
                "description": "LSE ready interrupt flag\nThis bit is set by hardware when the LSE clock becomes stable and LSERDYIE is set. It is cleared by software by setting the LSERDYC bit."
              },
              "MSISRDYF": {
                "bit": 2,
                "description": "MSIS ready interrupt flag\nThis bit is set by hardware when the MSIS clock becomes stable and MSISRDYIE is set. It\ufffdis cleared by software by setting the MSISRDYC bit."
              },
              "HSIRDYF": {
                "bit": 3,
                "description": "HSI16 ready interrupt flag\nThis bit is set by hardware when the HSI16 clock becomes stable and HSIRDYIE = 1 in\ufffdresponse to setting the HSION (see RCC_CR). When HSION = 0 but the HSI16 oscillator is enabled by the peripheral through a clock request, this bit is not set and no interrupt is generated. This bit is cleared by software by setting the HSIRDYC bit."
              },
              "HSERDYF": {
                "bit": 4,
                "description": "HSE ready interrupt flag\nThis bit is set by hardware when the HSE clock becomes stable and HSERDYIE is set. It is cleared by software by setting the HSERDYC bit."
              },
              "HSI48RDYF": {
                "bit": 5,
                "description": "HSI48 ready interrupt flag\nThis bit is set by hardware when the HSI48 clock becomes stable and HSI48RDYIE is set. it\ufffdis cleared by software by setting the HSI48RDYC bit."
              },
              "PLL1RDYF": {
                "bit": 6,
                "description": "PLL1 ready interrupt flag\nThis bit is set by hardware when the PLL1 locks and PLL1RDYIE is set. It is cleared by software by setting the PLL1RDYC bit."
              },
              "PLL2RDYF": {
                "bit": 7,
                "description": "PLL2 ready interrupt flag\nThis bit is set by hardware when the PLL2 locks and PLL2RDYIE is set. It is cleared by software by setting the PLL2RDYC bit."
              },
              "PLL3RDYF": {
                "bit": 8,
                "description": "PLL3 ready interrupt flag\nThis bit is set by hardware when the PLL3 locks and PLL3RDYIE is set. It is cleared by software by setting the PLL3RDYC bit."
              },
              "CSSF": {
                "bit": 10,
                "description": "Clock security system interrupt flag\nThis bit is set by hardware when a failure is detected in the HSE oscillator. It is cleared by software by setting the CSSC bit."
              },
              "MSIKRDYF": {
                "bit": 11,
                "description": "MSIK ready interrupt flag\nThis bit is set by hardware when the MSIK clock becomes stable and MSIKRDYIE is set. It is cleared by software by setting the MSIKRDYC bit."
              },
              "SHSIRDYF": {
                "bit": 12,
                "description": "SHSI ready interrupt flag\nThis bit is set by hardware when the SHSI clock becomes stable and SHSIRDYIE is set. It is cleared by software by setting the SHSIRDYC bit."
              }
            },
            "RCC_CICR": {
              "LSIRDYC": {
                "bit": 0,
                "description": "LSI ready interrupt clear\nWriting this bit to 1 clears the LSIRDYF flag. Writing 0 has no effect."
              },
              "LSERDYC": {
                "bit": 1,
                "description": "LSE ready interrupt clear\nWriting this bit to 1 clears the LSERDYF flag. Writing 0 has no effect."
              },
              "MSISRDYC": {
                "bit": 2,
                "description": "MSIS ready interrupt clear\nWriting this bit to 1 clears the MSISRDYF flag. Writing 0 has no effect."
              },
              "HSIRDYC": {
                "bit": 3,
                "description": "HSI16 ready interrupt clear\nWriting this bit to 1 clears the HSIRDYF flag. Writing 0 has no effect."
              },
              "HSERDYC": {
                "bit": 4,
                "description": "HSE ready interrupt clear\nWriting this bit to 1 clears the HSERDYF flag. Writing 0 has no effect."
              },
              "HSI48RDYC": {
                "bit": 5,
                "description": "HSI48 ready interrupt clear\nWriting this bit to 1 clears the HSI48RDYF flag. Writing 0 has no effect."
              },
              "PLL1RDYC": {
                "bit": 6,
                "description": "PLL1 ready interrupt clear\nWriting this bit to 1 clears the PLL1RDYF flag. Writing 0 has no effect."
              },
              "PLL2RDYC": {
                "bit": 7,
                "description": "PLL2 ready interrupt clear\nWriting this bit to 1 clears the PLL2RDYF flag. Writing 0 has no effect."
              },
              "PLL3RDYC": {
                "bit": 8,
                "description": "PLL3 ready interrupt clear\nWriting this bit to 1 clears the PLL3RDYF flag. Writing 0 has no effect."
              },
              "CSSC": {
                "bit": 10,
                "description": "Clock security system interrupt clear\nWriting this bit to 1 clears the CSSF flag. Writing 0 has no effect."
              },
              "MSIKRDYC": {
                "bit": 11,
                "description": "MSIK oscillator ready interrupt clear\nWriting this bit to 1 clears the MSIKRDYF flag. Writing 0 has no effect."
              },
              "SHSIRDYC": {
                "bit": 12,
                "description": "SHSI oscillator ready interrupt clear\nWriting this bit to 1 clears the SHSIRDYF flag. Writing 0 has no effect."
              }
            },
            "RCC_AHB1RSTR": {
              "GPDMA1RST": {
                "bit": 0,
                "description": "GPDMA1 reset\nThis bit is set and cleared by software."
              },
              "CORDICRST": {
                "bit": 1,
                "description": "CORDIC reset\nThis bit is set and cleared by software."
              },
              "FMACRST": {
                "bit": 2,
                "description": "FMAC reset\nThis bit is set and cleared by software."
              },
              "MDF1RST": {
                "bit": 3,
                "description": "MDF1 reset\nThis bit is set and cleared by software."
              },
              "CRCRST": {
                "bit": 12,
                "description": "CRC reset\nThis bit is set and cleared by software."
              },
              "JPEGRST": {
                "bit": 15,
                "description": "JPEG reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "TSCRST": {
                "bit": 16,
                "description": "TSC reset\nThis bit is set and cleared by software."
              },
              "RAMCFGRST": {
                "bit": 17,
                "description": "RAMCFG reset\nThis bit is set and cleared by software."
              },
              "DMA2DRST": {
                "bit": 18,
                "description": "DMA2D reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXMMURST": {
                "bit": 19,
                "description": "GFXMMU reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPU2DRST": {
                "bit": 20,
                "description": "GPU2D reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB2RSTR1": {
              "GPIOARST": {
                "bit": 0,
                "description": "I/O port A reset\nThis bit is set and cleared by software."
              },
              "GPIOBRST": {
                "bit": 1,
                "description": "I/O port B reset\nThis bit is set and cleared by software."
              },
              "GPIOCRST": {
                "bit": 2,
                "description": "I/O port C reset\nThis bit is set and cleared by software."
              },
              "GPIODRST": {
                "bit": 3,
                "description": "I/O port D reset\nThis bit is set and cleared by software."
              },
              "GPIOERST": {
                "bit": 4,
                "description": "I/O port E reset\nThis bit is set and cleared by software."
              },
              "GPIOFRST": {
                "bit": 5,
                "description": "I/O port F reset\nThis bit is set and cleared by software.\nThis bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral.\nNote: If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOGRST": {
                "bit": 6,
                "description": "I/O port G reset\nThis bit is set and cleared by software."
              },
              "GPIOHRST": {
                "bit": 7,
                "description": "I/O port H reset\nThis bit is set and cleared by software."
              },
              "GPIOIRST": {
                "bit": 8,
                "description": "I/O port I reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOJRST": {
                "bit": 9,
                "description": "I/O port J reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "ADC12RST": {
                "bit": 10,
                "description": "ADC1 and ADC2 reset\nThis bit is set and cleared by software.\nNote: This bit impacts ADC1 in STM32U535/545/575/585, and ADC1/ADC2 in\ufffdSTM32U59x/5Ax/5Fx/5Gx."
              },
              "DCMI_PSSIRST": {
                "bit": 12,
                "description": "DCMI and PSSI reset\nThis bit is set and cleared by software."
              },
              "OTGRST": {
                "bit": 14,
                "description": "OTG_FS or OTG_HS reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "AESRST": {
                "bit": 16,
                "description": "AES hardware accelerator reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HASHRST": {
                "bit": 17,
                "description": "HASH reset\nThis bit is set and cleared by software."
              },
              "RNGRST": {
                "bit": 18,
                "description": "RNG reset\nThis bit is set and cleared by software."
              },
              "PKARST": {
                "bit": 19,
                "description": "PKA reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SAESRST": {
                "bit": 20,
                "description": "SAES hardware accelerator reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPIMRST": {
                "bit": 21,
                "description": "OCTOSPIM reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC1RST": {
                "bit": 23,
                "description": "OTFDEC1 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC2RST": {
                "bit": 24,
                "description": "OTFDEC2 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SDMMC1RST": {
                "bit": 27,
                "description": "SDMMC1 reset\nThis bit is set and cleared by software."
              },
              "SDMMC2RST": {
                "bit": 28,
                "description": "SDMMC2 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB2RSTR2": {
              "FSMCRST": {
                "bit": 0,
                "description": "Flexible memory controller reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPI1RST": {
                "bit": 4,
                "description": "OCTOSPI1 reset\nThis bit is set and cleared by software."
              },
              "OCTOSPI2RST": {
                "bit": 8,
                "description": "OCTOSPI2 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HSPI1RST": {
                "bit": 12,
                "description": "HSPI1 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB3RSTR": {
              "LPGPIO1RST": {
                "bit": 0,
                "description": "LPGPIO1 reset\nThis bit is set and cleared by software."
              },
              "ADC4RST": {
                "bit": 5,
                "description": "ADC4 reset\nThis bit is set and cleared by software."
              },
              "DAC1RST": {
                "bit": 6,
                "description": "DAC1 reset\nThis bit is set and cleared by software."
              },
              "LPDMA1RST": {
                "bit": 9,
                "description": "LPDMA1 reset\nThis bit is set and cleared by software."
              },
              "ADF1RST": {
                "bit": 10,
                "description": "ADF1 reset\nThis bit is set and cleared by software."
              }
            },
            "RCC_APB1RSTR1": {
              "TIM2RST": {
                "bit": 0,
                "description": "TIM2 reset\nThis bit is set and cleared by software."
              },
              "TIM3RST": {
                "bit": 1,
                "description": "TIM3 reset\nThis bit is set and cleared by software."
              },
              "TIM4RST": {
                "bit": 2,
                "description": "TIM4 reset\nThis bit is set and cleared by software."
              },
              "TIM5RST": {
                "bit": 3,
                "description": "TIM5 reset\nThis bit is set and cleared by software."
              },
              "TIM6RST": {
                "bit": 4,
                "description": "TIM6 reset\nThis bit is set and cleared by software."
              },
              "TIM7RST": {
                "bit": 5,
                "description": "TIM7 reset\nThis bit is set and cleared by software."
              },
              "SPI2RST": {
                "bit": 14,
                "description": "SPI2 reset\nThis bit is set and cleared by software."
              },
              "USART2RST": {
                "bit": 17,
                "description": "USART2 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series.Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USART3RST": {
                "bit": 18,
                "description": "USART3 reset\nThis bit is set and cleared by software."
              },
              "UART4RST": {
                "bit": 19,
                "description": "UART4 reset\nThis bit is set and cleared by software."
              },
              "UART5RST": {
                "bit": 20,
                "description": "UART5 reset\nThis bit is set and cleared by software."
              },
              "I2C1RST": {
                "bit": 21,
                "description": "I2C1 reset\nThis bit is set and cleared by software."
              },
              "I2C2RST": {
                "bit": 22,
                "description": "I2C2 reset\nThis bit is set and cleared by software."
              },
              "CRSRST": {
                "bit": 24,
                "description": "CRS reset\nThis bit is set and cleared by software."
              },
              "USART6RST": {
                "bit": 25,
                "description": "USART6 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB1RSTR2": {
              "I2C4RST": {
                "bit": 1,
                "description": "I2C4 reset\nThis bit is set and cleared by software"
              },
              "LPTIM2RST": {
                "bit": 5,
                "description": "LPTIM2 reset\nThis bit is set and cleared by software."
              },
              "I2C5RST": {
                "bit": 6,
                "description": "I2C5 reset\nThis bit is set and cleared by software\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "I2C6RST": {
                "bit": 7,
                "description": "I2C6 reset\nThis bit is set and cleared by software\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "FDCAN1RST": {
                "bit": 9,
                "description": "FDCAN1 reset\nThis bit is set and cleared by software."
              },
              "UCPD1RST": {
                "bit": 23,
                "description": "UCPD1 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB2RSTR": {
              "TIM1RST": {
                "bit": 11,
                "description": "TIM1 reset\nThis bit is set and cleared by software."
              },
              "SPI1RST": {
                "bit": 12,
                "description": "SPI1 reset\nThis bit is set and cleared by software."
              },
              "TIM8RST": {
                "bit": 13,
                "description": "TIM8 reset\nThis bit is set and cleared by software."
              },
              "USART1RST": {
                "bit": 14,
                "description": "USART1 reset\nThis bit is set and cleared by software."
              },
              "TIM15RST": {
                "bit": 16,
                "description": "TIM15 reset\nThis bit is set and cleared by software."
              },
              "TIM16RST": {
                "bit": 17,
                "description": "TIM16 reset\nThis bit is set and cleared by software."
              },
              "TIM17RST": {
                "bit": 18,
                "description": "TIM17 reset\nThis bit is set and cleared by software."
              },
              "SAI1RST": {
                "bit": 21,
                "description": "SAI1 reset\nThis bit is set and cleared by software."
              },
              "SAI2RST": {
                "bit": 22,
                "description": "SAI2 reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USBRST": {
                "bit": 24,
                "description": "USB reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXTIMRST": {
                "bit": 25,
                "description": "GFXTIM reset\nThis bit is set and cleared by software.\nNote: .This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "LTDCRST": {
                "bit": 26,
                "description": "LTDC reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "DSIRST": {
                "bit": 27,
                "description": "DSI reset\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB3RSTR": {
              "SYSCFGRST": {
                "bit": 1,
                "description": "SYSCFG reset\nThis bit is set and cleared by software."
              },
              "SPI3RST": {
                "bit": 5,
                "description": "SPI3 reset\nThis bit is set and cleared by software."
              },
              "LPUART1RST": {
                "bit": 6,
                "description": "LPUART1 reset\nThis bit is set and cleared by software."
              },
              "I2C3RST": {
                "bit": 7,
                "description": "I2C3 reset\nThis bit is set and cleared by software."
              },
              "LPTIM1RST": {
                "bit": 11,
                "description": "LPTIM1 reset\nThis bit is set and cleared by software."
              },
              "LPTIM3RST": {
                "bit": 12,
                "description": "LPTIM3 reset\nThis bit is set and cleared by software."
              },
              "LPTIM4RST": {
                "bit": 13,
                "description": "LPTIM4 reset\nThis bit is set and cleared by software."
              },
              "OPAMPRST": {
                "bit": 14,
                "description": "OPAMP reset\nThis bit is set and cleared by software."
              },
              "COMPRST": {
                "bit": 15,
                "description": "COMP reset\nThis bit is set and cleared by software."
              },
              "VREFRST": {
                "bit": 20,
                "description": "VREFBUF reset\nThis bit is set and cleared by software."
              }
            },
            "RCC_AHB1ENR": {
              "GPDMA1EN": {
                "bit": 0,
                "description": "GPDMA1 clock enable\nThis bit is set and cleared by software."
              },
              "CORDICEN": {
                "bit": 1,
                "description": "CORDIC clock enable\nThis bit is set and cleared by software."
              },
              "FMACEN": {
                "bit": 2,
                "description": "FMAC clock enable\nThis bit is set and reset by software."
              },
              "MDF1EN": {
                "bit": 3,
                "description": "MDF1 clock enable\nThis bit is set and reset by software."
              },
              "FLASHEN": {
                "bit": 8,
                "description": "FLASH clock enable\nThis bit is set and cleared by software. This bit can be disabled only when the flash memory is in power-down mode."
              },
              "CRCEN": {
                "bit": 12,
                "description": "CRC clock enable\nThis bit is set and cleared by software."
              },
              "JPEGEN": {
                "bit": 15,
                "description": "JPEG clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "TSCEN": {
                "bit": 16,
                "description": "Touch sensing controller clock enable\nThis bit is set and cleared by software."
              },
              "RAMCFGEN": {
                "bit": 17,
                "description": "RAMCFG clock enable\nThis bit is set and cleared by software."
              },
              "DMA2DEN": {
                "bit": 18,
                "description": "DMA2D clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXMMUEN": {
                "bit": 19,
                "description": "GFXMMU clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPU2DEN": {
                "bit": 20,
                "description": "GPU2D clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "DCACHE2EN": {
                "bit": 21,
                "description": "DCACHE2 clock enable \nThis bit is set and reset by software.\nNote: DCACHE2 clock must be enabled to access memories, even if the DCACHE2 is bypassed.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GTZC1EN": {
                "bit": 24,
                "description": "GTZC1 clock enable \nThis bit is set and reset by software."
              },
              "BKPSRAMEN": {
                "bit": 28,
                "description": "BKPSRAM clock enable \nThis bit is set and reset by software."
              },
              "DCACHE1EN": {
                "bit": 30,
                "description": "DCACHE1 clock enable \nThis bit is set and reset by software.\nNote: DCACHE1 clock must be enabled when external memories are accessed through OCTOSPI1, OCTOSPI2, HSPI1 or FSMC, even if the DCACHE1 is bypassed."
              },
              "SRAM1EN": {
                "bit": 31,
                "description": "SRAM1 clock enable \nThis bit is set and reset by software."
              }
            },
            "RCC_AHB2ENR1": {
              "GPIOAEN": {
                "bit": 0,
                "description": "I/O port A clock enable\nThis bit is set and cleared by software."
              },
              "GPIOBEN": {
                "bit": 1,
                "description": "I/O port B clock enable\nThis bit is set and cleared by software."
              },
              "GPIOCEN": {
                "bit": 2,
                "description": "I/O port C clock enable\nThis bit is set and cleared by software."
              },
              "GPIODEN": {
                "bit": 3,
                "description": "I/O port D clock enable\nThis bit is set and cleared by software."
              },
              "GPIOEEN": {
                "bit": 4,
                "description": "I/O port E clock enable\nThis bit is set and cleared by software."
              },
              "GPIOFEN": {
                "bit": 5,
                "description": "I/O port F clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOGEN": {
                "bit": 6,
                "description": "I/O port G clock enable\nThis bit is set and cleared by software."
              },
              "GPIOHEN": {
                "bit": 7,
                "description": "I/O port H clock enable\nThis bit is set and cleared by software."
              },
              "GPIOIEN": {
                "bit": 8,
                "description": "I/O port I clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOJEN": {
                "bit": 9,
                "description": "I/O port J clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "ADC12EN": {
                "bit": 10,
                "description": "ADC1 and ADC2 clock enable\nThis bit is set and cleared by software.\nNote: This bit impacts ADC1 in STM32U535/545/575/585, and ADC1/ADC2 in\ufffdSTM32U59x/5Ax/5Fx/5Gx."
              },
              "DCMI_PSSIEN": {
                "bit": 12,
                "description": "DCMI and PSSI clock enable\nThis bit is set and cleared by software."
              },
              "OTGEN": {
                "bit": 14,
                "description": "OTG_FS or OTG_HS clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTGHSPHYEN": {
                "bit": 15,
                "description": "OTG_HS PHY clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "AESEN": {
                "bit": 16,
                "description": "AES clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HASHEN": {
                "bit": 17,
                "description": "HASH clock enable\nThis bit is set and cleared by software"
              },
              "RNGEN": {
                "bit": 18,
                "description": "RNG clock enable\nThis bit is set and cleared by software."
              },
              "PKAEN": {
                "bit": 19,
                "description": "PKA clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SAESEN": {
                "bit": 20,
                "description": "SAES clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPIMEN": {
                "bit": 21,
                "description": "OCTOSPIM clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC1EN": {
                "bit": 23,
                "description": "OTFDEC1 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC2EN": {
                "bit": 24,
                "description": "OTFDEC2 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SDMMC1EN": {
                "bit": 27,
                "description": "SDMMC1 clock enable\nThis bit is set and cleared by software."
              },
              "SDMMC2EN": {
                "bit": 28,
                "description": "SDMMC2 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM2EN": {
                "bit": 30,
                "description": "SRAM2 clock enable \nThis bit is set and reset by software."
              },
              "SRAM3EN": {
                "bit": 31,
                "description": "SRAM3 clock enable \nThis bit is set and reset by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB2ENR2": {
              "FSMCEN": {
                "bit": 0,
                "description": "FSMC clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPI1EN": {
                "bit": 4,
                "description": "OCTOSPI1 clock enable\nThis bit is set and cleared by software."
              },
              "OCTOSPI2EN": {
                "bit": 8,
                "description": "OCTOSPI2 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HSPI1EN": {
                "bit": 12,
                "description": "HSPI1 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM6EN": {
                "bit": 30,
                "description": "SRAM6 clock enable \nThis bit is set and reset by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM5EN": {
                "bit": 31,
                "description": "SRAM5 clock enable \nThis bit is set and reset by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB3ENR": {
              "LPGPIO1EN": {
                "bit": 0,
                "description": "LPGPIO1 enable\nThis bit is set and cleared by software."
              },
              "PWREN": {
                "bit": 2,
                "description": "PWR clock enable\nThis bit is set and cleared by software."
              },
              "ADC4EN": {
                "bit": 5,
                "description": "ADC4 clock enable\nThis bit is set and cleared by software."
              },
              "DAC1EN": {
                "bit": 6,
                "description": "DAC1 clock enable\nThis bit is set and cleared by software."
              },
              "LPDMA1EN": {
                "bit": 9,
                "description": "LPDMA1 clock enable\nThis bit is set and cleared by software."
              },
              "ADF1EN": {
                "bit": 10,
                "description": "ADF1 clock enable\nThis bit is set and cleared by software."
              },
              "GTZC2EN": {
                "bit": 12,
                "description": "GTZC2 clock enable\nThis bit is set and cleared by software."
              },
              "SRAM4EN": {
                "bit": 31,
                "description": "SRAM4 clock enable \nThis bit is set and reset by software."
              }
            },
            "RCC_APB1ENR1": {
              "TIM2EN": {
                "bit": 0,
                "description": "TIM2 clock enable\nThis bit is set and cleared by software."
              },
              "TIM3EN": {
                "bit": 1,
                "description": "TIM3 clock enable\nThis bit is set and cleared by software."
              },
              "TIM4EN": {
                "bit": 2,
                "description": "TIM4 clock enable\nThis bit is set and cleared by software."
              },
              "TIM5EN": {
                "bit": 3,
                "description": "TIM5 clock enable\nThis bit is set and cleared by software."
              },
              "TIM6EN": {
                "bit": 4,
                "description": "TIM6 clock enable\nThis bit is set and cleared by software."
              },
              "TIM7EN": {
                "bit": 5,
                "description": "TIM7 clock enable\nThis bit is set and cleared by software."
              },
              "WWDGEN": {
                "bit": 11,
                "description": "WWDG clock enable\nThis bit is set by software to enable the window watchdog clock. It is reset by hardware system reset. This bit can also be set by hardware if the WWDG_SW option bit is reset."
              },
              "SPI2EN": {
                "bit": 14,
                "description": "SPI2 clock enable\nThis bit is set and cleared by software."
              },
              "USART2EN": {
                "bit": 17,
                "description": "USART2 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USART3EN": {
                "bit": 18,
                "description": "USART3 clock enable\nThis bit is set and cleared by software."
              },
              "UART4EN": {
                "bit": 19,
                "description": "UART4 clock enable\nThis bit is set and cleared by software."
              },
              "UART5EN": {
                "bit": 20,
                "description": "UART5 clock enable\nThis bit is set and cleared by software."
              },
              "I2C1EN": {
                "bit": 21,
                "description": "I2C1 clock enable\nThis bit is set and cleared by software."
              },
              "I2C2EN": {
                "bit": 22,
                "description": "I2C2 clock enable\nThis bit is set and cleared by software."
              },
              "CRSEN": {
                "bit": 24,
                "description": "CRS clock enable\nThis bit is set and cleared by software."
              },
              "USART6EN": {
                "bit": 25,
                "description": "USART6 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB1ENR2": {
              "I2C4EN": {
                "bit": 1,
                "description": "I2C4 clock enable\nThis bit is set and cleared by software"
              },
              "LPTIM2EN": {
                "bit": 5,
                "description": "LPTIM2 clock enable\nThis bit is set and cleared by software."
              },
              "I2C5EN": {
                "bit": 6,
                "description": "I2C5 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "I2C6EN": {
                "bit": 7,
                "description": "I2C6 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "FDCAN1EN": {
                "bit": 9,
                "description": "FDCAN1 clock enable\nThis bit is set and cleared by software."
              },
              "UCPD1EN": {
                "bit": 23,
                "description": "UCPD1 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB2ENR": {
              "TIM1EN": {
                "bit": 11,
                "description": "TIM1 clock enable\nThis bit is set and cleared by software."
              },
              "SPI1EN": {
                "bit": 12,
                "description": "SPI1 clock enable\nThis bit is set and cleared by software."
              },
              "TIM8EN": {
                "bit": 13,
                "description": "TIM8 clock enable\nThis bit is set and cleared by software."
              },
              "USART1EN": {
                "bit": 14,
                "description": "USART1clock enable\nThis bit is set and cleared by software."
              },
              "TIM15EN": {
                "bit": 16,
                "description": "TIM15 clock enable\nThis bit is set and cleared by software."
              },
              "TIM16EN": {
                "bit": 17,
                "description": "TIM16 clock enable\nThis bit is set and cleared by software."
              },
              "TIM17EN": {
                "bit": 18,
                "description": "TIM17 clock enable\nThis bit is set and cleared by software."
              },
              "SAI1EN": {
                "bit": 21,
                "description": "SAI1 clock enable\nThis bit is set and cleared by software."
              },
              "SAI2EN": {
                "bit": 22,
                "description": "SAI2 clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USBEN": {
                "bit": 24,
                "description": "USB clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXTIMEN": {
                "bit": 25,
                "description": "GFXTIM clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "LTDCEN": {
                "bit": 26,
                "description": "LTDC clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "DSIEN": {
                "bit": 27,
                "description": "DSI clock enable\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB3ENR": {
              "SYSCFGEN": {
                "bit": 1,
                "description": "SYSCFG clock enable\nThis bit is set and cleared by software."
              },
              "SPI3EN": {
                "bit": 5,
                "description": "SPI3 clock enable\nThis bit is set and cleared by software."
              },
              "LPUART1EN": {
                "bit": 6,
                "description": "LPUART1 clock enable\nThis bit is set and cleared by software."
              },
              "I2C3EN": {
                "bit": 7,
                "description": "I2C3 clock enable\nThis bit is set and cleared by software."
              },
              "LPTIM1EN": {
                "bit": 11,
                "description": "LPTIM1 clock enable\nThis bit is set and cleared by software."
              },
              "LPTIM3EN": {
                "bit": 12,
                "description": "LPTIM3 clock enable\nThis bit is set and cleared by software."
              },
              "LPTIM4EN": {
                "bit": 13,
                "description": "LPTIM4 clock enable\nThis bit is set and cleared by software."
              },
              "OPAMPEN": {
                "bit": 14,
                "description": "OPAMP clock enable\nThis bit is set and cleared by software."
              },
              "COMPEN": {
                "bit": 15,
                "description": "COMP clock enable\nThis bit is set and cleared by software."
              },
              "VREFEN": {
                "bit": 20,
                "description": "VREFBUF clock enable\nThis bit is set and cleared by software."
              },
              "RTCAPBEN": {
                "bit": 21,
                "description": "RTC and TAMP APB clock enable\nThis bit is set and cleared by software."
              }
            },
            "RCC_AHB1SMENR": {
              "GPDMA1SMEN": {
                "bit": 0,
                "description": "GPDMA1 clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "CORDICSMEN": {
                "bit": 1,
                "description": "CORDIC clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software during Sleep mode."
              },
              "FMACSMEN": {
                "bit": 2,
                "description": "FMAC clocks enable during Sleep and Stop modes.\nThis bit is set and cleared by software."
              },
              "MDF1SMEN": {
                "bit": 3,
                "description": "MDF1 clocks enable during Sleep and Stop modes.\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "FLASHSMEN": {
                "bit": 8,
                "description": "FLASH clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "CRCSMEN": {
                "bit": 12,
                "description": "CRC clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "JPEGSMEN": {
                "bit": 15,
                "description": "JPEG clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "TSCSMEN": {
                "bit": 16,
                "description": "TSC clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "RAMCFGSMEN": {
                "bit": 17,
                "description": "RAMCFG clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "DMA2DSMEN": {
                "bit": 18,
                "description": "DMA2D clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXMMUSMEN": {
                "bit": 19,
                "description": "GFXMMU clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPU2DSMEN": {
                "bit": 20,
                "description": "GPU2D clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "DCACHE2SMEN": {
                "bit": 21,
                "description": "DCACHE2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GTZC1SMEN": {
                "bit": 24,
                "description": "GTZC1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "BKPSRAMSMEN": {
                "bit": 28,
                "description": "BKPSRAM clock enable during Sleep and Stop modes\nThis bit is set and cleared by software"
              },
              "ICACHESMEN": {
                "bit": 29,
                "description": "ICACHE clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "DCACHE1SMEN": {
                "bit": 30,
                "description": "DCACHE1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SRAM1SMEN": {
                "bit": 31,
                "description": "SRAM1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              }
            },
            "RCC_AHB2SMENR1": {
              "GPIOASMEN": {
                "bit": 0,
                "description": "I/O port A clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOBSMEN": {
                "bit": 1,
                "description": "I/O port B clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOCSMEN": {
                "bit": 2,
                "description": "I/O port C clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIODSMEN": {
                "bit": 3,
                "description": "I/O port D clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOESMEN": {
                "bit": 4,
                "description": "I/O port E clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOFSMEN": {
                "bit": 5,
                "description": "I/O port F clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOGSMEN": {
                "bit": 6,
                "description": "I/O port G clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOHSMEN": {
                "bit": 7,
                "description": "I/O port H clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "GPIOISMEN": {
                "bit": 8,
                "description": "I/O port I clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GPIOJSMEN": {
                "bit": 9,
                "description": "I/O port J clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "ADC12SMEN": {
                "bit": 10,
                "description": "ADC1 and ADC2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit impacts ADC1 in STM32U535/545/575/585 and ADC1/ADC2 in\ufffdSTM32U59x/5Ax/5Fx/5Gx."
              },
              "DCMI_PSSISMEN": {
                "bit": 12,
                "description": "DCMI and PSSI clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "OTGSMEN": {
                "bit": 14,
                "description": "OTG_FS and OTG_HS clocks enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTGHSPHYSMEN": {
                "bit": 15,
                "description": "OTG_HS PHY clock enable during Sleep and Stop modes\nThis bit is set and cleared by software\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "AESSMEN": {
                "bit": 16,
                "description": "AES clock enable during Sleep and Stop modes\nThis bit is set and cleared by software\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HASHSMEN": {
                "bit": 17,
                "description": "HASH clock enable during Sleep and Stop modes\nThis bit is set and cleared by software"
              },
              "RNGSMEN": {
                "bit": 18,
                "description": "RNG clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "PKASMEN": {
                "bit": 19,
                "description": "PKA clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SAESSMEN": {
                "bit": 20,
                "description": "SAES accelerator clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPIMSMEN": {
                "bit": 21,
                "description": "OCTOSPIM clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC1SMEN": {
                "bit": 23,
                "description": "OTFDEC1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OTFDEC2SMEN": {
                "bit": 24,
                "description": "OTFDEC2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SDMMC1SMEN": {
                "bit": 27,
                "description": "SDMMC1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SDMMC2SMEN": {
                "bit": 28,
                "description": "SDMMC2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM2SMEN": {
                "bit": 30,
                "description": "SRAM2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SRAM3SMEN": {
                "bit": 31,
                "description": "SRAM3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software. \nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB2SMENR2": {
              "FSMCSMEN": {
                "bit": 0,
                "description": "FSMC clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPI1SMEN": {
                "bit": 4,
                "description": "OCTOSPI1 clock enable during Sleep and Stop modes \nThis bit is set and cleared by software."
              },
              "OCTOSPI2SMEN": {
                "bit": 8,
                "description": "OCTOSPI2 clock enable during Sleep and Stop modes \nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "HSPI1SMEN": {
                "bit": 12,
                "description": "HSPI1 clock enable during Sleep and Stop modes \nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM6SMEN": {
                "bit": 30,
                "description": "SRAM6 clock enable during Sleep and Stop modes \nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "SRAM5SMEN": {
                "bit": 31,
                "description": "SRAM5 clock enable during Sleep and Stop modes \nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_AHB3SMENR": {
              "LPGPIO1SMEN": {
                "bit": 0,
                "description": "LPGPIO1 enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "PWRSMEN": {
                "bit": 2,
                "description": "PWR clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "ADC4SMEN": {
                "bit": 5,
                "description": "ADC4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "DAC1SMEN": {
                "bit": 6,
                "description": "DAC1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPDMA1SMEN": {
                "bit": 9,
                "description": "LPDMA1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "ADF1SMEN": {
                "bit": 10,
                "description": "ADF1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "GTZC2SMEN": {
                "bit": 12,
                "description": "GTZC2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SRAM4SMEN": {
                "bit": 31,
                "description": "SRAM4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              }
            },
            "RCC_APB1SMENR1": {
              "TIM2SMEN": {
                "bit": 0,
                "description": "TIM2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM3SMEN": {
                "bit": 1,
                "description": "TIM3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM4SMEN": {
                "bit": 2,
                "description": "TIM4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM5SMEN": {
                "bit": 3,
                "description": "TIM5 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM6SMEN": {
                "bit": 4,
                "description": "TIM6 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM7SMEN": {
                "bit": 5,
                "description": "TIM7 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "WWDGSMEN": {
                "bit": 11,
                "description": "Window watchdog clock enable during Sleep and Stop modes\nThis bit is set and cleared by software. It is forced to one by hardware when the hardware WWDG option is activated."
              },
              "SPI2SMEN": {
                "bit": 14,
                "description": "SPI2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "USART2SMEN": {
                "bit": 17,
                "description": "USART2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USART3SMEN": {
                "bit": 18,
                "description": "USART3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "UART4SMEN": {
                "bit": 19,
                "description": "UART4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "UART5SMEN": {
                "bit": 20,
                "description": "UART5 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "I2C1SMEN": {
                "bit": 21,
                "description": "I2C1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "I2C2SMEN": {
                "bit": 22,
                "description": "I2C2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "CRSSMEN": {
                "bit": 24,
                "description": "CRS clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "USART6SMEN": {
                "bit": 25,
                "description": "USART6 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB1SMENR2": {
              "I2C4SMEN": {
                "bit": 1,
                "description": "I2C4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM2SMEN": {
                "bit": 5,
                "description": "LPTIM2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "I2C5SMEN": {
                "bit": 6,
                "description": "I2C5 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software\nNote: This bit must be set to allow the peripheral to wake up from Stop modes.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "I2C6SMEN": {
                "bit": 7,
                "description": "I2C6 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software\nNote: This bit must be set to allow the peripheral to wake up from Stop modes.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "FDCAN1SMEN": {
                "bit": 9,
                "description": "FDCAN1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "UCPD1SMEN": {
                "bit": 23,
                "description": "UCPD1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB2SMENR": {
              "TIM1SMEN": {
                "bit": 11,
                "description": "TIM1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SPI1SMEN": {
                "bit": 12,
                "description": "SPI1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "TIM8SMEN": {
                "bit": 13,
                "description": "TIM8 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "USART1SMEN": {
                "bit": 14,
                "description": "USART1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "TIM15SMEN": {
                "bit": 16,
                "description": "TIM15 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM16SMEN": {
                "bit": 17,
                "description": "TIM16 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "TIM17SMEN": {
                "bit": 18,
                "description": "TIM17 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SAI1SMEN": {
                "bit": 21,
                "description": "SAI1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SAI2SMEN": {
                "bit": 22,
                "description": "SAI2 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series.Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "USBSMEN": {
                "bit": 24,
                "description": "USB clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "GFXTIMSMEN": {
                "bit": 25,
                "description": "GFXTIM clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "LTDCSMEN": {
                "bit": 26,
                "description": "LTDC clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "DSISMEN": {
                "bit": 27,
                "description": "DSI clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              }
            },
            "RCC_APB3SMENR": {
              "SYSCFGSMEN": {
                "bit": 1,
                "description": "SYSCFG clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "SPI3SMEN": {
                "bit": 5,
                "description": "SPI3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPUART1SMEN": {
                "bit": 6,
                "description": "LPUART1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "I2C3SMEN": {
                "bit": 7,
                "description": "I2C3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM1SMEN": {
                "bit": 11,
                "description": "LPTIM1 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM3SMEN": {
                "bit": 12,
                "description": "LPTIM3 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM4SMEN": {
                "bit": 13,
                "description": "LPTIM4 clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "OPAMPSMEN": {
                "bit": 14,
                "description": "OPAMP clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "COMPSMEN": {
                "bit": 15,
                "description": "COMP clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "VREFSMEN": {
                "bit": 20,
                "description": "VREFBUF clock enable during Sleep and Stop modes\nThis bit is set and cleared by software."
              },
              "RTCAPBSMEN": {
                "bit": 21,
                "description": "RTC and TAMP APB clock enable during Sleep and Stop modes\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              }
            },
            "RCC_SRDAMR": {
              "SPI3AMEN": {
                "bit": 5,
                "description": "SPI3 autonomous mode enable in Stop 0,1, 2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPUART1AMEN": {
                "bit": 6,
                "description": "LPUART1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "I2C3AMEN": {
                "bit": 7,
                "description": "I2C3 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM1AMEN": {
                "bit": 11,
                "description": "LPTIM1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM3AMEN": {
                "bit": 12,
                "description": "LPTIM3 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPTIM4AMEN": {
                "bit": 13,
                "description": "LPTIM4 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "OPAMPAMEN": {
                "bit": 14,
                "description": "OPAMP autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software."
              },
              "COMPAMEN": {
                "bit": 15,
                "description": "COMP autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software."
              },
              "VREFAMEN": {
                "bit": 20,
                "description": "VREFBUF autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software."
              },
              "RTCAPBAMEN": {
                "bit": 21,
                "description": "RTC and TAMP autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "ADC4AMEN": {
                "bit": 25,
                "description": "ADC4 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPGPIO1AMEN": {
                "bit": 26,
                "description": "LPGPIO1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software."
              },
              "DAC1AMEN": {
                "bit": 27,
                "description": "DAC1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "LPDMA1AMEN": {
                "bit": 28,
                "description": "LPDMA1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "ADF1AMEN": {
                "bit": 29,
                "description": "ADF1 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software.\nNote: This bit must be set to allow the peripheral to wake up from Stop modes."
              },
              "SRAM4AMEN": {
                "bit": 31,
                "description": "SRAM4 autonomous mode enable in Stop 0/1/2 mode\nThis bit is set and cleared by software."
              }
            },
            "RCC_CCIPR1": {
              "USART1SEL": {
                "bit": 0,
                "description": "USART1 kernel clock source selection\nThese bits are used to select the USART1 kernel clock source.\nNote: The USART1 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.",
                "width": 2
              },
              "USART2SEL": {
                "bit": 2,
                "description": "USART2 kernel clock source selection\nThese bits are used to select the USART2 kernel clock source.\nThe USART2 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              },
              "USART3SEL": {
                "bit": 4,
                "description": "USART3 kernel clock source selection\nThese bits are used to select the USART3 kernel clock source.\nNote: The USART3 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.",
                "width": 2
              },
              "UART4SEL": {
                "bit": 6,
                "description": "UART4 kernel clock source selection\nThese bits are used to select the UART4 kernel clock source.\nNote: The UART4 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.",
                "width": 2
              },
              "UART5SEL": {
                "bit": 8,
                "description": "UART5 kernel clock source selection\nThese bits are used to select the UART5 kernel clock source.\nNote: The UART5 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.",
                "width": 2
              },
              "I2C1SEL": {
                "bit": 10,
                "description": "I2C1 kernel clock source selection\nThese bits are used to select the I2C1 kernel clock source.\nNote: The I2C1 is functional in Stop 0 and Stop 1 mode sonly when the kernel clock is HSI16\ufffdor MSIK.",
                "width": 2
              },
              "I2C2SEL": {
                "bit": 12,
                "description": "I2C2 kernel clock source selection\nThese bits are used to select the I2C2 kernel clock source.\nNote: The I2C2 is functional in Stop 0 and Stop 1 mode sonly when the kernel clock is HSI16\ufffdor MSIK.",
                "width": 2
              },
              "I2C4SEL": {
                "bit": 14,
                "description": "I2C4 kernel clock source selection\nThese bits are used to select the I2C4 kernel clock source.\nNote: The I2C4 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16\ufffdor MSIK.",
                "width": 2
              },
              "SPI2SEL": {
                "bit": 16,
                "description": "SPI2 kernel clock source selection\nThese bits are used to select the SPI2 kernel clock source.\nNote: The SPI2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.",
                "width": 2
              },
              "LPTIM2SEL": {
                "bit": 18,
                "description": "Low-power timer 2 kernel clock source selection\nThese bits are used to select the LPTIM2 kernel clock source.\nNote: The LPTIM2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is LSI, LSE or HSI16 if HSIKERON = 1.",
                "width": 2
              },
              "SPI1SEL": {
                "bit": 20,
                "description": "SPI1 kernel clock source selection\nThese bits are used to select the SPI1 kernel clock source.\nNote: The SPI1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.",
                "width": 2
              },
              "SYSTICKSEL": {
                "bit": 22,
                "description": "SysTick clock source selection\nThese bits are used to select the SysTick clock source.\nNote: When LSE or LSI is selected, the AHB frequency must be at least four times higher than the LSI or LSE frequency. In addition, a jitter up to one HCLK cycle is introduced, due to the LSE or LSI sampling with HCLK in the SysTick circuitry.",
                "width": 2
              },
              "FDCAN1SEL": {
                "bit": 24,
                "description": "FDCAN1 kernel clock source selection\nThese bits are used to select the FDCAN1 kernel clock source.",
                "width": 2
              },
              "ICLKSEL": {
                "bit": 26,
                "description": "Intermediate clock source selection\nThese bits are used to select the clock source for the OTG_FS, the USB, and the SDMMC.",
                "width": 2
              },
              "TIMICSEL": {
                "bit": 29,
                "description": "Clock sources for TIM16,TIM17, and LPTIM2 internal input capture \nWhen TIMICSEL2 is set, the TIM16, TIM17, and LPTIM2 internal input capture can be connected either to HSI/256, MSI/4, or MSI/1024. Depending on TIMICSEL[1:0] value, MSI is either MSIK or MSIS.\nWhen TIMICSEL2 is cleared, the HSI, MSIK, and MSIS clock sources cannot be selected as\ufffdTIM16, TIM17, or LPTIM2 internal input capture.\n0xx: HSI, MSIK and MSIS dividers disabled\nNote: The clock division must be disabled (TIMICSEL configured to 0xx) before selecting or changing a clock sources division.",
                "width": 3
              }
            },
            "RCC_CCIPR2": {
              "MDF1SEL": {
                "bit": 0,
                "description": "MDF1 kernel clock source selection\nThese bits are used to select the MDF1 kernel clock source.\nothers: reserved",
                "width": 3
              },
              "SAI1SEL": {
                "bit": 5,
                "description": "SAI1 kernel clock source selection\nThese bits are used to select the SAI1 kernel clock source.\nothers: reserved\nNote: If the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.",
                "width": 3
              },
              "SAI2SEL": {
                "bit": 8,
                "description": "SAI2 kernel clock source selection\nThese bits are used to select the SAI2 kernel clock source.\nothers: reserved\nIf the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 3
              },
              "SAESSEL": {
                "bit": 11,
                "description": "SAES kernel clock source selection\nThis bit is used to select the SAES kernel clock source. \nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "RNGSEL": {
                "bit": 12,
                "description": "RNG kernel clock source selection\nThese bits are used to select the RNG kernel clock source.",
                "width": 2
              },
              "SDMMCSEL": {
                "bit": 14,
                "description": "SDMMC1 and SDMMC2 kernel clock source selection\nThis bit is used to select the SDMMC kernel clock source. It is recommended to change it only after reset and before enabling the SDMMC."
              },
              "DSISEL": {
                "bit": 15,
                "description": "DSI kernel clock source selection\nThis bit is used to select the DSI kernel clock source.\nThis bit is only available on some devices in the STM32U5 Series. \nRefer to the device datasheet for availability of its associated peripheral. \nNote: If not present, consider this bit as reserved and keep it at reset value."
              },
              "USART6SEL": {
                "bit": 16,
                "description": "USART6 kernel clock source selection\nThese bits are used to select the USART6 kernel clock source.\nThe USART6 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16 or LSE.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              },
              "LTDCSEL": {
                "bit": 18,
                "description": "LTDC kernel clock source selection\nThis bit is used to select the LTDC kernel clock source.\nNote: This bit is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bit as reserved and keep it at reset value."
              },
              "OCTOSPISEL": {
                "bit": 20,
                "description": "OCTOSPI1 and OCTOSPI2 kernel clock source selection\nThese bits are used to select the OCTOSPI1 and OCTOSPI2 kernel clock source.",
                "width": 2
              },
              "HSPI1SEL": {
                "bit": 22,
                "description": "HSPI1 kernel clock source selection\nThese bits are used to select the HSPI1 kernel clock source.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              },
              "I2C5SEL": {
                "bit": 24,
                "description": "I2C5 kernel clock source selection\nThese bits are used to select the I2C5 kernel clock source.\nThe I2C5 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16\ufffdor MSIK.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              },
              "I2C6SEL": {
                "bit": 26,
                "description": "I2C6 kernel clock source selection\nThese bits are used to select the I2C6 kernel clock source.\nThe I2C6 is functional in Stop 0 and Stop 1 modes only when the kernel clock is HSI16\ufffdor MSIK.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              },
              "OTGHSSEL": {
                "bit": 30,
                "description": "OTG_HS PHY kernel clock source selection\nThese bits are used to select the OTG_HS PHY kernel clock source.\nNote: This bitfield is only available on some devices in the STM32U5 Series. Refer to the device datasheet for availability of its associated peripheral. If not present, consider this bitfield as reserved and keep it at reset value.",
                "width": 2
              }
            },
            "RCC_CCIPR3": {
              "LPUART1SEL": {
                "bit": 0,
                "description": "LPUART1 kernel clock source selection\nThese bits are used to select the LPUART1 kernel clock source.\nothers: reserved\nNote: The LPUART1 is functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is HSI16, LSE, or MSIK.",
                "width": 3
              },
              "SPI3SEL": {
                "bit": 3,
                "description": "SPI3 kernel clock source selection\nThese bits are used to select the SPI3 kernel clock source.\nNote: The SPI3 is functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is HSI16 or MSIK.",
                "width": 2
              },
              "I2C3SEL": {
                "bit": 6,
                "description": "I2C3 kernel clock source selection\nThese bits are used to select the I2C3 kernel clock source.\nNote: The I2C3 is functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is HSI16 or MSIK.",
                "width": 2
              },
              "LPTIM34SEL": {
                "bit": 8,
                "description": "LPTIM3 and LPTIM4 kernel clock source selection\nThese bits are used to select the LPTIM3 and LPTIM4 kernel clock source.\nNote: The LPTIM3 and LPTIM4 are functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1, or MSIK with MSIKERON\ufffd=\ufffd1.",
                "width": 2
              },
              "LPTIM1SEL": {
                "bit": 10,
                "description": "LPTIM1 kernel clock source selection\nThese bits are used to select the LPTIM1 kernel clock source.\nNote: The LPTIM1 is functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1, or MSIK with MSIKERON = 1.",
                "width": 2
              },
              "ADCDACSEL": {
                "bit": 12,
                "description": "ADC1, ADC2, ADC4 and DAC1 kernel clock source selection\nThese bits are used to select the ADC1, ADC2, ADC4, and DAC1 kernel clock source.\nothers: reserved\nNote: The ADC1, ADC2, ADC4, and DAC1 are functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is HSI16 or MSIK (only ADC4 and DAC1 are functional in\ufffdStop 2 mode).",
                "width": 3
              },
              "DAC1SEL": {
                "bit": 15,
                "description": "DAC1 sample-and-hold clock source selection\nThis bit is used to select the DAC1 sample-and-hold clock source."
              },
              "ADF1SEL": {
                "bit": 16,
                "description": "ADF1 kernel clock source selection\nThese bits are used to select the ADF1 kernel clock source.\nothers: reserved\nNote: The ADF1 is functional in Stop 0, Stop 1, and Stop 2 modes only when the kernel clock is AUDIOCLK or MSIK.",
                "width": 3
              }
            },
            "RCC_BDCR": {
              "LSEON": {
                "bit": 0,
                "description": "LSE oscillator enable\nThis bit is set and cleared by software."
              },
              "LSERDY": {
                "bit": 1,
                "description": "LSE oscillator ready\nThis bit is set and cleared by hardware to indicate when the external 32\ufffdkHz oscillator is stable. After LSEON is cleared, this LSERDY bit goes low after six external low-speed oscillator clock cycles."
              },
              "LSEBYP": {
                "bit": 2,
                "description": "LSE oscillator bypass\nThis bit is set and cleared by software to bypass oscillator in debug mode. It can be written only when the external 32\ufffdkHz oscillator is disabled (LSEON = 0 and LSERDY = 0)."
              },
              "LSEDRV": {
                "bit": 3,
                "description": "LSE oscillator drive capability\nThis bitfield is set by software to modulate the drive capability of the LSE oscillator. It can be written only when the external 32 kHz oscillator is disabled (LSEON = 0 and LSERDY = 0).\nNote: The oscillator is in \u2018Xtal mode\u2019 when it is not in bypass mode.",
                "width": 2
              },
              "LSECSSON": {
                "bit": 5,
                "description": "CSS on LSE enable\nThis bit is set by software to enable the CSS on LSE. It must be enabled after the LSE oscillator is enabled (LSEON bit enabled) and ready (LSERDY flag set by hardware), and after the RTCSEL bit is selected.\nOnce enabled, this bit cannot be disabled, except after a LSE failure detection (LSECSSD\ufffd=\ufffd1). In that case, the software must disable this LSECSSON bit."
              },
              "LSECSSD": {
                "bit": 6,
                "description": "CSS on LSE failure detection\nThis bit is set by hardware to indicate when a failure is detected by the CCS on the external 32\ufffdkHz oscillator (LSE)."
              },
              "LSESYSEN": {
                "bit": 7,
                "description": "LSE system clock (LSESYS) enable\nThis bit is set by software to enable always the LSE system clock generated by RCC, which can be used by any peripheral when its source clock is the LSE, or at system level if one of LSCOSEL, MCO, or MSI PLL mode is needed."
              },
              "RTCSEL": {
                "bit": 8,
                "description": "RTC and TAMP clock source selection\nThis bit is set by software to select the clock source for the RTC and TAMP. Once the RTC and TAMP clock source has been selected, it cannot be changed anymore unless the\ufffdbackup domain is reset, or unless a failure is detected on LSE (LSECSSD is set). BDRST bit can be used to reset them.",
                "width": 2
              },
              "LSESYSRDY": {
                "bit": 11,
                "description": "LSE system clock (LSESYS) ready\nThis bit is set and cleared by hardware to indicate when the LSE system clock is stable.When LSESYSEN is set, this LSESYSRDY flag is set after two LSE clock cycles.\nThe LSE clock must be already enabled and stable (LSEON and LSERDY are set). \nWhen the LSEON bit is cleared, LSERDY goes low after six external low-speed oscillator clock cycles."
              },
              "LSEGFON": {
                "bit": 12,
                "description": "LSE clock glitch filter enable\nThis bit is set and cleared by hardware to enable the LSE glitch filter. It can be written only when the LSE is disabled (LSEON = 0 and LSERDY = 0)."
              },
              "RTCEN": {
                "bit": 15,
                "description": "RTC and TAMP clock enable\nThis bit is set and cleared by software."
              },
              "BDRST": {
                "bit": 16,
                "description": "Backup domain software reset\nThis bit is set and cleared by software."
              },
              "LSCOEN": {
                "bit": 24,
                "description": "Low-speed clock output (LSCO) enable\nThis bit is set and cleared by software."
              },
              "LSCOSEL": {
                "bit": 25,
                "description": "Low-speed clock output selection\nThis bit is set and cleared by software."
              },
              "LSION": {
                "bit": 26,
                "description": "LSI oscillator enable\nThis bit is set and cleared by software. The LSI oscillator is disabled 60\ufffd\ufffds maximum after the LSION bit is cleared."
              },
              "LSIRDY": {
                "bit": 27,
                "description": "LSI oscillator ready\nThis bit is set and cleared by hardware to indicate when the LSI oscillator is stable. After\ufffdLSION is cleared, LSIRDY goes low after three internal low-speed oscillator clock cycles. This bit is set when the LSI is used by IWDG or RTC, even if LSION = 0."
              },
              "LSIPREDIV": {
                "bit": 28,
                "description": "Low-speed clock divider configuration\nThis bit is set and cleared by software to enable the LSI division. It can be written only when the LSI is disabled (LSION = 0 and LSIRDY = 0). If the LSI was previously enabled, it is necessary to wait for at least 60 \u03bcs after clearing LSION bit (synchronization time for LSI to be really disabled), before writing LSIPREDIV. The LSIPREDIV cannot be changed if the LSI is used by the IWDG or by the RTC."
              }
            },
            "RCC_CSR": {
              "MSIKSRANGE": {
                "bit": 8,
                "description": "MSIK range after Standby mode\nThis bit is set by software to chose the MSIK frequency at startup. It is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4\ufffdMHz. MSIKSRANGE can be written only when MSIRGSEL = 1.\nothers: reserved\nNote: Changing this bitfield does not change the current MSIK frequency.",
                "width": 4
              },
              "MSISSRANGE": {
                "bit": 12,
                "description": "MSIS range after Standby mode\nThis bitfield is set by software to chose the MSIS frequency at startup. It is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4\ufffdMHz. MSISSRANGE can be written only when MSIRGSEL = 1.\nothers: reserved\nNote: Changing this bitfield does not change the current MSIS frequency.",
                "width": 4
              },
              "RMVF": {
                "bit": 23,
                "description": "Remove reset flag\nThis bit is set by software to clear the reset flags."
              },
              "OBLRSTF": {
                "bit": 25,
                "description": "Option-byte loader reset flag\nThis bit is set by hardware when a reset from the option-byte loading occurs. It is cleared by\ufffdwriting to the RMVF bit."
              },
              "PINRSTF": {
                "bit": 26,
                "description": "NRST pin reset flag\nThis bit is set by hardware when a reset from the NRST pin occurs. It is cleared by writing to\ufffdthe RMVF bit."
              },
              "BORRSTF": {
                "bit": 27,
                "description": "Brownout reset or an exit from Shutdown mode reset flag\nThis bit is set by hardware when a brownout reset or an exit from Shutdown mode reset occurs. It is cleared by writing to the RMVF bit."
              },
              "SFTRSTF": {
                "bit": 28,
                "description": "Software reset flag\nThis bit is set by hardware when a software reset occurs. It is cleared by writing to RMVF."
              },
              "IWDGRSTF": {
                "bit": 29,
                "description": "Independent watchdog reset flag\nThis bit is set by hardware when an independent watchdog reset domain occurs. It is cleared by writing to the RMVF bit."
              },
              "WWDGRSTF": {
                "bit": 30,
                "description": "Window watchdog reset flag\nThis bit is set by hardware when a window watchdog reset occurs. It is cleared by writing to\ufffdthe RMVF bit."
              },
              "LPWRRSTF": {
                "bit": 31,
                "description": "Low-power reset flag\nThis bit is set by hardware when a reset occurs due to a Stop, Standby, or Shutdown mode entry, whereas the corresponding NRST_STOP, NRST_STBY, or NRST_SHDW option bit is cleared. This bit is cleared by writing to the RMVF bit."
              }
            },
            "RCC_SECCFGR": {
              "HSISEC": {
                "bit": 0,
                "description": "HSI clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "HSESEC": {
                "bit": 1,
                "description": "HSE clock configuration bits, status bit and HSE_CSS security\nThis bit is set and reset by software."
              },
              "MSISEC": {
                "bit": 2,
                "description": "MSI clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "LSISEC": {
                "bit": 3,
                "description": "LSI clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "LSESEC": {
                "bit": 4,
                "description": "LSE clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "SYSCLKSEC": {
                "bit": 5,
                "description": "SYSCLK clock selection, STOPWUCK bit, clock output on MCO configuration security\nThis bit is set and reset by software."
              },
              "PRESCSEC": {
                "bit": 6,
                "description": "AHBx/APBx prescaler configuration bits security\nThis bit is set and reset by software."
              },
              "PLL1SEC": {
                "bit": 7,
                "description": "PLL1 clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "PLL2SEC": {
                "bit": 8,
                "description": "PLL2 clock configuration and status bit security\nSet and reset by software."
              },
              "PLL3SEC": {
                "bit": 9,
                "description": "PLL3 clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "ICLKSEC": {
                "bit": 10,
                "description": "Intermediate clock source selection security\nThis bit is set and reset by software."
              },
              "HSI48SEC": {
                "bit": 11,
                "description": "HSI48 clock configuration and status bit security\nThis bit is set and reset by software."
              },
              "RMVFSEC": {
                "bit": 12,
                "description": "Remove reset flag security\nThis bit is set and reset by software."
              }
            },
            "RCC_PRIVCFGR": {
              "SPRIV": {
                "bit": 0,
                "description": "RCC secure function privilege configuration\nThis bit is set and reset by software. It can be written only by a secure privileged access."
              },
              "NSPRIV": {
                "bit": 1,
                "description": "RCC non-secure function privilege configuration\nThis bit is set and reset by software. It can be written only by privileged access, secure or non-secure."
              }
            }
          }
        },
        "RTC": {
          "instances": [
            {
              "name": "RTC",
              "base": "0x46007800",
              "irq": 2
            },
            {
              "name": "SEC_RTC",
              "base": "0x56007800"
            }
          ],
          "registers": {
            "TR": {
              "offset": "0x00",
              "size": 32,
              "description": "time register"
            },
            "DR": {
              "offset": "0x04",
              "size": 32,
              "description": "date register"
            },
            "SSR": {
              "offset": "0x08",
              "size": 32,
              "description": "RTC sub second register"
            },
            "ICSR": {
              "offset": "0x0C",
              "size": 32,
              "description": "RTC initialization control and status\n          register"
            },
            "PRER": {
              "offset": "0x10",
              "size": 32,
              "description": "prescaler register"
            },
            "WUTR": {
              "offset": "0x14",
              "size": 32,
              "description": "wakeup timer register"
            },
            "CR": {
              "offset": "0x18",
              "size": 32,
              "description": "RTC control register"
            },
            "PRIVCR": {
              "offset": "0x1C",
              "size": 32,
              "description": "RTC privilege mode control\n          register"
            },
            "SECCFGR": {
              "offset": "0x20",
              "size": 32,
              "description": "RTC secure mode control\n          register"
            },
            "WPR": {
              "offset": "0x24",
              "size": 32,
              "description": "write protection register"
            },
            "CALR": {
              "offset": "0x28",
              "size": 32,
              "description": "calibration register"
            },
            "SHIFTR": {
              "offset": "0x2C",
              "size": 32,
              "description": "shift control register"
            },
            "TSTR": {
              "offset": "0x30",
              "size": 32,
              "description": "time stamp time register"
            },
            "TSDR": {
              "offset": "0x34",
              "size": 32,
              "description": "time stamp date register"
            },
            "TSSSR": {
              "offset": "0x38",
              "size": 32,
              "description": "timestamp sub second register"
            },
            "ALRMAR": {
              "offset": "0x40",
              "size": 32,
              "description": "alarm A register"
            },
            "ALRMASSR": {
              "offset": "0x44",
              "size": 32,
              "description": "alarm A sub second register"
            },
            "ALRMBR": {
              "offset": "0x48",
              "size": 32,
              "description": "alarm B register"
            },
            "ALRMBSSR": {
              "offset": "0x4C",
              "size": 32,
              "description": "alarm B sub second register"
            },
            "SR": {
              "offset": "0x50",
              "size": 32,
              "description": "RTC status register"
            },
            "MISR": {
              "offset": "0x54",
              "size": 32,
              "description": "RTC non-secure masked interrupt status\n          register"
            },
            "SMISR": {
              "offset": "0x58",
              "size": 32,
              "description": "RTC secure masked interrupt status\n          register"
            },
            "SCR": {
              "offset": "0x5C",
              "size": 32,
              "description": "RTC status clear register"
            },
            "ALRABINR": {
              "offset": "0x70",
              "size": 32,
              "description": "RTC alarm A binary mode register"
            },
            "ALRBBINR": {
              "offset": "0x74",
              "size": 32,
              "description": "RTC alarm B binary mode register"
            }
          },
          "bits": {
            "TR": {
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              }
            },
            "DR": {
              "YT": {
                "bit": 20,
                "description": "Year tens in BCD format",
                "width": 4
              },
              "YU": {
                "bit": 16,
                "description": "Year units in BCD format",
                "width": 4
              },
              "WDU": {
                "bit": 13,
                "description": "Week day units",
                "width": 3
              },
              "MT": {
                "bit": 12,
                "description": "Month tens in BCD format"
              },
              "MU": {
                "bit": 8,
                "description": "Month units in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 4,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "DU": {
                "bit": 0,
                "description": "Date units in BCD format",
                "width": 4
              }
            },
            "SSR": {
              "SS": {
                "bit": 0,
                "description": "SS",
                "width": 32
              }
            },
            "ICSR": {
              "WUTWF": {
                "bit": 2,
                "description": "Wakeup timer write flag"
              },
              "SHPF": {
                "bit": 3,
                "description": "Shift operation pending"
              },
              "INITS": {
                "bit": 4,
                "description": "Initialization status flag"
              },
              "RSF": {
                "bit": 5,
                "description": "Registers synchronization\n              flag"
              },
              "INITF": {
                "bit": 6,
                "description": "Initialization flag"
              },
              "INIT": {
                "bit": 7,
                "description": "Initialization mode"
              },
              "BIN": {
                "bit": 8,
                "description": "BIN",
                "width": 2
              },
              "BCDU": {
                "bit": 10,
                "description": "BCDU",
                "width": 3
              },
              "RECALPF": {
                "bit": 16,
                "description": "Recalibration pending Flag"
              }
            },
            "PRER": {
              "PREDIV_A": {
                "bit": 16,
                "description": "Asynchronous prescaler\n              factor",
                "width": 7
              },
              "PREDIV_S": {
                "bit": 0,
                "description": "Synchronous prescaler\n              factor",
                "width": 15
              }
            },
            "WUTR": {
              "WUT": {
                "bit": 0,
                "description": "Wakeup auto-reload value\n              bits",
                "width": 16
              },
              "WUTOCLR": {
                "bit": 16,
                "description": "WUTOCLR",
                "width": 16
              }
            },
            "CR": {
              "WUCKSEL": {
                "bit": 0,
                "description": "WUCKSEL",
                "width": 3
              },
              "TSEDGE": {
                "bit": 3,
                "description": "TSEDGE"
              },
              "REFCKON": {
                "bit": 4,
                "description": "REFCKON"
              },
              "BYPSHAD": {
                "bit": 5,
                "description": "BYPSHAD"
              },
              "FMT": {
                "bit": 6,
                "description": "FMT"
              },
              "SSRUIE": {
                "bit": 7,
                "description": "SSRUIE"
              },
              "ALRAE": {
                "bit": 8,
                "description": "ALRAE"
              },
              "ALRBE": {
                "bit": 9,
                "description": "ALRBE"
              },
              "WUTE": {
                "bit": 10,
                "description": "WUTE"
              },
              "TSE": {
                "bit": 11,
                "description": "TSE"
              },
              "ALRAIE": {
                "bit": 12,
                "description": "ALRAIE"
              },
              "ALRBIE": {
                "bit": 13,
                "description": "ALRBIE"
              },
              "WUTIE": {
                "bit": 14,
                "description": "WUTIE"
              },
              "TSIE": {
                "bit": 15,
                "description": "TSIE"
              },
              "ADD1H": {
                "bit": 16,
                "description": "ADD1H"
              },
              "SUB1H": {
                "bit": 17,
                "description": "SUB1H"
              },
              "BKP": {
                "bit": 18,
                "description": "BKP"
              },
              "COSEL": {
                "bit": 19,
                "description": "COSEL"
              },
              "POL": {
                "bit": 20,
                "description": "POL"
              },
              "OSEL": {
                "bit": 21,
                "description": "OSEL",
                "width": 2
              },
              "COE": {
                "bit": 23,
                "description": "COE"
              },
              "ITSE": {
                "bit": 24,
                "description": "ITSE"
              },
              "TAMPTS": {
                "bit": 25,
                "description": "TAMPTS"
              },
              "TAMPOE": {
                "bit": 26,
                "description": "TAMPOE"
              },
              "ALRAFCLR": {
                "bit": 27,
                "description": "ALRAFCLR"
              },
              "ALRBFCLR": {
                "bit": 28,
                "description": "ALRBFCLR"
              },
              "TAMPALRM_PU": {
                "bit": 29,
                "description": "TAMPALRM_PU"
              },
              "TAMPALRM_TYPE": {
                "bit": 30,
                "description": "TAMPALRM_TYPE"
              },
              "OUT2EN": {
                "bit": 31,
                "description": "OUT2EN"
              }
            },
            "PRIVCR": {
              "PRIV": {
                "bit": 15,
                "description": "PRIV"
              },
              "INITPRIV": {
                "bit": 14,
                "description": "INITPRIV"
              },
              "CALPRIV": {
                "bit": 13,
                "description": "CALPRIV"
              },
              "TSPRIV": {
                "bit": 3,
                "description": "TSPRIV"
              },
              "WUTPRIV": {
                "bit": 2,
                "description": "WUTPRIV"
              },
              "ALRBPRIV": {
                "bit": 1,
                "description": "ALRBPRIV"
              },
              "ALRAPRIV": {
                "bit": 0,
                "description": "ALRAPRIV"
              }
            },
            "SECCFGR": {
              "SEC": {
                "bit": 15,
                "description": "SEC"
              },
              "INITSEC": {
                "bit": 14,
                "description": "INITSEC"
              },
              "CALSEC": {
                "bit": 13,
                "description": "CALSEC"
              },
              "TSSEC": {
                "bit": 3,
                "description": "TSSEC"
              },
              "WUTSEC": {
                "bit": 2,
                "description": "WUTSEC"
              },
              "ALRBSEC": {
                "bit": 1,
                "description": "ALRBSEC"
              },
              "ALRASEC": {
                "bit": 0,
                "description": "ALRASEC"
              }
            },
            "WPR": {
              "KEY": {
                "bit": 0,
                "description": "Write protection key",
                "width": 8
              }
            },
            "CALR": {
              "CALP": {
                "bit": 15,
                "description": "Increase frequency of RTC by 488.5\n              ppm"
              },
              "CALW8": {
                "bit": 14,
                "description": "Use an 8-second calibration cycle\n              period"
              },
              "CALW16": {
                "bit": 13,
                "description": "Use a 16-second calibration cycle\n              period"
              },
              "LPCAL": {
                "bit": 12,
                "description": "LPCAL"
              },
              "CALM": {
                "bit": 0,
                "description": "Calibration minus",
                "width": 9
              }
            },
            "SHIFTR": {
              "ADD1S": {
                "bit": 31,
                "description": "Add one second"
              },
              "SUBFS": {
                "bit": 0,
                "description": "Subtract a fraction of a\n              second",
                "width": 15
              }
            },
            "TSTR": {
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              }
            },
            "TSDR": {
              "WDU": {
                "bit": 13,
                "description": "Week day units",
                "width": 3
              },
              "MT": {
                "bit": 12,
                "description": "Month tens in BCD format"
              },
              "MU": {
                "bit": 8,
                "description": "Month units in BCD format",
                "width": 4
              },
              "DT": {
                "bit": 4,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "DU": {
                "bit": 0,
                "description": "Date units in BCD format",
                "width": 4
              }
            },
            "TSSSR": {
              "SS": {
                "bit": 0,
                "description": "Sub second value",
                "width": 32
              }
            },
            "ALRMAR": {
              "MSK4": {
                "bit": 31,
                "description": "Alarm A date mask"
              },
              "WDSEL": {
                "bit": 30,
                "description": "Week day selection"
              },
              "DT": {
                "bit": 28,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "DU": {
                "bit": 24,
                "description": "Date units or day in BCD\n              format",
                "width": 4
              },
              "MSK3": {
                "bit": 23,
                "description": "Alarm A hours mask"
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "MSK2": {
                "bit": 15,
                "description": "Alarm A minutes mask"
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MSK1": {
                "bit": 7,
                "description": "Alarm A seconds mask"
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              }
            },
            "ALRMASSR": {
              "SSCLR": {
                "bit": 31,
                "description": "SSCLR"
              },
              "MASKSS": {
                "bit": 24,
                "description": "Mask the most-significant bits starting\n              at this bit",
                "width": 6
              },
              "SS": {
                "bit": 0,
                "description": "Sub seconds value",
                "width": 15
              }
            },
            "ALRMBR": {
              "MSK4": {
                "bit": 31,
                "description": "Alarm B date mask"
              },
              "WDSEL": {
                "bit": 30,
                "description": "Week day selection"
              },
              "DT": {
                "bit": 28,
                "description": "Date tens in BCD format",
                "width": 2
              },
              "DU": {
                "bit": 24,
                "description": "Date units or day in BCD\n              format",
                "width": 4
              },
              "MSK3": {
                "bit": 23,
                "description": "Alarm B hours mask"
              },
              "PM": {
                "bit": 22,
                "description": "AM/PM notation"
              },
              "HT": {
                "bit": 20,
                "description": "Hour tens in BCD format",
                "width": 2
              },
              "HU": {
                "bit": 16,
                "description": "Hour units in BCD format",
                "width": 4
              },
              "MSK2": {
                "bit": 15,
                "description": "Alarm B minutes mask"
              },
              "MNT": {
                "bit": 12,
                "description": "Minute tens in BCD format",
                "width": 3
              },
              "MNU": {
                "bit": 8,
                "description": "Minute units in BCD format",
                "width": 4
              },
              "MSK1": {
                "bit": 7,
                "description": "Alarm B seconds mask"
              },
              "ST": {
                "bit": 4,
                "description": "Second tens in BCD format",
                "width": 3
              },
              "SU": {
                "bit": 0,
                "description": "Second units in BCD format",
                "width": 4
              }
            },
            "ALRMBSSR": {
              "SSCLR": {
                "bit": 31,
                "description": "SSCLR"
              },
              "MASKSS": {
                "bit": 24,
                "description": "Mask the most-significant bits starting\n              at this bit",
                "width": 6
              },
              "SS": {
                "bit": 0,
                "description": "Sub seconds value",
                "width": 15
              }
            },
            "SR": {
              "ALRAF": {
                "bit": 0,
                "description": "ALRAF"
              },
              "ALRBF": {
                "bit": 1,
                "description": "ALRBF"
              },
              "WUTF": {
                "bit": 2,
                "description": "WUTF"
              },
              "TSF": {
                "bit": 3,
                "description": "TSF"
              },
              "TSOVF": {
                "bit": 4,
                "description": "TSOVF"
              },
              "ITSF": {
                "bit": 5,
                "description": "ITSF"
              },
              "SSRUF": {
                "bit": 6,
                "description": "SSRUF"
              }
            },
            "MISR": {
              "ALRAMF": {
                "bit": 0,
                "description": "ALRAMF"
              },
              "ALRBMF": {
                "bit": 1,
                "description": "ALRBMF"
              },
              "WUTMF": {
                "bit": 2,
                "description": "WUTMF"
              },
              "TSMF": {
                "bit": 3,
                "description": "TSMF"
              },
              "TSOVMF": {
                "bit": 4,
                "description": "TSOVMF"
              },
              "ITSMF": {
                "bit": 5,
                "description": "ITSMF"
              },
              "SSRUMF": {
                "bit": 6,
                "description": "SSRUMF"
              }
            },
            "SMISR": {
              "ALRAMF": {
                "bit": 0,
                "description": "ALRAMF"
              },
              "ALRBMF": {
                "bit": 1,
                "description": "ALRBMF"
              },
              "WUTMF": {
                "bit": 2,
                "description": "WUTMF"
              },
              "TSMF": {
                "bit": 3,
                "description": "TSMF"
              },
              "TSOVMF": {
                "bit": 4,
                "description": "TSOVMF"
              },
              "ITSMF": {
                "bit": 5,
                "description": "ITSMF"
              },
              "SSRUMF": {
                "bit": 6,
                "description": "SSRUMF"
              }
            },
            "SCR": {
              "CALRAF": {
                "bit": 0,
                "description": "CALRAF"
              },
              "CALRBF": {
                "bit": 1,
                "description": "CALRBF"
              },
              "CWUTF": {
                "bit": 2,
                "description": "CWUTF"
              },
              "CTSF": {
                "bit": 3,
                "description": "CTSF"
              },
              "CTSOVF": {
                "bit": 4,
                "description": "CTSOVF"
              },
              "CITSF": {
                "bit": 5,
                "description": "CITSF"
              },
              "CSSRUF": {
                "bit": 6,
                "description": "CSSRUF"
              }
            },
            "ALRABINR": {
              "SS": {
                "bit": 0,
                "description": "Synchronous counter alarm value in Binary mode",
                "width": 32
              }
            },
            "ALRBBINR": {
              "SS": {
                "bit": 0,
                "description": "Synchronous counter alarm value in Binary mode",
                "width": 32
              }
            }
          }
        },
        "SAI1": {
          "instances": [
            {
              "name": "SAI1",
              "base": "0x40015400",
              "irq": 90
            }
          ],
          "registers": {
            "GCR": {
              "offset": "0x00",
              "size": 32,
              "description": "Global configuration register"
            },
            "ACR1": {
              "offset": "0x04",
              "size": 32,
              "description": "A Configuration register 1"
            },
            "BCR1": {
              "offset": "0x24",
              "size": 32,
              "description": "B Configuration register 1"
            },
            "ACR2": {
              "offset": "0x08",
              "size": 32,
              "description": "A Configuration register 2"
            },
            "BCR2": {
              "offset": "0x28",
              "size": 32,
              "description": "B Configuration register 2"
            },
            "AFRCR": {
              "offset": "0x0C",
              "size": 32,
              "description": "A frame configuration register"
            },
            "BFRCR": {
              "offset": "0x2C",
              "size": 32,
              "description": "B frame configuration register"
            },
            "ASLOTR": {
              "offset": "0x10",
              "size": 32,
              "description": "A Slot register"
            },
            "BSLOTR": {
              "offset": "0x30",
              "size": 32,
              "description": "B Slot register"
            },
            "AIM": {
              "offset": "0x14",
              "size": 32,
              "description": "A Interrupt mask register"
            },
            "BIM": {
              "offset": "0x34",
              "size": 32,
              "description": "B Interrupt mask register"
            },
            "ASR": {
              "offset": "0x18",
              "size": 32,
              "description": "A Status register"
            },
            "BSR": {
              "offset": "0x38",
              "size": 32,
              "description": "B Status register"
            },
            "ACLRFR": {
              "offset": "0x1C",
              "size": 32,
              "description": "A Clear flag register"
            },
            "BCLRFR": {
              "offset": "0x3C",
              "size": 32,
              "description": "B Clear flag register"
            },
            "ADR": {
              "offset": "0x20",
              "size": 32,
              "description": "A Data register"
            },
            "BDR": {
              "offset": "0x40",
              "size": 32,
              "description": "B Data register"
            },
            "PDMCR": {
              "offset": "0x44",
              "size": 32,
              "description": "PDM control register"
            },
            "PDMDLY": {
              "offset": "0x48",
              "size": 32,
              "description": "PDM delay register"
            }
          },
          "bits": {
            "GCR": {
              "SYNCIN": {
                "bit": 0,
                "description": "Synchronization inputs",
                "width": 2
              },
              "SYNCOUT": {
                "bit": 4,
                "description": "Synchronization outputs",
                "width": 2
              }
            },
            "ACR1": {
              "MCKEN": {
                "bit": 27,
                "description": "MCKEN"
              },
              "OSR": {
                "bit": 26,
                "description": "OSR"
              },
              "MCKDIV": {
                "bit": 20,
                "description": "Master clock divider",
                "width": 6
              },
              "NODIV": {
                "bit": 19,
                "description": "No divider"
              },
              "DMAEN": {
                "bit": 17,
                "description": "DMA enable"
              },
              "SAIAEN": {
                "bit": 16,
                "description": "Audio block A enable"
              },
              "OUTDRIV": {
                "bit": 13,
                "description": "Output drive"
              },
              "MONO": {
                "bit": 12,
                "description": "Mono mode"
              },
              "SYNCEN": {
                "bit": 10,
                "description": "Synchronization enable",
                "width": 2
              },
              "CKSTR": {
                "bit": 9,
                "description": "Clock strobing edge"
              },
              "LSBFIRST": {
                "bit": 8,
                "description": "Least significant bit\n              first"
              },
              "DS": {
                "bit": 5,
                "description": "Data size",
                "width": 3
              },
              "PRTCFG": {
                "bit": 2,
                "description": "Protocol configuration",
                "width": 2
              },
              "MODE": {
                "bit": 0,
                "description": "Audio block mode",
                "width": 2
              }
            },
            "BCR1": {
              "MCKEN": {
                "bit": 27,
                "description": "MCKEN"
              },
              "OSR": {
                "bit": 26,
                "description": "OSR"
              },
              "MCKDIV": {
                "bit": 20,
                "description": "Master clock divider",
                "width": 6
              },
              "NODIV": {
                "bit": 19,
                "description": "No divider"
              },
              "DMAEN": {
                "bit": 17,
                "description": "DMA enable"
              },
              "SAIAEN": {
                "bit": 16,
                "description": "Audio block A enable"
              },
              "OUTDRIV": {
                "bit": 13,
                "description": "Output drive"
              },
              "MONO": {
                "bit": 12,
                "description": "Mono mode"
              },
              "SYNCEN": {
                "bit": 10,
                "description": "Synchronization enable",
                "width": 2
              },
              "CKSTR": {
                "bit": 9,
                "description": "Clock strobing edge"
              },
              "LSBFIRST": {
                "bit": 8,
                "description": "Least significant bit\n              first"
              },
              "DS": {
                "bit": 5,
                "description": "Data size",
                "width": 3
              },
              "PRTCFG": {
                "bit": 2,
                "description": "Protocol configuration",
                "width": 2
              },
              "MODE": {
                "bit": 0,
                "description": "Audio block mode",
                "width": 2
              }
            },
            "ACR2": {
              "COMP": {
                "bit": 14,
                "description": "Companding mode",
                "width": 2
              },
              "CPL": {
                "bit": 13,
                "description": "Complement bit"
              },
              "MUTECN": {
                "bit": 7,
                "description": "Mute counter",
                "width": 6
              },
              "MUTEVAL": {
                "bit": 6,
                "description": "Mute value"
              },
              "MUTE": {
                "bit": 5,
                "description": "Mute"
              },
              "TRIS": {
                "bit": 4,
                "description": "Tristate management on data\n              line"
              },
              "FFLUSH": {
                "bit": 3,
                "description": "FIFO flush"
              },
              "FTH": {
                "bit": 0,
                "description": "FIFO threshold",
                "width": 3
              }
            },
            "BCR2": {
              "COMP": {
                "bit": 14,
                "description": "Companding mode",
                "width": 2
              },
              "CPL": {
                "bit": 13,
                "description": "Complement bit"
              },
              "MUTECN": {
                "bit": 7,
                "description": "Mute counter",
                "width": 6
              },
              "MUTEVAL": {
                "bit": 6,
                "description": "Mute value"
              },
              "MUTE": {
                "bit": 5,
                "description": "Mute"
              },
              "TRIS": {
                "bit": 4,
                "description": "Tristate management on data\n              line"
              },
              "FFLUSH": {
                "bit": 3,
                "description": "FIFO flush"
              },
              "FTH": {
                "bit": 0,
                "description": "FIFO threshold",
                "width": 3
              }
            },
            "AFRCR": {
              "FSOFF": {
                "bit": 18,
                "description": "Frame synchronization\n              offset"
              },
              "FSPOL": {
                "bit": 17,
                "description": "Frame synchronization\n              polarity"
              },
              "FSDEF": {
                "bit": 16,
                "description": "Frame synchronization\n              definition"
              },
              "FSALL": {
                "bit": 8,
                "description": "Frame synchronization active level\n              length",
                "width": 7
              },
              "FRL": {
                "bit": 0,
                "description": "Frame length",
                "width": 8
              }
            },
            "BFRCR": {
              "FSOFF": {
                "bit": 18,
                "description": "Frame synchronization\n              offset"
              },
              "FSPOL": {
                "bit": 17,
                "description": "Frame synchronization\n              polarity"
              },
              "FSDEF": {
                "bit": 16,
                "description": "Frame synchronization\n              definition"
              },
              "FSALL": {
                "bit": 8,
                "description": "Frame synchronization active level\n              length",
                "width": 7
              },
              "FRL": {
                "bit": 0,
                "description": "Frame length",
                "width": 8
              }
            },
            "ASLOTR": {
              "SLOTEN": {
                "bit": 16,
                "description": "Slot enable",
                "width": 16
              },
              "NBSLOT": {
                "bit": 8,
                "description": "Number of slots in an audio\n              frame",
                "width": 4
              },
              "SLOTSZ": {
                "bit": 6,
                "description": "Slot size",
                "width": 2
              },
              "FBOFF": {
                "bit": 0,
                "description": "First bit offset",
                "width": 5
              }
            },
            "BSLOTR": {
              "SLOTEN": {
                "bit": 16,
                "description": "Slot enable",
                "width": 16
              },
              "NBSLOT": {
                "bit": 8,
                "description": "Number of slots in an audio\n              frame",
                "width": 4
              },
              "SLOTSZ": {
                "bit": 6,
                "description": "Slot size",
                "width": 2
              },
              "FBOFF": {
                "bit": 0,
                "description": "First bit offset",
                "width": 5
              }
            },
            "AIM": {
              "LFSDETIE": {
                "bit": 6,
                "description": "Late frame synchronization detection\n              interrupt enable"
              },
              "AFSDETIE": {
                "bit": 5,
                "description": "Anticipated frame synchronization\n              detection interrupt enable"
              },
              "CNRDYIE": {
                "bit": 4,
                "description": "Codec not ready interrupt\n              enable"
              },
              "FREQIE": {
                "bit": 3,
                "description": "FIFO request interrupt\n              enable"
              },
              "WCKCFGIE": {
                "bit": 2,
                "description": "Wrong clock configuration interrupt\n              enable"
              },
              "MUTEDETIE": {
                "bit": 1,
                "description": "Mute detection interrupt\n              enable"
              },
              "OVRUDRIE": {
                "bit": 0,
                "description": "Overrun/underrun interrupt\n              enable"
              }
            },
            "BIM": {
              "LFSDETIE": {
                "bit": 6,
                "description": "Late frame synchronization detection\n              interrupt enable"
              },
              "AFSDETIE": {
                "bit": 5,
                "description": "Anticipated frame synchronization\n              detection interrupt enable"
              },
              "CNRDYIE": {
                "bit": 4,
                "description": "Codec not ready interrupt\n              enable"
              },
              "FREQIE": {
                "bit": 3,
                "description": "FIFO request interrupt\n              enable"
              },
              "WCKCFGIE": {
                "bit": 2,
                "description": "Wrong clock configuration interrupt\n              enable"
              },
              "MUTEDETIE": {
                "bit": 1,
                "description": "Mute detection interrupt\n              enable"
              },
              "OVRUDRIE": {
                "bit": 0,
                "description": "Overrun/underrun interrupt\n              enable"
              }
            },
            "ASR": {
              "FLVL": {
                "bit": 16,
                "description": "FIFO level threshold",
                "width": 3
              },
              "LFSDET": {
                "bit": 6,
                "description": "Late frame synchronization\n              detection"
              },
              "AFSDET": {
                "bit": 5,
                "description": "Anticipated frame synchronization\n              detection"
              },
              "CNRDY": {
                "bit": 4,
                "description": "Codec not ready"
              },
              "FREQ": {
                "bit": 3,
                "description": "FIFO request"
              },
              "WCKCFG": {
                "bit": 2,
                "description": "Wrong clock configuration flag. This bit\n              is read only"
              },
              "MUTEDET": {
                "bit": 1,
                "description": "Mute detection"
              },
              "OVRUDR": {
                "bit": 0,
                "description": "Overrun / underrun"
              }
            },
            "BSR": {
              "FLVL": {
                "bit": 16,
                "description": "FIFO level threshold",
                "width": 3
              },
              "LFSDET": {
                "bit": 6,
                "description": "Late frame synchronization\n              detection"
              },
              "AFSDET": {
                "bit": 5,
                "description": "Anticipated frame synchronization\n              detection"
              },
              "CNRDY": {
                "bit": 4,
                "description": "Codec not ready"
              },
              "FREQ": {
                "bit": 3,
                "description": "FIFO request"
              },
              "WCKCFG": {
                "bit": 2,
                "description": "Wrong clock configuration\n              flag"
              },
              "MUTEDET": {
                "bit": 1,
                "description": "Mute detection"
              },
              "OVRUDR": {
                "bit": 0,
                "description": "Overrun / underrun"
              }
            },
            "ACLRFR": {
              "CLFSDET": {
                "bit": 6,
                "description": "Clear late frame synchronization\n              detection flag"
              },
              "CAFSDET": {
                "bit": 5,
                "description": "Clear anticipated frame synchronization\n              detection flag"
              },
              "CCNRDY": {
                "bit": 4,
                "description": "Clear codec not ready flag"
              },
              "CWCKCFG": {
                "bit": 2,
                "description": "Clear wrong clock configuration\n              flag"
              },
              "CMUTEDET": {
                "bit": 1,
                "description": "Mute detection flag"
              },
              "COVRUDR": {
                "bit": 0,
                "description": "Clear overrun / underrun"
              }
            },
            "BCLRFR": {
              "CLFSDET": {
                "bit": 6,
                "description": "Clear late frame synchronization\n              detection flag"
              },
              "CAFSDET": {
                "bit": 5,
                "description": "Clear anticipated frame synchronization\n              detection flag"
              },
              "CCNRDY": {
                "bit": 4,
                "description": "Clear codec not ready flag"
              },
              "CWCKCFG": {
                "bit": 2,
                "description": "Clear wrong clock configuration\n              flag"
              },
              "CMUTEDET": {
                "bit": 1,
                "description": "Mute detection flag"
              },
              "COVRUDR": {
                "bit": 0,
                "description": "Clear overrun / underrun"
              }
            },
            "ADR": {
              "DATA": {
                "bit": 0,
                "description": "Data",
                "width": 32
              }
            },
            "BDR": {
              "DATA": {
                "bit": 0,
                "description": "Data",
                "width": 32
              }
            },
            "PDMCR": {
              "PDMEN": {
                "bit": 0,
                "description": "PDM enable"
              },
              "MICNBR": {
                "bit": 4,
                "description": "MICNBR",
                "width": 2
              },
              "CKEN1": {
                "bit": 8,
                "description": "Clock enable of bitstream clock number\n              1"
              },
              "CKEN2": {
                "bit": 9,
                "description": "CKEN2"
              },
              "CKEN3": {
                "bit": 10,
                "description": "CKEN3"
              },
              "CKEN4": {
                "bit": 11,
                "description": "CKEN4"
              }
            },
            "PDMDLY": {
              "DLYM1L": {
                "bit": 0,
                "description": "Delay line adjust for first microphone\n              of pair 1",
                "width": 3
              },
              "DLYM1R": {
                "bit": 4,
                "description": "Delay line adjust for second microphone\n              of pair 1",
                "width": 3
              },
              "DLYM2L": {
                "bit": 8,
                "description": "Delay line for first microphone of pair\n              2",
                "width": 3
              },
              "DLYM2R": {
                "bit": 12,
                "description": "Delay line for second microphone of pair\n              2",
                "width": 3
              },
              "DLYM3L": {
                "bit": 16,
                "description": "DLYM3L",
                "width": 3
              },
              "DLYM3R": {
                "bit": 20,
                "description": "DLYM3R",
                "width": 3
              },
              "DLYM4L": {
                "bit": 24,
                "description": "DLYM4L",
                "width": 3
              },
              "DLYM4R": {
                "bit": 28,
                "description": "DLYM4R",
                "width": 3
              }
            }
          }
        },
        "SAI2": {
          "instances": [
            {
              "name": "SAI2",
              "base": "0x40015800",
              "irq": 91
            }
          ],
          "registers": {}
        },
        "DMA": {
          "instances": [
            {
              "name": "GPDMA1",
              "base": "0x40020000",
              "irq": 29
            },
            {
              "name": "SEC_GPDMA1",
              "base": "0x50020000"
            },
            {
              "name": "LPDMA1",
              "base": "0x46025000",
              "irq": 114
            },
            {
              "name": "SEC_LPDMA1",
              "base": "0x56025000"
            },
            {
              "name": "DMA2D",
              "base": "0x4002B000",
              "irq": 118
            },
            {
              "name": "SEC_DMA2D",
              "base": "0x5002B000"
            }
          ],
          "registers": {
            "GPDMA_SECCFGR": {
              "offset": "0x00",
              "size": 32,
              "description": "GPDMA secure configuration register"
            },
            "GPDMA_PRIVCFGR": {
              "offset": "0x04",
              "size": 32,
              "description": "GPDMA privileged configuration register"
            },
            "GPDMA_RCFGLOCKR": {
              "offset": "0x08",
              "size": 32,
              "description": "GPDMA configuration lock register"
            },
            "GPDMA_MISR": {
              "offset": "0x0C",
              "size": 32,
              "description": "GPDMA non-secure masked interrupt status register"
            },
            "GPDMA_SMISR": {
              "offset": "0x10",
              "size": 32,
              "description": "GPDMA secure masked interrupt status register"
            },
            "GPDMA_C0LBAR": {
              "offset": "0x50",
              "size": 32,
              "description": "GPDMA channel 0 linked-list base address register"
            },
            "GPDMA_C0FCR": {
              "offset": "0x5C",
              "size": 32,
              "description": "GPDMA channel 0 flag clear register"
            },
            "GPDMA_C0SR": {
              "offset": "0x60",
              "size": 32,
              "description": "GPDMA channel 0 status register"
            },
            "GPDMA_C0CR": {
              "offset": "0x64",
              "size": 32,
              "description": "GPDMA channel 0 control register"
            },
            "GPDMA_C0TR1": {
              "offset": "0x90",
              "size": 32,
              "description": "GPDMA channel 0 transfer register 1"
            },
            "GPDMA_C0TR2": {
              "offset": "0x94",
              "size": 32,
              "description": "GPDMA channel 0 transfer register 2"
            },
            "GPDMA_C0BR1": {
              "offset": "0x98",
              "size": 32,
              "description": "GPDMA channel 0 block register 1"
            },
            "GPDMA_C0SAR": {
              "offset": "0x9C",
              "size": 32,
              "description": "GPDMA channel 0 source address register"
            },
            "GPDMA_C0DAR": {
              "offset": "0xA0",
              "size": 32,
              "description": "GPDMA channel 0 destination address register"
            },
            "GPDMA_C0LLR": {
              "offset": "0xCC",
              "size": 32,
              "description": "GPDMA channel 0 linked-list address register"
            },
            "GPDMA_C1LBAR": {
              "offset": "0xD0",
              "size": 32,
              "description": "GPDMA channel 1 linked-list base address register"
            },
            "GPDMA_C1FCR": {
              "offset": "0xDC",
              "size": 32,
              "description": "GPDMA channel 1 flag clear register"
            },
            "GPDMA_C1SR": {
              "offset": "0xE0",
              "size": 32,
              "description": "GPDMA channel 1 status register"
            },
            "GPDMA_C1CR": {
              "offset": "0xE4",
              "size": 32,
              "description": "GPDMA channel 1 control register"
            },
            "GPDMA_C1TR1": {
              "offset": "0x110",
              "size": 32,
              "description": "GPDMA channel 1 transfer register 1"
            },
            "GPDMA_C1TR2": {
              "offset": "0x114",
              "size": 32,
              "description": "GPDMA channel 1 transfer register 2"
            },
            "GPDMA_C1BR1": {
              "offset": "0x118",
              "size": 32,
              "description": "GPDMA channel 1 block register 1"
            },
            "GPDMA_C1SAR": {
              "offset": "0x11C",
              "size": 32,
              "description": "GPDMA channel 1 source address register"
            },
            "GPDMA_C1DAR": {
              "offset": "0x120",
              "size": 32,
              "description": "GPDMA channel 1 destination address register"
            },
            "GPDMA_C1LLR": {
              "offset": "0x14C",
              "size": 32,
              "description": "GPDMA channel 1 linked-list address register"
            },
            "GPDMA_C2LBAR": {
              "offset": "0x150",
              "size": 32,
              "description": "GPDMA channel 2 linked-list base address register"
            },
            "GPDMA_C2FCR": {
              "offset": "0x15C",
              "size": 32,
              "description": "GPDMA channel 2 flag clear register"
            },
            "GPDMA_C2SR": {
              "offset": "0x160",
              "size": 32,
              "description": "GPDMA channel 2 status register"
            },
            "GPDMA_C2CR": {
              "offset": "0x164",
              "size": 32,
              "description": "GPDMA channel 2 control register"
            },
            "GPDMA_C2TR1": {
              "offset": "0x190",
              "size": 32,
              "description": "GPDMA channel 2 transfer register 1"
            },
            "GPDMA_C2TR2": {
              "offset": "0x194",
              "size": 32,
              "description": "GPDMA channel 2 transfer register 2"
            },
            "GPDMA_C2BR1": {
              "offset": "0x198",
              "size": 32,
              "description": "GPDMA channel 2 block register 1"
            },
            "GPDMA_C2SAR": {
              "offset": "0x19C",
              "size": 32,
              "description": "GPDMA channel 2 source address register"
            },
            "GPDMA_C2DAR": {
              "offset": "0x1A0",
              "size": 32,
              "description": "GPDMA channel 2 destination address register"
            },
            "GPDMA_C2LLR": {
              "offset": "0x1CC",
              "size": 32,
              "description": "GPDMA channel 2 linked-list address register"
            },
            "GPDMA_C3LBAR": {
              "offset": "0x1D0",
              "size": 32,
              "description": "GPDMA channel 3 linked-list base address register"
            },
            "GPDMA_C3FCR": {
              "offset": "0x1DC",
              "size": 32,
              "description": "GPDMA channel 3 flag clear register"
            },
            "GPDMA_C3SR": {
              "offset": "0x1E0",
              "size": 32,
              "description": "GPDMA channel 3 status register"
            },
            "GPDMA_C3CR": {
              "offset": "0x1E4",
              "size": 32,
              "description": "GPDMA channel 3 control register"
            },
            "GPDMA_C3TR1": {
              "offset": "0x210",
              "size": 32,
              "description": "GPDMA channel 3 transfer register 1"
            },
            "GPDMA_C3TR2": {
              "offset": "0x214",
              "size": 32,
              "description": "GPDMA channel 3 transfer register 2"
            },
            "GPDMA_C3BR1": {
              "offset": "0x218",
              "size": 32,
              "description": "GPDMA channel 3 block register 1"
            },
            "GPDMA_C3SAR": {
              "offset": "0x21C",
              "size": 32,
              "description": "GPDMA channel 3 source address register"
            },
            "GPDMA_C3DAR": {
              "offset": "0x220",
              "size": 32,
              "description": "GPDMA channel 3 destination address register"
            },
            "GPDMA_C3LLR": {
              "offset": "0x24C",
              "size": 32,
              "description": "GPDMA channel 3 linked-list address register"
            },
            "GPDMA_C4LBAR": {
              "offset": "0x250",
              "size": 32,
              "description": "GPDMA channel 4 linked-list base address register"
            },
            "GPDMA_C4FCR": {
              "offset": "0x25C",
              "size": 32,
              "description": "GPDMA channel 4 flag clear register"
            },
            "GPDMA_C4SR": {
              "offset": "0x260",
              "size": 32,
              "description": "GPDMA channel 4 status register"
            },
            "GPDMA_C4CR": {
              "offset": "0x264",
              "size": 32,
              "description": "GPDMA channel 4 control register"
            },
            "GPDMA_C4TR1": {
              "offset": "0x290",
              "size": 32,
              "description": "GPDMA channel 4 transfer register 1"
            },
            "GPDMA_C4TR2": {
              "offset": "0x294",
              "size": 32,
              "description": "GPDMA channel 4 transfer register 2"
            },
            "GPDMA_C4BR1": {
              "offset": "0x298",
              "size": 32,
              "description": "GPDMA channel 4 block register 1"
            },
            "GPDMA_C4SAR": {
              "offset": "0x29C",
              "size": 32,
              "description": "GPDMA channel 4 source address register"
            },
            "GPDMA_C4DAR": {
              "offset": "0x2A0",
              "size": 32,
              "description": "GPDMA channel 4 destination address register"
            },
            "GPDMA_C4LLR": {
              "offset": "0x2CC",
              "size": 32,
              "description": "GPDMA channel 4 linked-list address register"
            },
            "GPDMA_C5LBAR": {
              "offset": "0x2D0",
              "size": 32,
              "description": "GPDMA channel 5 linked-list base address register"
            },
            "GPDMA_C5FCR": {
              "offset": "0x2DC",
              "size": 32,
              "description": "GPDMA channel 5 flag clear register"
            },
            "GPDMA_C5SR": {
              "offset": "0x2E0",
              "size": 32,
              "description": "GPDMA channel 5 status register"
            },
            "GPDMA_C5CR": {
              "offset": "0x2E4",
              "size": 32,
              "description": "GPDMA channel 5 control register"
            },
            "GPDMA_C5TR1": {
              "offset": "0x310",
              "size": 32,
              "description": "GPDMA channel 5 transfer register 1"
            },
            "GPDMA_C5TR2": {
              "offset": "0x314",
              "size": 32,
              "description": "GPDMA channel 5 transfer register 2"
            },
            "GPDMA_C5BR1": {
              "offset": "0x318",
              "size": 32,
              "description": "GPDMA channel 5 block register 1"
            },
            "GPDMA_C5SAR": {
              "offset": "0x31C",
              "size": 32,
              "description": "GPDMA channel 5 source address register"
            },
            "GPDMA_C5DAR": {
              "offset": "0x320",
              "size": 32,
              "description": "GPDMA channel 5 destination address register"
            },
            "GPDMA_C5LLR": {
              "offset": "0x34C",
              "size": 32,
              "description": "GPDMA channel 5 linked-list address register"
            },
            "GPDMA_C6LBAR": {
              "offset": "0x350",
              "size": 32,
              "description": "GPDMA channel 6 linked-list base address register"
            },
            "GPDMA_C6FCR": {
              "offset": "0x35C",
              "size": 32,
              "description": "GPDMA channel 6 flag clear register"
            },
            "GPDMA_C6SR": {
              "offset": "0x360",
              "size": 32,
              "description": "GPDMA channel 6 status register"
            },
            "GPDMA_C6CR": {
              "offset": "0x364",
              "size": 32,
              "description": "GPDMA channel 6 control register"
            },
            "GPDMA_C6TR1": {
              "offset": "0x390",
              "size": 32,
              "description": "GPDMA channel 6 transfer register 1"
            },
            "GPDMA_C6TR2": {
              "offset": "0x394",
              "size": 32,
              "description": "GPDMA channel 6 transfer register 2"
            },
            "GPDMA_C6BR1": {
              "offset": "0x398",
              "size": 32,
              "description": "GPDMA channel 6 block register 1"
            },
            "GPDMA_C6SAR": {
              "offset": "0x39C",
              "size": 32,
              "description": "GPDMA channel 6 source address register"
            },
            "GPDMA_C6DAR": {
              "offset": "0x3A0",
              "size": 32,
              "description": "GPDMA channel 6 destination address register"
            },
            "GPDMA_C6LLR": {
              "offset": "0x3CC",
              "size": 32,
              "description": "GPDMA channel 6 linked-list address register"
            },
            "GPDMA_C7LBAR": {
              "offset": "0x3D0",
              "size": 32,
              "description": "GPDMA channel 7 linked-list base address register"
            },
            "GPDMA_C7FCR": {
              "offset": "0x3DC",
              "size": 32,
              "description": "GPDMA channel 7 flag clear register"
            },
            "GPDMA_C7SR": {
              "offset": "0x3E0",
              "size": 32,
              "description": "GPDMA channel 7 status register"
            },
            "GPDMA_C7CR": {
              "offset": "0x3E4",
              "size": 32,
              "description": "GPDMA channel 7 control register"
            },
            "GPDMA_C7TR1": {
              "offset": "0x410",
              "size": 32,
              "description": "GPDMA channel 7 transfer register 1"
            },
            "GPDMA_C7TR2": {
              "offset": "0x414",
              "size": 32,
              "description": "GPDMA channel 7 transfer register 2"
            },
            "GPDMA_C7BR1": {
              "offset": "0x418",
              "size": 32,
              "description": "GPDMA channel 7 block register 1"
            },
            "GPDMA_C7SAR": {
              "offset": "0x41C",
              "size": 32,
              "description": "GPDMA channel 7 source address register"
            },
            "GPDMA_C7DAR": {
              "offset": "0x420",
              "size": 32,
              "description": "GPDMA channel 7 destination address register"
            },
            "GPDMA_C7LLR": {
              "offset": "0x44C",
              "size": 32,
              "description": "GPDMA channel 7 linked-list address register"
            },
            "GPDMA_C8LBAR": {
              "offset": "0x450",
              "size": 32,
              "description": "GPDMA channel 8 linked-list base address register"
            },
            "GPDMA_C8FCR": {
              "offset": "0x45C",
              "size": 32,
              "description": "GPDMA channel 8 flag clear register"
            },
            "GPDMA_C8SR": {
              "offset": "0x460",
              "size": 32,
              "description": "GPDMA channel 8 status register"
            },
            "GPDMA_C8CR": {
              "offset": "0x464",
              "size": 32,
              "description": "GPDMA channel 8 control register"
            },
            "GPDMA_C8TR1": {
              "offset": "0x490",
              "size": 32,
              "description": "GPDMA channel 8 transfer register 1"
            },
            "GPDMA_C8TR2": {
              "offset": "0x494",
              "size": 32,
              "description": "GPDMA channel 8 transfer register 2"
            },
            "GPDMA_C8BR1": {
              "offset": "0x498",
              "size": 32,
              "description": "GPDMA channel 8 block register 1"
            },
            "GPDMA_C8SAR": {
              "offset": "0x49C",
              "size": 32,
              "description": "GPDMA channel 8 source address register"
            },
            "GPDMA_C8DAR": {
              "offset": "0x4A0",
              "size": 32,
              "description": "GPDMA channel 8 destination address register"
            },
            "GPDMA_C8LLR": {
              "offset": "0x4CC",
              "size": 32,
              "description": "GPDMA channel 8 linked-list address register"
            },
            "GPDMA_C9LBAR": {
              "offset": "0x4D0",
              "size": 32,
              "description": "GPDMA channel 9 linked-list base address register"
            },
            "GPDMA_C9FCR": {
              "offset": "0x4DC",
              "size": 32,
              "description": "GPDMA channel 9 flag clear register"
            },
            "GPDMA_C9SR": {
              "offset": "0x4E0",
              "size": 32,
              "description": "GPDMA channel 9 status register"
            },
            "GPDMA_C9CR": {
              "offset": "0x4E4",
              "size": 32,
              "description": "GPDMA channel 9 control register"
            },
            "GPDMA_C9TR1": {
              "offset": "0x510",
              "size": 32,
              "description": "GPDMA channel 9 transfer register 1"
            },
            "GPDMA_C9TR2": {
              "offset": "0x514",
              "size": 32,
              "description": "GPDMA channel 9 transfer register 2"
            },
            "GPDMA_C9BR1": {
              "offset": "0x518",
              "size": 32,
              "description": "GPDMA channel 9 block register 1"
            },
            "GPDMA_C9SAR": {
              "offset": "0x51C",
              "size": 32,
              "description": "GPDMA channel 9 source address register"
            },
            "GPDMA_C9DAR": {
              "offset": "0x520",
              "size": 32,
              "description": "GPDMA channel 9 destination address register"
            },
            "GPDMA_C9LLR": {
              "offset": "0x54C",
              "size": 32,
              "description": "GPDMA channel 9 linked-list address register"
            },
            "GPDMA_C10LBAR": {
              "offset": "0x550",
              "size": 32,
              "description": "GPDMA channel 10 linked-list base address register"
            },
            "GPDMA_C10FCR": {
              "offset": "0x55C",
              "size": 32,
              "description": "GPDMA channel 10 flag clear register"
            },
            "GPDMA_C10SR": {
              "offset": "0x560",
              "size": 32,
              "description": "GPDMA channel 10 status register"
            },
            "GPDMA_C10CR": {
              "offset": "0x564",
              "size": 32,
              "description": "GPDMA channel 10 control register"
            },
            "GPDMA_C10TR1": {
              "offset": "0x590",
              "size": 32,
              "description": "GPDMA channel 10 transfer register 1"
            },
            "GPDMA_C10TR2": {
              "offset": "0x594",
              "size": 32,
              "description": "GPDMA channel 10 transfer register 2"
            },
            "GPDMA_C10BR1": {
              "offset": "0x598",
              "size": 32,
              "description": "GPDMA channel 10 block register 1"
            },
            "GPDMA_C10SAR": {
              "offset": "0x59C",
              "size": 32,
              "description": "GPDMA channel 10 source address register"
            },
            "GPDMA_C10DAR": {
              "offset": "0x5A0",
              "size": 32,
              "description": "GPDMA channel 10 destination address register"
            },
            "GPDMA_C10LLR": {
              "offset": "0x5CC",
              "size": 32,
              "description": "GPDMA channel 10 linked-list address register"
            },
            "GPDMA_C11LBAR": {
              "offset": "0x5D0",
              "size": 32,
              "description": "GPDMA channel 11 linked-list base address register"
            },
            "GPDMA_C11FCR": {
              "offset": "0x5DC",
              "size": 32,
              "description": "GPDMA channel 11 flag clear register"
            },
            "GPDMA_C11SR": {
              "offset": "0x5E0",
              "size": 32,
              "description": "GPDMA channel 11 status register"
            },
            "GPDMA_C11CR": {
              "offset": "0x5E4",
              "size": 32,
              "description": "GPDMA channel 11 control register"
            },
            "GPDMA_C11TR1": {
              "offset": "0x610",
              "size": 32,
              "description": "GPDMA channel 11 transfer register 1"
            },
            "GPDMA_C11TR2": {
              "offset": "0x614",
              "size": 32,
              "description": "GPDMA channel 11 transfer register 2"
            },
            "GPDMA_C11BR1": {
              "offset": "0x618",
              "size": 32,
              "description": "GPDMA channel 11 block register 1"
            },
            "GPDMA_C11SAR": {
              "offset": "0x61C",
              "size": 32,
              "description": "GPDMA channel 11 source address register"
            },
            "GPDMA_C11DAR": {
              "offset": "0x620",
              "size": 32,
              "description": "GPDMA channel 11 destination address register"
            },
            "GPDMA_C11LLR": {
              "offset": "0x64C",
              "size": 32,
              "description": "GPDMA channel 11 linked-list address register"
            },
            "GPDMA_C12LBAR": {
              "offset": "0x650",
              "size": 32,
              "description": "GPDMA channel 12 linked-list base address register"
            },
            "GPDMA_C12FCR": {
              "offset": "0x65C",
              "size": 32,
              "description": "GPDMA channel 12 flag clear register"
            },
            "GPDMA_C12SR": {
              "offset": "0x660",
              "size": 32,
              "description": "GPDMA channel 12 status register"
            },
            "GPDMA_C12CR": {
              "offset": "0x664",
              "size": 32,
              "description": "GPDMA channel 12 control register"
            },
            "GPDMA_C12TR1": {
              "offset": "0x690",
              "size": 32,
              "description": "GPDMA channel 12 transfer register 1"
            },
            "GPDMA_C12TR2": {
              "offset": "0x694",
              "size": 32,
              "description": "GPDMA channel 12 transfer register 2"
            },
            "GPDMA_C12BR1": {
              "offset": "0x698",
              "size": 32,
              "description": "GPDMA channel 12 alternate block register 1"
            },
            "GPDMA_C12SAR": {
              "offset": "0x69C",
              "size": 32,
              "description": "GPDMA channel 12 source address register"
            },
            "GPDMA_C12DAR": {
              "offset": "0x6A0",
              "size": 32,
              "description": "GPDMA channel 12 destination address register"
            },
            "GPDMA_C12TR3": {
              "offset": "0x6A4",
              "size": 32,
              "description": "GPDMA channel 12 transfer register 3"
            },
            "GPDMA_C12BR2": {
              "offset": "0x6A8",
              "size": 32,
              "description": "GPDMA channel 12 block register 2"
            },
            "GPDMA_C12LLR": {
              "offset": "0x6CC",
              "size": 32,
              "description": "GPDMA channel 12 alternate linked-list address register"
            },
            "GPDMA_C13LBAR": {
              "offset": "0x6D0",
              "size": 32,
              "description": "GPDMA channel 13 linked-list base address register"
            },
            "GPDMA_C13FCR": {
              "offset": "0x6DC",
              "size": 32,
              "description": "GPDMA channel 13 flag clear register"
            },
            "GPDMA_C13SR": {
              "offset": "0x6E0",
              "size": 32,
              "description": "GPDMA channel 13 status register"
            },
            "GPDMA_C13CR": {
              "offset": "0x6E4",
              "size": 32,
              "description": "GPDMA channel 13 control register"
            },
            "GPDMA_C13TR1": {
              "offset": "0x710",
              "size": 32,
              "description": "GPDMA channel 13 transfer register 1"
            },
            "GPDMA_C13TR2": {
              "offset": "0x714",
              "size": 32,
              "description": "GPDMA channel 13 transfer register 2"
            },
            "GPDMA_C13BR1": {
              "offset": "0x718",
              "size": 32,
              "description": "GPDMA channel 13 alternate block register 1"
            },
            "GPDMA_C13SAR": {
              "offset": "0x71C",
              "size": 32,
              "description": "GPDMA channel 13 source address register"
            },
            "GPDMA_C13DAR": {
              "offset": "0x720",
              "size": 32,
              "description": "GPDMA channel 13 destination address register"
            },
            "GPDMA_C13TR3": {
              "offset": "0x724",
              "size": 32,
              "description": "GPDMA channel 13 transfer register 3"
            },
            "GPDMA_C13BR2": {
              "offset": "0x728",
              "size": 32,
              "description": "GPDMA channel 13 block register 2"
            },
            "GPDMA_C13LLR": {
              "offset": "0x74C",
              "size": 32,
              "description": "GPDMA channel 13 alternate linked-list address register"
            },
            "GPDMA_C14LBAR": {
              "offset": "0x750",
              "size": 32,
              "description": "GPDMA channel 14 linked-list base address register"
            },
            "GPDMA_C14FCR": {
              "offset": "0x75C",
              "size": 32,
              "description": "GPDMA channel 14 flag clear register"
            },
            "GPDMA_C14SR": {
              "offset": "0x760",
              "size": 32,
              "description": "GPDMA channel 14 status register"
            },
            "GPDMA_C14CR": {
              "offset": "0x764",
              "size": 32,
              "description": "GPDMA channel 14 control register"
            },
            "GPDMA_C14TR1": {
              "offset": "0x790",
              "size": 32,
              "description": "GPDMA channel 14 transfer register 1"
            },
            "GPDMA_C14TR2": {
              "offset": "0x794",
              "size": 32,
              "description": "GPDMA channel 14 transfer register 2"
            },
            "GPDMA_C14BR1": {
              "offset": "0x798",
              "size": 32,
              "description": "GPDMA channel 14 alternate block register 1"
            },
            "GPDMA_C14SAR": {
              "offset": "0x79C",
              "size": 32,
              "description": "GPDMA channel 14 source address register"
            },
            "GPDMA_C14DAR": {
              "offset": "0x7A0",
              "size": 32,
              "description": "GPDMA channel 14 destination address register"
            },
            "GPDMA_C14TR3": {
              "offset": "0x7A4",
              "size": 32,
              "description": "GPDMA channel 14 transfer register 3"
            },
            "GPDMA_C14BR2": {
              "offset": "0x7A8",
              "size": 32,
              "description": "GPDMA channel 14 block register 2"
            },
            "GPDMA_C14LLR": {
              "offset": "0x7CC",
              "size": 32,
              "description": "GPDMA channel 14 alternate linked-list address register"
            },
            "GPDMA_C15LBAR": {
              "offset": "0x7D0",
              "size": 32,
              "description": "GPDMA channel 15 linked-list base address register"
            },
            "GPDMA_C15FCR": {
              "offset": "0x7DC",
              "size": 32,
              "description": "GPDMA channel 15 flag clear register"
            },
            "GPDMA_C15SR": {
              "offset": "0x7E0",
              "size": 32,
              "description": "GPDMA channel 15 status register"
            },
            "GPDMA_C15CR": {
              "offset": "0x7E4",
              "size": 32,
              "description": "GPDMA channel 15 control register"
            },
            "GPDMA_C15TR1": {
              "offset": "0x810",
              "size": 32,
              "description": "GPDMA channel 15 transfer register 1"
            },
            "GPDMA_C15TR2": {
              "offset": "0x814",
              "size": 32,
              "description": "GPDMA channel 15 transfer register 2"
            },
            "GPDMA_C15BR1": {
              "offset": "0x818",
              "size": 32,
              "description": "GPDMA channel 15 alternate block register 1"
            },
            "GPDMA_C15SAR": {
              "offset": "0x81C",
              "size": 32,
              "description": "GPDMA channel 15 source address register"
            },
            "GPDMA_C15DAR": {
              "offset": "0x820",
              "size": 32,
              "description": "GPDMA channel 15 destination address register"
            },
            "GPDMA_C15TR3": {
              "offset": "0x824",
              "size": 32,
              "description": "GPDMA channel 15 transfer register 3"
            },
            "GPDMA_C15BR2": {
              "offset": "0x828",
              "size": 32,
              "description": "GPDMA channel 15 block register 2"
            },
            "GPDMA_C15LLR": {
              "offset": "0x84C",
              "size": 32,
              "description": "GPDMA channel 15 alternate linked-list address register"
            }
          },
          "bits": {
            "GPDMA_SECCFGR": {
              "SEC0": {
                "bit": 0,
                "description": "SEC0"
              },
              "SEC1": {
                "bit": 1,
                "description": "SEC1"
              },
              "SEC2": {
                "bit": 2,
                "description": "SEC2"
              },
              "SEC3": {
                "bit": 3,
                "description": "SEC3"
              },
              "SEC4": {
                "bit": 4,
                "description": "SEC4"
              },
              "SEC5": {
                "bit": 5,
                "description": "SEC5"
              },
              "SEC6": {
                "bit": 6,
                "description": "SEC6"
              },
              "SEC7": {
                "bit": 7,
                "description": "SEC7"
              },
              "SEC8": {
                "bit": 8,
                "description": "SEC8"
              },
              "SEC9": {
                "bit": 9,
                "description": "SEC9"
              },
              "SEC10": {
                "bit": 10,
                "description": "SEC10"
              },
              "SEC11": {
                "bit": 11,
                "description": "SEC11"
              },
              "SEC12": {
                "bit": 12,
                "description": "SEC12"
              },
              "SEC13": {
                "bit": 13,
                "description": "SEC13"
              },
              "SEC14": {
                "bit": 14,
                "description": "SEC14"
              },
              "SEC15": {
                "bit": 15,
                "description": "SEC15"
              }
            },
            "GPDMA_PRIVCFGR": {
              "PRIV0": {
                "bit": 0,
                "description": "PRIV0"
              },
              "PRIV1": {
                "bit": 1,
                "description": "PRIV1"
              },
              "PRIV2": {
                "bit": 2,
                "description": "PRIV2"
              },
              "PRIV3": {
                "bit": 3,
                "description": "PRIV3"
              },
              "PRIV4": {
                "bit": 4,
                "description": "PRIV4"
              },
              "PRIV5": {
                "bit": 5,
                "description": "PRIV5"
              },
              "PRIV6": {
                "bit": 6,
                "description": "PRIV6"
              },
              "PRIV7": {
                "bit": 7,
                "description": "PRIV7"
              },
              "PRIV8": {
                "bit": 8,
                "description": "PRIV8"
              },
              "PRIV9": {
                "bit": 9,
                "description": "PRIV9"
              },
              "PRIV10": {
                "bit": 10,
                "description": "PRIV10"
              },
              "PRIV11": {
                "bit": 11,
                "description": "PRIV11"
              },
              "PRIV12": {
                "bit": 12,
                "description": "PRIV12"
              },
              "PRIV13": {
                "bit": 13,
                "description": "PRIV13"
              },
              "PRIV14": {
                "bit": 14,
                "description": "PRIV14"
              },
              "PRIV15": {
                "bit": 15,
                "description": "PRIV15"
              }
            },
            "GPDMA_RCFGLOCKR": {
              "LOCK0": {
                "bit": 0,
                "description": "LOCK0"
              },
              "LOCK1": {
                "bit": 1,
                "description": "LOCK1"
              },
              "LOCK2": {
                "bit": 2,
                "description": "LOCK2"
              },
              "LOCK3": {
                "bit": 3,
                "description": "LOCK3"
              },
              "LOCK4": {
                "bit": 4,
                "description": "LOCK4"
              },
              "LOCK5": {
                "bit": 5,
                "description": "LOCK5"
              },
              "LOCK6": {
                "bit": 6,
                "description": "LOCK6"
              },
              "LOCK7": {
                "bit": 7,
                "description": "LOCK7"
              },
              "LOCK8": {
                "bit": 8,
                "description": "LOCK8"
              },
              "LOCK9": {
                "bit": 9,
                "description": "LOCK9"
              },
              "LOCK10": {
                "bit": 10,
                "description": "LOCK10"
              },
              "LOCK11": {
                "bit": 11,
                "description": "LOCK11"
              },
              "LOCK12": {
                "bit": 12,
                "description": "LOCK12"
              },
              "LOCK13": {
                "bit": 13,
                "description": "LOCK13"
              },
              "LOCK14": {
                "bit": 14,
                "description": "LOCK14"
              },
              "LOCK15": {
                "bit": 15,
                "description": "LOCK15"
              }
            },
            "GPDMA_MISR": {
              "MIS0": {
                "bit": 0,
                "description": "MIS0"
              },
              "MIS1": {
                "bit": 1,
                "description": "MIS1"
              },
              "MIS2": {
                "bit": 2,
                "description": "MIS2"
              },
              "MIS3": {
                "bit": 3,
                "description": "MIS3"
              },
              "MIS4": {
                "bit": 4,
                "description": "MIS4"
              },
              "MIS5": {
                "bit": 5,
                "description": "MIS5"
              },
              "MIS6": {
                "bit": 6,
                "description": "MIS6"
              },
              "MIS7": {
                "bit": 7,
                "description": "MIS7"
              },
              "MIS8": {
                "bit": 8,
                "description": "MIS8"
              },
              "MIS9": {
                "bit": 9,
                "description": "MIS9"
              },
              "MIS10": {
                "bit": 10,
                "description": "MIS10"
              },
              "MIS11": {
                "bit": 11,
                "description": "MIS11"
              },
              "MIS12": {
                "bit": 12,
                "description": "MIS12"
              },
              "MIS13": {
                "bit": 13,
                "description": "MIS13"
              },
              "MIS14": {
                "bit": 14,
                "description": "MIS14"
              },
              "MIS15": {
                "bit": 15,
                "description": "MIS15"
              }
            },
            "GPDMA_SMISR": {
              "MIS0": {
                "bit": 0,
                "description": "MIS0"
              },
              "MIS1": {
                "bit": 1,
                "description": "MIS1"
              },
              "MIS2": {
                "bit": 2,
                "description": "MIS2"
              },
              "MIS3": {
                "bit": 3,
                "description": "MIS3"
              },
              "MIS4": {
                "bit": 4,
                "description": "MIS4"
              },
              "MIS5": {
                "bit": 5,
                "description": "MIS5"
              },
              "MIS6": {
                "bit": 6,
                "description": "MIS6"
              },
              "MIS7": {
                "bit": 7,
                "description": "MIS7"
              },
              "MIS8": {
                "bit": 8,
                "description": "MIS8"
              },
              "MIS9": {
                "bit": 9,
                "description": "MIS9"
              },
              "MIS10": {
                "bit": 10,
                "description": "MIS10"
              },
              "MIS11": {
                "bit": 11,
                "description": "MIS11"
              },
              "MIS12": {
                "bit": 12,
                "description": "MIS12"
              },
              "MIS13": {
                "bit": 13,
                "description": "MIS13"
              },
              "MIS14": {
                "bit": 14,
                "description": "MIS14"
              },
              "MIS15": {
                "bit": 15,
                "description": "MIS15"
              }
            },
            "GPDMA_C0LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C0FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C0SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C0CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C0TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C0TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C0BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C0SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C0DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C0LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C1LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C1FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C1SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C1CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C1TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C1TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C1BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C1SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C1DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C1LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C2LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C2FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C2SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C2CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C2TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C2TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C2BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C2SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C2DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C2LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C3LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C3FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C3SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C3CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C3TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C3TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C3BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C3SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C3DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C3LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C4LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C4FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C4SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C4CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C4TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C4TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C4BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C4SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C4DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C4LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C5LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C5FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C5SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C5CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C5TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C5TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C5BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C5SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C5DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C5LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C6LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C6FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C6SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C6CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C6TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C6TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C6BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C6SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C6DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C6LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C7LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C7FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C7SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C7CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C7TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C7TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C7BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C7SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C7DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C7LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C8LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C8FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C8SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C8CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C8TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C8TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C8BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C8SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C8DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C8LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C9LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C9FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C9SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C9CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C9TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C9TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C9BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C9SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C9DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C9LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C10LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C10FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C10SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C10CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C10TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C10TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C10BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C10SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C10DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C10LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C11LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C11FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C11SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C11CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C11TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C11TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C11BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0=\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]\u00a0=\u00a01 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C11SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C11DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C11LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C12LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C12FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C12SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C12CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C12TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C12TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C12BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRC": {
                "bit": 16,
                "description": "Block repeat counter\n\tThis field contains the number of repetitions of the current block (0 to 2047).\n\tWhen the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer.\n\tOnce the last block transfer is completed (BRC[10:0]\u00a0=\u00a0BNDT[15:0]\u00a0=\u00a00):\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a01, all GPDMA_CxBR1 fields are updated by the next LLI in the memory.\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\tif all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\tif GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI and data transfer.",
                "width": 11
              },
              "SDEC": {
                "bit": 28,
                "description": "source address decrement"
              },
              "DDEC": {
                "bit": 29,
                "description": "destination address decrement"
              },
              "BRSDEC": {
                "bit": 30,
                "description": "Block repeat source address decrement\n\tNote: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer."
              },
              "BRDDEC": {
                "bit": 31,
                "description": "Block repeat destination address decrement\n\tNote: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer."
              }
            },
            "GPDMA_C12SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C12DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C12TR3": {
              "SAO": {
                "bit": 0,
                "description": "source address offset increment\n\tThe source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC\u00a0=\u00a01).\n\tNote: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.\n\tWhen the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 13
              },
              "DAO": {
                "bit": 16,
                "description": "destination address offset increment\n\tThe destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC\u00a0=\u00a01).\n\tNote: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 13
              }
            },
            "GPDMA_C12BR2": {
              "BRSAO": {
                "bit": 0,
                "description": "Block repeated source address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer.\n\tNote: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRDAO": {
                "bit": 16,
                "description": "Block repeated destination address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer.\n\tNote: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C12LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UB2": {
                "bit": 25,
                "description": "Update GPDMA_CxBR2 from memory\n\tThis bit controls the update of GPDMA_CxBR2 from the memory during the link transfer."
              },
              "UT3": {
                "bit": 26,
                "description": "Update GPDMA_CxTR3 from memory\n\tThis bit controls the update of GPDMA_CxTR3 from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C13LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C13FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C13SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C13CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C13TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C13TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C13BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRC": {
                "bit": 16,
                "description": "Block repeat counter\n\tThis field contains the number of repetitions of the current block (0 to 2047).\n\tWhen the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer.\n\tOnce the last block transfer is completed (BRC[10:0]\u00a0=\u00a0BNDT[15:0]\u00a0=\u00a00):\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a01, all GPDMA_CxBR1 fields are updated by the next LLI in the memory.\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\tif all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\tif GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI and data transfer.",
                "width": 11
              },
              "SDEC": {
                "bit": 28,
                "description": "source address decrement"
              },
              "DDEC": {
                "bit": 29,
                "description": "destination address decrement"
              },
              "BRSDEC": {
                "bit": 30,
                "description": "Block repeat source address decrement\n\tNote: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer."
              },
              "BRDDEC": {
                "bit": 31,
                "description": "Block repeat destination address decrement\n\tNote: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer."
              }
            },
            "GPDMA_C13SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C13DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C13TR3": {
              "SAO": {
                "bit": 0,
                "description": "source address offset increment\n\tThe source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC\u00a0=\u00a01).\n\tNote: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.\n\tWhen the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 13
              },
              "DAO": {
                "bit": 16,
                "description": "destination address offset increment\n\tThe destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC\u00a0=\u00a01).\n\tNote: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 13
              }
            },
            "GPDMA_C13BR2": {
              "BRSAO": {
                "bit": 0,
                "description": "Block repeated source address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer.\n\tNote: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRDAO": {
                "bit": 16,
                "description": "Block repeated destination address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer.\n\tNote: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C13LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UB2": {
                "bit": 25,
                "description": "Update GPDMA_CxBR2 from memory\n\tThis bit controls the update of GPDMA_CxBR2 from the memory during the link transfer."
              },
              "UT3": {
                "bit": 26,
                "description": "Update GPDMA_CxTR3 from memory\n\tThis bit controls the update of GPDMA_CxTR3 from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C14LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C14FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C14SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C14CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C14TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C14TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C14BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRC": {
                "bit": 16,
                "description": "Block repeat counter\n\tThis field contains the number of repetitions of the current block (0 to 2047).\n\tWhen the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer.\n\tOnce the last block transfer is completed (BRC[10:0]\u00a0=\u00a0BNDT[15:0]\u00a0=\u00a00):\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a01, all GPDMA_CxBR1 fields are updated by the next LLI in the memory.\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\tif all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\tif GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI and data transfer.",
                "width": 11
              },
              "SDEC": {
                "bit": 28,
                "description": "source address decrement"
              },
              "DDEC": {
                "bit": 29,
                "description": "destination address decrement"
              },
              "BRSDEC": {
                "bit": 30,
                "description": "Block repeat source address decrement\n\tNote: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer."
              },
              "BRDDEC": {
                "bit": 31,
                "description": "Block repeat destination address decrement\n\tNote: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer."
              }
            },
            "GPDMA_C14SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C14DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C14TR3": {
              "SAO": {
                "bit": 0,
                "description": "source address offset increment\n\tThe source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC\u00a0=\u00a01).\n\tNote: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.\n\tWhen the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 13
              },
              "DAO": {
                "bit": 16,
                "description": "destination address offset increment\n\tThe destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC\u00a0=\u00a01).\n\tNote: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 13
              }
            },
            "GPDMA_C14BR2": {
              "BRSAO": {
                "bit": 0,
                "description": "Block repeated source address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer.\n\tNote: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRDAO": {
                "bit": 16,
                "description": "Block repeated destination address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer.\n\tNote: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C14LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UB2": {
                "bit": 25,
                "description": "Update GPDMA_CxBR2 from memory\n\tThis bit controls the update of GPDMA_CxBR2 from the memory during the link transfer."
              },
              "UT3": {
                "bit": 26,
                "description": "Update GPDMA_CxTR3 from memory\n\tThis bit controls the update of GPDMA_CxTR3 from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            },
            "GPDMA_C15LBAR": {
              "LBA": {
                "bit": 16,
                "description": "linked-list base address of GPDMA channel x",
                "width": 16
              }
            },
            "GPDMA_C15FCR": {
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag clear"
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag clear"
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag clear"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag clear"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag clear"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag clear"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag clear"
              }
            },
            "GPDMA_C15SR": {
              "IDLEF": {
                "bit": 0,
                "description": "idle flag\n\tThis idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN\u00a0=\u00a01) with a valid channel configuration (no USEF to be immediately reported).\n\tThis idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state)."
              },
              "TCF": {
                "bit": 8,
                "description": "transfer complete flag\n\tA transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0])."
              },
              "HTF": {
                "bit": 9,
                "description": "half transfer flag\n\tAn half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).\n\tAn half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination.\n\tAn half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination."
              },
              "DTEF": {
                "bit": 10,
                "description": "data transfer error flag"
              },
              "ULEF": {
                "bit": 11,
                "description": "update link transfer error flag"
              },
              "USEF": {
                "bit": 12,
                "description": "user setting error flag"
              },
              "SUSPF": {
                "bit": 13,
                "description": "completed suspension flag"
              },
              "TOF": {
                "bit": 14,
                "description": "trigger overrun flag"
              },
              "FIFOL": {
                "bit": 16,
                "description": "monitored FIFO level\n\tNumber of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words).\n\tNote: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF\u00a0=\u00a01).",
                "width": 8
              }
            },
            "GPDMA_C15CR": {
              "EN": {
                "bit": 0,
                "description": "enable\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else:\n\tthis bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI).\n\tElse, this bit can be asserted by software.\n\tWriting 0 into this EN bit is ignored."
              },
              "RESET": {
                "bit": 1,
                "description": "reset\n\tThis bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0).\n\tThe reset is effective when the channel is in steady state, meaning one of the following:\n\t- active channel in suspended state (GPDMA_CxSR.SUSPF\u00a0=\u00a01 and GPDMA_CxSR.IDLEF\u00a0=\u00a0GPDMA_CxCR.EN\u00a0=\u00a01)\n\t- channel in disabled state (GPDMA_CxSR.IDLEF\u00a0=\u00a01 and GPDMA_CxCR.EN\u00a0=\u00a00).\n\tAfter writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in )."
              },
              "SUSP": {
                "bit": 2,
                "description": "suspend\n\tWriting 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else:\n\tSoftware must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports.\n\tThe software must write 0 in order to resume a suspended channel, following the programming sequence detailed in ."
              },
              "TCIE": {
                "bit": 8,
                "description": "transfer complete interrupt enable"
              },
              "HTIE": {
                "bit": 9,
                "description": "half transfer complete interrupt enable"
              },
              "DTEIE": {
                "bit": 10,
                "description": "data transfer error interrupt enable"
              },
              "ULEIE": {
                "bit": 11,
                "description": "update link transfer error interrupt enable"
              },
              "USEIE": {
                "bit": 12,
                "description": "user setting error interrupt enable"
              },
              "SUSPIE": {
                "bit": 13,
                "description": "completed suspension interrupt enable"
              },
              "TOIE": {
                "bit": 14,
                "description": "trigger overrun interrupt enable"
              },
              "LSM": {
                "bit": 16,
                "description": "Link step mode\n\tFirst the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00 and GPDMA_CxBR1.BRC[10:0]\u00a0=\u00a00 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "LAP": {
                "bit": 17,
                "description": "linked-list allocated port\n\tThis bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory.\n\tNote: This bit must be written when EN=0. This bit is read-only when EN=1."
              },
              "PRIO": {
                "bit": 22,
                "description": "priority level of the channel x GPDMA transfer versus others\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01.",
                "width": 2
              }
            },
            "GPDMA_C15TR1": {
              "SDW_LOG2": {
                "bit": 0,
                "description": "binary logarithm of the source data width of a burst in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued.\n\tA source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued.\n\tA source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.",
                "width": 2
              },
              "SINC": {
                "bit": 3,
                "description": "source incrementing burst\n\tThe source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "SBL_1": {
                "bit": 4,
                "description": "source burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If SBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "PAM": {
                "bit": 11,
                "description": "padding/alignment mode\n\tIf DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored.\n\tElse:\n\t- Case 1: If destination data width > source data width\n\t1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer\n\t- Case 2: If destination data width < source data width\n\t1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination\n\tNote:",
                "width": 2
              },
              "SBX": {
                "bit": 13,
                "description": "source byte exchange within the unaligned half-word of each source word\n\tIf the source data width is shorter than a word, this bit is ignored.\n\tIf the source data width is a word:"
              },
              "SAP": {
                "bit": 14,
                "description": "source allocated port\n\tThis bit is used to allocate the master port for the source transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "SSEC": {
                "bit": 15,
                "description": "security attribute of the GPDMA transfer from the source\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=1\u00a0. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure."
              },
              "DDW_LOG2": {
                "bit": 16,
                "description": "binary logarithm of the destination data width of a burst, in bytes\n\tNote: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued.\n\tA destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.",
                "width": 2
              },
              "DINC": {
                "bit": 19,
                "description": "destination incrementing burst\n\tThe destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer."
              },
              "DBL_1": {
                "bit": 20,
                "description": "destination burst length minus 1, between 0 and 63\n\tThe burst length unit is one data named beat within a burst. If DBL_1[5:0]\u00a0=0\u00a0, the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0].\n\tNote: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol.\n\tIf a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.",
                "width": 6
              },
              "DBX": {
                "bit": 26,
                "description": "destination byte exchange\n\tIf the destination data size is a byte, this bit is ignored.\n\tIf the destination data size is not a byte:"
              },
              "DHX": {
                "bit": 27,
                "description": "destination half-word exchange\n\tIf the destination data size is shorter than a word, this bit is ignored.\n\tIf the destination data size is a word:"
              },
              "DAP": {
                "bit": 30,
                "description": "destination allocated port\n\tThis bit is used to allocate the master port for the destination transfer\n\tNote: This bit must be written when EN\u00a0=\u00a00. This bit is read-only when EN\u00a0=\u00a01."
              },
              "DSEC": {
                "bit": 31,
                "description": "security attribute of the GPDMA transfer to the destination\n\tIf GPDMA_SECCFGR.SECx\u00a0=\u00a01 and the access is secure:\n\tThis is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx\u00a0=\u00a01. A secure write is ignored when GPDMA_SECCFGR.SECx\u00a0=\u00a00.\n\tWhen GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure."
              }
            },
            "GPDMA_C15TR2": {
              "REQSEL": {
                "bit": 0,
                "description": "GPDMA hardware request selection\n\tThese bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per .\n\tThe user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN\u00a0=\u00a01 and GPDMA_CxTR2.SWREQ\u00a0=\u00a00 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.",
                "width": 7
              },
              "SWREQ": {
                "bit": 9,
                "description": "software request\n\tThis bit is internally taken into account when GPDMA_CxCR.EN is asserted."
              },
              "DREQ": {
                "bit": 10,
                "description": "destination hardware request\n\tThis bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer). Else:\n\tNote:"
              },
              "BREQ": {
                "bit": 11,
                "description": "Block hardware request\n\tIf the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ\u00a0=\u00a01 (software request for a memory-to-memory transfer), this bit is ignored. Else:"
              },
              "TRIGM": {
                "bit": 14,
                "description": "trigger mode\n\tThese bits define the transfer granularity for its conditioning by the trigger.\n\tIf the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0]\u00a0=\u00a000 or 11, these TRIGM[1:0] bits are ignored.\n\tElse, a GPDMA transfer is conditioned by at least one trigger hit:\n\tfirst burst read of a 2D/repeated block transfer is conditioned by one hit trigger.\n\t\u2013 If the peripheral is programmed as a source (DREQ\u00a0=\u00a00) of the LLI data transfer, each programmed burst read is conditioned.\n\t\u2013 If the peripheral is programmed as a destination (DREQ\u00a0=\u00a01) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit.\n\tThe GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0]\u00a0=\u00a001 or respectively TRIGPOL[1:0]\u00a0=\u00a010).\n\tThe monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled.\n\tTransferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger.\n\tAfter a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF\u00a0=1\u00a0), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE\u00a0=\u00a01). The channel is not automatically disabled by hardware due to a trigger overrun.\n\tNote: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0]\u00a0=\u00a011 and (SWREQ\u00a0=1\u00a0 or (SWREQ\u00a0=\u00a00 and DREQ\u00a0=0\u00a0)), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger.\n\tWhen the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0]\u00a0=\u00a011 and SWREQ\u00a0=\u00a00 and DREQ\u00a0=\u00a01), this shortened destination burst transfer is conditioned once by the trigger.",
                "width": 2
              },
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger event input selection\n\tThese bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0]\u00a0\u2260\u00a000.",
                "width": 6
              },
              "TRIGPOL": {
                "bit": 24,
                "description": "trigger event polarity\n\tThese bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].",
                "width": 2
              },
              "TCEM": {
                "bit": 30,
                "description": "transfer complete event mode\n\tThese bits define the transfer granularity for the transfer complete and half transfer complete events generation.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=\u00a00), then neither the complete transfer event nor the half transfer event is generated.\n\tNote: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0]\u00a0=0\u00a0), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.",
                "width": 2
              }
            },
            "GPDMA_C15BR1": {
              "BNDT": {
                "bit": 0,
                "description": "block number of data bytes to transfer from the source\n\tBlock size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64\u00a0Kbytes -1.\n\tOnce the last data transfer is completed (BNDT[15:0]\u00a0=\u00a00):\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a01, this field is updated by the LLI in the memory.\n\t- if GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\t- if all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\t- if GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI data transfer.\n\tNote: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.\n\tWhen configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRC": {
                "bit": 16,
                "description": "Block repeat counter\n\tThis field contains the number of repetitions of the current block (0 to 2047).\n\tWhen the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer.\n\tOnce the last block transfer is completed (BRC[10:0]\u00a0=\u00a0BNDT[15:0]\u00a0=\u00a00):\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a01, all GPDMA_CxBR1 fields are updated by the next LLI in the memory.\n\tIf GPDMA_CxLLR.UB1\u00a0=\u00a00 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value.\n\tif all GPDMA_CxLLR.Uxx\u00a0=\u00a00 and if GPDMA_CxLLR.LA[15:0]\u00a0\u2260\u00a00, this field is internally restored to the programmed value (infinite/continuous last LLI).\n\tif GPDMA_CxLLR\u00a0=\u00a00, this field is kept as zero following the last LLI and data transfer.",
                "width": 11
              },
              "SDEC": {
                "bit": 28,
                "description": "source address decrement"
              },
              "DDEC": {
                "bit": 29,
                "description": "destination address decrement"
              },
              "BRSDEC": {
                "bit": 30,
                "description": "Block repeat source address decrement\n\tNote: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer."
              },
              "BRDDEC": {
                "bit": 31,
                "description": "Block repeat destination address decrement\n\tNote: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer."
              }
            },
            "GPDMA_C15SAR": {
              "SA": {
                "bit": 0,
                "description": "source address\n\tThis field is the pointer to the address from which the next data is read.\n\tDuring the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read.\n\tDuring the channel activity, this address is updated after each completed source burst, consequently to:\n\tthe programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0]\n\tthe additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0]\n\tonce/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA\u00a0=\u00a01.\n\tNote: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.\n\tWhen the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 32
              }
            },
            "GPDMA_C15DAR": {
              "DA": {
                "bit": 0,
                "description": "destination address\n\tThis field is the pointer to the address from which the next data is written.\n\tDuring the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written.\n\tDuring the channel activity, this address is updated after each completed destination burst, consequently to:\n\tthe programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0]\n\tthe additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0]\n\tonce/if completed destination block transfer, for a channel x with 2D addressing capability (x\u00a0=\u00a012\u00a0to\u00a015), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0]\n\tIn linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA\u00a0=\u00a01.\n\tNote: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 32
              }
            },
            "GPDMA_C15TR3": {
              "SAO": {
                "bit": 0,
                "description": "source address offset increment\n\tThe source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC\u00a0=\u00a01).\n\tNote: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.\n\tWhen the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.",
                "width": 13
              },
              "DAO": {
                "bit": 16,
                "description": "destination address offset increment\n\tThe destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC\u00a0=\u00a01).\n\tNote: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.",
                "width": 13
              }
            },
            "GPDMA_C15BR2": {
              "BRSAO": {
                "bit": 0,
                "description": "Block repeated source address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer.\n\tNote: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              },
              "BRDAO": {
                "bit": 16,
                "description": "Block repeated destination address offset\n\tFor a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer.\n\tNote: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.",
                "width": 16
              }
            },
            "GPDMA_C15LLR": {
              "LA": {
                "bit": 2,
                "description": "pointer (16-bit low-significant address) to the next linked-list data structure\n\tIf UT1\u00a0=\u00a0UT2\u00a0=\u00a0UB1\u00a0=\u00a0USA\u00a0=\u00a0UDA\u00a0=\u00a0ULL\u00a0=\u00a00 and if LA[15:20]\u00a0=\u00a00, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file.\n\tElse, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR).\n\tNote: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.",
                "width": 14
              },
              "ULL": {
                "bit": 16,
                "description": "Update GPDMA_CxLLR register from memory\n\tThis bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer."
              },
              "UB2": {
                "bit": 25,
                "description": "Update GPDMA_CxBR2 from memory\n\tThis bit controls the update of GPDMA_CxBR2 from the memory during the link transfer."
              },
              "UT3": {
                "bit": 26,
                "description": "Update GPDMA_CxTR3 from memory\n\tThis bit controls the update of GPDMA_CxTR3 from the memory during the link transfer."
              },
              "UDA": {
                "bit": 27,
                "description": "Update GPDMA_CxDAR register from memory\n\tThis bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer."
              },
              "USA": {
                "bit": 28,
                "description": "update GPDMA_CxSAR from memory\n\tThis bit controls the update of GPDMA_CxSAR from the memory during the link transfer."
              },
              "UB1": {
                "bit": 29,
                "description": "Update GPDMA_CxBR1 from memory\n\tThis bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1\u00a0=\u00a00 and if GPDMA_CxLLR\u00a0\u2260\u00a00, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer."
              },
              "UT2": {
                "bit": 30,
                "description": "Update GPDMA_CxTR2 from memory\n\tThis bit controls the update of GPDMA_CxTR2 from the memory during the link transfer."
              },
              "UT1": {
                "bit": 31,
                "description": "Update GPDMA_CxTR1 from memory\n\tThis bit controls the update of GPDMA_CxTR1 from the memory during the link transfer."
              }
            }
          }
        },
        "SPI": {
          "instances": [
            {
              "name": "SPI1",
              "base": "0x40013000",
              "irq": 59
            },
            {
              "name": "SEC_SPI1",
              "base": "0x50013000"
            },
            {
              "name": "SPI2",
              "base": "0x40003800",
              "irq": 60
            },
            {
              "name": "SEC_SPI2",
              "base": "0x50003800"
            },
            {
              "name": "SPI3",
              "base": "0x46002000",
              "irq": 99
            },
            {
              "name": "SEC_SPI3",
              "base": "0x56002000"
            },
            {
              "name": "OCTOSPI1",
              "base": "0x420D1400",
              "irq": 76
            },
            {
              "name": "SEC_OCTOSPI1",
              "base": "0x520D1400"
            },
            {
              "name": "OCTOSPI2",
              "base": "0x420D2400",
              "irq": 120
            },
            {
              "name": "SEC_OCTOSPI2",
              "base": "0x520D2400"
            },
            {
              "name": "OCTOSPIM",
              "base": "0x420C4000"
            },
            {
              "name": "SEC_OCTOSPIM",
              "base": "0x520C4000"
            }
          ],
          "registers": {
            "SPI_CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "serial peripheral enable\nThis bit is set by and cleared by software.\nWhen SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0.\nWhen SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero.\nSPE is cleared and cannot be set when MODF error flag is active."
            },
            "SPI_CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "number of data at current transfer\nWhen these bits are changed by software, the SPI has to be disabled.\nEndless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled.\nNote: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value."
            },
            "SPI_CFG1": {
              "offset": "0x08",
              "size": 32,
              "description": "SPI configuration register 1"
            },
            "SPI_CFG2": {
              "offset": "0x0C",
              "size": 32,
              "description": "SPI configuration register 2"
            },
            "SPI_IER": {
              "offset": "0x10",
              "size": 32,
              "description": "RXP interrupt enable"
            },
            "SPI_SR": {
              "offset": "0x14",
              "size": 32,
              "description": "Rx-Packet available\nRXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO."
            },
            "SPI_IFCR": {
              "offset": "0x18",
              "size": 32,
              "description": "end of transfer flag clear\nWriting a 1 into this bit clears EOT flag in the SPI_SR register"
            },
            "SPI_AUTOCR": {
              "offset": "0x1C",
              "size": 32,
              "description": "trigger selection (refer ).\n...\nNote: these bits can be written only when SPE\u00a0=\u00a00."
            },
            "SPI_TXDR": {
              "offset": "0x20",
              "size": 32,
              "description": "transmit data register\nThe register serves as an interface with TxFIFO. A write to it accesses TxFIFO.\nNote: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read.\nNote: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access.\nhalfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access.\nword-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access.\nWrite access of this register less than the configured data size is forbidden."
            },
            "SPI_RXDR": {
              "offset": "0x30",
              "size": 32,
              "description": "receive data register\nThe register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed.\nNote: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored.\nNote: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access\nhalfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access\nword-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access.\nRead access of this register less than the configured data size is forbidden."
            },
            "SPI_CRCPOLY": {
              "offset": "0x40",
              "size": 32,
              "description": "SPI polynomial register"
            },
            "SPI_TXCRC": {
              "offset": "0x44",
              "size": 32,
              "description": "CRC register for transmitter\nWhen CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register.\nThe number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register.\nNote: a read to this register when the communication is ongoing could return an incorrect value.\nNote: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.\nNote: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case."
            },
            "SPI_RXCRC": {
              "offset": "0x48",
              "size": 32,
              "description": "CRC register for receiver\nWhen CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register.\nThe number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register.\nNote: a read to this register when the communication is ongoing could return an incorrect value.\nRXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.\nNote: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case."
            },
            "SPI_UDRDR": {
              "offset": "0x4C",
              "size": 32,
              "description": "SPI underrun data register"
            }
          },
          "bits": {
            "SPI_CR1": {
              "SPE": {
                "bit": 0,
                "description": "serial peripheral enable\nThis bit is set by and cleared by software.\nWhen SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0.\nWhen SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero.\nSPE is cleared and cannot be set when MODF error flag is active."
              },
              "MASRX": {
                "bit": 8,
                "description": "master automatic suspension in Receive mode\nThis bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition.\nWhen SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay.\nThis is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension."
              },
              "CSTART": {
                "bit": 9,
                "description": "master transfer start\nThis bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted.\nIn SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO."
              },
              "CSUSP": {
                "bit": 10,
                "description": "master SUSPend request\nThis bit reads as zero.\nIn Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction.\nThe Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode.\nAfter software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts."
              },
              "HDDIR": {
                "bit": 11,
                "description": "Rx/Tx direction at Half-duplex mode\nIn Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration."
              },
              "SSI": {
                "bit": 12,
                "description": "internal SS signal input level\nThis bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored."
              },
              "CRC33_17": {
                "bit": 13,
                "description": "32-bit CRC polynomial configuration"
              },
              "RCRCINI": {
                "bit": 14,
                "description": "CRC calculation initialization pattern control for receiver"
              },
              "TCRCINI": {
                "bit": 15,
                "description": "CRC calculation initialization pattern control for transmitter"
              },
              "IOLOCK": {
                "bit": 16,
                "description": "locking the AF configuration of associated IOs\nThis bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0.\nWhen this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set."
              }
            },
            "SPI_CR2": {
              "TSIZE": {
                "bit": 0,
                "description": "number of data at current transfer\nWhen these bits are changed by software, the SPI has to be disabled.\nEndless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled.\nNote: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.",
                "width": 16
              }
            },
            "SPI_CFG1": {
              "DSIZE": {
                "bit": 0,
                "description": "number of bits in at single SPI data frame\n.....\nNote: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size:\n00xxx: 8-bits\n01xxx: 16-bits\n10xxx: 24-bits\n11xxx: 32-bits.",
                "width": 5
              },
              "FTHLV": {
                "bit": 5,
                "description": "FIFO threshold level\nDefines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space.\nSPI interface is more efficient if configured packet sizes are aligned with data register access parallelism:\nIf SPI data register is accessed as a 16-bit register and DSIZE \u0089\u00a4 8 bit, better to select FTHLV\u00a0=\u00a02, 4, 6.\nIf SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV\u00a0=\u00a02, 4, 6, while if DSIZE \u0089\u00a4\u00a08bit, better to select FTHLV\u00a0=\u00a04, 8, 12.\nNote: FTHLV[3:2] bits are reserved at instances with limited set of features",
                "width": 4
              },
              "UDRCFG": {
                "bit": 9,
                "description": "behavior of slave transmitter at underrun condition\nFor more details see underrun condition."
              },
              "RXDMAEN": {
                "bit": 14,
                "description": "Rx DMA stream enable"
              },
              "TXDMAEN": {
                "bit": 15,
                "description": "Tx DMA stream enable"
              },
              "CRCSIZE": {
                "bit": 16,
                "description": "length of CRC frame to be transacted and compared\nMost significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting.\n.....\nThe value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance.\nNote: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.",
                "width": 5
              },
              "CRCEN": {
                "bit": 22,
                "description": "hardware CRC computation enable"
              },
              "MBR": {
                "bit": 28,
                "description": "master baud rate prescaler setting\nNote: MBR setting is considered at slave working at TI mode, too (see mode).",
                "width": 3
              },
              "BPASS": {
                "bit": 31,
                "description": "bypass of the prescaler at master baud rate clock generator"
              }
            },
            "SPI_CFG2": {
              "MSSI": {
                "bit": 0,
                "description": "Master SS Idleness\nSpecifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled.\n...\nNote: This feature is not supported in TI mode.\nTo include the delay, the SPI must be disabled and re-enabled between sessions.",
                "width": 4
              },
              "MIDI": {
                "bit": 4,
                "description": "master Inter-Data Idleness\nSpecifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode.\n...\nNote: This feature is not supported in TI mode.",
                "width": 4
              },
              "RDIOM": {
                "bit": 13,
                "description": "RDY signal input/output management\nNote: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero."
              },
              "RDIOP": {
                "bit": 14,
                "description": "RDY signal input/output polarity"
              },
              "IOSWP": {
                "bit": 15,
                "description": "swap functionality of MISO and MOSI pins\nWhen this bit is set, the function of MISO and MOSI pins alternate functions are inverted.\nOriginal MISO pin becomes MOSI and original MOSI pin becomes MISO."
              },
              "COMM": {
                "bit": 17,
                "description": "SPI Communication Mode",
                "width": 2
              },
              "SP": {
                "bit": 19,
                "description": "serial protocol\nothers: reserved, must not be used",
                "width": 3
              },
              "MASTER": {
                "bit": 22,
                "description": "SPI Master"
              },
              "LSBFRST": {
                "bit": 23,
                "description": "data frame format"
              },
              "CPHA": {
                "bit": 24,
                "description": "clock phase"
              },
              "CPOL": {
                "bit": 25,
                "description": "clock polarity"
              },
              "SSM": {
                "bit": 26,
                "description": "software management of SS signal input\nWhen master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error."
              },
              "SSIOP": {
                "bit": 28,
                "description": "SS input/output polarity"
              },
              "SSOE": {
                "bit": 29,
                "description": "SS output enable\nThis bit is taken into account in Master mode only"
              },
              "SSOM": {
                "bit": 30,
                "description": "SS output management in Master mode\nThis bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers."
              },
              "AFCNTR": {
                "bit": 31,
                "description": "alternate function GPIOs control\nThis bit is taken into account when SPE=0 only\nWhen SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration."
              }
            },
            "SPI_IER": {
              "RXPIE": {
                "bit": 0,
                "description": "RXP interrupt enable"
              },
              "TXPIE": {
                "bit": 1,
                "description": "TXP interrupt enable\nTXPIE is set by software and cleared by TXTF flag set event."
              },
              "DXPIE": {
                "bit": 2,
                "description": "DXP interrupt enabled\nDXPIE is set by software and cleared by TXTF flag set event."
              },
              "EOTIE": {
                "bit": 3,
                "description": "EOT, SUSP and TXC interrupt enable"
              },
              "TXTFIE": {
                "bit": 4,
                "description": "TXTFIE interrupt enable"
              },
              "UDRIE": {
                "bit": 5,
                "description": "UDR interrupt enable"
              },
              "OVRIE": {
                "bit": 6,
                "description": "OVR interrupt enable"
              },
              "CRCEIE": {
                "bit": 7,
                "description": "CRC error interrupt enable"
              },
              "TIFREIE": {
                "bit": 8,
                "description": "TIFRE interrupt enable"
              },
              "MODFIE": {
                "bit": 9,
                "description": "mode Fault interrupt enable"
              }
            },
            "SPI_SR": {
              "RXP": {
                "bit": 0,
                "description": "Rx-Packet available\nRXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO."
              },
              "TXP": {
                "bit": 1,
                "description": "Tx-Packet space available\nTXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO."
              },
              "DXP": {
                "bit": 2,
                "description": "duplex packet\nDXP flag is set whenever both TXP and RXP flags are set regardless SPI mode."
              },
              "EOT": {
                "bit": 3,
                "description": "end of transfer\nEOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR.\nEOT flag triggers an interrupt if EOTIE bit is set.\nIf DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot.\nIn master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction.\nTo restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed."
              },
              "TXTF": {
                "bit": 4,
                "description": "transmission transfer filled\nTXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO.\nThis bit is cleared by software write 1 to TXTFC bit at SPI_IFCR\nTXTF flag triggers an interrupt if TXTFIE bit is set.\nTXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts."
              },
              "UDR": {
                "bit": 5,
                "description": "underrun at slave transmission mode\nThis bit is cleared by writing 1 to UDRC bit at SPI_IFCR\nNote: UDR flag applies to Slave mode only"
              },
              "OVR": {
                "bit": 6,
                "description": "overrun\nThis bit is cleared by writing 1 to OVRC bit at SPI_IFCR"
              },
              "CRCE": {
                "bit": 7,
                "description": "CRC error\nThis bit is cleared by writing 1 to CRCEC bit at SPI_IFCR"
              },
              "TIFRE": {
                "bit": 8,
                "description": "TI frame format error\nThis bit is cleared by writing 1 to TIFREC bit at SPI_IFCR"
              },
              "MODF": {
                "bit": 9,
                "description": "mode fault\nThis bit is cleared by writing 1 to MODFC bit at SPI_IFCR"
              },
              "SUSP": {
                "bit": 11,
                "description": "suspension status\nIn Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition.\nSUSP generates an interrupt when EOTIE is set.\nThis bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR."
              },
              "TXC": {
                "bit": 12,
                "description": "TxFIFO transmission complete\nThe flag behavior depends on TSIZE setting.\nWhen TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus.\nIf TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set."
              },
              "RXPLVL": {
                "bit": 13,
                "description": "RxFIFO packing level\nWhen RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO.\nNote: (*): Optional value when data size is set up to 8-bit only.\nWhen data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.",
                "width": 2
              },
              "RXWNE": {
                "bit": 15,
                "description": "RxFIFO word not empty\nNote: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data."
              },
              "CTSIZE": {
                "bit": 16,
                "description": "number of data frames remaining in current TSIZE session\nThe value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode.\nNote: CTSIZE[15:0] bits are not available at instances with limited set of features",
                "width": 16
              }
            },
            "SPI_IFCR": {
              "EOTC": {
                "bit": 3,
                "description": "end of transfer flag clear\nWriting a 1 into this bit clears EOT flag in the SPI_SR register"
              },
              "TXTFC": {
                "bit": 4,
                "description": "transmission transfer filled flag clear\nWriting a 1 into this bit clears TXTF flag in the SPI_SR register"
              },
              "UDRC": {
                "bit": 5,
                "description": "underrun flag clear\nWriting a 1 into this bit clears UDR flag in the SPI_SR register"
              },
              "OVRC": {
                "bit": 6,
                "description": "overrun flag clear\nWriting a 1 into this bit clears OVR flag in the SPI_SR register"
              },
              "CRCEC": {
                "bit": 7,
                "description": "CRC error flag clear\nWriting a 1 into this bit clears CRCE flag in the SPI_SR register"
              },
              "TIFREC": {
                "bit": 8,
                "description": "TI frame format error flag clear\nWriting a 1 into this bit clears TIFRE flag in the SPI_SR register"
              },
              "MODFC": {
                "bit": 9,
                "description": "mode fault flag clear\nWriting a 1 into this bit clears MODF flag in the SPI_SR register"
              },
              "SUSPC": {
                "bit": 11,
                "description": "SUSPend flag clear\nWriting a 1 into this bit clears SUSP flag in the SPI_SR register"
              }
            },
            "SPI_AUTOCR": {
              "TRIGSEL": {
                "bit": 16,
                "description": "trigger selection (refer ).\n...\nNote: these bits can be written only when SPE\u00a0=\u00a00.",
                "width": 4
              },
              "TRIGPOL": {
                "bit": 20,
                "description": "trigger polarity\nNote: This bit can be written only when SPE\u00a0=\u00a00."
              },
              "TRIGEN": {
                "bit": 21,
                "description": "trigger of CSTART control enable\nNote: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled"
              }
            },
            "SPI_TXDR": {
              "TXDR": {
                "bit": 0,
                "description": "transmit data register\nThe register serves as an interface with TxFIFO. A write to it accesses TxFIFO.\nNote: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read.\nNote: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access.\nhalfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access.\nword-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access.\nWrite access of this register less than the configured data size is forbidden.",
                "width": 32
              }
            },
            "SPI_RXDR": {
              "RXDR": {
                "bit": 0,
                "description": "receive data register\nThe register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed.\nNote: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored.\nNote: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access\nhalfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access\nword-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access.\nRead access of this register less than the configured data size is forbidden.",
                "width": 32
              }
            },
            "SPI_CRCPOLY": {
              "CRCPOLY": {
                "bit": 0,
                "description": "CRC polynomial register\nThis register contains the polynomial for the CRC calculation.\nThe default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden.\nLength of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size).\nNote: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.",
                "width": 32
              }
            },
            "SPI_TXCRC": {
              "TXCRC": {
                "bit": 0,
                "description": "CRC register for transmitter\nWhen CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register.\nThe number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register.\nNote: a read to this register when the communication is ongoing could return an incorrect value.\nNote: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.\nNote: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.",
                "width": 32
              }
            },
            "SPI_RXCRC": {
              "RXCRC": {
                "bit": 0,
                "description": "CRC register for receiver\nWhen CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register.\nThe number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register.\nNote: a read to this register when the communication is ongoing could return an incorrect value.\nRXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.\nNote: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.",
                "width": 32
              }
            },
            "SPI_UDRDR": {
              "UDRDR": {
                "bit": 0,
                "description": "data at slave underrun condition\nThe register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register.\nNote: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.",
                "width": 32
              }
            }
          }
        },
        "SYSCFG": {
          "instances": [
            {
              "name": "SYSCFG",
              "base": "0x46000400"
            }
          ],
          "registers": {
            "SECCFGR": {
              "offset": "0x00",
              "size": 32,
              "description": "SYSCFG secure configuration\n          register"
            },
            "CFGR1": {
              "offset": "0x04",
              "size": 32,
              "description": "configuration register 1"
            },
            "FPUIMR": {
              "offset": "0x08",
              "size": 32,
              "description": "FPU interrupt mask register"
            },
            "CNSLCKR": {
              "offset": "0x0C",
              "size": 32,
              "description": "SYSCFG CPU non-secure lock\n          register"
            },
            "CSLOCKR": {
              "offset": "0x10",
              "size": 32,
              "description": "SYSCFG CPU secure lock\n          register"
            },
            "CFGR2": {
              "offset": "0x14",
              "size": 32,
              "description": "configuration register 2"
            },
            "MESR": {
              "offset": "0x18",
              "size": 32,
              "description": "memory erase status register"
            },
            "CCCSR": {
              "offset": "0x1C",
              "size": 32,
              "description": "compensation cell control/status register"
            },
            "CCVR": {
              "offset": "0x20",
              "size": 32,
              "description": "compensation cell value register"
            },
            "CCCR": {
              "offset": "0x24",
              "size": 32,
              "description": "compensation cell code register"
            },
            "RSSCMDR": {
              "offset": "0x2C",
              "size": 32,
              "description": "RSS command register"
            },
            "UCPDR": {
              "offset": "0x70",
              "size": 32,
              "description": "USB Type C and Power Delivery register"
            }
          },
          "bits": {
            "SECCFGR": {
              "SYSCFGSEC": {
                "bit": 0,
                "description": "SYSCFG clock control\n              security"
              },
              "CLASSBSEC": {
                "bit": 1,
                "description": "CLASSBSEC"
              },
              "FPUSEC": {
                "bit": 3,
                "description": "FPUSEC"
              }
            },
            "CFGR1": {
              "PB9_FMP": {
                "bit": 19,
                "description": "PB9_FMP"
              },
              "PB8_FMP": {
                "bit": 18,
                "description": "PB8_FMP"
              },
              "PB7_FMP": {
                "bit": 17,
                "description": "PB7_FMP"
              },
              "PB6_FMP": {
                "bit": 16,
                "description": "PB6_FMP"
              },
              "ANASWVDD": {
                "bit": 9,
                "description": "GPIO analog switch control voltage\n              selection"
              },
              "BOOSTEN": {
                "bit": 8,
                "description": "I/O analog switch voltage booster\n              enable"
              }
            },
            "FPUIMR": {
              "FPU_IE": {
                "bit": 0,
                "description": "Floating point unit interrupts enable\n              bits",
                "width": 6
              }
            },
            "CNSLCKR": {
              "LOCKNSVTOR": {
                "bit": 0,
                "description": "VTOR_NS register lock"
              },
              "LOCKNSMPU": {
                "bit": 1,
                "description": "Non-secure MPU registers\n              lock"
              }
            },
            "CSLOCKR": {
              "LOCKSVTAIRCR": {
                "bit": 0,
                "description": "LOCKSVTAIRCR"
              },
              "LOCKSMPU": {
                "bit": 1,
                "description": "LOCKSMPU"
              },
              "LOCKSAU": {
                "bit": 2,
                "description": "LOCKSAU"
              }
            },
            "CFGR2": {
              "ECCL": {
                "bit": 3,
                "description": "ECC Lock"
              },
              "PVDL": {
                "bit": 2,
                "description": "PVD lock enable bit"
              },
              "SPL": {
                "bit": 1,
                "description": "SRAM ECC lock bit"
              },
              "CLL": {
                "bit": 0,
                "description": "LOCKUP (hardfault) output enable\n              bit"
              }
            },
            "MESR": {
              "IPMEE": {
                "bit": 16,
                "description": "IPMEE"
              },
              "MCLR": {
                "bit": 0,
                "description": "MCLR"
              }
            },
            "CCCSR": {
              "EN1": {
                "bit": 0,
                "description": "EN1"
              },
              "CS1": {
                "bit": 1,
                "description": "CS1"
              },
              "EN2": {
                "bit": 2,
                "description": "EN2"
              },
              "CS2": {
                "bit": 3,
                "description": "CS2"
              },
              "RDY1": {
                "bit": 8,
                "description": "RDY1"
              },
              "RDY2": {
                "bit": 9,
                "description": "RDY2"
              }
            },
            "CCVR": {
              "NCV1": {
                "bit": 0,
                "description": "NCV1",
                "width": 4
              },
              "PCV1": {
                "bit": 4,
                "description": "PCV1",
                "width": 4
              },
              "NCV2": {
                "bit": 8,
                "description": "NCV2",
                "width": 4
              },
              "PCV2": {
                "bit": 12,
                "description": "PCV2",
                "width": 4
              }
            },
            "CCCR": {
              "NCC1": {
                "bit": 0,
                "description": "NCC1",
                "width": 4
              },
              "PCC1": {
                "bit": 4,
                "description": "PCC1",
                "width": 4
              },
              "NCC2": {
                "bit": 8,
                "description": "NCC2",
                "width": 4
              },
              "PCC2": {
                "bit": 12,
                "description": "PCC2",
                "width": 4
              }
            },
            "RSSCMDR": {
              "RSSCMD": {
                "bit": 0,
                "description": "RSS commands",
                "width": 16
              }
            },
            "UCPDR": {
              "CC1ENRXFILTER": {
                "bit": 0,
                "description": "CC1ENRXFILTER"
              },
              "CC2ENRXFILTER": {
                "bit": 1,
                "description": "CC2ENRXFILTER"
              }
            }
          }
        },
        "PKA": {
          "instances": [
            {
              "name": "PKA",
              "base": "0x420C2000",
              "irq": 97
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "Control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "PKA status register"
            },
            "CLRFR": {
              "offset": "0x08",
              "size": 32,
              "description": "PKA clear flag register"
            }
          },
          "bits": {
            "CR": {
              "OPERRIE": {
                "bit": 21,
                "description": "Operation error interrupt enable"
              },
              "ADDRERRIE": {
                "bit": 20,
                "description": "Address error interrupt\n              enable"
              },
              "RAMERRIE": {
                "bit": 19,
                "description": "RAM error interrupt enable"
              },
              "PROCENDIE": {
                "bit": 17,
                "description": "End of operation interrupt\n              enable"
              },
              "MODE": {
                "bit": 8,
                "description": "PKA Operation Mode",
                "width": 6
              },
              "START": {
                "bit": 1,
                "description": "Start the operation"
              },
              "EN": {
                "bit": 0,
                "description": "Peripheral Enable"
              }
            },
            "SR": {
              "INITOK": {
                "bit": 0,
                "description": "INITOK"
              },
              "BUSY": {
                "bit": 16,
                "description": "PKA operation is in\n              progress"
              },
              "PROCENDF": {
                "bit": 17,
                "description": "PKA End of Operation flag"
              },
              "RAMERRF": {
                "bit": 19,
                "description": "RAMERRF"
              },
              "ADDRERRF": {
                "bit": 20,
                "description": "ADDRERRF"
              },
              "OPERRF": {
                "bit": 21,
                "description": "OPERRF"
              }
            },
            "CLRFR": {
              "PROCENDFC": {
                "bit": 17,
                "description": "Clear PKA End of Operation\n              flag"
              },
              "RAMERRFC": {
                "bit": 19,
                "description": "RAMERRFC"
              },
              "ADDRERRFC": {
                "bit": 20,
                "description": "ADDRERRFC"
              },
              "OPERRFC": {
                "bit": 21,
                "description": "OPERRFC"
              }
            }
          }
        },
        "DBGMCU": {
          "instances": [
            {
              "name": "DBGMCU",
              "base": "0xE0044000"
            }
          ],
          "registers": {
            "IDCODE": {
              "offset": "0x00",
              "size": 32,
              "description": "DBGMCU_IDCODE"
            },
            "CR": {
              "offset": "0x04",
              "size": 32,
              "description": "Debug MCU configuration\n          register"
            },
            "APB1LFZR": {
              "offset": "0x08",
              "size": 32,
              "description": "Debug MCU APB1L peripheral freeze\n          register"
            },
            "APB1HFZR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Debug MCU APB1H peripheral freeze register"
            },
            "APB2FZR": {
              "offset": "0x10",
              "size": 32,
              "description": "Debug MCU APB2 peripheral freeze register"
            },
            "APB3FZR": {
              "offset": "0x14",
              "size": 32,
              "description": "Debug MCU APB3 peripheral freeze register"
            },
            "AHB1FZR": {
              "offset": "0x20",
              "size": 32,
              "description": "Debug MCU AHB1 peripheral freeze register"
            },
            "AHB3FZR": {
              "offset": "0x28",
              "size": 32,
              "description": "Debug MCU AHB3 peripheral freeze register"
            },
            "DBGMCU_SR": {
              "offset": "0xFC",
              "size": 32,
              "description": "DBGMCU status register"
            },
            "DBGMCU_DBG_AUTH_HOST": {
              "offset": "0x100",
              "size": 32,
              "description": "DBGMCU debug host authentication register"
            },
            "DBGMCU_DBG_AUTH_DEVICE": {
              "offset": "0x104",
              "size": 32,
              "description": "DBGMCU debug device authentication register"
            },
            "PIDR4": {
              "offset": "0xFD0",
              "size": 32,
              "description": "Debug MCU CoreSight peripheral identity register 4"
            },
            "PIDR0": {
              "offset": "0xFE0",
              "size": 32,
              "description": "Debug MCU CoreSight peripheral identity register 0"
            },
            "PIDR1": {
              "offset": "0xFE4",
              "size": 32,
              "description": "Debug MCU CoreSight peripheral identity register 1"
            },
            "PIDR2": {
              "offset": "0xFE8",
              "size": 32,
              "description": "Debug MCU CoreSight peripheral identity register 2"
            },
            "PIDR3": {
              "offset": "0xFEC",
              "size": 32,
              "description": "Debug MCU CoreSight peripheral identity register 3"
            },
            "CIDR0": {
              "offset": "0xFF0",
              "size": 32,
              "description": "Debug MCU CoreSight component identity register 0"
            },
            "CIDR1": {
              "offset": "0xFF4",
              "size": 32,
              "description": "Debug MCU CoreSight component identity register 1"
            },
            "CIDR2": {
              "offset": "0xFF8",
              "size": 32,
              "description": "Debug MCU CoreSight component identity register 2"
            },
            "CIDR3": {
              "offset": "0xFFC",
              "size": 32,
              "description": "Debug MCU CoreSight component identity register 3"
            }
          },
          "bits": {
            "IDCODE": {
              "DEV_ID": {
                "bit": 0,
                "description": "Device dentification",
                "width": 12
              },
              "REV_ID": {
                "bit": 16,
                "description": "Revision",
                "width": 16
              }
            },
            "CR": {
              "DBG_STOP": {
                "bit": 1,
                "description": "Debug Stop mode"
              },
              "DBG_STANDBY": {
                "bit": 2,
                "description": "Debug Standby mode"
              },
              "TRACE_IOEN": {
                "bit": 4,
                "description": "Trace pin assignment\n              control"
              },
              "TRACE_EN": {
                "bit": 5,
                "description": "trace port and clock\n              enable"
              },
              "TRACE_MODE": {
                "bit": 6,
                "description": "Trace pin assignment\n              control",
                "width": 2
              }
            },
            "APB1LFZR": {
              "DBG_TIM2_STOP": {
                "bit": 0,
                "description": "TIM2 stop in debug"
              },
              "DBG_TIM3_STOP": {
                "bit": 1,
                "description": "TIM3 stop in debug"
              },
              "DBG_TIM4_STOP": {
                "bit": 2,
                "description": "TIM4 stop in debug"
              },
              "DBG_TIM5_STOP": {
                "bit": 3,
                "description": "TIM5 stop in debug"
              },
              "DBG_TIM6_STOP": {
                "bit": 4,
                "description": "TIM6 stop in debug"
              },
              "DBG_TIM7_STOP": {
                "bit": 5,
                "description": "TIM7 stop in debug"
              },
              "DBG_WWDG_STOP": {
                "bit": 11,
                "description": "Window watchdog counter stop in debug"
              },
              "DBG_IWDG_STOP": {
                "bit": 12,
                "description": "Independent watchdog counter stop in debug"
              },
              "DBG_I2C1_STOP": {
                "bit": 21,
                "description": "I2C1 SMBUS timeout stop in debug"
              },
              "DBG_I2C2_STOP": {
                "bit": 22,
                "description": "I2C2 SMBUS timeout stop in debug"
              }
            },
            "APB1HFZR": {
              "DBG_I2C4_STOP": {
                "bit": 1,
                "description": "I2C4 stop in debug"
              },
              "DBG_LPTIM2_STOP": {
                "bit": 5,
                "description": "LPTIM2 stop in debug"
              }
            },
            "APB2FZR": {
              "DBG_TIM1_STOP": {
                "bit": 11,
                "description": "TIM1 counter stopped when core is\n              halted"
              },
              "DBG_TIM8_STOP": {
                "bit": 13,
                "description": "TIM8 stop in debug"
              },
              "DBG_TIM15_STOP": {
                "bit": 16,
                "description": "TIM15 counter stopped when core is\n              halted"
              },
              "DBG_TIM16_STOP": {
                "bit": 17,
                "description": "TIM16 counter stopped when core is\n              halted"
              },
              "DBG_TIM17_STOP": {
                "bit": 18,
                "description": "DBG_TIM17_STOP"
              }
            },
            "APB3FZR": {
              "DBG_I2C3_STOP": {
                "bit": 10,
                "description": "I2C3 stop in debug"
              },
              "DBG_LPTIM1_STOP": {
                "bit": 17,
                "description": "LPTIM1 stop in debug"
              },
              "DBG_LPTIM3_STOP": {
                "bit": 18,
                "description": "LPTIM3 stop in debug"
              },
              "DBG_LPTIM4_STOP": {
                "bit": 19,
                "description": "LPTIM4 stop in debug"
              },
              "DBG_RTC_STOP": {
                "bit": 30,
                "description": "RTC stop in debug"
              }
            },
            "AHB1FZR": {
              "DBG_GPDMA0_STOP": {
                "bit": 0,
                "description": "GPDMA channel 0 stop in debug"
              },
              "DBG_GPDMA1_STOP": {
                "bit": 1,
                "description": "GPDMA channel 1 stop in debug"
              },
              "DBG_GPDMA2_STOP": {
                "bit": 2,
                "description": "GPDMA channel 2 stop in debug"
              },
              "DBG_GPDMA3_STOP": {
                "bit": 3,
                "description": "GPDMA channel 3 stop in debug"
              },
              "DBG_GPDMA4_STOP": {
                "bit": 4,
                "description": "GPDMA channel 4 stop in debug"
              },
              "DBG_GPDMA5_STOP": {
                "bit": 5,
                "description": "GPDMA channel 5 stop in debug"
              },
              "DBG_GPDMA6_STOP": {
                "bit": 6,
                "description": "GPDMA channel 6 stop in debug"
              },
              "DBG_GPDMA7_STOP": {
                "bit": 7,
                "description": "GPDMA channel 7 stop in debug"
              },
              "DBG_GPDMA8_STOP": {
                "bit": 8,
                "description": "GPDMA channel 8 stop in debug"
              },
              "DBG_GPDMA9_STOP": {
                "bit": 9,
                "description": "GPDMA channel 9 stop in debug"
              },
              "DBG_GPDMA10_STOP": {
                "bit": 10,
                "description": "GPDMA channel 10 stop in debug"
              },
              "DBG_GPDMA11_STOP": {
                "bit": 11,
                "description": "GPDMA channel 11 stop in debug"
              },
              "DBG_GPDMA12_STOP": {
                "bit": 12,
                "description": "GPDMA channel 12 stop in debug"
              },
              "DBG_GPDMA13_STOP": {
                "bit": 13,
                "description": "GPDMA channel 13 stop in debug"
              },
              "DBG_GPDMA14_STOP": {
                "bit": 14,
                "description": "GPDMA channel 14 stop in debug"
              },
              "DBG_GPDMA15_STOP": {
                "bit": 15,
                "description": "GPDMA channel 15 stop in debug"
              }
            },
            "AHB3FZR": {
              "DBG_LPDMA0_STOP": {
                "bit": 0,
                "description": "LPDMA channel 0 stop in debug"
              },
              "DBG_LPDMA1_STOP": {
                "bit": 1,
                "description": "LPDMA channel 1 stop in debug"
              },
              "DBG_LPDMA2_STOP": {
                "bit": 2,
                "description": "LPDMA channel 2 stop in debug"
              },
              "DBG_LPDMA3_STOP": {
                "bit": 3,
                "description": "LPDMA channel 3 stop in debug"
              }
            },
            "DBGMCU_SR": {
              "AP_PRESENT": {
                "bit": 0,
                "description": "Bit n identifies whether access port AP n is present in device\n\tBit n\u00a0=\u00a00: APn absent\n\tBit n\u00a0=\u00a01: APn present",
                "width": 8
              },
              "AP_LOCKED": {
                "bit": 8,
                "description": "DECLARATION TO BE CONFIRMED by PRODUCT OWNER! Bit n identifies whether access port AP n is open (can be accessed via the debug port) or locked (debug access to the AP is blocked)\n\tBit n\u00a0=\u00a00: APn locked\n\tBit n\u00a0=\u00a01: APn enabled",
                "width": 8
              }
            },
            "DBGMCU_DBG_AUTH_HOST": {
              "AUTH_KEY": {
                "bit": 0,
                "description": "Device authentication key\n\tThe device specific 64-bit authentication key (OEM key) must be written to this register (in two successive 32-bit writes, least significant word first) to permit RDP regression. Writing a wrong key locks access to the device and prevent code execution from the Flash memory.",
                "width": 32
              }
            },
            "DBGMCU_DBG_AUTH_DEVICE": {
              "AUTH_ID": {
                "bit": 0,
                "description": "Device specific ID\n\tDevice specific ID used for RDP regression.",
                "width": 32
              }
            },
            "PIDR4": {
              "JEP106CON": {
                "bit": 0,
                "description": "JEP106 continuation code",
                "width": 4
              },
              "KCOUNT_4": {
                "bit": 4,
                "description": "register file size",
                "width": 4
              }
            },
            "PIDR0": {
              "PARTNUM": {
                "bit": 0,
                "description": "part number bits [7:0]",
                "width": 8
              }
            },
            "PIDR1": {
              "PARTNUM": {
                "bit": 0,
                "description": "part number bits [11:8]",
                "width": 4
              },
              "JEP106ID": {
                "bit": 4,
                "description": "JEP106 identity code bits [3:0]",
                "width": 4
              }
            },
            "PIDR2": {
              "JEP106ID": {
                "bit": 0,
                "description": "JEP106 identity code bits [6:4]",
                "width": 3
              },
              "JEDEC": {
                "bit": 3,
                "description": "JEDEC assigned value"
              },
              "REVISION": {
                "bit": 4,
                "description": "component revision number",
                "width": 4
              }
            },
            "PIDR3": {
              "CMOD": {
                "bit": 0,
                "description": "customer modified",
                "width": 4
              },
              "REVAND": {
                "bit": 4,
                "description": "metal fix version",
                "width": 4
              }
            },
            "CIDR0": {
              "PREAMBLE": {
                "bit": 0,
                "description": "component identification bits [7:0]",
                "width": 8
              }
            },
            "CIDR1": {
              "PREAMBLE": {
                "bit": 0,
                "description": "component identification bits [11:8]",
                "width": 4
              },
              "CLASS": {
                "bit": 4,
                "description": "component identification bits [15:12] - component class",
                "width": 4
              }
            },
            "CIDR2": {
              "PREAMBLE": {
                "bit": 0,
                "description": "component identification bits [23:16]",
                "width": 8
              }
            },
            "CIDR3": {
              "PREAMBLE": {
                "bit": 0,
                "description": "component identification bits [31:24]",
                "width": 8
              }
            }
          }
        },
        "USART": {
          "instances": [
            {
              "name": "LPUART1",
              "base": "0x46002400",
              "irq": 66
            },
            {
              "name": "SEC_LPUART1",
              "base": "0x56002400"
            },
            {
              "name": "USART1",
              "base": "0x40013800",
              "irq": 61
            },
            {
              "name": "SEC_USART1",
              "base": "0x50013800"
            },
            {
              "name": "USART2",
              "base": "0x40004400",
              "irq": 62
            },
            {
              "name": "SEC_USART2",
              "base": "0x50004400"
            },
            {
              "name": "USART3",
              "base": "0x40004800",
              "irq": 63
            },
            {
              "name": "SEC_USART3",
              "base": "0x50004800"
            },
            {
              "name": "UART4",
              "base": "0x40004C00",
              "irq": 64
            },
            {
              "name": "SEC_UART4",
              "base": "0x50004C00"
            },
            {
              "name": "UART5",
              "base": "0x40005000",
              "irq": 65
            },
            {
              "name": "SEC_UART5",
              "base": "0x50005000"
            }
          ],
          "registers": {
            "CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "Control register 1"
            },
            "CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "Control register 2"
            },
            "CR3": {
              "offset": "0x08",
              "size": 32,
              "description": "Control register 3"
            },
            "BRR": {
              "offset": "0x0C",
              "size": 32,
              "description": "Baud rate register"
            },
            "RQR": {
              "offset": "0x18",
              "size": 32,
              "description": "Request register"
            },
            "ISR": {
              "offset": "0x1C",
              "size": 32,
              "description": "Interrupt and status register"
            },
            "ICR": {
              "offset": "0x20",
              "size": 32,
              "description": "Interrupt flag clear register"
            },
            "RDR": {
              "offset": "0x24",
              "size": 32,
              "description": "Receive data register"
            },
            "TDR": {
              "offset": "0x28",
              "size": 32,
              "description": "Transmit data register"
            },
            "PRESC": {
              "offset": "0x2C",
              "size": 32,
              "description": "prescaler register"
            },
            "AUTOCR": {
              "offset": "0x30",
              "size": 32,
              "description": "Autonomous mode control register"
            }
          },
          "bits": {
            "CR1": {
              "RXFFIE": {
                "bit": 31,
                "description": "RXFFIE"
              },
              "TXFEIE": {
                "bit": 30,
                "description": "TXFEIE"
              },
              "FIFOEN": {
                "bit": 29,
                "description": "FIFOEN"
              },
              "M1": {
                "bit": 28,
                "description": "Word length"
              },
              "DEAT": {
                "bit": 21,
                "description": "DEAT",
                "width": 5
              },
              "DEDT": {
                "bit": 16,
                "description": "DEDT",
                "width": 5
              },
              "CMIE": {
                "bit": 14,
                "description": "Character match interrupt\n              enable"
              },
              "MME": {
                "bit": 13,
                "description": "Mute mode enable"
              },
              "M0": {
                "bit": 12,
                "description": "Word length"
              },
              "WAKE": {
                "bit": 11,
                "description": "Receiver wakeup method"
              },
              "PCE": {
                "bit": 10,
                "description": "Parity control enable"
              },
              "PS": {
                "bit": 9,
                "description": "Parity selection"
              },
              "PEIE": {
                "bit": 8,
                "description": "PE interrupt enable"
              },
              "TXFNFIE": {
                "bit": 7,
                "description": "TXFIFO not full interrupt enable"
              },
              "TCIE": {
                "bit": 6,
                "description": "Transmission complete interrupt\n              enable"
              },
              "RXFNEIE": {
                "bit": 5,
                "description": "RXFNEIE"
              },
              "IDLEIE": {
                "bit": 4,
                "description": "IDLE interrupt enable"
              },
              "TE": {
                "bit": 3,
                "description": "Transmitter enable"
              },
              "RE": {
                "bit": 2,
                "description": "Receiver enable"
              },
              "UESM": {
                "bit": 1,
                "description": "USART enable in Stop mode"
              },
              "UE": {
                "bit": 0,
                "description": "USART enable"
              }
            },
            "CR2": {
              "ADD": {
                "bit": 24,
                "description": "Address of the LPUART node",
                "width": 8
              },
              "MSBFIRST": {
                "bit": 19,
                "description": "Most significant bit first"
              },
              "DATAINV": {
                "bit": 18,
                "description": "Binary data inversion"
              },
              "TXINV": {
                "bit": 17,
                "description": "TX pin active level\n              inversion"
              },
              "RXINV": {
                "bit": 16,
                "description": "RX pin active level\n              inversion"
              },
              "SWAP": {
                "bit": 15,
                "description": "Swap TX/RX pins"
              },
              "STOP": {
                "bit": 12,
                "description": "STOP bits",
                "width": 2
              },
              "ADDM7": {
                "bit": 4,
                "description": "7-bit Address Detection/4-bit Address\n              Detection"
              }
            },
            "CR3": {
              "TXFTCFG": {
                "bit": 29,
                "description": "TXFTCFG",
                "width": 3
              },
              "RXFTIE": {
                "bit": 28,
                "description": "RXFTIE"
              },
              "RXFTCFG": {
                "bit": 25,
                "description": "RXFTCFG",
                "width": 3
              },
              "TXFTIE": {
                "bit": 23,
                "description": "TXFTIE"
              },
              "DEP": {
                "bit": 15,
                "description": "Driver enable polarity\n              selection"
              },
              "DEM": {
                "bit": 14,
                "description": "Driver enable mode"
              },
              "DDRE": {
                "bit": 13,
                "description": "DMA Disable on Reception\n              Error"
              },
              "OVRDIS": {
                "bit": 12,
                "description": "Overrun Disable"
              },
              "CTSIE": {
                "bit": 10,
                "description": "CTS interrupt enable"
              },
              "CTSE": {
                "bit": 9,
                "description": "CTS enable"
              },
              "RTSE": {
                "bit": 8,
                "description": "RTS enable"
              },
              "DMAT": {
                "bit": 7,
                "description": "DMA enable transmitter"
              },
              "DMAR": {
                "bit": 6,
                "description": "DMA enable receiver"
              },
              "HDSEL": {
                "bit": 3,
                "description": "Half-duplex selection"
              },
              "EIE": {
                "bit": 0,
                "description": "Error interrupt enable"
              }
            },
            "BRR": {
              "BRR": {
                "bit": 0,
                "description": "BRR",
                "width": 20
              }
            },
            "RQR": {
              "TXFRQ": {
                "bit": 4,
                "description": "TXFRQ"
              },
              "RXFRQ": {
                "bit": 3,
                "description": "Receive data flush request"
              },
              "MMRQ": {
                "bit": 2,
                "description": "Mute mode request"
              },
              "SBKRQ": {
                "bit": 1,
                "description": "Send break request"
              }
            },
            "ISR": {
              "TXFT": {
                "bit": 27,
                "description": "TXFT"
              },
              "RXFT": {
                "bit": 26,
                "description": "RXFT"
              },
              "RXFF": {
                "bit": 24,
                "description": "RXFF"
              },
              "TXFE": {
                "bit": 23,
                "description": "TXFE"
              },
              "REACK": {
                "bit": 22,
                "description": "REACK"
              },
              "TEACK": {
                "bit": 21,
                "description": "TEACK"
              },
              "RWU": {
                "bit": 19,
                "description": "RWU"
              },
              "SBKF": {
                "bit": 18,
                "description": "SBKF"
              },
              "CMF": {
                "bit": 17,
                "description": "CMF"
              },
              "BUSY": {
                "bit": 16,
                "description": "BUSY"
              },
              "CTS": {
                "bit": 10,
                "description": "CTS"
              },
              "CTSIF": {
                "bit": 9,
                "description": "CTSIF"
              },
              "TXFNF": {
                "bit": 7,
                "description": "TXFNF"
              },
              "TC": {
                "bit": 6,
                "description": "TC"
              },
              "RXFNE": {
                "bit": 5,
                "description": "RXFNE"
              },
              "IDLE": {
                "bit": 4,
                "description": "IDLE"
              },
              "ORE": {
                "bit": 3,
                "description": "ORE"
              },
              "NE": {
                "bit": 2,
                "description": "NE"
              },
              "FE": {
                "bit": 1,
                "description": "FE"
              },
              "PE": {
                "bit": 0,
                "description": "PE"
              }
            },
            "ICR": {
              "CMCF": {
                "bit": 17,
                "description": "Character match clear flag"
              },
              "CTSCF": {
                "bit": 9,
                "description": "CTS clear flag"
              },
              "TCCF": {
                "bit": 6,
                "description": "Transmission complete clear\n              flag"
              },
              "IDLECF": {
                "bit": 4,
                "description": "Idle line detected clear\n              flag"
              },
              "ORECF": {
                "bit": 3,
                "description": "Overrun error clear flag"
              },
              "NECF": {
                "bit": 2,
                "description": "Noise detected clear flag"
              },
              "FECF": {
                "bit": 1,
                "description": "Framing error clear flag"
              },
              "PECF": {
                "bit": 0,
                "description": "Parity error clear flag"
              }
            },
            "RDR": {
              "RDR": {
                "bit": 0,
                "description": "Receive data value",
                "width": 9
              }
            },
            "TDR": {
              "TDR": {
                "bit": 0,
                "description": "Transmit data value",
                "width": 9
              }
            },
            "PRESC": {
              "PRESCALER": {
                "bit": 0,
                "description": "PRESCALER",
                "width": 4
              }
            },
            "AUTOCR": {
              "TDN": {
                "bit": 0,
                "description": "TDN",
                "width": 16
              },
              "TRIGPOL": {
                "bit": 16,
                "description": "TRIGPOL"
              },
              "TRIGEN": {
                "bit": 17,
                "description": "TRIGEN"
              },
              "IDLEDIS": {
                "bit": 18,
                "description": "IDLEDIS"
              },
              "TRIGSEL": {
                "bit": 19,
                "description": "TRIGSEL",
                "width": 4
              },
              "TECLREN": {
                "bit": 31,
                "description": "TECLREN"
              }
            }
          }
        },
        "COMP": {
          "instances": [
            {
              "name": "COMP",
              "base": "0x46005400",
              "irq": 72
            },
            {
              "name": "SEC_COMP",
              "base": "0x56005400"
            }
          ],
          "registers": {
            "COMP1_CSR": {
              "offset": "0x00",
              "size": 32,
              "description": "Comparator 1 control and status\n          register"
            },
            "COMP2_CSR": {
              "offset": "0x04",
              "size": 32,
              "description": "Comparator 2 control and status\n          register"
            }
          },
          "bits": {
            "COMP1_CSR": {
              "COMP1_EN": {
                "bit": 0,
                "description": "Comparator 1 enable bit"
              },
              "COMP1_INMSEL": {
                "bit": 4,
                "description": "Comparator 1 Input Minus connection\n              configuration bit",
                "width": 4
              },
              "COMP1_INPSEL": {
                "bit": 8,
                "description": "Comparator1 input plus selection\n              bit",
                "width": 2
              },
              "COMP1_WINMODE": {
                "bit": 11,
                "description": "COMP1_WINMODE"
              },
              "COMP1_WINOUT": {
                "bit": 14,
                "description": "COMP1_WINOUT"
              },
              "COMP1_POLARITY": {
                "bit": 15,
                "description": "Comparator 1 polarity selection\n              bit"
              },
              "COMP1_HYST": {
                "bit": 16,
                "description": "Comparator 1 hysteresis selection\n              bits",
                "width": 2
              },
              "COMP1_PWRMODE": {
                "bit": 18,
                "description": "COMP1_PWRMODE",
                "width": 2
              },
              "COMP1_BLANKSEL": {
                "bit": 20,
                "description": "COMP1_BLANKSEL",
                "width": 5
              },
              "COMP1_VALUE": {
                "bit": 30,
                "description": "Comparator 1 output status\n              bit"
              },
              "COMP1_LOCK": {
                "bit": 31,
                "description": "COMP1_CSR register lock\n              bit"
              }
            },
            "COMP2_CSR": {
              "COM2_EN": {
                "bit": 0,
                "description": "Comparator 2 enable bit"
              },
              "COM2_INMSEL": {
                "bit": 4,
                "description": "Comparator 2 Input Minus connection\n              configuration bit",
                "width": 4
              },
              "COM2_INPSEL": {
                "bit": 8,
                "description": "Comparator 2 input plus selection\n              bit",
                "width": 2
              },
              "COM2_WINMODE": {
                "bit": 11,
                "description": "COM2_WINMODE"
              },
              "COM2_WINOUT": {
                "bit": 14,
                "description": "COM2_WINOUT"
              },
              "COM2_POLARITY": {
                "bit": 15,
                "description": "Comparator 2 polarity selection\n              bit"
              },
              "COM2_HYST": {
                "bit": 16,
                "description": "Comparator 2 hysteresis selection\n              bits",
                "width": 2
              },
              "COM2_PWRMODE": {
                "bit": 18,
                "description": "COM2_PWRMODE",
                "width": 2
              },
              "COM2_BLANKSEL": {
                "bit": 20,
                "description": "COM2_BLANKSEL",
                "width": 5
              },
              "COM2_VALUE": {
                "bit": 30,
                "description": "Comparator 2 output status\n              bit"
              },
              "COM2_LOCK": {
                "bit": 31,
                "description": "COMP2_CSR register lock\n              bit"
              }
            }
          }
        },
        "VREFBUF": {
          "instances": [
            {
              "name": "VREFBUF",
              "base": "0x46007400"
            }
          ],
          "registers": {
            "VREFBUF_CSR": {
              "offset": "0x00",
              "size": 32,
              "description": "VREFBUF control and status register"
            },
            "VREFBUF_CCR": {
              "offset": "0x04",
              "size": 32,
              "description": "VREFBUF calibration control register"
            }
          },
          "bits": {
            "VREFBUF_CSR": {
              "ENVR": {
                "bit": 0,
                "description": "ENVR"
              },
              "HIZ": {
                "bit": 1,
                "description": "HIZ"
              },
              "VRR": {
                "bit": 3,
                "description": "VRR"
              },
              "VRS": {
                "bit": 4,
                "description": "VRS",
                "width": 3
              }
            },
            "VREFBUF_CCR": {
              "TRIM": {
                "bit": 0,
                "description": "TRIM",
                "width": 6
              }
            }
          }
        },
        "TSC": {
          "instances": [
            {
              "name": "TSC",
              "base": "0x40024000",
              "irq": 92
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "IER": {
              "offset": "0x04",
              "size": 32,
              "description": "interrupt enable register"
            },
            "ICR": {
              "offset": "0x08",
              "size": 32,
              "description": "interrupt clear register"
            },
            "ISR": {
              "offset": "0x0C",
              "size": 32,
              "description": "interrupt status register"
            },
            "IOHCR": {
              "offset": "0x10",
              "size": 32,
              "description": "I/O hysteresis control\n          register"
            },
            "IOASCR": {
              "offset": "0x18",
              "size": 32,
              "description": "I/O analog switch control\n          register"
            },
            "IOSCR": {
              "offset": "0x20",
              "size": 32,
              "description": "I/O sampling control register"
            },
            "IOCCR": {
              "offset": "0x28",
              "size": 32,
              "description": "I/O channel control register"
            },
            "IOGCSR": {
              "offset": "0x30",
              "size": 32,
              "description": "I/O group control status\n          register"
            },
            "IOG1CR": {
              "offset": "0x34",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG2CR": {
              "offset": "0x38",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG3CR": {
              "offset": "0x3C",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG4CR": {
              "offset": "0x40",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG5CR": {
              "offset": "0x44",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG6CR": {
              "offset": "0x48",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG7CR": {
              "offset": "0x4C",
              "size": 32,
              "description": "I/O group x counter register"
            },
            "IOG8CR": {
              "offset": "0x50",
              "size": 32,
              "description": "I/O group x counter register"
            }
          },
          "bits": {
            "CR": {
              "CTPH": {
                "bit": 28,
                "description": "Charge transfer pulse high",
                "width": 4
              },
              "CTPL": {
                "bit": 24,
                "description": "Charge transfer pulse low",
                "width": 4
              },
              "SSD": {
                "bit": 17,
                "description": "Spread spectrum deviation",
                "width": 7
              },
              "SSE": {
                "bit": 16,
                "description": "Spread spectrum enable"
              },
              "SSPSC": {
                "bit": 15,
                "description": "Spread spectrum prescaler"
              },
              "PGPSC": {
                "bit": 12,
                "description": "pulse generator prescaler",
                "width": 3
              },
              "MCV": {
                "bit": 5,
                "description": "Max count value",
                "width": 3
              },
              "IODEF": {
                "bit": 4,
                "description": "I/O Default mode"
              },
              "SYNCPOL": {
                "bit": 3,
                "description": "Synchronization pin\n              polarity"
              },
              "AM": {
                "bit": 2,
                "description": "Acquisition mode"
              },
              "START": {
                "bit": 1,
                "description": "Start a new acquisition"
              },
              "TSCE": {
                "bit": 0,
                "description": "Touch sensing controller\n              enable"
              }
            },
            "IER": {
              "MCEIE": {
                "bit": 1,
                "description": "Max count error interrupt\n              enable"
              },
              "EOAIE": {
                "bit": 0,
                "description": "End of acquisition interrupt\n              enable"
              }
            },
            "ICR": {
              "MCEIC": {
                "bit": 1,
                "description": "Max count error interrupt\n              clear"
              },
              "EOAIC": {
                "bit": 0,
                "description": "End of acquisition interrupt\n              clear"
              }
            },
            "ISR": {
              "MCEF": {
                "bit": 1,
                "description": "Max count error flag"
              },
              "EOAF": {
                "bit": 0,
                "description": "End of acquisition flag"
              }
            },
            "IOHCR": {
              "G8_IO4": {
                "bit": 31,
                "description": "G8_IO4"
              },
              "G8_IO3": {
                "bit": 30,
                "description": "G8_IO3"
              },
              "G8_IO2": {
                "bit": 29,
                "description": "G8_IO2"
              },
              "G8_IO1": {
                "bit": 28,
                "description": "G8_IO1"
              },
              "G7_IO4": {
                "bit": 27,
                "description": "G7_IO4"
              },
              "G7_IO3": {
                "bit": 26,
                "description": "G7_IO3"
              },
              "G7_IO2": {
                "bit": 25,
                "description": "G7_IO2"
              },
              "G7_IO1": {
                "bit": 24,
                "description": "G7_IO1"
              },
              "G6_IO4": {
                "bit": 23,
                "description": "G6_IO4"
              },
              "G6_IO3": {
                "bit": 22,
                "description": "G6_IO3"
              },
              "G6_IO2": {
                "bit": 21,
                "description": "G6_IO2"
              },
              "G6_IO1": {
                "bit": 20,
                "description": "G6_IO1"
              },
              "G5_IO4": {
                "bit": 19,
                "description": "G5_IO4"
              },
              "G5_IO3": {
                "bit": 18,
                "description": "G5_IO3"
              },
              "G5_IO2": {
                "bit": 17,
                "description": "G5_IO2"
              },
              "G5_IO1": {
                "bit": 16,
                "description": "G5_IO1"
              },
              "G4_IO4": {
                "bit": 15,
                "description": "G4_IO4"
              },
              "G4_IO3": {
                "bit": 14,
                "description": "G4_IO3"
              },
              "G4_IO2": {
                "bit": 13,
                "description": "G4_IO2"
              },
              "G4_IO1": {
                "bit": 12,
                "description": "G4_IO1"
              },
              "G3_IO4": {
                "bit": 11,
                "description": "G3_IO4"
              },
              "G3_IO3": {
                "bit": 10,
                "description": "G3_IO3"
              },
              "G3_IO2": {
                "bit": 9,
                "description": "G3_IO2"
              },
              "G3_IO1": {
                "bit": 8,
                "description": "G3_IO1"
              },
              "G2_IO4": {
                "bit": 7,
                "description": "G2_IO4"
              },
              "G2_IO3": {
                "bit": 6,
                "description": "G2_IO3"
              },
              "G2_IO2": {
                "bit": 5,
                "description": "G2_IO2"
              },
              "G2_IO1": {
                "bit": 4,
                "description": "G2_IO1"
              },
              "G1_IO4": {
                "bit": 3,
                "description": "G1_IO4"
              },
              "G1_IO3": {
                "bit": 2,
                "description": "G1_IO3"
              },
              "G1_IO2": {
                "bit": 1,
                "description": "G1_IO2"
              },
              "G1_IO1": {
                "bit": 0,
                "description": "G1_IO1"
              }
            },
            "IOASCR": {
              "G8_IO4": {
                "bit": 31,
                "description": "G8_IO4"
              },
              "G8_IO3": {
                "bit": 30,
                "description": "G8_IO3"
              },
              "G8_IO2": {
                "bit": 29,
                "description": "G8_IO2"
              },
              "G8_IO1": {
                "bit": 28,
                "description": "G8_IO1"
              },
              "G7_IO4": {
                "bit": 27,
                "description": "G7_IO4"
              },
              "G7_IO3": {
                "bit": 26,
                "description": "G7_IO3"
              },
              "G7_IO2": {
                "bit": 25,
                "description": "G7_IO2"
              },
              "G7_IO1": {
                "bit": 24,
                "description": "G7_IO1"
              },
              "G6_IO4": {
                "bit": 23,
                "description": "G6_IO4"
              },
              "G6_IO3": {
                "bit": 22,
                "description": "G6_IO3"
              },
              "G6_IO2": {
                "bit": 21,
                "description": "G6_IO2"
              },
              "G6_IO1": {
                "bit": 20,
                "description": "G6_IO1"
              },
              "G5_IO4": {
                "bit": 19,
                "description": "G5_IO4"
              },
              "G5_IO3": {
                "bit": 18,
                "description": "G5_IO3"
              },
              "G5_IO2": {
                "bit": 17,
                "description": "G5_IO2"
              },
              "G5_IO1": {
                "bit": 16,
                "description": "G5_IO1"
              },
              "G4_IO4": {
                "bit": 15,
                "description": "G4_IO4"
              },
              "G4_IO3": {
                "bit": 14,
                "description": "G4_IO3"
              },
              "G4_IO2": {
                "bit": 13,
                "description": "G4_IO2"
              },
              "G4_IO1": {
                "bit": 12,
                "description": "G4_IO1"
              },
              "G3_IO4": {
                "bit": 11,
                "description": "G3_IO4"
              },
              "G3_IO3": {
                "bit": 10,
                "description": "G3_IO3"
              },
              "G3_IO2": {
                "bit": 9,
                "description": "G3_IO2"
              },
              "G3_IO1": {
                "bit": 8,
                "description": "G3_IO1"
              },
              "G2_IO4": {
                "bit": 7,
                "description": "G2_IO4"
              },
              "G2_IO3": {
                "bit": 6,
                "description": "G2_IO3"
              },
              "G2_IO2": {
                "bit": 5,
                "description": "G2_IO2"
              },
              "G2_IO1": {
                "bit": 4,
                "description": "G2_IO1"
              },
              "G1_IO4": {
                "bit": 3,
                "description": "G1_IO4"
              },
              "G1_IO3": {
                "bit": 2,
                "description": "G1_IO3"
              },
              "G1_IO2": {
                "bit": 1,
                "description": "G1_IO2"
              },
              "G1_IO1": {
                "bit": 0,
                "description": "G1_IO1"
              }
            },
            "IOSCR": {
              "G8_IO4": {
                "bit": 31,
                "description": "G8_IO4"
              },
              "G8_IO3": {
                "bit": 30,
                "description": "G8_IO3"
              },
              "G8_IO2": {
                "bit": 29,
                "description": "G8_IO2"
              },
              "G8_IO1": {
                "bit": 28,
                "description": "G8_IO1"
              },
              "G7_IO4": {
                "bit": 27,
                "description": "G7_IO4"
              },
              "G7_IO3": {
                "bit": 26,
                "description": "G7_IO3"
              },
              "G7_IO2": {
                "bit": 25,
                "description": "G7_IO2"
              },
              "G7_IO1": {
                "bit": 24,
                "description": "G7_IO1"
              },
              "G6_IO4": {
                "bit": 23,
                "description": "G6_IO4"
              },
              "G6_IO3": {
                "bit": 22,
                "description": "G6_IO3"
              },
              "G6_IO2": {
                "bit": 21,
                "description": "G6_IO2"
              },
              "G6_IO1": {
                "bit": 20,
                "description": "G6_IO1"
              },
              "G5_IO4": {
                "bit": 19,
                "description": "G5_IO4"
              },
              "G5_IO3": {
                "bit": 18,
                "description": "G5_IO3"
              },
              "G5_IO2": {
                "bit": 17,
                "description": "G5_IO2"
              },
              "G5_IO1": {
                "bit": 16,
                "description": "G5_IO1"
              },
              "G4_IO4": {
                "bit": 15,
                "description": "G4_IO4"
              },
              "G4_IO3": {
                "bit": 14,
                "description": "G4_IO3"
              },
              "G4_IO2": {
                "bit": 13,
                "description": "G4_IO2"
              },
              "G4_IO1": {
                "bit": 12,
                "description": "G4_IO1"
              },
              "G3_IO4": {
                "bit": 11,
                "description": "G3_IO4"
              },
              "G3_IO3": {
                "bit": 10,
                "description": "G3_IO3"
              },
              "G3_IO2": {
                "bit": 9,
                "description": "G3_IO2"
              },
              "G3_IO1": {
                "bit": 8,
                "description": "G3_IO1"
              },
              "G2_IO4": {
                "bit": 7,
                "description": "G2_IO4"
              },
              "G2_IO3": {
                "bit": 6,
                "description": "G2_IO3"
              },
              "G2_IO2": {
                "bit": 5,
                "description": "G2_IO2"
              },
              "G2_IO1": {
                "bit": 4,
                "description": "G2_IO1"
              },
              "G1_IO4": {
                "bit": 3,
                "description": "G1_IO4"
              },
              "G1_IO3": {
                "bit": 2,
                "description": "G1_IO3"
              },
              "G1_IO2": {
                "bit": 1,
                "description": "G1_IO2"
              },
              "G1_IO1": {
                "bit": 0,
                "description": "G1_IO1"
              }
            },
            "IOCCR": {
              "G8_IO4": {
                "bit": 31,
                "description": "G8_IO4"
              },
              "G8_IO3": {
                "bit": 30,
                "description": "G8_IO3"
              },
              "G8_IO2": {
                "bit": 29,
                "description": "G8_IO2"
              },
              "G8_IO1": {
                "bit": 28,
                "description": "G8_IO1"
              },
              "G7_IO4": {
                "bit": 27,
                "description": "G7_IO4"
              },
              "G7_IO3": {
                "bit": 26,
                "description": "G7_IO3"
              },
              "G7_IO2": {
                "bit": 25,
                "description": "G7_IO2"
              },
              "G7_IO1": {
                "bit": 24,
                "description": "G7_IO1"
              },
              "G6_IO4": {
                "bit": 23,
                "description": "G6_IO4"
              },
              "G6_IO3": {
                "bit": 22,
                "description": "G6_IO3"
              },
              "G6_IO2": {
                "bit": 21,
                "description": "G6_IO2"
              },
              "G6_IO1": {
                "bit": 20,
                "description": "G6_IO1"
              },
              "G5_IO4": {
                "bit": 19,
                "description": "G5_IO4"
              },
              "G5_IO3": {
                "bit": 18,
                "description": "G5_IO3"
              },
              "G5_IO2": {
                "bit": 17,
                "description": "G5_IO2"
              },
              "G5_IO1": {
                "bit": 16,
                "description": "G5_IO1"
              },
              "G4_IO4": {
                "bit": 15,
                "description": "G4_IO4"
              },
              "G4_IO3": {
                "bit": 14,
                "description": "G4_IO3"
              },
              "G4_IO2": {
                "bit": 13,
                "description": "G4_IO2"
              },
              "G4_IO1": {
                "bit": 12,
                "description": "G4_IO1"
              },
              "G3_IO4": {
                "bit": 11,
                "description": "G3_IO4"
              },
              "G3_IO3": {
                "bit": 10,
                "description": "G3_IO3"
              },
              "G3_IO2": {
                "bit": 9,
                "description": "G3_IO2"
              },
              "G3_IO1": {
                "bit": 8,
                "description": "G3_IO1"
              },
              "G2_IO4": {
                "bit": 7,
                "description": "G2_IO4"
              },
              "G2_IO3": {
                "bit": 6,
                "description": "G2_IO3"
              },
              "G2_IO2": {
                "bit": 5,
                "description": "G2_IO2"
              },
              "G2_IO1": {
                "bit": 4,
                "description": "G2_IO1"
              },
              "G1_IO4": {
                "bit": 3,
                "description": "G1_IO4"
              },
              "G1_IO3": {
                "bit": 2,
                "description": "G1_IO3"
              },
              "G1_IO2": {
                "bit": 1,
                "description": "G1_IO2"
              },
              "G1_IO1": {
                "bit": 0,
                "description": "G1_IO1"
              }
            },
            "IOGCSR": {
              "G8S": {
                "bit": 23,
                "description": "Analog I/O group x status"
              },
              "G7S": {
                "bit": 22,
                "description": "Analog I/O group x status"
              },
              "G6S": {
                "bit": 21,
                "description": "Analog I/O group x status"
              },
              "G5S": {
                "bit": 20,
                "description": "Analog I/O group x status"
              },
              "G4S": {
                "bit": 19,
                "description": "Analog I/O group x status"
              },
              "G3S": {
                "bit": 18,
                "description": "Analog I/O group x status"
              },
              "G2S": {
                "bit": 17,
                "description": "Analog I/O group x status"
              },
              "G1S": {
                "bit": 16,
                "description": "Analog I/O group x status"
              },
              "G8E": {
                "bit": 7,
                "description": "Analog I/O group x enable"
              },
              "G7E": {
                "bit": 6,
                "description": "Analog I/O group x enable"
              },
              "G6E": {
                "bit": 5,
                "description": "Analog I/O group x enable"
              },
              "G5E": {
                "bit": 4,
                "description": "Analog I/O group x enable"
              },
              "G4E": {
                "bit": 3,
                "description": "Analog I/O group x enable"
              },
              "G3E": {
                "bit": 2,
                "description": "Analog I/O group x enable"
              },
              "G2E": {
                "bit": 1,
                "description": "Analog I/O group x enable"
              },
              "G1E": {
                "bit": 0,
                "description": "Analog I/O group x enable"
              }
            },
            "IOG1CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG2CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG3CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG4CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG5CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG6CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG7CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            },
            "IOG8CR": {
              "CNT": {
                "bit": 0,
                "description": "Counter value",
                "width": 14
              }
            }
          }
        },
        "UCPD1": {
          "instances": [
            {
              "name": "UCPD1",
              "base": "0x4000DC00",
              "irq": 106
            }
          ],
          "registers": {
            "UCPD_CFGR1": {
              "offset": "0x00",
              "size": 32,
              "description": "UCPD configuration register 1"
            },
            "UCPD_CFGR2": {
              "offset": "0x04",
              "size": 32,
              "description": "UCPD configuration register 2"
            },
            "UCPD_CFGR3": {
              "offset": "0x08",
              "size": 32,
              "description": "UCPD configuration register 3"
            },
            "UCPD_CR": {
              "offset": "0x0C",
              "size": 32,
              "description": "UCPD control register"
            },
            "UCPD_IMR": {
              "offset": "0x10",
              "size": 32,
              "description": "UCPD interrupt mask register"
            },
            "UCPD_SR": {
              "offset": "0x14",
              "size": 32,
              "description": "UCPD status register"
            },
            "UCPD_ICR": {
              "offset": "0x18",
              "size": 32,
              "description": "UCPD interrupt clear register"
            },
            "UCPD_TX_ORDSETR": {
              "offset": "0x1C",
              "size": 32,
              "description": "UCPD Tx ordered set type register"
            },
            "UCPD_TX_PAYSZR": {
              "offset": "0x20",
              "size": 32,
              "description": "UCPD Tx payload size register"
            },
            "UCPD_TXDR": {
              "offset": "0x24",
              "size": 32,
              "description": "UCPD Tx data register"
            },
            "UCPD_RX_ORDSETR": {
              "offset": "0x28",
              "size": 32,
              "description": "Rx ordered set code detected"
            },
            "UCPD_RX_PAYSZR": {
              "offset": "0x2C",
              "size": 32,
              "description": "Rx payload size received\nThis bitfield contains the number of bytes of a payload (including header but excluding CRC) received: each time a new data byte is received in the UCPD_RXDR register, the bitfield value increments and the RXMSGEND flag is set (and an interrupt generated if enabled).\nThe bitfield may return a spurious value when a byte reception is ongoing (the RXMSGEND flag is low)."
            },
            "UCPD_RXDR": {
              "offset": "0x30",
              "size": 32,
              "description": "Data byte received"
            },
            "UCPD_RX_ORDEXTR1": {
              "offset": "0x34",
              "size": 32,
              "description": "UCPD Rx ordered set extension register 1"
            },
            "UCPD_RX_ORDEXTR2": {
              "offset": "0x38",
              "size": 32,
              "description": "UCPD Rx ordered set extension register 2"
            }
          },
          "bits": {
            "UCPD_CFGR1": {
              "HBITCLKDIV": {
                "bit": 0,
                "description": "Division ratio for producing half-bit clock\nThe bitfield determines the division ratio (the bitfield value plus one) of a ucpd_clk divider producing half-bit clock (hbit_clk).",
                "width": 6
              },
              "IFRGAP": {
                "bit": 6,
                "description": "Division ratio for producing inter-frame gap timer clock\nThe bitfield determines the division ratio (the bitfield value minus one) of a ucpd_clk divider producing inter-frame gap timer clock (tInterFrameGap).\nThe division ratio 15 is to apply for Tx clock at the USB PD 2.0 specification nominal value. The division ratios below 15 are to apply for Tx clock below nominal, and the division ratios above 15 for Tx clock above nominal.",
                "width": 5
              },
              "TRANSWIN": {
                "bit": 11,
                "description": "Transition window duration\nThe bitfield determines the division ratio (the bitfield value minus one) of a hbit_clk divider producing tTransitionWindow interval.\nSet a value that produces an interval of 12 to 20 us, taking into account the ucpd_clk frequency and the HBITCLKDIV[5:0] bitfield setting.",
                "width": 5
              },
              "PSC_USBPDCLK": {
                "bit": 17,
                "description": "Pre-scaler division ratio for generating ucpd_clk\nThe bitfield determines the division ratio of a kernel clock pre-scaler producing UCPD peripheral clock (ucpd_clk).\nIt is recommended to use the pre-scaler so as to set the ucpd_clk frequency in the range from 6 to 9 MHz.",
                "width": 3
              },
              "RXORDSETEN": {
                "bit": 20,
                "description": "Receiver ordered set enable\nThe bitfield determines the types of ordered sets that the receiver must detect. When set/cleared, each bit enables/disables a specific function:\n0bxxxxxxxx1: SOP detect enabled\n0bxxxxxxx1x: SOP' detect enabled\n0bxxxxxx1xx: SOP'' detect enabled\n0bxxxxx1xxx: Hard Reset detect enabled\n0bxxxx1xxxx: Cable Detect reset enabled\n0bxxx1xxxxx: SOP'_Debug enabled\n0bxx1xxxxxx: SOP''_Debug enabled\n0bx1xxxxxxx: SOP extension#1 enabled\n0b1xxxxxxxx: SOP extension#2 enabled",
                "width": 9
              },
              "TXDMAEN": {
                "bit": 29,
                "description": "Transmission DMA mode enable\nWhen set, the bit enables DMA mode for transmission."
              },
              "RXDMAEN": {
                "bit": 30,
                "description": "Reception DMA mode enable\nWhen set, the bit enables DMA mode for reception."
              },
              "UCPDEN": {
                "bit": 31,
                "description": "UCPD peripheral enable\nGeneral enable of the UCPD peripheral.\nUpon disabling, the peripheral instantly quits any ongoing activity and all control bits and bitfields default to their reset values. They must be set to their desired values each time the peripheral transits from disabled to enabled state."
              }
            },
            "UCPD_CFGR2": {
              "RXFILTDIS": {
                "bit": 0,
                "description": "BMC decoder Rx pre-filter enable\nThe sampling clock is that of the receiver (that is, after pre-scaler)."
              },
              "RXFILT2N3": {
                "bit": 1,
                "description": "BMC decoder Rx pre-filter sampling method\nNumber of consistent consecutive samples before confirming a new value."
              },
              "FORCECLK": {
                "bit": 2,
                "description": "Force ClkReq clock request"
              },
              "WUPEN": {
                "bit": 3,
                "description": "Wakeup from Stop mode enable\nSetting the bit enables the UCPD_ASYNC_INT signal."
              }
            },
            "UCPD_CFGR3": {
              "TRIM1_NG_CCRPD": {
                "bit": 0,
                "description": "SW trim value for RPD resistors on the CC1 line",
                "width": 4
              },
              "TRIM1_NG_CC3A0": {
                "bit": 9,
                "description": "SW trim value for Iref on the CC1 line",
                "width": 4
              },
              "TRIM2_NG_CCRPD": {
                "bit": 16,
                "description": "SW trim value for RPD resistors on the CC2 line",
                "width": 4
              },
              "TRIM2_NG_CC3A0": {
                "bit": 25,
                "description": "SW trim value for Iref on the CC2 line",
                "width": 4
              }
            },
            "UCPD_CR": {
              "TXMODE": {
                "bit": 0,
                "description": "Type of Tx packet\nWriting the bitfield triggers the action as follows, depending on the value:\nOthers: invalid\nFrom V1.1 of the USB PD specification, there is a counter defined for the duration of the BIST Carrier Mode 2. To quit this mode correctly (after the \"tBISTContMode\" delay), disable the peripheral (UCPDEN = 0).",
                "width": 2
              },
              "TXSEND": {
                "bit": 2,
                "description": "Command to send a Tx packet\nThe bit is cleared by hardware as soon as the packet transmission begins or is discarded."
              },
              "TXHRST": {
                "bit": 3,
                "description": "Command to send a Tx Hard Reset\nThe bit is cleared by hardware as soon as the message transmission begins or is discarded."
              },
              "RXMODE": {
                "bit": 4,
                "description": "Receiver mode\nDetermines the mode of the receiver.\nWhen the bit is set, RXORDSET behaves normally, RXDR no longer receives bytes yet the CRC checking still proceeds as for a normal message."
              },
              "PHYRXEN": {
                "bit": 5,
                "description": "USB Power Delivery receiver enable\nBoth CC1 and CC2 receivers are disabled when the bit is cleared. Only the CC receiver selected via the PHYCCSEL bit is enabled when the bit is set."
              },
              "PHYCCSEL": {
                "bit": 6,
                "description": "CC1/CC2 line selector for USB Power Delivery signaling\nThe selection depends on the cable orientation as discovered at attach."
              },
              "ANASUBMODE": {
                "bit": 7,
                "description": "Analog PHY sub-mode\nRefer to TYPEC_VSTATE_CCx for the effect of this bitfield.",
                "width": 2
              },
              "ANAMODE": {
                "bit": 9,
                "description": "Analog PHY operating mode\nThe use of CC1 and CC2 depends on CCENABLE. Refer to ANAMODE, ANASUBMODE and link with TYPEC_VSTATE_CCx for the effect of this bitfield in conjunction with ANASUBMODE[1:0]."
              },
              "CCENABLE": {
                "bit": 10,
                "description": "CC line enable\nThis bitfield enables CC1 and CC2 line analog PHYs (pull-ups and pull-downs) according to ANAMODE and ANASUBMODE[1:0] setting.\nA single line PHY can be enabled when, for example, the other line is driven by VCONN via an external VCONN switch. Enabling both PHYs is the normal usage for sink/source.",
                "width": 2
              },
              "CC1VCONNEN": {
                "bit": 13,
                "description": "VCONN switch enable for CC1"
              },
              "CC2VCONNEN": {
                "bit": 14,
                "description": "VCONN switch enable for CC2"
              },
              "FRSRXEN": {
                "bit": 16,
                "description": "FRS event detection enable\nSetting the bit enables FRS Rx event (FRSEVT) detection on the CC line selected through the PHYCCSEL bit. 0: Disable\nClear the bit when the device is attached to an FRS-incapable source/sink."
              },
              "FRSTX": {
                "bit": 17,
                "description": "FRS Tx signaling enable.\nSetting the bit enables FRS Tx signaling.\nThe bit is cleared by hardware after a delay respecting the USB Power Delivery specification Revision 3.0."
              },
              "RDCH": {
                "bit": 18,
                "description": "Rdch condition drive\nThe bit drives Rdch condition on the CC line selected through the PHYCCSEL bit (thus associated with VCONN), by remaining set during the source-only UnattachedWait.SRC state, to respect the Type-C state. Refer to \"USB Type-C ECN for Source VCONN Discharge\". The CCENABLE[1:0] bitfield must be set accordingly, too."
              },
              "CC1TCDIS": {
                "bit": 20,
                "description": "CC1 Type-C detector disable\nThe bit disables the Type-C detector on the CC1 line.\nWhen enabled, the Type-C detector for CC1 is configured through ANAMODE and ANASUBMODE[1:0]."
              },
              "CC2TCDIS": {
                "bit": 21,
                "description": "CC2 Type-C detector disable\nThe bit disables the Type-C detector on the CC2 line.\nWhen enabled, the Type-C detector for CC2 is configured through ANAMODE and ANASUBMODE[1:0]."
              }
            },
            "UCPD_IMR": {
              "TXISIE": {
                "bit": 0,
                "description": "TXIS interrupt enable"
              },
              "TXMSGDISCIE": {
                "bit": 1,
                "description": "TXMSGDISC interrupt enable"
              },
              "TXMSGSENTIE": {
                "bit": 2,
                "description": "TXMSGSENT interrupt enable"
              },
              "TXMSGABTIE": {
                "bit": 3,
                "description": "TXMSGABT interrupt enable"
              },
              "HRSTDISCIE": {
                "bit": 4,
                "description": "HRSTDISC interrupt enable"
              },
              "HRSTSENTIE": {
                "bit": 5,
                "description": "HRSTSENT interrupt enable"
              },
              "TXUNDIE": {
                "bit": 6,
                "description": "TXUND interrupt enable"
              },
              "RXNEIE": {
                "bit": 8,
                "description": "RXNE interrupt enable"
              },
              "RXORDDETIE": {
                "bit": 9,
                "description": "RXORDDET interrupt enable"
              },
              "RXHRSTDETIE": {
                "bit": 10,
                "description": "RXHRSTDET interrupt enable"
              },
              "RXOVRIE": {
                "bit": 11,
                "description": "RXOVR interrupt enable"
              },
              "RXMSGENDIE": {
                "bit": 12,
                "description": "RXMSGEND interrupt enable"
              },
              "TYPECEVT1IE": {
                "bit": 14,
                "description": "TYPECEVT1 interrupt enable"
              },
              "TYPECEVT2IE": {
                "bit": 15,
                "description": "TYPECEVT2 interrupt enable"
              },
              "FRSEVTIE": {
                "bit": 20,
                "description": "FRSEVT interrupt enable"
              }
            },
            "UCPD_SR": {
              "TXIS": {
                "bit": 0,
                "description": "Transmit interrupt status\nThe flag indicates that the UCPD_TXDR register is empty and new data write is required (as the amount of data sent has not reached the payload size defined in the TXPAYSZ bitfield). The flag is cleared with the data write into the UCPD_TXDR register."
              },
              "TXMSGDISC": {
                "bit": 1,
                "description": "Message transmission discarded\nThe flag indicates that a message transmission was dropped. The flag is cleared by setting the TXMSGDISCCF bit.\nTransmission of a message can be dropped if there is a concurrent receive in progress or at excessive noise on the line. After a Tx message is discarded, the flag is only raised when the CC line becomes idle."
              },
              "TXMSGSENT": {
                "bit": 2,
                "description": "Message transmission completed\nThe flag indicates the completion of packet transmission. It is cleared by setting the TXMSGSENTCF bit.\nIn the event of a message transmission interrupted by a Hard Reset, the flag is not raised."
              },
              "TXMSGABT": {
                "bit": 3,
                "description": "Transmit message abort\nThe flag indicates that a Tx message is aborted due to a subsequent Hard Reset message send request taking priority during transmit. It is cleared by setting the TXMSGABTCF bit."
              },
              "HRSTDISC": {
                "bit": 4,
                "description": "Hard Reset discarded\nThe flag indicates that the Hard Reset message is discarded. The flag is cleared by setting the HRSTDISCCF bit."
              },
              "HRSTSENT": {
                "bit": 5,
                "description": "Hard Reset message sent\nThe flag indicates that the Hard Reset message is sent. The flag is cleared by setting the HRSTSENTCF bit."
              },
              "TXUND": {
                "bit": 6,
                "description": "Tx data underrun detection\nThe flag indicates that the Tx data register (UCPD_TXDR) was not written in time for a transmit message to execute normally. It is cleared by setting the TXUNDCF bit."
              },
              "RXNE": {
                "bit": 8,
                "description": "Receive data register not empty detection\nThe flag indicates that the UCPD_RXDR register is not empty. It is automatically cleared upon reading UCPD_RXDR."
              },
              "RXORDDET": {
                "bit": 9,
                "description": "Rx ordered set (4 K-codes) detection\nThe flag indicates the detection of an ordered set. The relevant information is stored in the RXORDSET[2:0] bitfield of the UCPD_RX_ORDSET register. It is cleared by setting the RXORDDETCF bit."
              },
              "RXHRSTDET": {
                "bit": 10,
                "description": "Rx Hard Reset receipt detection\nThe flag indicates the receipt of valid Hard Reset message. It is cleared by setting the RXHRSTDETCF bit."
              },
              "RXOVR": {
                "bit": 11,
                "description": "Rx data overflow detection\nThe flag indicates Rx data buffer overflow. It is cleared by setting the RXOVRCF bit.\nThe buffer overflow can occur if the received data are not read fast enough."
              },
              "RXMSGEND": {
                "bit": 12,
                "description": "Rx message received\nThe flag indicates whether a message (except Hard Reset message) has been received, regardless the CRC value. The flag is cleared by setting the RXMSGENDCF bit.\nThe RXERR flag set when the RXMSGEND flag goes high indicates errors in the last-received message."
              },
              "RXERR": {
                "bit": 13,
                "description": "Receive message error\nThe flag indicates errors of the last Rx message declared (via RXMSGEND), such as incorrect CRC or truncated message (a line becoming static before EOP is met). It is asserted whenever the RXMSGEND flag is set."
              },
              "TYPECEVT1": {
                "bit": 14,
                "description": "Type-C voltage level event on CC1 line\nThe flag indicates a change of the TYPEC_VSTATE_CC1[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit."
              },
              "TYPECEVT2": {
                "bit": 15,
                "description": "Type-C voltage level event on CC2 line\nThe flag indicates a change of the TYPEC_VSTATE_CC2[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit."
              },
              "TYPEC_VSTATE_CC1": {
                "bit": 16,
                "description": "The status bitfield indicates the voltage level on the CC1 line in its steady state.\nThe voltage variation on the CC1 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.",
                "width": 2
              },
              "TYPEC_VSTATE_CC2": {
                "bit": 18,
                "description": "CC2 line voltage level\nThe status bitfield indicates the voltage level on the CC2 line in its steady state.\nThe voltage variation on the CC2 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.",
                "width": 2
              },
              "FRSEVT": {
                "bit": 20,
                "description": "FRS detection event\nThe flag is cleared by setting the FRSEVTCF bit."
              }
            },
            "UCPD_ICR": {
              "TXMSGDISCCF": {
                "bit": 1,
                "description": "Tx message discard flag (TXMSGDISC) clear\nSetting the bit clears the TXMSGDISC flag in the UCPD_SR register."
              },
              "TXMSGSENTCF": {
                "bit": 2,
                "description": "Tx message send flag (TXMSGSENT) clear\nSetting the bit clears the TXMSGSENT flag in the UCPD_SR register."
              },
              "TXMSGABTCF": {
                "bit": 3,
                "description": "Tx message abort flag (TXMSGABT) clear\nSetting the bit clears the TXMSGABT flag in the UCPD_SR register."
              },
              "HRSTDISCCF": {
                "bit": 4,
                "description": "Hard reset discard flag (HRSTDISC) clear\nSetting the bit clears the HRSTDISC flag in the UCPD_SR register."
              },
              "HRSTSENTCF": {
                "bit": 5,
                "description": "Hard reset send flag (HRSTSENT) clear\nSetting the bit clears the HRSTSENT flag in the UCPD_SR register."
              },
              "TXUNDCF": {
                "bit": 6,
                "description": "Tx underflow flag (TXUND) clear\nSetting the bit clears the TXUND flag in the UCPD_SR register."
              },
              "RXORDDETCF": {
                "bit": 9,
                "description": "Rx ordered set detect flag (RXORDDET) clear\nSetting the bit clears the RXORDDET flag in the UCPD_SR register."
              },
              "RXHRSTDETCF": {
                "bit": 10,
                "description": "Rx Hard Reset detect flag (RXHRSTDET) clear\nSetting the bit clears the RXHRSTDET flag in the UCPD_SR register."
              },
              "RXOVRCF": {
                "bit": 11,
                "description": "Rx overflow flag (RXOVR) clear\nSetting the bit clears the RXOVR flag in the UCPD_SR register."
              },
              "RXMSGENDCF": {
                "bit": 12,
                "description": "Rx message received flag (RXMSGEND) clear\nSetting the bit clears the RXMSGEND flag in the UCPD_SR register."
              },
              "TYPECEVT1CF": {
                "bit": 14,
                "description": "Type-C CC1 event flag (TYPECEVT1) clear\nSetting the bit clears the TYPECEVT1 flag in the UCPD_SR register"
              },
              "TYPECEVT2CF": {
                "bit": 15,
                "description": "Type-C CC2 line event flag (TYPECEVT2) clear\nSetting the bit clears the TYPECEVT2 flag in the UCPD_SR register"
              },
              "FRSEVTCF": {
                "bit": 20,
                "description": "FRS event flag (FRSEVT) clear\nSetting the bit clears the FRSEVT flag in the UCPD_SR register."
              }
            },
            "UCPD_TX_ORDSETR": {
              "TXORDSET": {
                "bit": 0,
                "description": "Ordered set to transmit\nThe bitfield determines a full 20-bit sequence to transmit, consisting of four K-codes, each of five bits, defining the packet to transmit. The bit 0 (bit 0 of K-code1) is the first, the bit 19 (bit 4 of K\u2011code4) the last.",
                "width": 20
              }
            },
            "UCPD_TX_PAYSZR": {
              "TXPAYSZ": {
                "bit": 0,
                "description": "Payload size yet to transmit\nThe bitfield is modified by software and by hardware. It contains the number of bytes of a payload (including header but excluding CRC) yet to transmit: each time a data byte is written into the UCPD_TXDR register, the bitfield value decrements and the TXIS bit is set, except when the bitfield value reaches zero. The enumerated values are standard payload sizes before the start of transmission.",
                "width": 10
              }
            },
            "UCPD_TXDR": {
              "TXDATA": {
                "bit": 0,
                "description": "Data byte to transmit",
                "width": 8
              }
            },
            "UCPD_RX_ORDSETR": {
              "RXORDSET": {
                "bit": 0,
                "description": "Rx ordered set code detected",
                "width": 3
              },
              "RXSOP3OF4": {
                "bit": 3,
                "description": "The bit indicates the number of correct K\u2011codes. For debug purposes only."
              },
              "RXSOPKINVALID": {
                "bit": 4,
                "description": "The bitfield is for debug purposes only.\nOthers: Invalid",
                "width": 3
              }
            },
            "UCPD_RX_PAYSZR": {
              "RXPAYSZ": {
                "bit": 0,
                "description": "Rx payload size received\nThis bitfield contains the number of bytes of a payload (including header but excluding CRC) received: each time a new data byte is received in the UCPD_RXDR register, the bitfield value increments and the RXMSGEND flag is set (and an interrupt generated if enabled).\nThe bitfield may return a spurious value when a byte reception is ongoing (the RXMSGEND flag is low).",
                "width": 10
              }
            },
            "UCPD_RXDR": {
              "RXDATA": {
                "bit": 0,
                "description": "Data byte received",
                "width": 8
              }
            },
            "UCPD_RX_ORDEXTR1": {
              "RXSOPX1": {
                "bit": 0,
                "description": "Ordered set 1 received\nThe bitfield contains a full 20-bit sequence received, consisting of four K\u2011codes, each of five bits. The bit 0 (bit 0 of K\u2011code1) is receive first, the bit 19 (bit 4 of K\u2011code4) last.",
                "width": 20
              }
            },
            "UCPD_RX_ORDEXTR2": {
              "RXSOPX2": {
                "bit": 0,
                "description": "Ordered set 2 received\nThe bitfield contains a full 20-bit sequence received, consisting of four K\u2011codes, each of five bits. The bit 0 (bit 0 of K\u2011code1) is receive first, the bit 19 (bit 4 of K\u2011code4) last.",
                "width": 20
              }
            }
          }
        },
        "CAN": {
          "instances": [
            {
              "name": "FDCAN1_RAM",
              "base": "0x4000AC00",
              "irq": 39
            },
            {
              "name": "SEC_FDCAN1_RAM",
              "base": "0x5000AC00"
            },
            {
              "name": "FDCAN1",
              "base": "0x4000A400",
              "irq": 71
            },
            {
              "name": "SEC_FDCAN1",
              "base": "0x5000A400"
            }
          ],
          "registers": {
            "FDCAN_CREL": {
              "offset": "0x00",
              "size": 32,
              "description": "FDCAN Core Release Register"
            },
            "FDCAN_ENDN": {
              "offset": "0x04",
              "size": 32,
              "description": "FDCAN endian register"
            },
            "FDCAN_DBTP": {
              "offset": "0x0C",
              "size": 32,
              "description": "FDCAN Data Bit Timing and Prescaler\n          Register"
            },
            "FDCAN_TEST": {
              "offset": "0x10",
              "size": 32,
              "description": "FDCAN Test Register"
            },
            "FDCAN_RWD": {
              "offset": "0x14",
              "size": 32,
              "description": "FDCAN RAM Watchdog Register"
            },
            "FDCAN_CCCR": {
              "offset": "0x18",
              "size": 32,
              "description": "FDCAN CC Control Register"
            },
            "FDCAN_NBTP": {
              "offset": "0x1C",
              "size": 32,
              "description": "FDCAN Nominal Bit Timing and Prescaler\n          Register"
            },
            "FDCAN_TSCC": {
              "offset": "0x20",
              "size": 32,
              "description": "FDCAN Timestamp Counter Configuration\n          Register"
            },
            "FDCAN_TSCV": {
              "offset": "0x24",
              "size": 32,
              "description": "FDCAN Timestamp Counter Value\n          Register"
            },
            "FDCAN_TOCC": {
              "offset": "0x28",
              "size": 32,
              "description": "FDCAN Timeout Counter Configuration\n          Register"
            },
            "FDCAN_TOCV": {
              "offset": "0x2C",
              "size": 32,
              "description": "FDCAN Timeout Counter Value\n          Register"
            },
            "FDCAN_ECR": {
              "offset": "0x40",
              "size": 32,
              "description": "FDCAN Error Counter Register"
            },
            "FDCAN_PSR": {
              "offset": "0x44",
              "size": 32,
              "description": "FDCAN Protocol Status Register"
            },
            "FDCAN_TDCR": {
              "offset": "0x48",
              "size": 32,
              "description": "FDCAN Transmitter Delay Compensation\n          Register"
            },
            "FDCAN_IR": {
              "offset": "0x50",
              "size": 32,
              "description": "FDCAN Interrupt Register"
            },
            "FDCAN_IE": {
              "offset": "0x54",
              "size": 32,
              "description": "FDCAN Interrupt Enable\n          Register"
            },
            "FDCAN_ILS": {
              "offset": "0x58",
              "size": 32,
              "description": "FDCAN Interrupt Line Select\n          Register"
            },
            "FDCAN_ILE": {
              "offset": "0x5C",
              "size": 32,
              "description": "FDCAN Interrupt Line Enable\n          Register"
            },
            "FDCAN_RXGFC": {
              "offset": "0x80",
              "size": 32,
              "description": "FDCAN Global Filter Configuration\n          Register"
            },
            "FDCAN_XIDAM": {
              "offset": "0x84",
              "size": 32,
              "description": "FDCAN Extended ID and Mask\n          Register"
            },
            "FDCAN_HPMS": {
              "offset": "0x88",
              "size": 32,
              "description": "FDCAN High Priority Message Status\n          Register"
            },
            "FDCAN_RXF0S": {
              "offset": "0x90",
              "size": 32,
              "description": "FDCAN Rx FIFO 0 Status\n          Register"
            },
            "FDCAN_RXF0A": {
              "offset": "0x94",
              "size": 32,
              "description": "CAN Rx FIFO 0 Acknowledge\n          Register"
            },
            "FDCAN_RXF1S": {
              "offset": "0x98",
              "size": 32,
              "description": "FDCAN Rx FIFO 1 Status\n          Register"
            },
            "FDCAN_RXF1A": {
              "offset": "0x9C",
              "size": 32,
              "description": "FDCAN Rx FIFO 1 Acknowledge\n          Register"
            },
            "FDCAN_TXBC": {
              "offset": "0xC0",
              "size": 32,
              "description": "FDCAN Tx buffer configuration register"
            },
            "FDCAN_TXFQS": {
              "offset": "0xC4",
              "size": 32,
              "description": "FDCAN Tx FIFO/Queue Status\n          Register"
            },
            "FDCAN_TXBRP": {
              "offset": "0xC8",
              "size": 32,
              "description": "FDCAN Tx Buffer Request Pending\n          Register"
            },
            "FDCAN_TXBAR": {
              "offset": "0xCC",
              "size": 32,
              "description": "FDCAN Tx Buffer Add Request\n          Register"
            },
            "FDCAN_TXBCR": {
              "offset": "0xD0",
              "size": 32,
              "description": "FDCAN Tx Buffer Cancellation Request\n          Register"
            },
            "FDCAN_TXBTO": {
              "offset": "0xD4",
              "size": 32,
              "description": "FDCAN Tx Buffer Transmission Occurred\n          Register"
            },
            "FDCAN_TXBCF": {
              "offset": "0xD8",
              "size": 32,
              "description": "FDCAN Tx Buffer Cancellation Finished\n          Register"
            },
            "FDCAN_TXBTIE": {
              "offset": "0xDC",
              "size": 32,
              "description": "FDCAN Tx Buffer Transmission Interrupt\n          Enable Register"
            },
            "FDCAN_TXBCIE": {
              "offset": "0xE0",
              "size": 32,
              "description": "FDCAN Tx Buffer Cancellation Finished\n          Interrupt Enable Register"
            },
            "FDCAN_TXEFS": {
              "offset": "0xE4",
              "size": 32,
              "description": "FDCAN Tx Event FIFO Status\n          Register"
            },
            "FDCAN_TXEFA": {
              "offset": "0xE8",
              "size": 32,
              "description": "FDCAN Tx Event FIFO Acknowledge\n          Register"
            },
            "FDCAN_CKDIV": {
              "offset": "0x100",
              "size": 32,
              "description": "FDCAN CFG clock divider register"
            }
          },
          "bits": {
            "FDCAN_CREL": {
              "REL": {
                "bit": 28,
                "description": "Core release",
                "width": 4
              },
              "STEP": {
                "bit": 24,
                "description": "Step of Core release",
                "width": 4
              },
              "SUBSTEP": {
                "bit": 20,
                "description": "Sub-step of Core release",
                "width": 4
              },
              "YEAR": {
                "bit": 16,
                "description": "Timestamp Year",
                "width": 4
              },
              "MON": {
                "bit": 8,
                "description": "Timestamp Month",
                "width": 8
              },
              "DAY": {
                "bit": 0,
                "description": "Timestamp Day",
                "width": 8
              }
            },
            "FDCAN_ENDN": {
              "ETV": {
                "bit": 0,
                "description": "Endiannes Test Value",
                "width": 32
              }
            },
            "FDCAN_DBTP": {
              "DSJW": {
                "bit": 0,
                "description": "Synchronization Jump Width",
                "width": 4
              },
              "DTSEG2": {
                "bit": 4,
                "description": "Data time segment after sample\n              point",
                "width": 4
              },
              "DTSEG1": {
                "bit": 8,
                "description": "Data time segment after sample\n              point",
                "width": 5
              },
              "DBRP": {
                "bit": 16,
                "description": "Data BIt Rate Prescaler",
                "width": 5
              },
              "TDC": {
                "bit": 23,
                "description": "Transceiver Delay\n              Compensation"
              }
            },
            "FDCAN_TEST": {
              "LBCK": {
                "bit": 4,
                "description": "Loop Back mode"
              },
              "TX": {
                "bit": 5,
                "description": "Loop Back mode",
                "width": 2
              },
              "RX": {
                "bit": 7,
                "description": "Control of Transmit Pin"
              }
            },
            "FDCAN_RWD": {
              "WDV": {
                "bit": 8,
                "description": "Watchdog value",
                "width": 8
              },
              "WDC": {
                "bit": 0,
                "description": "Watchdog configuration",
                "width": 8
              }
            },
            "FDCAN_CCCR": {
              "INIT": {
                "bit": 0,
                "description": "Initialization"
              },
              "CCE": {
                "bit": 1,
                "description": "Configuration Change\n              Enable"
              },
              "ASM": {
                "bit": 2,
                "description": "ASM Restricted Operation\n              Mode"
              },
              "CSA": {
                "bit": 3,
                "description": "Clock Stop Acknowledge"
              },
              "CSR": {
                "bit": 4,
                "description": "Clock Stop Request"
              },
              "MON": {
                "bit": 5,
                "description": "Bus Monitoring Mode"
              },
              "DAR": {
                "bit": 6,
                "description": "Disable Automatic\n              Retransmission"
              },
              "TEST": {
                "bit": 7,
                "description": "Test Mode Enable"
              },
              "FDOE": {
                "bit": 8,
                "description": "FD Operation Enable"
              },
              "BRSE": {
                "bit": 9,
                "description": "FDCAN Bit Rate Switching"
              },
              "PXHD": {
                "bit": 12,
                "description": "Protocol Exception Handling\n              Disable"
              },
              "EFBI": {
                "bit": 13,
                "description": "Edge Filtering during Bus\n              Integration"
              },
              "TXP": {
                "bit": 14,
                "description": "TXP"
              },
              "NISO": {
                "bit": 15,
                "description": "Non ISO Operation"
              }
            },
            "FDCAN_NBTP": {
              "NSJW": {
                "bit": 25,
                "description": "Nominal (Re)Synchronization Jump\n              Width",
                "width": 7
              },
              "NBRP": {
                "bit": 16,
                "description": "Bit Rate Prescaler",
                "width": 9
              },
              "NTSEG1": {
                "bit": 8,
                "description": "Nominal Time segment before sample\n              point",
                "width": 8
              },
              "NTSEG2": {
                "bit": 0,
                "description": "Nominal Time segment after sample\n              point",
                "width": 7
              }
            },
            "FDCAN_TSCC": {
              "TCP": {
                "bit": 16,
                "description": "Timestamp Counter\n              Prescaler",
                "width": 4
              },
              "TSS": {
                "bit": 0,
                "description": "Timestamp Select",
                "width": 2
              }
            },
            "FDCAN_TSCV": {
              "TSC": {
                "bit": 0,
                "description": "Timestamp Counter",
                "width": 16
              }
            },
            "FDCAN_TOCC": {
              "ETOC": {
                "bit": 0,
                "description": "Enable Timeout Counter"
              },
              "TOS": {
                "bit": 1,
                "description": "Timeout Select",
                "width": 2
              },
              "TOP": {
                "bit": 16,
                "description": "Timeout Period",
                "width": 16
              }
            },
            "FDCAN_TOCV": {
              "TOC": {
                "bit": 0,
                "description": "Timeout Counter",
                "width": 16
              }
            },
            "FDCAN_ECR": {
              "CEL": {
                "bit": 16,
                "description": "AN Error Logging",
                "width": 8
              },
              "RP": {
                "bit": 15,
                "description": "Receive Error Passive"
              },
              "REC": {
                "bit": 8,
                "description": "Receive Error Counter",
                "width": 7
              },
              "TEC": {
                "bit": 0,
                "description": "Transmit Error Counter",
                "width": 8
              }
            },
            "FDCAN_PSR": {
              "LEC": {
                "bit": 0,
                "description": "Last Error Code",
                "width": 3
              },
              "ACT": {
                "bit": 3,
                "description": "Activity",
                "width": 2
              },
              "EP": {
                "bit": 5,
                "description": "Error Passive"
              },
              "EW": {
                "bit": 6,
                "description": "Warning Status"
              },
              "BO": {
                "bit": 7,
                "description": "Bus_Off Status"
              },
              "DLEC": {
                "bit": 8,
                "description": "Data Last Error Code",
                "width": 3
              },
              "RESI": {
                "bit": 11,
                "description": "ESI flag of last received FDCAN\n              Message"
              },
              "RBRS": {
                "bit": 12,
                "description": "BRS flag of last received FDCAN\n              Message"
              },
              "REDL": {
                "bit": 13,
                "description": "Received FDCAN Message"
              },
              "PXE": {
                "bit": 14,
                "description": "Protocol Exception Event"
              },
              "TDCV": {
                "bit": 16,
                "description": "Transmitter Delay Compensation\n              Value",
                "width": 7
              }
            },
            "FDCAN_TDCR": {
              "TDCF": {
                "bit": 0,
                "description": "Transmitter Delay Compensation Filter\n              Window Length",
                "width": 7
              },
              "TDCO": {
                "bit": 8,
                "description": "Transmitter Delay Compensation\n              Offset",
                "width": 7
              }
            },
            "FDCAN_IR": {
              "RF0N": {
                "bit": 0,
                "description": "RF0N"
              },
              "RF0F": {
                "bit": 1,
                "description": "RF0F"
              },
              "RF0L": {
                "bit": 2,
                "description": "RF0L"
              },
              "RF1N": {
                "bit": 3,
                "description": "RF1N"
              },
              "RF1F": {
                "bit": 4,
                "description": "RF1F"
              },
              "RF1L": {
                "bit": 5,
                "description": "RF1L"
              },
              "HPM": {
                "bit": 6,
                "description": "HPM"
              },
              "TC": {
                "bit": 7,
                "description": "TC"
              },
              "TCF": {
                "bit": 8,
                "description": "TCF"
              },
              "TFE": {
                "bit": 9,
                "description": "TFE"
              },
              "TEFN": {
                "bit": 10,
                "description": "TEFN"
              },
              "TEFF": {
                "bit": 11,
                "description": "TEFF"
              },
              "TEFL": {
                "bit": 12,
                "description": "TEFL"
              },
              "TSW": {
                "bit": 13,
                "description": "TSW"
              },
              "MRAF": {
                "bit": 14,
                "description": "MRAF"
              },
              "TOO": {
                "bit": 15,
                "description": "TOO"
              },
              "ELO": {
                "bit": 16,
                "description": "ELO"
              },
              "EP": {
                "bit": 17,
                "description": "EP"
              },
              "EW": {
                "bit": 18,
                "description": "EW"
              },
              "BO": {
                "bit": 19,
                "description": "BO"
              },
              "WDI": {
                "bit": 20,
                "description": "WDI"
              },
              "PEA": {
                "bit": 21,
                "description": "PEA"
              },
              "PED": {
                "bit": 22,
                "description": "PED"
              },
              "ARA": {
                "bit": 23,
                "description": "ARA"
              }
            },
            "FDCAN_IE": {
              "RF0NE": {
                "bit": 0,
                "description": "Rx FIFO 0 New Message\n              Enable"
              },
              "RF0FE": {
                "bit": 1,
                "description": "Rx FIFO 0 Full Enable"
              },
              "RF0LE": {
                "bit": 2,
                "description": "Rx FIFO 0 Message Lost\n              Enable"
              },
              "RF1NE": {
                "bit": 3,
                "description": "Rx FIFO 1 New Message\n              Enable"
              },
              "RF1FE": {
                "bit": 4,
                "description": "Rx FIFO 1 Watermark Reached\n              Enable"
              },
              "RF1LE": {
                "bit": 5,
                "description": "Rx FIFO 1 Message Lost\n              Enable"
              },
              "HPME": {
                "bit": 6,
                "description": "High Priority Message\n              Enable"
              },
              "TCE": {
                "bit": 7,
                "description": "Transmission Completed\n              Enable"
              },
              "TCFE": {
                "bit": 8,
                "description": "Transmission Cancellation Finished\n              Enable"
              },
              "TEFE": {
                "bit": 9,
                "description": "Tx FIFO Empty Enable"
              },
              "TEFNE": {
                "bit": 10,
                "description": "Tx Event FIFO New Entry\n              Enable"
              },
              "TEFFE": {
                "bit": 11,
                "description": "Tx Event FIFO Full Enable"
              },
              "TEFLE": {
                "bit": 12,
                "description": "Tx Event FIFO Element Lost\n              Enable"
              },
              "TSWE": {
                "bit": 13,
                "description": "TSWE"
              },
              "MRAFE": {
                "bit": 14,
                "description": "Message RAM Access Failure\n              Enable"
              },
              "TOOE": {
                "bit": 15,
                "description": "Timeout Occurred Enable"
              },
              "ELOE": {
                "bit": 16,
                "description": "Error Logging Overflow\n              Enable"
              },
              "EPE": {
                "bit": 17,
                "description": "Error Passive Enable"
              },
              "EWE": {
                "bit": 18,
                "description": "Warning Status Enable"
              },
              "BOE": {
                "bit": 19,
                "description": "Bus_Off Status Enable"
              },
              "WDIE": {
                "bit": 20,
                "description": "Watchdog Interrupt Enable"
              },
              "PEAE": {
                "bit": 21,
                "description": "Protocol Error in Arbitration Phase\n              Enable"
              },
              "PEDE": {
                "bit": 22,
                "description": "Protocol Error in Data Phase\n              Enable"
              },
              "ARAE": {
                "bit": 23,
                "description": "Access to Reserved Address\n              Enable"
              }
            },
            "FDCAN_ILS": {
              "RxFIFO0": {
                "bit": 0,
                "description": "RxFIFO0"
              },
              "RxFIFO1": {
                "bit": 1,
                "description": "RxFIFO1"
              },
              "SMSG": {
                "bit": 2,
                "description": "SMSG"
              },
              "TFERR": {
                "bit": 3,
                "description": "TFERR"
              },
              "MISC": {
                "bit": 4,
                "description": "MISC"
              },
              "BERR": {
                "bit": 5,
                "description": "BERR"
              },
              "PERR": {
                "bit": 6,
                "description": "PERR"
              }
            },
            "FDCAN_ILE": {
              "EINT0": {
                "bit": 0,
                "description": "Enable Interrupt Line 0"
              },
              "EINT1": {
                "bit": 1,
                "description": "Enable Interrupt Line 1"
              }
            },
            "FDCAN_RXGFC": {
              "RRFE": {
                "bit": 0,
                "description": "Reject Remote Frames\n              Extended"
              },
              "RRFS": {
                "bit": 1,
                "description": "Reject Remote Frames\n              Standard"
              },
              "ANFE": {
                "bit": 2,
                "description": "Accept Non-matching Frames\n              Extended",
                "width": 2
              },
              "ANFS": {
                "bit": 4,
                "description": "Accept Non-matching Frames\n              Standard",
                "width": 2
              },
              "F1OM": {
                "bit": 8,
                "description": "F1OM"
              },
              "F0OM": {
                "bit": 9,
                "description": "F0OM"
              },
              "LSS": {
                "bit": 16,
                "description": "LSS",
                "width": 5
              },
              "LSE": {
                "bit": 24,
                "description": "LSE",
                "width": 4
              }
            },
            "FDCAN_XIDAM": {
              "EIDM": {
                "bit": 0,
                "description": "Extended ID Mask",
                "width": 29
              }
            },
            "FDCAN_HPMS": {
              "BIDX": {
                "bit": 0,
                "description": "Buffer Index",
                "width": 3
              },
              "MSI": {
                "bit": 6,
                "description": "Message Storage Indicator",
                "width": 2
              },
              "FIDX": {
                "bit": 8,
                "description": "Filter Index",
                "width": 5
              },
              "FLST": {
                "bit": 15,
                "description": "Filter List"
              }
            },
            "FDCAN_RXF0S": {
              "F0FL": {
                "bit": 0,
                "description": "Rx FIFO 0 Fill Level",
                "width": 4
              },
              "F0GI": {
                "bit": 8,
                "description": "Rx FIFO 0 Get Index",
                "width": 2
              },
              "F0PI": {
                "bit": 16,
                "description": "Rx FIFO 0 Put Index",
                "width": 2
              },
              "F0F": {
                "bit": 24,
                "description": "Rx FIFO 0 Full"
              },
              "RF0L": {
                "bit": 25,
                "description": "Rx FIFO 0 Message Lost"
              }
            },
            "FDCAN_RXF0A": {
              "F0AI": {
                "bit": 0,
                "description": "Rx FIFO 0 Acknowledge\n              Index",
                "width": 3
              }
            },
            "FDCAN_RXF1S": {
              "F1FL": {
                "bit": 0,
                "description": "Rx FIFO 1 Fill Level",
                "width": 4
              },
              "F1GI": {
                "bit": 8,
                "description": "Rx FIFO 1 Get Index",
                "width": 2
              },
              "F1PI": {
                "bit": 16,
                "description": "Rx FIFO 1 Put Index",
                "width": 2
              },
              "F1F": {
                "bit": 24,
                "description": "Rx FIFO 1 Full"
              },
              "RF1L": {
                "bit": 25,
                "description": "Rx FIFO 1 Message Lost"
              }
            },
            "FDCAN_RXF1A": {
              "F1AI": {
                "bit": 0,
                "description": "Rx FIFO 1 Acknowledge\n              Index",
                "width": 3
              }
            },
            "FDCAN_TXBC": {
              "TFQM": {
                "bit": 24,
                "description": "Tx FIFO/Queue Mode"
              }
            },
            "FDCAN_TXFQS": {
              "TFFL": {
                "bit": 0,
                "description": "Tx FIFO Free Level",
                "width": 3
              },
              "TFGI": {
                "bit": 8,
                "description": "TFGI",
                "width": 2
              },
              "TFQPI": {
                "bit": 16,
                "description": "Tx FIFO/Queue Put Index",
                "width": 2
              },
              "TFQF": {
                "bit": 21,
                "description": "Tx FIFO/Queue Full"
              }
            },
            "FDCAN_TXBRP": {
              "TRP": {
                "bit": 0,
                "description": "Transmission Request\n              Pending",
                "width": 3
              }
            },
            "FDCAN_TXBAR": {
              "AR": {
                "bit": 0,
                "description": "Add Request",
                "width": 3
              }
            },
            "FDCAN_TXBCR": {
              "CR": {
                "bit": 0,
                "description": "Cancellation Request",
                "width": 3
              }
            },
            "FDCAN_TXBTO": {
              "TO": {
                "bit": 0,
                "description": "Transmission Occurred.",
                "width": 3
              }
            },
            "FDCAN_TXBCF": {
              "CF": {
                "bit": 0,
                "description": "Cancellation Finished",
                "width": 3
              }
            },
            "FDCAN_TXBTIE": {
              "TIE": {
                "bit": 0,
                "description": "Transmission Interrupt\n              Enable",
                "width": 3
              }
            },
            "FDCAN_TXBCIE": {
              "CFIE": {
                "bit": 0,
                "description": "Cancellation Finished Interrupt\n              Enable",
                "width": 3
              }
            },
            "FDCAN_TXEFS": {
              "EFFL": {
                "bit": 0,
                "description": "Event FIFO Fill Level",
                "width": 3
              },
              "EFGI": {
                "bit": 8,
                "description": "Event FIFO Get Index.",
                "width": 2
              },
              "EFPI": {
                "bit": 16,
                "description": "Event FIFO Put Index",
                "width": 2
              },
              "EFF": {
                "bit": 24,
                "description": "Event FIFO Full."
              },
              "TEFL": {
                "bit": 25,
                "description": "Tx Event FIFO Element\n              Lost."
              }
            },
            "FDCAN_TXEFA": {
              "EFAI": {
                "bit": 0,
                "description": "Event FIFO Acknowledge\n              Index",
                "width": 2
              }
            },
            "FDCAN_CKDIV": {
              "PDIV": {
                "bit": 0,
                "description": "PDIV",
                "width": 4
              }
            }
          }
        },
        "CRC": {
          "instances": [
            {
              "name": "CRC",
              "base": "0x40023000"
            }
          ],
          "registers": {
            "DR": {
              "offset": "0x00",
              "size": 32,
              "description": "Data register"
            },
            "IDR": {
              "offset": "0x04",
              "size": 32,
              "description": "Independent data register"
            },
            "CR": {
              "offset": "0x08",
              "size": 32,
              "description": "Control register"
            },
            "INIT": {
              "offset": "0x10",
              "size": 32,
              "description": "Initial CRC value"
            },
            "POL": {
              "offset": "0x14",
              "size": 32,
              "description": "polynomial"
            }
          },
          "bits": {
            "DR": {
              "DR": {
                "bit": 0,
                "description": "Data register bits",
                "width": 32
              }
            },
            "IDR": {
              "IDR": {
                "bit": 0,
                "description": "General-purpose 8-bit data register\n              bits",
                "width": 32
              }
            },
            "CR": {
              "REV_OUT": {
                "bit": 7,
                "description": "Reverse output data"
              },
              "REV_IN": {
                "bit": 5,
                "description": "Reverse input data",
                "width": 2
              },
              "POLYSIZE": {
                "bit": 3,
                "description": "Polynomial size",
                "width": 2
              },
              "RESET": {
                "bit": 0,
                "description": "RESET bit"
              }
            },
            "INIT": {
              "CRC_INIT": {
                "bit": 0,
                "description": "Programmable initial CRC\n              value",
                "width": 32
              }
            },
            "POL": {
              "POL": {
                "bit": 0,
                "description": "Programmable polynomial",
                "width": 32
              }
            }
          }
        },
        "CRS": {
          "instances": [
            {
              "name": "CRS",
              "base": "0x40006000",
              "irq": 74
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "CFGR": {
              "offset": "0x04",
              "size": 32,
              "description": "configuration register"
            },
            "ISR": {
              "offset": "0x08",
              "size": 32,
              "description": "interrupt and status register"
            },
            "ICR": {
              "offset": "0x0C",
              "size": 32,
              "description": "interrupt flag clear register"
            }
          },
          "bits": {
            "CR": {
              "TRIM": {
                "bit": 8,
                "description": "HSI48 oscillator smooth\n              trimming",
                "width": 7
              },
              "SWSYNC": {
                "bit": 7,
                "description": "Generate software SYNC\n              event"
              },
              "AUTOTRIMEN": {
                "bit": 6,
                "description": "Automatic trimming enable"
              },
              "CEN": {
                "bit": 5,
                "description": "Frequency error counter\n              enable"
              },
              "ESYNCIE": {
                "bit": 3,
                "description": "Expected SYNC interrupt\n              enable"
              },
              "ERRIE": {
                "bit": 2,
                "description": "Synchronization or trimming error\n              interrupt enable"
              },
              "SYNCWARNIE": {
                "bit": 1,
                "description": "SYNC warning interrupt\n              enable"
              },
              "SYNCOKIE": {
                "bit": 0,
                "description": "SYNC event OK interrupt\n              enable"
              }
            },
            "CFGR": {
              "SYNCPOL": {
                "bit": 31,
                "description": "SYNC polarity selection"
              },
              "SYNCSRC": {
                "bit": 28,
                "description": "SYNC signal source\n              selection",
                "width": 2
              },
              "SYNCDIV": {
                "bit": 24,
                "description": "SYNC divider",
                "width": 3
              },
              "FELIM": {
                "bit": 16,
                "description": "Frequency error limit",
                "width": 8
              },
              "RELOAD": {
                "bit": 0,
                "description": "Counter reload value",
                "width": 16
              }
            },
            "ISR": {
              "FECAP": {
                "bit": 16,
                "description": "Frequency error capture",
                "width": 16
              },
              "FEDIR": {
                "bit": 15,
                "description": "Frequency error direction"
              },
              "TRIMOVF": {
                "bit": 10,
                "description": "Trimming overflow or\n              underflow"
              },
              "SYNCMISS": {
                "bit": 9,
                "description": "SYNC missed"
              },
              "SYNCERR": {
                "bit": 8,
                "description": "SYNC error"
              },
              "ESYNCF": {
                "bit": 3,
                "description": "Expected SYNC flag"
              },
              "ERRF": {
                "bit": 2,
                "description": "Error flag"
              },
              "SYNCWARNF": {
                "bit": 1,
                "description": "SYNC warning flag"
              },
              "SYNCOKF": {
                "bit": 0,
                "description": "SYNC event OK flag"
              }
            },
            "ICR": {
              "ESYNCC": {
                "bit": 3,
                "description": "Expected SYNC clear flag"
              },
              "ERRC": {
                "bit": 2,
                "description": "Error clear flag"
              },
              "SYNCWARNC": {
                "bit": 1,
                "description": "SYNC warning clear flag"
              },
              "SYNCOKC": {
                "bit": 0,
                "description": "SYNC event OK clear flag"
              }
            }
          }
        },
        "HASH": {
          "instances": [
            {
              "name": "HASH",
              "base": "0x420C0400",
              "irq": 96
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "DIN": {
              "offset": "0x04",
              "size": 32,
              "description": "data input register"
            },
            "STR": {
              "offset": "0x08",
              "size": 32,
              "description": "start register"
            },
            "HRA0": {
              "offset": "0x0C",
              "size": 32,
              "description": "HASH aliased digest register 0"
            },
            "HRA1": {
              "offset": "0x10",
              "size": 32,
              "description": "HASH aliased digest register 1"
            },
            "HRA2": {
              "offset": "0x14",
              "size": 32,
              "description": "HASH aliased digest register 2"
            },
            "HRA3": {
              "offset": "0x18",
              "size": 32,
              "description": "HASH aliased digest register 3"
            },
            "HRA4": {
              "offset": "0x1C",
              "size": 32,
              "description": "HASH aliased digest register 4"
            },
            "HR0": {
              "offset": "0x310",
              "size": 32,
              "description": "digest register 0"
            },
            "HR1": {
              "offset": "0x314",
              "size": 32,
              "description": "digest register 1"
            },
            "HR2": {
              "offset": "0x318",
              "size": 32,
              "description": "digest register 4"
            },
            "HR3": {
              "offset": "0x31C",
              "size": 32,
              "description": "digest register 3"
            },
            "HR4": {
              "offset": "0x320",
              "size": 32,
              "description": "digest register 4"
            },
            "HR5": {
              "offset": "0x324",
              "size": 32,
              "description": "supplementary digest register 5"
            },
            "HR6": {
              "offset": "0x328",
              "size": 32,
              "description": "supplementary digest register 6"
            },
            "HR7": {
              "offset": "0x32C",
              "size": 32,
              "description": "supplementary digest register 7"
            },
            "IMR": {
              "offset": "0x20",
              "size": 32,
              "description": "interrupt enable register"
            },
            "SR": {
              "offset": "0x24",
              "size": 32,
              "description": "status register"
            },
            "CSR0": {
              "offset": "0xF8",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR1": {
              "offset": "0xFC",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR2": {
              "offset": "0x100",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR3": {
              "offset": "0x104",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR4": {
              "offset": "0x108",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR5": {
              "offset": "0x10C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR6": {
              "offset": "0x110",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR7": {
              "offset": "0x114",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR8": {
              "offset": "0x118",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR9": {
              "offset": "0x11C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR10": {
              "offset": "0x120",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR11": {
              "offset": "0x124",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR12": {
              "offset": "0x128",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR13": {
              "offset": "0x12C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR14": {
              "offset": "0x130",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR15": {
              "offset": "0x134",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR16": {
              "offset": "0x138",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR17": {
              "offset": "0x13C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR18": {
              "offset": "0x140",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR19": {
              "offset": "0x144",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR20": {
              "offset": "0x148",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR21": {
              "offset": "0x14C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR22": {
              "offset": "0x150",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR23": {
              "offset": "0x154",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR24": {
              "offset": "0x158",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR25": {
              "offset": "0x15C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR26": {
              "offset": "0x160",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR27": {
              "offset": "0x164",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR28": {
              "offset": "0x168",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR29": {
              "offset": "0x16C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR30": {
              "offset": "0x170",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR31": {
              "offset": "0x174",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR32": {
              "offset": "0x178",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR33": {
              "offset": "0x17C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR34": {
              "offset": "0x180",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR35": {
              "offset": "0x184",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR36": {
              "offset": "0x188",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR37": {
              "offset": "0x18C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR38": {
              "offset": "0x190",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR39": {
              "offset": "0x194",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR40": {
              "offset": "0x198",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR41": {
              "offset": "0x19C",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR42": {
              "offset": "0x1A0",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR43": {
              "offset": "0x1A4",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR44": {
              "offset": "0x1A8",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR45": {
              "offset": "0x1AC",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR46": {
              "offset": "0x1B0",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR47": {
              "offset": "0x1B4",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR48": {
              "offset": "0x1B8",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR49": {
              "offset": "0x1BC",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR50": {
              "offset": "0x1C0",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR51": {
              "offset": "0x1C4",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR52": {
              "offset": "0x1C8",
              "size": 32,
              "description": "context swap registers"
            },
            "CSR53": {
              "offset": "0x1CC",
              "size": 32,
              "description": "context swap registers"
            }
          },
          "bits": {
            "CR": {
              "INIT": {
                "bit": 2,
                "description": "Initialize message digest calculation"
              },
              "DMAE": {
                "bit": 3,
                "description": "DMA enable"
              },
              "DATATYPE": {
                "bit": 4,
                "description": "Data type selection",
                "width": 2
              },
              "MODE": {
                "bit": 6,
                "description": "Mode selection"
              },
              "ALGO": {
                "bit": 17,
                "description": "Algorithm selection",
                "width": 2
              },
              "NBW": {
                "bit": 8,
                "description": "Number of words already               pushed",
                "width": 4
              },
              "DINNE": {
                "bit": 12,
                "description": "DIN not empty"
              },
              "MDMAT": {
                "bit": 13,
                "description": "Multiple DMA Transfers"
              },
              "LKEY": {
                "bit": 16,
                "description": "Long key selection"
              }
            },
            "DIN": {
              "DATAIN": {
                "bit": 0,
                "description": "Data input",
                "width": 32
              }
            },
            "STR": {
              "DCAL": {
                "bit": 8,
                "description": "Digest calculation"
              },
              "NBLW": {
                "bit": 0,
                "description": "Number of valid bits in the last word of               the message",
                "width": 5
              }
            },
            "HRA0": {
              "H0": {
                "bit": 0,
                "description": "H0",
                "width": 32
              }
            },
            "HRA1": {
              "H1": {
                "bit": 0,
                "description": "H1",
                "width": 32
              }
            },
            "HRA2": {
              "H2": {
                "bit": 0,
                "description": "H2",
                "width": 32
              }
            },
            "HRA3": {
              "H3": {
                "bit": 0,
                "description": "H3",
                "width": 32
              }
            },
            "HRA4": {
              "H4": {
                "bit": 0,
                "description": "H4",
                "width": 32
              }
            },
            "HR0": {
              "H0": {
                "bit": 0,
                "description": "H0",
                "width": 32
              }
            },
            "HR1": {
              "H1": {
                "bit": 0,
                "description": "H1",
                "width": 32
              }
            },
            "HR2": {
              "H2": {
                "bit": 0,
                "description": "H2",
                "width": 32
              }
            },
            "HR3": {
              "H3": {
                "bit": 0,
                "description": "H3",
                "width": 32
              }
            },
            "HR4": {
              "H4": {
                "bit": 0,
                "description": "H4",
                "width": 32
              }
            },
            "HR5": {
              "H5": {
                "bit": 0,
                "description": "H5",
                "width": 32
              }
            },
            "HR6": {
              "H6": {
                "bit": 0,
                "description": "H6",
                "width": 32
              }
            },
            "HR7": {
              "H7": {
                "bit": 0,
                "description": "H7",
                "width": 32
              }
            },
            "IMR": {
              "DCIE": {
                "bit": 1,
                "description": "Digest calculation completion interrupt               enable"
              },
              "DINIE": {
                "bit": 0,
                "description": "Data input interrupt               enable"
              }
            },
            "SR": {
              "BUSY": {
                "bit": 3,
                "description": "Busy bit"
              },
              "DMAS": {
                "bit": 2,
                "description": "DMA Status"
              },
              "DCIS": {
                "bit": 1,
                "description": "Digest calculation completion interrupt               status"
              },
              "DINIS": {
                "bit": 0,
                "description": "Data input interrupt               status"
              },
              "NBWE": {
                "bit": 16,
                "description": "Number of words expected",
                "width": 5
              },
              "DINNE": {
                "bit": 15,
                "description": "DIN not empty"
              },
              "NBWP": {
                "bit": 9,
                "description": "Number of words already pushed",
                "width": 5
              }
            },
            "CSR0": {
              "CSR0": {
                "bit": 0,
                "description": "CSR0",
                "width": 32
              }
            },
            "CSR1": {
              "CSR1": {
                "bit": 0,
                "description": "CSR1",
                "width": 32
              }
            },
            "CSR2": {
              "CSR2": {
                "bit": 0,
                "description": "CSR2",
                "width": 32
              }
            },
            "CSR3": {
              "CSR3": {
                "bit": 0,
                "description": "CSR3",
                "width": 32
              }
            },
            "CSR4": {
              "CSR4": {
                "bit": 0,
                "description": "CSR4",
                "width": 32
              }
            },
            "CSR5": {
              "CSR5": {
                "bit": 0,
                "description": "CSR5",
                "width": 32
              }
            },
            "CSR6": {
              "CSR6": {
                "bit": 0,
                "description": "CSR6",
                "width": 32
              }
            },
            "CSR7": {
              "CSR7": {
                "bit": 0,
                "description": "CSR7",
                "width": 32
              }
            },
            "CSR8": {
              "CSR8": {
                "bit": 0,
                "description": "CSR8",
                "width": 32
              }
            },
            "CSR9": {
              "CSR9": {
                "bit": 0,
                "description": "CSR9",
                "width": 32
              }
            },
            "CSR10": {
              "CSR10": {
                "bit": 0,
                "description": "CSR10",
                "width": 32
              }
            },
            "CSR11": {
              "CSR11": {
                "bit": 0,
                "description": "CSR11",
                "width": 32
              }
            },
            "CSR12": {
              "CSR12": {
                "bit": 0,
                "description": "CSR12",
                "width": 32
              }
            },
            "CSR13": {
              "CSR13": {
                "bit": 0,
                "description": "CSR13",
                "width": 32
              }
            },
            "CSR14": {
              "CSR14": {
                "bit": 0,
                "description": "CSR14",
                "width": 32
              }
            },
            "CSR15": {
              "CSR15": {
                "bit": 0,
                "description": "CSR15",
                "width": 32
              }
            },
            "CSR16": {
              "CSR16": {
                "bit": 0,
                "description": "CSR16",
                "width": 32
              }
            },
            "CSR17": {
              "CSR17": {
                "bit": 0,
                "description": "CSR17",
                "width": 32
              }
            },
            "CSR18": {
              "CSR18": {
                "bit": 0,
                "description": "CSR18",
                "width": 32
              }
            },
            "CSR19": {
              "CSR19": {
                "bit": 0,
                "description": "CSR19",
                "width": 32
              }
            },
            "CSR20": {
              "CSR20": {
                "bit": 0,
                "description": "CSR20",
                "width": 32
              }
            },
            "CSR21": {
              "CSR21": {
                "bit": 0,
                "description": "CSR21",
                "width": 32
              }
            },
            "CSR22": {
              "CSR22": {
                "bit": 0,
                "description": "CSR22",
                "width": 32
              }
            },
            "CSR23": {
              "CSR23": {
                "bit": 0,
                "description": "CSR23",
                "width": 32
              }
            },
            "CSR24": {
              "CSR24": {
                "bit": 0,
                "description": "CSR24",
                "width": 32
              }
            },
            "CSR25": {
              "CSR25": {
                "bit": 0,
                "description": "CSR25",
                "width": 32
              }
            },
            "CSR26": {
              "CSR26": {
                "bit": 0,
                "description": "CSR26",
                "width": 32
              }
            },
            "CSR27": {
              "CSR27": {
                "bit": 0,
                "description": "CSR27",
                "width": 32
              }
            },
            "CSR28": {
              "CSR28": {
                "bit": 0,
                "description": "CSR28",
                "width": 32
              }
            },
            "CSR29": {
              "CSR29": {
                "bit": 0,
                "description": "CSR29",
                "width": 32
              }
            },
            "CSR30": {
              "CSR30": {
                "bit": 0,
                "description": "CSR30",
                "width": 32
              }
            },
            "CSR31": {
              "CSR31": {
                "bit": 0,
                "description": "CSR31",
                "width": 32
              }
            },
            "CSR32": {
              "CSR32": {
                "bit": 0,
                "description": "CSR32",
                "width": 32
              }
            },
            "CSR33": {
              "CSR33": {
                "bit": 0,
                "description": "CSR33",
                "width": 32
              }
            },
            "CSR34": {
              "CSR34": {
                "bit": 0,
                "description": "CSR34",
                "width": 32
              }
            },
            "CSR35": {
              "CSR35": {
                "bit": 0,
                "description": "CSR35",
                "width": 32
              }
            },
            "CSR36": {
              "CSR36": {
                "bit": 0,
                "description": "CSR36",
                "width": 32
              }
            },
            "CSR37": {
              "CSR37": {
                "bit": 0,
                "description": "CSR37",
                "width": 32
              }
            },
            "CSR38": {
              "CSR38": {
                "bit": 0,
                "description": "CSR38",
                "width": 32
              }
            },
            "CSR39": {
              "CSR39": {
                "bit": 0,
                "description": "CSR39",
                "width": 32
              }
            },
            "CSR40": {
              "CSR40": {
                "bit": 0,
                "description": "CSR40",
                "width": 32
              }
            },
            "CSR41": {
              "CSR41": {
                "bit": 0,
                "description": "CSR41",
                "width": 32
              }
            },
            "CSR42": {
              "CSR42": {
                "bit": 0,
                "description": "CSR42",
                "width": 32
              }
            },
            "CSR43": {
              "CSR43": {
                "bit": 0,
                "description": "CSR43",
                "width": 32
              }
            },
            "CSR44": {
              "CSR44": {
                "bit": 0,
                "description": "CSR44",
                "width": 32
              }
            },
            "CSR45": {
              "CSR45": {
                "bit": 0,
                "description": "CSR45",
                "width": 32
              }
            },
            "CSR46": {
              "CSR46": {
                "bit": 0,
                "description": "CSR46",
                "width": 32
              }
            },
            "CSR47": {
              "CSR47": {
                "bit": 0,
                "description": "CSR47",
                "width": 32
              }
            },
            "CSR48": {
              "CSR48": {
                "bit": 0,
                "description": "CSR48",
                "width": 32
              }
            },
            "CSR49": {
              "CSR49": {
                "bit": 0,
                "description": "CSR49",
                "width": 32
              }
            },
            "CSR50": {
              "CSR50": {
                "bit": 0,
                "description": "CSR50",
                "width": 32
              }
            },
            "CSR51": {
              "CSR51": {
                "bit": 0,
                "description": "CSR51",
                "width": 32
              }
            },
            "CSR52": {
              "CSR52": {
                "bit": 0,
                "description": "CSR52",
                "width": 32
              }
            },
            "CSR53": {
              "CSR53": {
                "bit": 0,
                "description": "CSR53",
                "width": 32
              }
            }
          }
        },
        "TAMP": {
          "instances": [
            {
              "name": "TAMP",
              "base": "0x46007C00",
              "irq": 4
            }
          ],
          "registers": {
            "TAMP_CR1": {
              "offset": "0x00",
              "size": 32,
              "description": "TAMP control register 1"
            },
            "TAMP_CR2": {
              "offset": "0x04",
              "size": 32,
              "description": "TAMP control register 2"
            },
            "TAMP_CR3": {
              "offset": "0x08",
              "size": 32,
              "description": "TAMP control register 3"
            },
            "TAMP_FLTCR": {
              "offset": "0x0C",
              "size": 32,
              "description": "TAMP filter control register"
            },
            "TAMP_ATCR1": {
              "offset": "0x10",
              "size": 32,
              "description": "TAMP active tamper control register 1"
            },
            "TAMP_ATSEEDR": {
              "offset": "0x14",
              "size": 32,
              "description": "TAMP active tamper seed register"
            },
            "TAMP_ATOR": {
              "offset": "0x18",
              "size": 32,
              "description": "TAMP active tamper output register"
            },
            "TAMP_ATCR2": {
              "offset": "0x1C",
              "size": 32,
              "description": "TAMP active tamper control register 2"
            },
            "TAMP_SECCFGR": {
              "offset": "0x20",
              "size": 32,
              "description": "TAMP secure mode register"
            },
            "TAMP_PRIVCR": {
              "offset": "0x24",
              "size": 32,
              "description": "TAMP privilege mode control register"
            },
            "TAMP_IER": {
              "offset": "0x2C",
              "size": 32,
              "description": "TAMP interrupt enable register"
            },
            "TAMP_SR": {
              "offset": "0x30",
              "size": 32,
              "description": "TAMP status register"
            },
            "TAMP_MISR": {
              "offset": "0x34",
              "size": 32,
              "description": "TAMP non-secure masked interrupt status register"
            },
            "TAMP_SMISR": {
              "offset": "0x38",
              "size": 32,
              "description": "TAMP secure masked interrupt status register"
            },
            "TAMP_SCR": {
              "offset": "0x3C",
              "size": 32,
              "description": "TAMP status clear register"
            },
            "TAMP_COUNT1R": {
              "offset": "0x40",
              "size": 32,
              "description": "TAMP monotonic counter 1 register"
            },
            "TAMP_ERCFGR": {
              "offset": "0x54",
              "size": 32,
              "description": "TAMP erase configuration register"
            },
            "TAMP_BKP0R": {
              "offset": "0x100",
              "size": 32,
              "description": "TAMP backup 0 register"
            },
            "TAMP_BKP1R": {
              "offset": "0x104",
              "size": 32,
              "description": "TAMP backup 1 register"
            },
            "TAMP_BKP2R": {
              "offset": "0x108",
              "size": 32,
              "description": "TAMP backup 2 register"
            },
            "TAMP_BKP3R": {
              "offset": "0x10C",
              "size": 32,
              "description": "TAMP backup 3 register"
            },
            "TAMP_BKP4R": {
              "offset": "0x110",
              "size": 32,
              "description": "TAMP backup 4 register"
            },
            "TAMP_BKP5R": {
              "offset": "0x114",
              "size": 32,
              "description": "TAMP backup 5 register"
            },
            "TAMP_BKP6R": {
              "offset": "0x118",
              "size": 32,
              "description": "TAMP backup 6 register"
            },
            "TAMP_BKP7R": {
              "offset": "0x11C",
              "size": 32,
              "description": "TAMP backup 7 register"
            },
            "TAMP_BKP8R": {
              "offset": "0x120",
              "size": 32,
              "description": "TAMP backup 8 register"
            },
            "TAMP_BKP9R": {
              "offset": "0x124",
              "size": 32,
              "description": "TAMP backup 9 register"
            },
            "TAMP_BKP10R": {
              "offset": "0x128",
              "size": 32,
              "description": "TAMP backup 10 register"
            },
            "TAMP_BKP11R": {
              "offset": "0x12C",
              "size": 32,
              "description": "TAMP backup 11 register"
            },
            "TAMP_BKP12R": {
              "offset": "0x130",
              "size": 32,
              "description": "TAMP backup 12 register"
            },
            "TAMP_BKP13R": {
              "offset": "0x134",
              "size": 32,
              "description": "TAMP backup 13 register"
            },
            "TAMP_BKP14R": {
              "offset": "0x138",
              "size": 32,
              "description": "TAMP backup 14 register"
            },
            "TAMP_BKP15R": {
              "offset": "0x13C",
              "size": 32,
              "description": "TAMP backup 15 register"
            },
            "TAMP_BKP16R": {
              "offset": "0x140",
              "size": 32,
              "description": "TAMP backup 16 register"
            },
            "TAMP_BKP17R": {
              "offset": "0x144",
              "size": 32,
              "description": "TAMP backup 17 register"
            },
            "TAMP_BKP18R": {
              "offset": "0x148",
              "size": 32,
              "description": "TAMP backup 18 register"
            },
            "TAMP_BKP19R": {
              "offset": "0x14C",
              "size": 32,
              "description": "TAMP backup 19 register"
            },
            "TAMP_BKP20R": {
              "offset": "0x150",
              "size": 32,
              "description": "TAMP backup 20 register"
            },
            "TAMP_BKP21R": {
              "offset": "0x154",
              "size": 32,
              "description": "TAMP backup 21 register"
            },
            "TAMP_BKP22R": {
              "offset": "0x158",
              "size": 32,
              "description": "TAMP backup 22 register"
            },
            "TAMP_BKP23R": {
              "offset": "0x15C",
              "size": 32,
              "description": "TAMP backup 23 register"
            },
            "TAMP_BKP24R": {
              "offset": "0x160",
              "size": 32,
              "description": "TAMP backup 24 register"
            },
            "TAMP_BKP25R": {
              "offset": "0x164",
              "size": 32,
              "description": "TAMP backup 25 register"
            },
            "TAMP_BKP26R": {
              "offset": "0x168",
              "size": 32,
              "description": "TAMP backup 26 register"
            },
            "TAMP_BKP27R": {
              "offset": "0x16C",
              "size": 32,
              "description": "TAMP backup 27 register"
            },
            "TAMP_BKP28R": {
              "offset": "0x170",
              "size": 32,
              "description": "TAMP backup 28 register"
            },
            "TAMP_BKP29R": {
              "offset": "0x174",
              "size": 32,
              "description": "TAMP backup 29 register"
            },
            "TAMP_BKP30R": {
              "offset": "0x178",
              "size": 32,
              "description": "TAMP backup 30 register"
            },
            "TAMP_BKP31R": {
              "offset": "0x17C",
              "size": 32,
              "description": "TAMP backup 31 register"
            }
          },
          "bits": {
            "TAMP_CR1": {
              "TAMP1E": {
                "bit": 0,
                "description": "Tamper detection on TAMP_IN1 enable"
              },
              "TAMP2E": {
                "bit": 1,
                "description": "Tamper detection on TAMP_IN2 enable"
              },
              "TAMP3E": {
                "bit": 2,
                "description": "Tamper detection on TAMP_IN3 enable"
              },
              "TAMP4E": {
                "bit": 3,
                "description": "Tamper detection on TAMP_IN4 enable"
              },
              "TAMP5E": {
                "bit": 4,
                "description": "Tamper detection on TAMP_IN5 enable"
              },
              "TAMP6E": {
                "bit": 5,
                "description": "Tamper detection on TAMP_IN6 enable"
              },
              "TAMP7E": {
                "bit": 6,
                "description": "Tamper detection on TAMP_IN7 enable"
              },
              "TAMP8E": {
                "bit": 7,
                "description": "Tamper detection on TAMP_IN8 enable"
              },
              "ITAMP1E": {
                "bit": 16,
                "description": "Internal tamper 1 enable"
              },
              "ITAMP2E": {
                "bit": 17,
                "description": "Internal tamper 2 enable"
              },
              "ITAMP3E": {
                "bit": 18,
                "description": "Internal tamper 3 enable"
              },
              "ITAMP5E": {
                "bit": 20,
                "description": "Internal tamper 5 enable"
              },
              "ITAMP6E": {
                "bit": 21,
                "description": "Internal tamper 6 enable"
              },
              "ITAMP7E": {
                "bit": 22,
                "description": "Internal tamper 7 enable"
              },
              "ITAMP8E": {
                "bit": 23,
                "description": "Internal tamper 8 enable"
              },
              "ITAMP9E": {
                "bit": 24,
                "description": "Internal tamper 9 enable"
              },
              "ITAMP11E": {
                "bit": 26,
                "description": "Internal tamper 11 enable"
              },
              "ITAMP12E": {
                "bit": 27,
                "description": "Internal tamper 12 enable"
              },
              "ITAMP13E": {
                "bit": 28,
                "description": "Internal tamper 13 enable"
              }
            },
            "TAMP_CR2": {
              "TAMP1NOER": {
                "bit": 0,
                "description": "Tamper 1 no erase"
              },
              "TAMP2NOER": {
                "bit": 1,
                "description": "Tamper 2 no erase"
              },
              "TAMP3NOER": {
                "bit": 2,
                "description": "Tamper 3 no erase"
              },
              "TAMP4NOER": {
                "bit": 3,
                "description": "Tamper 4 no erase"
              },
              "TAMP5NOER": {
                "bit": 4,
                "description": "Tamper 5 no erase"
              },
              "TAMP6NOER": {
                "bit": 5,
                "description": "Tamper 6 no erase"
              },
              "TAMP7NOER": {
                "bit": 6,
                "description": "Tamper 7 no erase"
              },
              "TAMP8NOER": {
                "bit": 7,
                "description": "Tamper 8 no erase"
              },
              "TAMP1MSK": {
                "bit": 16,
                "description": "Tamper 1 mask\nThe tamper 1 interrupt must not be enabled when TAMP1MSK is set."
              },
              "TAMP2MSK": {
                "bit": 17,
                "description": "Tamper 2 mask\nThe tamper 2 interrupt must not be enabled when TAMP2MSK is set."
              },
              "TAMP3MSK": {
                "bit": 18,
                "description": "Tamper 3 mask\nThe tamper 3 interrupt must not be enabled when TAMP3MSK is set."
              },
              "BKBLOCK": {
                "bit": 22,
                "description": "Backup registers and device secrets access blocked"
              },
              "BKERASE": {
                "bit": 23,
                "description": "Backup registers and device secrets erase\nWriting '1\u0080\u0099 to this bit reset the backup registers and device secrets(1). Writing 0 has no effect. This bit is always read as 0."
              },
              "TAMP1TRG": {
                "bit": 24,
                "description": "Active level for tamper 1 input\nIf TAMPFLT\u00a0=\u00a000 Tamper 1 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 1 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP2TRG": {
                "bit": 25,
                "description": "Active level for tamper 2 input\nIf TAMPFLT = 00 Tamper 2 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 2 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP3TRG": {
                "bit": 26,
                "description": "Active level for tamper 3 input\nIf TAMPFLT\u00a0=\u00a000 Tamper 3 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 3 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP4TRG": {
                "bit": 27,
                "description": "Active level for tamper 4 input (active mode disabled)\nIf TAMPFLT\u00a0=\u00a000 Tamper 4 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 4 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP5TRG": {
                "bit": 28,
                "description": "Active level for tamper 5 input (active mode disabled)\nIf TAMPFLT\u00a0=\u00a000 Tamper 5 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 5 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP6TRG": {
                "bit": 29,
                "description": "Active level for tamper 6 input (active mode disabled)\nIf TAMPFLT\u00a0=\u00a000 Tamper 6 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 6 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP7TRG": {
                "bit": 30,
                "description": "Active level for tamper 7 input (active mode disabled)\nIf TAMPFLT\u00a0=\u00a000 Tamper 7 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0=\u00a000 Tamper 7 input falling edge and low level triggers a tamper detection event."
              },
              "TAMP8TRG": {
                "bit": 31,
                "description": "Active level for tamper 8 input (active mode disabled)\nIf TAMPFLT\u00a0=\u00a000 Tamper 8 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT\u00a0 =\u00a000 Tamper 8 input falling edge and low level triggers a tamper detection event."
              }
            },
            "TAMP_CR3": {
              "ITAMP1NOER": {
                "bit": 0,
                "description": "Internal Tamper 1 no erase"
              },
              "ITAMP2NOER": {
                "bit": 1,
                "description": "Internal Tamper 2 no erase"
              },
              "ITAMP3NOER": {
                "bit": 2,
                "description": "Internal Tamper 3 no erase"
              },
              "ITAMP5NOER": {
                "bit": 4,
                "description": "Internal Tamper 5 no erase"
              },
              "ITAMP6NOER": {
                "bit": 5,
                "description": "Internal Tamper 6 no erase"
              },
              "ITAMP7NOER": {
                "bit": 6,
                "description": "Internal Tamper 7 no erase"
              },
              "ITAMP8NOER": {
                "bit": 7,
                "description": "Internal Tamper 8 no erase"
              },
              "ITAMP9NOER": {
                "bit": 8,
                "description": "Internal Tamper 9 no erase"
              },
              "ITAMP11NOER": {
                "bit": 10,
                "description": "Internal Tamper 11 no erase"
              },
              "ITAMP12NOER": {
                "bit": 11,
                "description": "Internal Tamper 12 no erase"
              },
              "ITAMP13NOER": {
                "bit": 12,
                "description": "Internal Tamper 13 no erase"
              }
            },
            "TAMP_FLTCR": {
              "TAMPFREQ": {
                "bit": 0,
                "description": "Tamper sampling frequency\nDetermines the frequency at which each of the TAMP_INx inputs are sampled.",
                "width": 3
              },
              "TAMPFLT": {
                "bit": 3,
                "description": "TAMP_INx filter count\nThese bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs.",
                "width": 2
              },
              "TAMPPRCH": {
                "bit": 5,
                "description": "TAMP_INx precharge duration\nThese bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs.",
                "width": 2
              },
              "TAMPPUDIS": {
                "bit": 7,
                "description": "TAMP_INx pull-up disable\nThis bit determines if each of the TAMPx pins are precharged before each sample."
              }
            },
            "TAMP_ATCR1": {
              "TAMP1AM": {
                "bit": 0,
                "description": "Tamper 1 active mode"
              },
              "TAMP2AM": {
                "bit": 1,
                "description": "Tamper 2 active mode"
              },
              "TAMP3AM": {
                "bit": 2,
                "description": "Tamper 3 active mode"
              },
              "TAMP4AM": {
                "bit": 3,
                "description": "Tamper 4 active mode"
              },
              "TAMP5AM": {
                "bit": 4,
                "description": "Tamper 5 active mode"
              },
              "TAMP6AM": {
                "bit": 5,
                "description": "Tamper 6 active mode"
              },
              "TAMP7AM": {
                "bit": 6,
                "description": "Tamper 7 active mode"
              },
              "TAMP8AM": {
                "bit": 7,
                "description": "Tamper 8 active mode"
              },
              "ATOSEL1": {
                "bit": 8,
                "description": "Active tamper shared output 1 selection\nThe selected output must be available in the package pinout",
                "width": 2
              },
              "ATOSEL2": {
                "bit": 10,
                "description": "Active tamper shared output 2 selection\nThe selected output must be available in the package pinout",
                "width": 2
              },
              "ATOSEL3": {
                "bit": 12,
                "description": "Active tamper shared output 3 selection\nThe selected output must be available in the package pinout",
                "width": 2
              },
              "ATOSEL4": {
                "bit": 14,
                "description": "Active tamper shared output 4 selection\nThe selected output must be available in the package pinout.",
                "width": 2
              },
              "ATCKSEL": {
                "bit": 16,
                "description": "Active tamper RTC asynchronous prescaler clock selection\nThese bits selects the RTC asynchronous prescaler stage output.The selected clock is CK_ATPRE.\nfCK_ATPRE = fRTCCLK / 2ATCKSEL when (PREDIV_A+1) = 128.\n...\nThese bits can be written only when all active tampers are disabled. The write protection remains for up to 1.5 ck_atpre cycles after all the active tampers are disable.",
                "width": 3
              },
              "ATPER": {
                "bit": 24,
                "description": "Active tamper output change period\nThe tamper output is changed every CK_ATPER = (2ATPER x CK_ATPRE) cycles. Refer to .",
                "width": 3
              },
              "ATOSHARE": {
                "bit": 30,
                "description": "Active tamper output sharing\nTAMP_IN1 is compared with TAMPOUTSEL1\nTAMP_IN2 is compared with TAMPOUTSEL2\nTAMP_IN3 is compared with TAMPOUTSEL3\nTAMP_IN4 is compared with TAMPOUTSEL4\nTAMP_IN5 is compared with TAMPOUTSEL5\nTAMP_IN6 is compared with TAMPOUTSEL6\nTAMP_IN7 is compared with TAMPOUTSEL7\nTAMP_IN8 is compared with TAMPOUTSEL8"
              },
              "FLTEN": {
                "bit": 31,
                "description": "Active tamper filter enable"
              }
            },
            "TAMP_ATSEEDR": {
              "SEED": {
                "bit": 0,
                "description": "Pseudo-random generator seed value\nThis register must be written four times with 32-bit values to provide the 128-bit seed to the PRNG. Writing to this register automatically sends the seed value to the PRNG.",
                "width": 32
              }
            },
            "TAMP_ATOR": {
              "PRNG": {
                "bit": 0,
                "description": "Pseudo-random generator value\nThis field provides the values of the PRNG output. Because of potential inconsistencies due to synchronization delays, PRNG must be read at least twice. The read value is correct if it is equal to previous read value.\nThis field can only be read when the APB is in secure mode.",
                "width": 8
              },
              "SEEDF": {
                "bit": 14,
                "description": "Seed running flag\nThis flag is set by hardware when a new seed is written in the TAMP_ATSEEDR. It is cleared by hardware when the PRNG has absorbed this new seed, and by system reset. The TAMP APB cock must not be switched off as long as SEEDF is set."
              },
              "INITS": {
                "bit": 15,
                "description": "Active tamper initialization status\nThis flag is set by hardware when the PRNG has absorbed the first 128-bit seed, meaning that the enabled active tampers are functional. This flag is cleared when the active tampers are disabled."
              }
            },
            "TAMP_ATCR2": {
              "ATOSEL1": {
                "bit": 8,
                "description": "Active tamper shared output 1 selection\nThe selected output must be available in the package pinout.\nBits 9:8 are the mirror of ATOSEL1[1:0] in the TAMP_ATCR1, and so can also be read or\nwritten through TAMP_ATCR1.",
                "width": 3
              },
              "ATOSEL2": {
                "bit": 11,
                "description": "Active tamper shared output 2 selection\nThe selected output must be available in the package pinout.\nBits 12:11 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.",
                "width": 3
              },
              "ATOSEL3": {
                "bit": 14,
                "description": "Active tamper shared output 3 selection\nThe selected output must be available in the package pinout.\nBits 15:14 are the mirror of ATOSEL3[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.",
                "width": 3
              },
              "ATOSEL4": {
                "bit": 17,
                "description": "Active tamper shared output 4 selection\nThe selected output must be available in the package pinout.\nBits 18:17 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.",
                "width": 3
              },
              "ATOSEL5": {
                "bit": 20,
                "description": "Active tamper shared output 5 selection\nThe selected output must be available in the package pinout.",
                "width": 3
              },
              "ATOSEL6": {
                "bit": 23,
                "description": "Active tamper shared output 6 selection\nThe selected output must be available in the package pinout.",
                "width": 3
              },
              "ATOSEL7": {
                "bit": 26,
                "description": "Active tamper shared output 7 selection\nThe selected output must be available in the package pinout.",
                "width": 3
              },
              "ATOSEL8": {
                "bit": 29,
                "description": "Active tamper shared output 8 selection\nThe selected output must be available in the package pinout.",
                "width": 3
              }
            },
            "TAMP_SECCFGR": {
              "BKPRWSEC": {
                "bit": 0,
                "description": "Backup registers read/write protection offset\nProtection zone 1 is defined for backup registers from TAMP_BKP0R to TAMP_BKPxR (x = BKPRWSEC-1, from 0 to 128).\nif TZEN=1, these backup registers can be read and written only with secure access.\nIf TZEN=0:\tthe protection zone 1 can be read and written with non-secure access.\nIf BKPRWSEC = 0: there is no protection zone 1.\nIf BKPRWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.",
                "width": 8
              },
              "CNT1SEC": {
                "bit": 15,
                "description": "Monotonic counter 1 secure protection"
              },
              "BKPWSEC": {
                "bit": 16,
                "description": "Backup registers write protection offset\nProtection zone 2 is defined for backup registers from TAMP_BKPyR (y = BKPRWSEC, from 0 to 128) to TAMP_BKPzR (z = BKPWSEC-1, from 0 to 128, BKPWSEC\u00a0\u0089\u00a5\u00a0BKPRWSEC):\nif TZEN=1, these backup registers can be written only with secure access.\nThey can be read with secure or non-secure access.\nProtection zone 3 defined for backup registers from TAMP_BKPtR (t = BKPWSEC, from 0 to 127).\nThey can be read or written with secure or non-secure access.\nIf TZEN=0:\tthe protection zone 2 can be read and written with non-secure access.\nIf BKPWSEC = 0 or if BKPWSEC\u00a0\u0089\u00a4\u00a0BKPRWSEC: there is no protection zone 2.\nIf BKPWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.",
                "width": 8
              },
              "BHKLOCK": {
                "bit": 30,
                "description": "Boot hardware key lock\nThis bit can be read and can only be written to 1 by software. It is cleared by hardware together with the backup registers following a tamper detection event or when the readout protection (RDP) is disabled."
              },
              "TAMPSEC": {
                "bit": 31,
                "description": "Tamper protection (excluding monotonic counters and backup registers)\nNote: Refer to  for details on the read protection."
              }
            },
            "TAMP_PRIVCR": {
              "CNT1PRIV": {
                "bit": 15,
                "description": "Monotonic counter 1 privilege protection"
              },
              "BKPRWPRIV": {
                "bit": 29,
                "description": "Backup registers zone 1 privilege protection"
              },
              "BKPWPRIV": {
                "bit": 30,
                "description": "Backup registers zone 2 privilege protection"
              },
              "TAMPPRIV": {
                "bit": 31,
                "description": "Tamper privilege protection (excluding backup registers)\nNote: Refer to  for details on the read protection."
              }
            },
            "TAMP_IER": {
              "TAMP1IE": {
                "bit": 0,
                "description": "Tamper 1 interrupt enable"
              },
              "TAMP2IE": {
                "bit": 1,
                "description": "Tamper 2 interrupt enable"
              },
              "TAMP3IE": {
                "bit": 2,
                "description": "Tamper 3 interrupt enable"
              },
              "TAMP4IE": {
                "bit": 3,
                "description": "Tamper 4 interrupt enable"
              },
              "TAMP5IE": {
                "bit": 4,
                "description": "Tamper 5 interrupt enable"
              },
              "TAMP6IE": {
                "bit": 5,
                "description": "Tamper 6 interrupt enable"
              },
              "TAMP7IE": {
                "bit": 6,
                "description": "Tamper 7interrupt enable"
              },
              "TAMP8IE": {
                "bit": 7,
                "description": "Tamper 8 interrupt enable"
              },
              "ITAMP1IE": {
                "bit": 16,
                "description": "Internal tamper 1 interrupt enable"
              },
              "ITAMP2IE": {
                "bit": 17,
                "description": "Internal tamper 2 interrupt enable"
              },
              "ITAMP3IE": {
                "bit": 18,
                "description": "Internal tamper 3 interrupt enable"
              },
              "ITAMP5IE": {
                "bit": 20,
                "description": "Internal tamper 5 interrupt enable"
              },
              "ITAMP6IE": {
                "bit": 21,
                "description": "Internal tamper 6 interrupt enable"
              },
              "ITAMP7IE": {
                "bit": 22,
                "description": "Internal tamper 7 interrupt enable"
              },
              "ITAMP8IE": {
                "bit": 23,
                "description": "Internal tamper 8 interrupt enable"
              },
              "ITAMP9IE": {
                "bit": 24,
                "description": "Internal tamper 9 interrupt enable"
              },
              "ITAMP11IE": {
                "bit": 26,
                "description": "Internal tamper 11 interrupt enable"
              },
              "ITAMP12IE": {
                "bit": 27,
                "description": "Internal tamper 12 interrupt enable"
              },
              "ITAMP13IE": {
                "bit": 28,
                "description": "Internal tamper 13 interrupt enable"
              }
            },
            "TAMP_SR": {
              "TAMP1F": {
                "bit": 0,
                "description": "TAMP1 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP1 input."
              },
              "TAMP2F": {
                "bit": 1,
                "description": "TAMP2 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP2 input."
              },
              "TAMP3F": {
                "bit": 2,
                "description": "TAMP3 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP3 input."
              },
              "TAMP4F": {
                "bit": 3,
                "description": "TAMP4 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP4 input."
              },
              "TAMP5F": {
                "bit": 4,
                "description": "TAMP5 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP5 input."
              },
              "TAMP6F": {
                "bit": 5,
                "description": "TAMP6 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP6 input."
              },
              "TAMP7F": {
                "bit": 6,
                "description": "TAMP7 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP7 input."
              },
              "TAMP8F": {
                "bit": 7,
                "description": "TAMP8 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP8 input"
              },
              "ITAMP1F": {
                "bit": 16,
                "description": "Internal tamper 1 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 1."
              },
              "ITAMP2F": {
                "bit": 17,
                "description": "Internal tamper 2 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 2."
              },
              "ITAMP3F": {
                "bit": 18,
                "description": "Internal tamper 3 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 3."
              },
              "ITAMP5F": {
                "bit": 20,
                "description": "Internal tamper 5 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 5."
              },
              "ITAMP6F": {
                "bit": 21,
                "description": "Internal tamper 6 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 6."
              },
              "ITAMP7F": {
                "bit": 22,
                "description": "Internal tamper 7 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 7."
              },
              "ITAMP8F": {
                "bit": 23,
                "description": "Internal tamper 8 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 8."
              },
              "ITAMP9F": {
                "bit": 24,
                "description": "Internal tamper 9 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 9."
              },
              "ITAMP11F": {
                "bit": 26,
                "description": "Internal tamper 11 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 11."
              },
              "ITAMP12F": {
                "bit": 27,
                "description": "Internal tamper 12 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 12."
              },
              "ITAMP13F": {
                "bit": 28,
                "description": "Internal tamper 13 flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 13."
              }
            },
            "TAMP_MISR": {
              "TAMP1MF": {
                "bit": 0,
                "description": "TAMP1 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 1 non-secure interrupt is raised."
              },
              "TAMP2MF": {
                "bit": 1,
                "description": "TAMP2 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 2 non-secure interrupt is raised."
              },
              "TAMP3MF": {
                "bit": 2,
                "description": "TAMP3 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 3 non-secure interrupt is raised."
              },
              "TAMP4MF": {
                "bit": 3,
                "description": "TAMP4 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 4 non-secure interrupt is raised."
              },
              "TAMP5MF": {
                "bit": 4,
                "description": "TAMP5 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 5 non-secure interrupt is raised."
              },
              "TAMP6MF": {
                "bit": 5,
                "description": "TAMP6 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 6 non-secure interrupt is raised."
              },
              "TAMP7MF": {
                "bit": 6,
                "description": "TAMP7 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 7 non-secure interrupt is raised."
              },
              "TAMP8MF": {
                "bit": 7,
                "description": "TAMP8 non-secure interrupt masked flag\nThis flag is set by hardware when the tamper 8 non-secure interrupt is raised."
              },
              "ITAMP1MF": {
                "bit": 16,
                "description": "Internal tamper 1 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 1 non-secure interrupt is raised."
              },
              "ITAMP2MF": {
                "bit": 17,
                "description": "Internal tamper 2 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 2 non-secure interrupt is raised."
              },
              "ITAMP3MF": {
                "bit": 18,
                "description": "Internal tamper 3 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 3 non-secure interrupt is raised."
              },
              "ITAMP5MF": {
                "bit": 20,
                "description": "Internal tamper 5 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 5 non-secure interrupt is raised."
              },
              "ITAMP6MF": {
                "bit": 21,
                "description": "Internal tamper 6 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 6 non-secure interrupt is raised."
              },
              "ITAMP7MF": {
                "bit": 22,
                "description": "VCORE monitoring tamper non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 7 non-secure interrupt is raised."
              },
              "ITAMP8MF": {
                "bit": 23,
                "description": "Internal tamper 8 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 8 non-secure interrupt is raised."
              },
              "ITAMP9MF": {
                "bit": 24,
                "description": "internal tamper 9 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 9 non-secure interrupt is raised."
              },
              "ITAMP11MF": {
                "bit": 26,
                "description": "internal tamper 11 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 11 non-secure interrupt is raised."
              },
              "ITAMP12MF": {
                "bit": 27,
                "description": "internal tamper 12 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 12 non-secure interrupt is raised."
              },
              "ITAMP13MF": {
                "bit": 28,
                "description": "internal tamper 13 non-secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 13 non-secure interrupt is raised."
              }
            },
            "TAMP_SMISR": {
              "TAMP1MF": {
                "bit": 0,
                "description": "TAMP1 secure interrupt masked flag\nThis flag is set by hardware when the tamper 1 secure interrupt is raised."
              },
              "TAMP2MF": {
                "bit": 1,
                "description": "TAMP2 secure interrupt masked flag\nThis flag is set by hardware when the tamper 2 secure interrupt is raised."
              },
              "TAMP3MF": {
                "bit": 2,
                "description": "TAMP3 secure interrupt masked flag\nThis flag is set by hardware when the tamper 3 secure interrupt is raised."
              },
              "TAMP4MF": {
                "bit": 3,
                "description": "TAMP4 secure interrupt masked flag\nThis flag is set by hardware when the tamper 4 secure interrupt is raised."
              },
              "TAMP5MF": {
                "bit": 4,
                "description": "TAMP5 secure interrupt masked flag\nThis flag is set by hardware when the tamper 5 secure interrupt is raised."
              },
              "TAMP6MF": {
                "bit": 5,
                "description": "TAMP6 secure interrupt masked flag\nThis flag is set by hardware when the tamper 6 secure interrupt is raised."
              },
              "TAMP7MF": {
                "bit": 6,
                "description": "TAMP7 secure interrupt masked flag\nThis flag is set by hardware when the tamper 7 secure interrupt is raised."
              },
              "TAMP8MF": {
                "bit": 7,
                "description": "TAMP8 secure interrupt masked flag\nThis flag is set by hardware when the tamper 8 secure interrupt is raised."
              },
              "ITAMP1MF": {
                "bit": 16,
                "description": "Internal tamper 1 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 1 secure interrupt is raised."
              },
              "ITAMP2MF": {
                "bit": 17,
                "description": "Internal tamper 2 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 2 secure interrupt is raised."
              },
              "ITAMP3MF": {
                "bit": 18,
                "description": "Internal tamper 3 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 3 secure interrupt is raised."
              },
              "ITAMP5MF": {
                "bit": 20,
                "description": "Internal tamper 5 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 5 secure interrupt is raised."
              },
              "ITAMP6MF": {
                "bit": 21,
                "description": "Internal tamper 6 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 6 secure interrupt is raised."
              },
              "ITAMP7MF": {
                "bit": 22,
                "description": "VCORE monitoring tamper secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 7 secure interrupt is raised."
              },
              "ITAMP8MF": {
                "bit": 23,
                "description": "Internal tamper 8 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 8 secure interrupt is raised."
              },
              "ITAMP9MF": {
                "bit": 24,
                "description": "internal tamper 9 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 9 secure interrupt is raised."
              },
              "ITAMP11MF": {
                "bit": 26,
                "description": "internal tamper 11 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 11 secure interrupt is raised."
              },
              "ITAMP12MF": {
                "bit": 27,
                "description": "internal tamper 12 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 12 secure interrupt is raised."
              },
              "ITAMP13MF": {
                "bit": 28,
                "description": "internal tamper 13 secure interrupt masked flag\nThis flag is set by hardware when the internal tamper 13 secure interrupt is raised."
              }
            },
            "TAMP_SCR": {
              "CTAMP1F": {
                "bit": 0,
                "description": "Clear TAMP1 detection flag\nWriting 1 in this bit clears the TAMP1F bit in the TAMP_SR register."
              },
              "CTAMP2F": {
                "bit": 1,
                "description": "Clear TAMP2 detection flag\nWriting 1 in this bit clears the TAMP2F bit in the TAMP_SR register."
              },
              "CTAMP3F": {
                "bit": 2,
                "description": "Clear TAMP3 detection flag\nWriting 1 in this bit clears the TAMP3F bit in the TAMP_SR register."
              },
              "CTAMP4F": {
                "bit": 3,
                "description": "Clear TAMP4 detection flag\nWriting 1 in this bit clears the TAMP4F bit in the TAMP_SR register."
              },
              "CTAMP5F": {
                "bit": 4,
                "description": "Clear TAMP5 detection flag\nWriting 1 in this bit clears the TAMP5F bit in the TAMP_SR register."
              },
              "CTAMP6F": {
                "bit": 5,
                "description": "Clear TAMP6 detection flag\nWriting 1 in this bit clears the TAMP6F bit in the TAMP_SR register."
              },
              "CTAMP7F": {
                "bit": 6,
                "description": "Clear TAMP7 detection flag\nWriting 1 in this bit clears the TAMP7F bit in the TAMP_SR register."
              },
              "CTAMP8F": {
                "bit": 7,
                "description": "Clear TAMP8 detection flag\nWriting 1 in this bit clears the TAMP8F bit in the TAMP_SR register."
              },
              "CITAMP1F": {
                "bit": 16,
                "description": "Clear ITAMP1 detection flag\nWriting 1 in this bit clears the ITAMP1F bit in the TAMP_SR register."
              },
              "CITAMP2F": {
                "bit": 17,
                "description": "Clear ITAMP2 detection flag\nWriting 1 in this bit clears the ITAMP2F bit in the TAMP_SR register."
              },
              "CITAMP3F": {
                "bit": 18,
                "description": "Clear ITAMP3 detection flag\nWriting 1 in this bit clears the ITAMP3F bit in the TAMP_SR register."
              },
              "CITAMP5F": {
                "bit": 20,
                "description": "Clear ITAMP5 detection flag\nWriting 1 in this bit clears the ITAMP5F bit in the TAMP_SR register."
              },
              "CITAMP6F": {
                "bit": 21,
                "description": "Clear ITAMP6 detection flag\nWriting 1 in this bit clears the ITAMP6F bit in the TAMP_SR register."
              },
              "CITAMP7F": {
                "bit": 22,
                "description": "Clear ITAMP7 detection flag\nWriting 1 in this bit clears the ITAMP7F bit in the TAMP_SR register."
              },
              "CITAMP8F": {
                "bit": 23,
                "description": "Clear ITAMP8 detection flag\nWriting 1 in this bit clears the ITAMP8F bit in the TAMP_SR register."
              },
              "CITAMP9F": {
                "bit": 24,
                "description": "Clear ITAMP9 detection flag\nWriting 1 in this bit clears the ITAMP9F bit in the TAMP_SR register."
              },
              "CITAMP11F": {
                "bit": 26,
                "description": "Clear ITAMP11 detection flag\nWriting 1 in this bit clears the ITAMP11F bit in the TAMP_SR register."
              },
              "CITAMP12F": {
                "bit": 27,
                "description": "Clear ITAMP12 detection flag\nWriting 1 in this bit clears the ITAMP12F bit in the TAMP_SR register."
              },
              "CITAMP13F": {
                "bit": 28,
                "description": "Clear ITAMP13 detection flag\nWriting 1 in this bit clears the ITAMP13F bit in the TAMP_SR register."
              }
            },
            "TAMP_COUNT1R": {
              "COUNT": {
                "bit": 0,
                "description": "This register is read-only only and is incremented by one when a write access is done to this register. This register cannot roll-over and is frozen when reaching the maximum value.",
                "width": 32
              }
            },
            "TAMP_ERCFGR": {
              "ERCFG0": {
                "bit": 0,
                "description": "Configurable device secrets configuration"
              }
            },
            "TAMP_BKP0R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP1R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP2R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP3R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP4R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP5R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP6R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP7R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP8R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP9R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP10R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP11R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP12R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP13R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP14R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP15R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP16R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP17R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP18R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP19R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP20R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP21R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP22R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP23R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP24R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP25R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP26R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP27R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP28R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP29R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP30R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            },
            "TAMP_BKP31R": {
              "BKP": {
                "bit": 0,
                "description": "The application can write or read data to and from these registers.\nIn the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.",
                "width": 32
              }
            }
          }
        },
        "MDF1": {
          "instances": [
            {
              "name": "MDF1",
              "base": "0x40025000",
              "irq": 102
            }
          ],
          "registers": {
            "GCR": {
              "offset": "0x00",
              "size": 32,
              "description": "MDF global control register"
            },
            "CKGCR": {
              "offset": "0x04",
              "size": 32,
              "description": "MDF clock generator control register"
            },
            "MDF_SITF0CR": {
              "offset": "0x80",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_SITF1CR": {
              "offset": "0x100",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_SITF2CR": {
              "offset": "0x180",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_SITF3CR": {
              "offset": "0x200",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_SITF4CR": {
              "offset": "0x280",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_SITF5CR": {
              "offset": "0x300",
              "size": 32,
              "description": "This register is used to control the serial interfaces (SITFx)."
            },
            "MDF_BSMX0CR": {
              "offset": "0x84",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_BSMX1CR": {
              "offset": "0x104",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_BSMX2CR": {
              "offset": "0x184",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_BSMX3CR": {
              "offset": "0x204",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_BSMX4CR": {
              "offset": "0x284",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_BSMX5CR": {
              "offset": "0x304",
              "size": 32,
              "description": "This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD."
            },
            "MDF_DFLT0CR": {
              "offset": "0x88",
              "size": 32,
              "description": "This register is used to control the digital filter x."
            },
            "MDF_DFLT1CR": {
              "offset": "0x108",
              "size": 32,
              "description": "This register is used to control the digital filter x."
            },
            "MDF_DFLT2CR": {
              "offset": "0x188",
              "size": 32,
              "description": "This register is used to control the digital filter 2."
            },
            "MDF_DFLT3CR": {
              "offset": "0x208",
              "size": 32,
              "description": "This register is used to control the digital filter 3."
            },
            "MDF_DFLT4CR": {
              "offset": "0x288",
              "size": 32,
              "description": "This register is used to control the digital filter 4."
            },
            "MDF_DFLT5CR": {
              "offset": "0x308",
              "size": 32,
              "description": "This register is used to control the digital filter x."
            },
            "MDF_DFLT0CICR": {
              "offset": "0x8C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT1CICR": {
              "offset": "0x10C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT2CICR": {
              "offset": "0x18C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT3CICR": {
              "offset": "0x20C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT4CICR": {
              "offset": "0x28C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT5CICR": {
              "offset": "0x30C",
              "size": 32,
              "description": "This register is used to control the main CIC filter."
            },
            "MDF_DFLT0RSFR": {
              "offset": "0x90",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT1RSFR": {
              "offset": "0x110",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT2RSFR": {
              "offset": "0x190",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT3RSFR": {
              "offset": "0x210",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT4RSFR": {
              "offset": "0x290",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT5RSFR": {
              "offset": "0x310",
              "size": 32,
              "description": "This register is used to control the reshape and HPF filters."
            },
            "MDF_DFLT0INTR": {
              "offset": "0x94",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_DFLT1INTR": {
              "offset": "0x114",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_DFLT2INTR": {
              "offset": "0x194",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_DFLT3INTR": {
              "offset": "0x214",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_DFLT4INTR": {
              "offset": "0x294",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_DFLT5INTR": {
              "offset": "0x314",
              "size": 32,
              "description": "This register is used to the integrator (INT) settings."
            },
            "MDF_OLD0CR": {
              "offset": "0x98",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD1CR": {
              "offset": "0x118",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD2CR": {
              "offset": "0x198",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD3CR": {
              "offset": "0x218",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD4CR": {
              "offset": "0x298",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD5CR": {
              "offset": "0x318",
              "size": 32,
              "description": "This register is used to configure the Out-of Limit Detector function."
            },
            "MDF_OLD0THLR": {
              "offset": "0x9C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD1THLR": {
              "offset": "0x11C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD2THLR": {
              "offset": "0x19C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD3THLR": {
              "offset": "0x21C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD4THLR": {
              "offset": "0x29C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD5THLR": {
              "offset": "0x31C",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit low threshold."
            },
            "MDF_OLD0THHR": {
              "offset": "0xA0",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_OLD1THHR": {
              "offset": "0x120",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_OLD2THHR": {
              "offset": "0x1A0",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_OLD3THHR": {
              "offset": "0x220",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_OLD4THHR": {
              "offset": "0x2A0",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_OLD5THHR": {
              "offset": "0x320",
              "size": 32,
              "description": "This register is used for the adjustment of the Out-off Limit high threshold."
            },
            "MDF_DLY0CR": {
              "offset": "0xA4",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DLY1CR": {
              "offset": "0x124",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DLY2CR": {
              "offset": "0x1A4",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DLY3CR": {
              "offset": "0x224",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DLY4CR": {
              "offset": "0x2A4",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DLY5CR": {
              "offset": "0x324",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD0CR": {
              "offset": "0xA8",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD1CR": {
              "offset": "0x128",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD2CR": {
              "offset": "0x1A8",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD3CR": {
              "offset": "0x228",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD4CR": {
              "offset": "0x2A8",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_SCD5CR": {
              "offset": "0x328",
              "size": 32,
              "description": "This register is used for the adjustment stream delays."
            },
            "MDF_DFLT0IER": {
              "offset": "0xAC",
              "size": 32,
              "description": "This register is used for allowing or not the events to generate an interrupt."
            },
            "MDF_DFLT0ISR": {
              "offset": "0xB0",
              "size": 32,
              "description": "MDF DFLT0 interrupt status register 0"
            },
            "MDF_DFLT1IER": {
              "offset": "0x12C",
              "size": 32,
              "description": "MDF DFLTx interrupt enable register x"
            },
            "MDF_DFLT2IER": {
              "offset": "0x1AC",
              "size": 32,
              "description": "MDF DFLTx interrupt enable register x"
            },
            "MDF_DFLT3IER": {
              "offset": "0x22C",
              "size": 32,
              "description": "MDF DFLTx interrupt enable register x"
            },
            "MDF_DFLT4IER": {
              "offset": "0x2AC",
              "size": 32,
              "description": "MDF DFLTx interrupt enable register x"
            },
            "MDF_DFLT5IER": {
              "offset": "0x32C",
              "size": 32,
              "description": "MDF DFLTx interrupt enable register x"
            },
            "MDF_DFLT1ISR": {
              "offset": "0x130",
              "size": 32,
              "description": "This register contains the status flags for each digital filter path."
            },
            "MDF_DFLT2ISR": {
              "offset": "0x1B0",
              "size": 32,
              "description": "This register contains the status flags for each digital filter path."
            },
            "MDF_DFLT3ISR": {
              "offset": "0x230",
              "size": 32,
              "description": "This register contains the status flags for each digital filter path."
            },
            "MDF_DFLT4ISR": {
              "offset": "0x2B0",
              "size": 32,
              "description": "This register contains the status flags for each digital filter path."
            },
            "MDF_DFLT5ISR": {
              "offset": "0x330",
              "size": 32,
              "description": "This register contains the status flags for each digital filter path."
            },
            "MDF_OEC0CR": {
              "offset": "0xB4",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_OEC1CR": {
              "offset": "0x134",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_OEC2CR": {
              "offset": "0x1B4",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_OEC3CR": {
              "offset": "0x234",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_OEC4CR": {
              "offset": "0x2B4",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_OEC5CR": {
              "offset": "0x334",
              "size": 32,
              "description": "This register contains the offset compensation value."
            },
            "MDF_SNPS0DR": {
              "offset": "0xEC",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_SNPS1DR": {
              "offset": "0x16C",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_SNPS2DR": {
              "offset": "0x1EC",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_SNPS3DR": {
              "offset": "0x26C",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_SNPS4DR": {
              "offset": "0x2EC",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_SNPS5DR": {
              "offset": "0x36C",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter in snapshot mode."
            },
            "MDF_DFLT0DR": {
              "offset": "0xF0",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            },
            "MDF_DFLT1DR": {
              "offset": "0x170",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            },
            "MDF_DFLT2DR": {
              "offset": "0x1F0",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            },
            "MDF_DFLT3DR": {
              "offset": "0x270",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            },
            "MDF_DFLT4DR": {
              "offset": "0x2F0",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            },
            "MDF_DFLT5DR": {
              "offset": "0x370",
              "size": 32,
              "description": "This register is used to read the data processed by each digital filter."
            }
          },
          "bits": {
            "GCR": {
              "TRGO": {
                "bit": 0,
                "description": "TRGO"
              },
              "ILVNB": {
                "bit": 4,
                "description": "ILVNB",
                "width": 4
              }
            },
            "CKGCR": {
              "CKGDEN": {
                "bit": 0,
                "description": "CKGDEN"
              },
              "CCK0EN": {
                "bit": 1,
                "description": "CCK0EN"
              },
              "CCK1EN": {
                "bit": 2,
                "description": "CCK1EN"
              },
              "CKGMOD": {
                "bit": 4,
                "description": "CKGMOD"
              },
              "CCK0DIR": {
                "bit": 5,
                "description": "CCK0DIR"
              },
              "CCK1DIR": {
                "bit": 6,
                "description": "CCK1DIR"
              },
              "TRGSENS": {
                "bit": 8,
                "description": "TRGSENS"
              },
              "TRGSRC": {
                "bit": 12,
                "description": "TRGSRC",
                "width": 4
              },
              "CCKDIV": {
                "bit": 16,
                "description": "CCKDIV",
                "width": 4
              },
              "PROCDIV": {
                "bit": 24,
                "description": "PROCDIV",
                "width": 7
              },
              "CKGACTIVE": {
                "bit": 31,
                "description": "CKGACTIVE"
              }
            },
            "MDF_SITF0CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured."
              }
            },
            "MDF_SITF1CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag"
              }
            },
            "MDF_SITF2CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag"
              }
            },
            "MDF_SITF3CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured."
              }
            },
            "MDF_SITF4CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured."
              }
            },
            "MDF_SITF5CR": {
              "SITFEN": {
                "bit": 0,
                "description": "Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled"
              },
              "SCKSRC": {
                "bit": 1,
                "description": "Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "SITFMOD": {
                "bit": 4,
                "description": "Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "STH": {
                "bit": 8,
                "description": "Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "SITFACTIVE": {
                "bit": 31,
                "description": "Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX0CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical  between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set  in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX1CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical  between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set  in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX2CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to    a   . The BSMXACTIVE flag is a logical     between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to     in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX3CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to    a   . The BSMXACTIVE flag is a logical    between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to    a    in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX4CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to   . The BSMXACTIVE flag is a logical    between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to     in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_BSMX5CR": {
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to    . The BSMXACTIVE flag is a logical     between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to     in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured."
              }
            },
            "MDF_DFLT0CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT1CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT2CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a  interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT3CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a  interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT4CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a  interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT5CR": {
              "DFLTEN": {
                "bit": 0,
                "description": "Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD =  01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD =  00x  or  1xx ,"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "ACQMOD": {
                "bit": 4,
                "description": "Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a  000  This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "TRGSENS": {
                "bit": 8,
                "description": "Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SNPSFMT": {
                "bit": 16,
                "description": "Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running"
              },
              "DFLTACTIVE": {
                "bit": 31,
                "description": "Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active"
              }
            },
            "MDF_DFLT0CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT1CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT2CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT3CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT4CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT5CICR": {
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to  0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 3
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 9
              },
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits",
                "width": 6
              }
            },
            "MDF_DFLT0RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT1RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT2RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT3RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT4RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT5RSFR": {
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              }
            },
            "MDF_DFLT0INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_DFLT1INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_DFLT2INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_DFLT3INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_DFLT4INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_DFLT5INTR": {
              "INTDIV": {
                "bit": 0,
                "description": "Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "INTVAL": {
                "bit": 4,
                "description": "Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 7
              }
            },
            "MDF_OLD0CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to    , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD1CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to   , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD2CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to    , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD3CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to    , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD4CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to    , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD5CR": {
              "OLDEN": {
                "bit": 0,
                "description": "Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode."
              },
              "THINB": {
                "bit": 1,
                "description": "Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details."
              },
              "BKOLD": {
                "bit": 4,
                "description": "Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "ACICN": {
                "bit": 12,
                "description": "OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 2
              },
              "ACICD": {
                "bit": 17,
                "description": "OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] =  0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 5
              },
              "OLDACTIVE": {
                "bit": 31,
                "description": "OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to    , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured."
              }
            },
            "MDF_OLD0THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD1THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD2THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD3THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD4THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD5THLR": {
              "OLDTHL": {
                "bit": 0,
                "description": "OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 26
              }
            },
            "MDF_OLD0THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_OLD1THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_OLD2THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_OLD3THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_OLD4THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_OLD5THHR": {
              "OLDTHH": {
                "bit": 0,
                "description": "OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details",
                "width": 26
              }
            },
            "MDF_DLY0CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_DLY1CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_DLY2CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_DLY3CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_DLY4CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_DLY5CR": {
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF =  0 , and the corresponding bit DFLTEN =  1 . If SKPBF =  1  the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,",
                "width": 7
              },
              "SKPBF": {
                "bit": 31,
                "description": "Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading  0  means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading  1  means that last valid SKPDLY[6:0] is still under precessing."
              }
            },
            "MDF_SCD0CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a   , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_SCD1CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a   , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_SCD2CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a  , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_SCD3CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a   , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_SCD4CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a   a  , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_SCD5CR": {
              "SCDEN": {
                "bit": 0,
                "description": "Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,"
              },
              "BKSCD": {
                "bit": 4,
                "description": "Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 4
              },
              "SCDT": {
                "bit": 12,
                "description": "Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.",
                "width": 8
              },
              "SCDACTIVE": {
                "bit": 31,
                "description": "SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to    a   a  , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured."
              }
            },
            "MDF_DFLT0IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT0ISR": {
              "FTHF": {
                "bit": 0,
                "description": "FTHF"
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on , writing  0  has no effect. - 1: Reading  1  means that a new data is available on , writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing this bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was higher than OLDTHL when the last OLD event occurred. - 1: The signal was lower than OLDTHL when the last OLD event occurred."
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing this bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH when the last OLD event occurred. - 1: The signal was higher than OLDTHH when the last OLD event occurred."
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_DFLT1IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT2IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT3IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT4IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT5IER": {
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled"
              },
              "SSDRIE": {
                "bit": 2,
                "description": "Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled"
              },
              "OLDIE": {
                "bit": 4,
                "description": "Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled"
              },
              "SSOVRIE": {
                "bit": 7,
                "description": "Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled"
              },
              "SCDIE": {
                "bit": 8,
                "description": "Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled"
              }
            },
            "MDF_DFLT1ISR": {
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that the RXFIFO threshold is not reached, writing  0  has no effect. - 1: Reading  1  means that the RXFIFO reached the threshold, writing  1  clears this flag."
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on MDF_SNPSxDR, writing  0  has no effect. - 1: Reading  1  means that a new data is available on MDF_SNPSxDR, writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred"
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred"
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_DFLT2ISR": {
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that the RXFIFO threshold is not reached, writing  0  has no effect. - 1: Reading  1  means that the RXFIFO reached the threshold, writing  1  clears this flag."
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on MDF_SNPSxDR, writing  0  has no effect. - 1: Reading  1  means that a new data is available on MDF_SNPSxDR, writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred"
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred"
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_DFLT3ISR": {
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that the RXFIFO threshold is not reached, writing  0  has no effect. - 1: Reading  1  means that the RXFIFO reached the threshold, writing  1  clears this flag."
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on MDF_SNPSxDR, writing  0  has no effect. - 1: Reading  1  means that a new data is available on MDF_SNPSxDR, writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred"
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred"
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_DFLT4ISR": {
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that the RXFIFO threshold is not reached, writing  0  has no effect. - 1: Reading  1  means that the RXFIFO reached the threshold, writing  1  clears this flag."
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on MDF_SNPSxDR, writing  0  has no effect. - 1: Reading  1  means that a new data is available on MDF_SNPSxDR, writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred"
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred"
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_DFLT5ISR": {
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that the RXFIFO threshold is not reached, writing  0  has no effect. - 1: Reading  1  means that the RXFIFO reached the threshold, writing  1  clears this flag."
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no overflow is detected, writing  0  has no effect. - 1: Reading  1  means that an overflow is detected, writing  1  clears this flag."
              },
              "SSDRF": {
                "bit": 2,
                "description": "Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no data is available on MDF_SNPSxDR, writing  0  has no effect. - 1: Reading  1  means that a new data is available on MDF_SNPSxDR, writing  1  clears this flag."
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading  0  means that the RXFIFO is empty. - 1: Reading  1  means that the RXFIFO is not empty."
              },
              "OLDF": {
                "bit": 4,
                "description": "Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no OLD event is detected, writing  0  has no effect. - 1: Reading  1  means that an OLD event is detected, writing  1  clears THHF, THLF and OLDF flags."
              },
              "THLF": {
                "bit": 5,
                "description": "Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred"
              },
              "THHF": {
                "bit": 6,
                "description": "High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to  1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to    a   1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred"
              },
              "SSOVRF": {
                "bit": 7,
                "description": "Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no snapshot overrun event is detected, writing  0  has no effect. - 1: Reading  1  means that a snapshot overrun event is detected, writing  1  clears this flag."
              },
              "SCDF": {
                "bit": 8,
                "description": "Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no SCD event is detected, writing  0  has no effect. - 1: Reading  1  means that a SCD event is detected, writing  1  clears this flag."
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no saturation is detected, writing  0  has no effect. - 1: Reading  1  means that a saturation is detected, writing  1  clears this flag."
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no clock absence is detected, writing  0  has no effect. - 1: Reading  1  means that a clock absence is detected, writing  1  clears this flag."
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to  1 . - 0: Reading  0  means that no reshape filter overrun is detected, writing  0  has no effect. - 1: Reading  1  means that reshape filter overrun is detected, writing  1  clears this flag."
              }
            },
            "MDF_OEC0CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_OEC1CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_OEC2CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_OEC3CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_OEC4CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_OEC5CR": {
              "OFFSET": {
                "bit": 0,
                "description": "Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.",
                "width": 26
              }
            },
            "MDF_SNPS0DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_SNPS1DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_SNPS2DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_SNPS3DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_SNPS4DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_SNPS5DR": {
              "MCICDC": {
                "bit": 0,
                "description": "Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)",
                "width": 9
              },
              "EXTSDR": {
                "bit": 9,
                "description": "Extended data size If SNPSFMT =  0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT =  1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).",
                "width": 7
              },
              "SDR": {
                "bit": 16,
                "description": "Contains the 16 MSB of the last valid data processed by the digital filter.",
                "width": 16
              }
            },
            "MDF_DFLT0DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            },
            "MDF_DFLT1DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            },
            "MDF_DFLT2DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            },
            "MDF_DFLT3DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            },
            "MDF_DFLT4DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            },
            "MDF_DFLT5DR": {
              "DR": {
                "bit": 8,
                "description": "Data processed by digital filter.",
                "width": 24
              }
            }
          }
        },
        "ADF1": {
          "instances": [
            {
              "name": "ADF1",
              "base": "0x46024000",
              "irq": 112
            }
          ],
          "registers": {
            "ADF_GCR": {
              "offset": "0x00",
              "size": 32,
              "description": "ADF Global Control Register"
            },
            "ADF_CKGCR": {
              "offset": "0x04",
              "size": 32,
              "description": "ADF clock generator control register"
            },
            "ADF_SITF0CR": {
              "offset": "0x80",
              "size": 32,
              "description": "ADF serial interface control register 0"
            },
            "ADF_BSMX0CR": {
              "offset": "0x84",
              "size": 32,
              "description": "ADF bitstream matrix control register 0"
            },
            "ADF_DFLT0CR": {
              "offset": "0x88",
              "size": 32,
              "description": "ADF digital filter control register 0"
            },
            "ADF_DFLT0CICR": {
              "offset": "0x8C",
              "size": 32,
              "description": "ADF digital filer configuration register 0"
            },
            "ADF_DFLT0RSFR": {
              "offset": "0x90",
              "size": 32,
              "description": "ADF reshape filter configuration register 0"
            },
            "ADF_DLY0CR": {
              "offset": "0xA4",
              "size": 32,
              "description": "ADF delay control register 0"
            },
            "ADF_DFLT0IER": {
              "offset": "0xAC",
              "size": 32,
              "description": "ADF DFLT0 interrupt enable register"
            },
            "ADF_DFLT0ISR": {
              "offset": "0xB0",
              "size": 32,
              "description": "ADF DFLT0 interrupt status register 0"
            },
            "ADF_SADCR": {
              "offset": "0xB8",
              "size": 32,
              "description": "ADF SAD control register"
            },
            "ADF_SADCFGR": {
              "offset": "0xBC",
              "size": 32,
              "description": "ADF SAD configuration register"
            },
            "ADF_SADSDLVR": {
              "offset": "0xC0",
              "size": 32,
              "description": "ADF SAD sound level register"
            },
            "ADF_SADANLVR": {
              "offset": "0xC4",
              "size": 32,
              "description": "ADF SAD ambient noise level register"
            },
            "ADF_DFLT0DR": {
              "offset": "0xF0",
              "size": 32,
              "description": "ADF digital filter data register 0"
            }
          },
          "bits": {
            "ADF_GCR": {
              "TRGO": {
                "bit": 0,
                "description": "Trigger output control Set by software and reset by"
              }
            },
            "ADF_CKGCR": {
              "CKGACTIVE": {
                "bit": 31,
                "description": "Clock generator active flag"
              },
              "PROCDIV": {
                "bit": 24,
                "description": "Divider to control the serial interface clock",
                "width": 7
              },
              "CCKDIV": {
                "bit": 16,
                "description": "Divider to control the ADF_CCK clock",
                "width": 4
              },
              "TRGSRC": {
                "bit": 12,
                "description": "Digital filter trigger signal selection",
                "width": 4
              },
              "TRGSENS": {
                "bit": 8,
                "description": "CKGEN trigger sensitivity selection"
              },
              "CCK1DIR": {
                "bit": 6,
                "description": "ADF_CCK1 direction"
              },
              "CCK0DIR": {
                "bit": 5,
                "description": "ADF_CCK0 direction"
              },
              "CKGMOD": {
                "bit": 4,
                "description": "Clock generator mode"
              },
              "CCK1EN": {
                "bit": 2,
                "description": "ADF_CCK1 clock enable"
              },
              "CCK0EN": {
                "bit": 1,
                "description": "ADF_CCK0 clock enable"
              },
              "CKGDEN": {
                "bit": 0,
                "description": "CKGEN dividers enable"
              }
            },
            "ADF_SITF0CR": {
              "SITFACTIVE": {
                "bit": 31,
                "description": "SITFACTIVE"
              },
              "STH": {
                "bit": 8,
                "description": "STH",
                "width": 5
              },
              "SITFMOD": {
                "bit": 4,
                "description": "SITFMOD",
                "width": 2
              },
              "SCKSRC": {
                "bit": 1,
                "description": "SCKSRC",
                "width": 2
              },
              "SITFEN": {
                "bit": 0,
                "description": "SITFEN"
              }
            },
            "ADF_BSMX0CR": {
              "BSMXACTIVE": {
                "bit": 31,
                "description": "BSMX active flag"
              },
              "BSSEL": {
                "bit": 0,
                "description": "Bitstream selection",
                "width": 5
              }
            },
            "ADF_DFLT0CR": {
              "DFLTACTIVE": {
                "bit": 31,
                "description": "DFLT0 active flag"
              },
              "DFLTRUN": {
                "bit": 30,
                "description": "DFLT0 run status flag"
              },
              "NBDIS": {
                "bit": 20,
                "description": "Number of samples to be discarded",
                "width": 8
              },
              "TRGSRC": {
                "bit": 12,
                "description": "DFLT0 trigger signal selection",
                "width": 4
              },
              "ACQMOD": {
                "bit": 4,
                "description": "DFLT0 trigger mode",
                "width": 3
              },
              "FTH": {
                "bit": 2,
                "description": "RXFIFO threshold selection"
              },
              "DMAEN": {
                "bit": 1,
                "description": "DMA requests enable"
              },
              "DFLTEN": {
                "bit": 0,
                "description": "DFLT0 enable"
              }
            },
            "ADF_DFLT0CICR": {
              "SCALE": {
                "bit": 20,
                "description": "Scaling factor selection",
                "width": 6
              },
              "MCICD": {
                "bit": 8,
                "description": "CIC decimation ratio selection",
                "width": 9
              },
              "CICMOD": {
                "bit": 4,
                "description": "Select the CIC order",
                "width": 3
              },
              "DATSRC": {
                "bit": 0,
                "description": "Source data for the digital filter",
                "width": 2
              }
            },
            "ADF_DFLT0RSFR": {
              "HPFC": {
                "bit": 8,
                "description": "High-pass filter cut-off frequency",
                "width": 2
              },
              "HPFBYP": {
                "bit": 7,
                "description": "High-pass filter bypass"
              },
              "RSFLTD": {
                "bit": 4,
                "description": "Reshaper filter decimation ratio"
              },
              "RSFLTBYP": {
                "bit": 0,
                "description": "Reshaper filter bypass"
              }
            },
            "ADF_DLY0CR": {
              "SKPBF": {
                "bit": 31,
                "description": "Skip busy flag"
              },
              "SKPDLY": {
                "bit": 0,
                "description": "Delay to apply to a bitstream",
                "width": 7
              }
            },
            "ADF_DFLT0IER": {
              "SDLVLIE": {
                "bit": 13,
                "description": "SAD sound-level value ready enable"
              },
              "SDDETIE": {
                "bit": 12,
                "description": "Sound activity detection interrupt enable"
              },
              "RFOVRIE": {
                "bit": 11,
                "description": "Reshape filter overrun interrupt enable"
              },
              "CKABIE": {
                "bit": 10,
                "description": "Clock absence detection interrupt enable"
              },
              "SATIE": {
                "bit": 9,
                "description": "Saturation detection interrupt enable"
              },
              "DOVRIE": {
                "bit": 1,
                "description": "Data overflow interrupt enable"
              },
              "FTHIE": {
                "bit": 0,
                "description": "RXFIFO threshold interrupt enable"
              }
            },
            "ADF_DFLT0ISR": {
              "SDLVLF": {
                "bit": 13,
                "description": "Sound level value ready flag"
              },
              "SDDETF": {
                "bit": 12,
                "description": "Sound activity detection flag"
              },
              "RFOVRF": {
                "bit": 11,
                "description": "Reshape filter overrun detection flag"
              },
              "CKABF": {
                "bit": 10,
                "description": "Clock absence detection flag"
              },
              "SATF": {
                "bit": 9,
                "description": "Saturation detection flag"
              },
              "RXNEF": {
                "bit": 3,
                "description": "RXFIFO not empty flag"
              },
              "DOVRF": {
                "bit": 1,
                "description": "Data overflow flag"
              },
              "FTHF": {
                "bit": 0,
                "description": "RXFIFO threshold flag"
              }
            },
            "ADF_SADCR": {
              "SADACTIVE": {
                "bit": 31,
                "description": "SAD Active flag"
              },
              "SADMOD": {
                "bit": 12,
                "description": "SAD working mode",
                "width": 2
              },
              "FRSIZE": {
                "bit": 8,
                "description": "Frame size",
                "width": 3
              },
              "HYSTEN": {
                "bit": 7,
                "description": "Hysteresis enable"
              },
              "SADST": {
                "bit": 4,
                "description": "SAD state",
                "width": 2
              },
              "DETCFG": {
                "bit": 3,
                "description": "Sound trigger event configuration"
              },
              "DATCAP": {
                "bit": 1,
                "description": "Data capture mode",
                "width": 2
              },
              "SADEN": {
                "bit": 0,
                "description": "Sound activity detector enable"
              }
            },
            "ADF_SADCFGR": {
              "ANMIN": {
                "bit": 16,
                "description": "ANMIN",
                "width": 13
              },
              "HGOVR": {
                "bit": 12,
                "description": "Hangover time window",
                "width": 3
              },
              "LFRNB": {
                "bit": 8,
                "description": "LFRNB",
                "width": 3
              },
              "ANSLP": {
                "bit": 4,
                "description": "ANSLP",
                "width": 3
              },
              "SNTHR": {
                "bit": 0,
                "description": "SNTHR",
                "width": 4
              }
            },
            "ADF_SADSDLVR": {
              "SDLVL": {
                "bit": 0,
                "description": "SDLVL",
                "width": 15
              }
            },
            "ADF_SADANLVR": {
              "ANLVL": {
                "bit": 0,
                "description": "ANLVL",
                "width": 15
              }
            },
            "ADF_DFLT0DR": {
              "DR": {
                "bit": 8,
                "description": "DR",
                "width": 24
              }
            }
          }
        },
        "ADC": {
          "instances": [
            {
              "name": "ADC1",
              "base": "0x42028000",
              "irq": 37
            },
            {
              "name": "SEC_ADC1",
              "base": "0x52028000"
            },
            {
              "name": "ADC4",
              "base": "0x46021000",
              "irq": 113
            },
            {
              "name": "SEC_ADC4",
              "base": "0x56021000"
            },
            {
              "name": "ADC12",
              "base": "0x42028300"
            },
            {
              "name": "SEC_ADC12",
              "base": "0x52028300"
            }
          ],
          "registers": {
            "ADC_ISR": {
              "offset": "0x00",
              "size": 32,
              "description": "ADC interrupt and status register"
            },
            "ADC_IER": {
              "offset": "0x04",
              "size": 32,
              "description": "ADC interrupt enable register"
            },
            "ADC_CR": {
              "offset": "0x08",
              "size": 32,
              "description": "ADC control register"
            },
            "ADC_CFGR1": {
              "offset": "0x0C",
              "size": 32,
              "description": "ADC configuration register"
            },
            "ADC_CFGR2": {
              "offset": "0x10",
              "size": 32,
              "description": "ADC configuration register 2"
            },
            "ADC_SMPR1": {
              "offset": "0x14",
              "size": 32,
              "description": "ADC sample time register 1"
            },
            "ADC_SMPR2": {
              "offset": "0x18",
              "size": 32,
              "description": "ADC sample time register 2"
            },
            "ADC_PCSEL": {
              "offset": "0x1C",
              "size": 32,
              "description": "ADC channel preselection register"
            },
            "ADC_SQR1": {
              "offset": "0x30",
              "size": 32,
              "description": "ADC regular sequence register 1"
            },
            "ADC_SQR2": {
              "offset": "0x34",
              "size": 32,
              "description": "ADC regular sequence register 2"
            },
            "ADC_SQR3": {
              "offset": "0x38",
              "size": 32,
              "description": "ADC regular sequence register 3"
            },
            "ADC_SQR4": {
              "offset": "0x3C",
              "size": 32,
              "description": "ADC regular sequence register 4"
            },
            "ADC_DR": {
              "offset": "0x40",
              "size": 32,
              "description": "ADC regular Data Register"
            },
            "ADC_JSQR": {
              "offset": "0x4C",
              "size": 32,
              "description": "ADC injected sequence register"
            },
            "ADC_OFR1": {
              "offset": "0x60",
              "size": 32,
              "description": "ADC offset register"
            },
            "ADC_OFR2": {
              "offset": "0x64",
              "size": 32,
              "description": "ADC offset register"
            },
            "ADC_OFR3": {
              "offset": "0x68",
              "size": 32,
              "description": "ADC offset register"
            },
            "ADC_OFR4": {
              "offset": "0x6C",
              "size": 32,
              "description": "ADC offset register"
            },
            "ADC_GCOMP": {
              "offset": "0x70",
              "size": 32,
              "description": "ADC gain compensation register"
            },
            "ADC_JDR1": {
              "offset": "0x80",
              "size": 32,
              "description": "ADC injected data register"
            },
            "ADC_JDR2": {
              "offset": "0x84",
              "size": 32,
              "description": "ADC injected data register"
            },
            "ADC_JDR3": {
              "offset": "0x88",
              "size": 32,
              "description": "ADC injected data register"
            },
            "ADC_JDR4": {
              "offset": "0x8C",
              "size": 32,
              "description": "ADC injected data register"
            },
            "ADC_AWD2CR": {
              "offset": "0xA0",
              "size": 32,
              "description": "ADC analog watchdog 2 configuration register"
            },
            "ADC_AWD3CR": {
              "offset": "0xA4",
              "size": 32,
              "description": "ADC analog watchdog 3 configuration register"
            },
            "ADC_LTR1": {
              "offset": "0xA8",
              "size": 32,
              "description": "ADC watchdog threshold register 1"
            },
            "ADC_HTR1": {
              "offset": "0xAC",
              "size": 32,
              "description": "ADC watchdog threshold register 1"
            },
            "ADC_LTR2": {
              "offset": "0xB0",
              "size": 32,
              "description": "ADC watchdog lower threshold register 2"
            },
            "ADC_HTR2": {
              "offset": "0xB4",
              "size": 32,
              "description": "ADC watchdog higher threshold register 2"
            },
            "ADC_LTR3": {
              "offset": "0xB8",
              "size": 32,
              "description": "ADC watchdog lower threshold register 3"
            },
            "ADC_HTR3": {
              "offset": "0xBC",
              "size": 32,
              "description": "ADC watchdog higher threshold register 3"
            },
            "ADC_DIFSEL": {
              "offset": "0xC0",
              "size": 32,
              "description": "ADC differential mode selection register"
            },
            "ADC_CALFACT": {
              "offset": "0xC4",
              "size": 32,
              "description": "ADC user control register"
            },
            "ADC_CALFACT2": {
              "offset": "0xC8",
              "size": 32,
              "description": "ADC calibration factor register"
            }
          },
          "bits": {
            "ADC_ISR": {
              "ADRDY": {
                "bit": 0,
                "description": "ADC ready\nThis bit is set by hardware after the ADC has been enabled (bit ADEN\u00a0=\u00a01) and when the ADC reaches a state where it is ready to accept conversion requests.\nIt is cleared by software writing 1 to it."
              },
              "EOSMP": {
                "bit": 1,
                "description": "End of sampling flag\nThis bit is set by hardware during the conversion of any channel (only for regular channels), at the end of the sampling phase."
              },
              "EOC": {
                "bit": 2,
                "description": "End of conversion flag\nThis bit is set by hardware at the end of each regular conversion of a channel when a new data is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register"
              },
              "EOS": {
                "bit": 3,
                "description": "End of regular sequence flag\nThis bit is set by hardware at the end of the conversions of a regular sequence of channels. It is cleared by software writing 1 to it."
              },
              "OVR": {
                "bit": 4,
                "description": "ADC overrun\nThis bit is set by hardware when an overrun occurs on a regular channel, meaning that a new conversion has completed while the EOC flag was already set. It is cleared by software writing 1 to it."
              },
              "JEOC": {
                "bit": 5,
                "description": "Injected channel end of conversion flag\nThis bit is set by hardware at the end of each injected conversion of a channel when a new data is available in the corresponding ADC_JDRy register. It is cleared by software writing 1 to it or by reading the corresponding ADC_JDRy register"
              },
              "JEOS": {
                "bit": 6,
                "description": "Injected channel end of sequence flag\nThis bit is set by hardware at the end of the conversions of all injected channels in the group. It is cleared by software writing 1 to it."
              },
              "AWD1": {
                "bit": 7,
                "description": "Analog watchdog 1 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in the fields LT1[11:0] and HT1[11:0] of ADC_LTR1, & ADC_HTR1 register. It is cleared by software. writing 1 to it."
              },
              "AWD2": {
                "bit": 8,
                "description": "Analog watchdog 2 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in the fields LT2[7:0] and HT2[7:0] of ADC_LTR2 & ADC_HTR2 register. It is cleared by software writing 1 to it."
              },
              "AWD3": {
                "bit": 9,
                "description": "Analog watchdog 3 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in the fields LT3[7:0] and HT3[7:0] of ADC_LTR3 & ADC_HTR3 register. It is cleared by software writing 1 to it."
              },
              "LDORDY": {
                "bit": 12,
                "description": "ADC voltage regulator ready\nThis bit is set by hardware. It indicates that the ADC internal supply is ready. The ADC is available after tADCVREG_SETUP time."
              }
            },
            "ADC_IER": {
              "ADRDYIE": {
                "bit": 0,
                "description": "ADC ready interrupt enable\nThis bit is set and cleared by software to enable/disable the ADC Ready interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "EOSMPIE": {
                "bit": 1,
                "description": "End of sampling flag interrupt enable for regular conversions\nThis bit is set and cleared by software to enable/disable the end of the sampling phase interrupt for regular conversions.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "EOCIE": {
                "bit": 2,
                "description": "End of regular conversion interrupt enable\nThis bit is set and cleared by software to enable/disable the end of a regular conversion interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "EOSIE": {
                "bit": 3,
                "description": "End of regular sequence of conversions interrupt enable\nThis bit is set and cleared by software to enable/disable the end of regular sequence of conversions interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "OVRIE": {
                "bit": 4,
                "description": "Overrun interrupt enable\nThis bit is set and cleared by software to enable/disable the Overrun interrupt of a regular conversion.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "JEOCIE": {
                "bit": 5,
                "description": "End of injected conversion interrupt enable\nThis bit is set and cleared by software to enable/disable the end of an injected conversion interrupt.\nNote: Software is allowed to write this bit only when JADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "JEOSIE": {
                "bit": 6,
                "description": "End of injected sequence of conversions interrupt enable\nThis bit is set and cleared by software to enable/disable the end of injected sequence of conversions interrupt.\nNote: Software is allowed to write this bit only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing)."
              },
              "AWD1IE": {
                "bit": 7,
                "description": "Analog watchdog 1 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog 1 interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "AWD2IE": {
                "bit": 8,
                "description": "Analog watchdog 2 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "AWD3IE": {
                "bit": 9,
                "description": "Analog watchdog 3 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt.\nNote: Software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_CR": {
              "ADEN": {
                "bit": 0,
                "description": "ADC enable control\nThis bit is set by software to enable the ADC. The ADC is effectively ready to operate once the flag ADRDY has been set.\nIt is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command.\nNote: The software is allowed to set ADEN only when all bits of ADC_CR registers are 0 (ADCAL\u00a0=\u00a00, JADSTART\u00a0=\u00a00, ADSTART\u00a0=\u00a00, ADSTP\u00a0=\u00a00, ADDIS\u00a0=\u00a00 and ADEN\u00a0=\u00a00) except for bit ADVREGEN which must be 1 (and the software must have wait for the startup time of the voltage regulator)"
              },
              "ADDIS": {
                "bit": 1,
                "description": "ADC disable command\nThis bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state).\nIt is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time).\nNote: The software is allowed to set ADDIS only when ADEN\u00a0=\u00a01 and both ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)"
              },
              "ADSTART": {
                "bit": 2,
                "description": "ADC start of regular conversion\nThis bit is set by software to start ADC conversion of regular channels. Depending on the configuration bits EXTEN[1:0], a conversion starts immediately (software trigger configuration) or once a regular hardware trigger event occurs (hardware trigger configuration).\nIt is cleared by hardware:\n\u00a0in Single conversion mode (CONT\u00a0=\u00a00, DISCEN\u00a0=\u00a00) when software trigger is selected (EXTEN[1:0]\u00a0=\u00a00x0): at the assertion of the end of regular conversion sequence (EOS) flag.\nIn Discontinuous conversion mode (CONT\u00a0=\u00a00, DISCEN\u00a0=\u00a01), when the software trigger is selected (EXTEN[1:0]\u00a0=\u00a00x0): at the end of conversion (EOC) flag.\nin all other cases: after the execution of the ADSTP command, at the same time that ADSTP is cleared by hardware.\nNote: The software is allowed to set ADSTART only when ADEN\u00a0=\u00a01 and ADDIS\u00a0=\u00a00 (ADC is enabled and there is no pending request to disable the ADC)\nIn Auto-injection mode (JAUTO\u00a0=\u00a01), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)"
              },
              "JADSTART": {
                "bit": 3,
                "description": "ADC start of injected conversion\nThis bit is set by software to start ADC conversion of injected channels. Depending on the configuration bits JEXTEN[1:0], a conversion starts immediately (software trigger configuration) or once an injected hardware trigger event occurs (hardware trigger configuration).\nIt is cleared by hardware:\nin Single conversion mode when software trigger is selected (JEXTSEL\u00a0=\u00a00x0): at the assertion of the end of injected conversion sequence (JEOS) flag.\nin all cases: after the execution of the JADSTP command, at the same time as JADSTP is cleared by hardware.\nNote: The software is allowed to set JADSTART only when ADEN\u00a0=\u00a01 and ADDIS\u00a0=\u00a00 (ADC is enabled and there is no pending request to disable the ADC).\nIn Auto-injection mode (JAUTO\u00a0=\u00a01), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)"
              },
              "ADSTP": {
                "bit": 4,
                "description": "ADC stop of regular conversion command\nThis bit is set by software to stop and discard an ongoing regular conversion (ADSTP Command).\nIt is cleared by hardware when the conversion is effectively discarded and the ADC regular sequence and triggers can be re-configured. The ADC is then ready to accept a new start of regular conversions (ADSTART command).\nNote: The software is allowed to set ADSTP only when ADSTART\u00a0=\u00a01 and ADDIS\u00a0=\u00a00 (ADC is enabled and eventually converting a regular conversion and there is no pending request to disable the ADC).\nIn Auto-injection mode (JAUTO\u00a0=\u00a01), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP)."
              },
              "JADSTP": {
                "bit": 5,
                "description": "ADC stop of injected conversion command\nThis bit is set by software to stop and discard an ongoing injected conversion (JADSTP Command).\nIt is cleared by hardware when the conversion is effectively discarded and the ADC injected sequence and triggers can be re-configured. The ADC is then ready to accept a new start of injected conversions (JADSTART command).\nNote: The software is allowed to set JADSTP only when JADSTART\u00a0=\u00a01 and ADDIS\u00a0=\u00a00 (ADC is enabled and eventually converting an injected conversion and there is no pending request to disable the ADC).\nIn Auto-injection mode (JAUTO\u00a0=\u00a01), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP)"
              },
              "ADCALLIN": {
                "bit": 16,
                "description": "Linearity calibration\nThis bit is set and cleared by software to enable the linearity calibration.\nNote: The software is allowed to write this bit only when the ADC is disabled and is not calibrating (ADCAL\u00a0=\u00a00, JADSTART\u00a0=\u00a00, JADSTP\u00a0=\u00a00, ADSTART\u00a0=\u00a00, ADSTP\u00a0=\u00a00, ADDIS\u00a0=\u00a00 and ADEN\u00a0=\u00a00)."
              },
              "CALINDEX": {
                "bit": 24,
                "description": "Calibration factor\nThis bitfield controls the calibration factor to be read or written.\nCalibration index 0 is dedicated to single-ended and differential offsets, calibration index 1 to 7 to the linearity calibration factors, and index 8 to the internal offset:\nOthers: Reserved, must not be used\nNote: ADC_CALFACT2[31:0] correspond to the location of CALINDEX[3:0] calibration factor data (see  for details).",
                "width": 4
              },
              "ADVREGEN": {
                "bit": 28,
                "description": "ADC voltage regulator enable\nThis bits is set by software to enable the ADC voltage regulator.\nBefore performing any operation such as launching a calibration or enabling the ADC, the ADC voltage regulator must first be enabled and the software must wait for the regulator start-up time.\nFor more details about the ADC voltage regulator enable and disable sequences, refer to (ADVREGEN).\nThe software can program this bit field only when the ADC is disabled (ADCAL\u00a0=\u00a00, JADSTART\u00a0=\u00a00, ADSTART\u00a0=\u00a00, ADSTP\u00a0=\u00a00, ADDIS\u00a0=\u00a00 and ADEN\u00a0=\u00a00)."
              },
              "DEEPPWD": {
                "bit": 29,
                "description": "Deep-power-down enable\nThis bit is set and cleared by software to put the ADC in Deep-power-down mode.\nNote: The software is allowed to write this bit only when the ADC is disabled (ADCAL\u00a0=\u00a00, JADSTART\u00a0=\u00a00, JADSTP\u00a0=\u00a00, ADSTART\u00a0=\u00a00, ADSTP\u00a0=\u00a00, ADDIS\u00a0=\u00a00 and ADEN\u00a0=\u00a00)."
              },
              "ADCAL": {
                "bit": 31,
                "description": "ADC calibration\nThis bit is set by software to start the ADC calibration.\nIt is cleared by hardware after calibration is complete.\nNote: The software is allowed to launch a calibration by setting ADCAL only when ADEN\u00a0=\u00a00."
              }
            },
            "ADC_CFGR1": {
              "DMNGT": {
                "bit": 0,
                "description": "Data management configuration\nThis bit is set and cleared by software to select how the ADC interface output data are managed.\nNote: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).",
                "width": 2
              },
              "RES": {
                "bit": 2,
                "description": "Data resolution\nThese bits are written by software to select the resolution of the conversion.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 2
              },
              "EXTSEL": {
                "bit": 5,
                "description": "External trigger selection for regular group\nThese bits select the external event used to trigger the start of conversion of a regular group:\n...\nRefer to the ADC external trigger for regular channels in signals for details on trigger mapping.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "EXTEN": {
                "bit": 10,
                "description": "External trigger enable and polarity selection for regular channels\nThese bits are set and cleared by software to select the external trigger polarity and enable the trigger of a regular group.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 2
              },
              "OVRMOD": {
                "bit": 12,
                "description": "Overrun Mode\nThis bit is set and cleared by software and configure the way data overrun is managed.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "CONT": {
                "bit": 13,
                "description": "Single / continuous conversion mode for regular conversions\nThis bit is set and cleared by software. If it is set, regular conversion takes place continuously until it is cleared.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN\u00a0=\u00a01 and CONT\u00a0=\u00a01.\nThe software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "AUTDLY": {
                "bit": 14,
                "description": "Delayed conversion mode\nThis bit is set and cleared by software to enable/disable the Auto Delayed Conversion mode..\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "DISCEN": {
                "bit": 16,
                "description": "Discontinuous mode for regular channels\nThis bit is set and cleared by software to enable/disable Discontinuous mode for regular channels.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN\u00a0=\u00a01 and CONT\u00a0=\u00a01.\nIt is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set.\nThe software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "DISCNUM": {
                "bit": 17,
                "description": "Discontinuous mode channel count\nThese bits are written by software to define the number of regular channels to be converted in discontinuous mode, after receiving an external trigger.\n...\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 3
              },
              "JDISCEN": {
                "bit": 20,
                "description": "Discontinuous mode on injected channels\nThis bit is set and cleared by software to enable/disable discontinuous mode on the injected channels of a group.\nNote: The software is allowed to write this bit only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing).\nIt is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set."
              },
              "AWD1SGL": {
                "bit": 22,
                "description": "Enable the watchdog 1 on a single channel or on all channels\nThis bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWD1CH[4:0] bits or on all the channels\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "AWD1EN": {
                "bit": 23,
                "description": "Analog watchdog 1 enable on regular channels\nThis bit is set and cleared by software\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing)."
              },
              "JAWD1EN": {
                "bit": 24,
                "description": "Analog watchdog 1 enable on injected channels\nThis bit is set and cleared by software\nNote: The software is allowed to write this bit only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing)."
              },
              "JAUTO": {
                "bit": 25,
                "description": "Automatic injected group conversion\nThis bit is set and cleared by software to enable/disable automatic injected group conversion after regular group conversion.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no regular nor injected conversion is ongoing)."
              },
              "AWD1CH": {
                "bit": 26,
                "description": "Analog watchdog 1 channel selection\nThese bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog.\n.....\nOthers: Reserved, must not be used\nNote: The channel selected by AWD1CH must be also selected into the SQRi or JSQRi registers.\nSoftware is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 5
              }
            },
            "ADC_CFGR2": {
              "ROVSE": {
                "bit": 0,
                "description": "Regular Oversampling Enable\nThis bit is set and cleared by software to enable regular oversampling.\nNote: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)"
              },
              "JOVSE": {
                "bit": 1,
                "description": "Injected Oversampling Enable\nThis bit is set and cleared by software to enable injected oversampling.\nNote: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)"
              },
              "OVSS": {
                "bit": 5,
                "description": "Oversampling right shift\nThis bit field is set and cleared by software to define the right shifting applied to the raw oversampling result.\nOthers: Reserved, must not be used.\nNote: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no conversion is ongoing).",
                "width": 4
              },
              "TROVS": {
                "bit": 9,
                "description": "Triggered Regular Oversampling\nThis bit is set and cleared by software to enable triggered oversampling\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "ROVSM": {
                "bit": 10,
                "description": "Regular Oversampling mode\nThis bit is set and cleared by software to select the regular oversampling mode.\nNote: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing)."
              },
              "BULB": {
                "bit": 13,
                "description": "Bulb sampling mode\nThis bit is set and cleared by software to select the bulb sampling mode.\nSMPTRIG bit must not be set when the BULB bit is set.\nThe very first ADC conversion is performed with the sampling time specified in SMPx bits.\nNote: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing)."
              },
              "SWTRIG": {
                "bit": 14,
                "description": "Software trigger bit for sampling time control trigger mode\nThis bit is set and cleared by software to enable the bulb sampling mode.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "SMPTRIG": {
                "bit": 15,
                "description": "Sampling time control trigger mode\nThis bit is set and cleared by software to enable the sampling time control trigger mode.\nThe sampling time starts on the trigger rising edge, and the conversion on the trigger falling edge.\nEXTEN[1:0] bits must be set to 01. BULB bit must not be set when the SMPTRIG bit is set.\nWhen EXTEN[1:0] bits is set to 00, set SWTRIG to start the sampling and clear SWTRIG bit to start the conversion.\nNote: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing)."
              },
              "OSR": {
                "bit": 16,
                "description": "Oversampling ratio\nThis bitfield is set and cleared by software to define the oversampling ratio.\n2: 3x\n...\n1023: 1024x\nNote: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).",
                "width": 10
              },
              "LFTRIG": {
                "bit": 27,
                "description": "Low-frequency trigger\nThis bit is set and cleared by software\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "LSHIFT": {
                "bit": 28,
                "description": "Left shift factor\nThis bitfield is set and cleared by software to define the left shifting applied to the final result with or without oversampling.\nNote: The software is allowed to write this bit only when ADSTART\u00a0= 0 (which ensures that no conversion is ongoing).",
                "width": 4
              }
            },
            "ADC_SMPR1": {
              "SMP0": {
                "bit": 0,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP1": {
                "bit": 3,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP2": {
                "bit": 6,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP3": {
                "bit": 9,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP4": {
                "bit": 12,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP5": {
                "bit": 15,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP6": {
                "bit": 18,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP7": {
                "bit": 21,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP8": {
                "bit": 24,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP9": {
                "bit": 27,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART = 0 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              }
            },
            "ADC_SMPR2": {
              "SMP10": {
                "bit": 0,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP11": {
                "bit": 3,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP12": {
                "bit": 6,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP13": {
                "bit": 9,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP14": {
                "bit": 12,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP15": {
                "bit": 15,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP16": {
                "bit": 18,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP17": {
                "bit": 21,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP18": {
                "bit": 24,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              },
              "SMP19": {
                "bit": 27,
                "description": "Channel x sampling time selection (x = 0 to 9)\nThese bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              }
            },
            "ADC_PCSEL": {
              "PCSEL0": {
                "bit": 0,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL1": {
                "bit": 1,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL2": {
                "bit": 2,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL3": {
                "bit": 3,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL4": {
                "bit": 4,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL5": {
                "bit": 5,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL6": {
                "bit": 6,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL7": {
                "bit": 7,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL8": {
                "bit": 8,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL9": {
                "bit": 9,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL10": {
                "bit": 10,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL11": {
                "bit": 11,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL12": {
                "bit": 12,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL13": {
                "bit": 13,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL14": {
                "bit": 14,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL15": {
                "bit": 15,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL16": {
                "bit": 16,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL17": {
                "bit": 17,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL18": {
                "bit": 18,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "PCSEL19": {
                "bit": 19,
                "description": "Channel i (VINP[i]) preselection\nThese bits are written by software to preselect the input channel I/O instance to be converted.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_SQR1": {
              "L": {
                "bit": 0,
                "description": "Regular channel sequence length\nThese bits are written by software to define the total number of conversions in the regular channel conversion sequence.\n...\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 4
              },
              "SQ1": {
                "bit": 6,
                "description": "1st conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 1st in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ2": {
                "bit": 12,
                "description": "2nd conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 2nd in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ3": {
                "bit": 18,
                "description": "3rd conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 3rd in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ4": {
                "bit": 24,
                "description": "4th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 4th in the regular conversion sequence.",
                "width": 5
              }
            },
            "ADC_SQR2": {
              "SQ5": {
                "bit": 0,
                "description": "5th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 5th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ6": {
                "bit": 6,
                "description": "6th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 6th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ7": {
                "bit": 12,
                "description": "7th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 7th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ8": {
                "bit": 18,
                "description": "8th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 8th in the regular conversion sequence\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ9": {
                "bit": 24,
                "description": "9th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 9th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              }
            },
            "ADC_SQR3": {
              "SQ10": {
                "bit": 0,
                "description": "10th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 10th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ11": {
                "bit": 6,
                "description": "11th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 11th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ12": {
                "bit": 12,
                "description": "12th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 12th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ13": {
                "bit": 18,
                "description": "13th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 13th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ14": {
                "bit": 24,
                "description": "14th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 14th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              }
            },
            "ADC_SQR4": {
              "SQ15": {
                "bit": 0,
                "description": "15th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 15th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              },
              "SQ16": {
                "bit": 6,
                "description": "16th conversion in regular sequence\nThese bits are written by software with the channel number (0..19) assigned as the 16th in the regular conversion sequence.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 (which ensures that no regular conversion is ongoing).",
                "width": 5
              }
            },
            "ADC_DR": {
              "RDATA": {
                "bit": 0,
                "description": "Regular data converted\nThese bits are read-only. They contain the conversion result from the last converted regular channel. The data are left- or right-aligned as described in .",
                "width": 32
              }
            },
            "ADC_JSQR": {
              "JL": {
                "bit": 0,
                "description": "Injected channel sequence length\nThese bits are written by software to define the total number of conversions in the injected channel conversion sequence.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 2
              },
              "JEXTSEL": {
                "bit": 2,
                "description": "External trigger selection for injected group\nThese bits select the external event used to trigger the start of conversion of an injected group:\n...\nRefer to the ADC external trigger for injected channels in internal signals for details on trigger mapping.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 5
              },
              "JEXTEN": {
                "bit": 7,
                "description": "External trigger enable and polarity selection for injected channels\nThese bits are set and cleared by software to select the external trigger polarity and enable the trigger of an injected group.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 2
              },
              "JSQ1": {
                "bit": 9,
                "description": "1st conversion in the injected sequence\nThese bits are written by software with the channel number (0..19) assigned as the 1st in the injected conversion sequence.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 5
              },
              "JSQ2": {
                "bit": 15,
                "description": "2nd conversion in the injected sequence\nThese bits are written by software with the channel number (0..19) assigned as the 2nd in the injected conversion sequence.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 5
              },
              "JSQ3": {
                "bit": 21,
                "description": "3rd conversion in the injected sequence\nThese bits are written by software with the channel number (0..19) assigned as the 3rd in the injected conversion sequence.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 5
              },
              "JSQ4": {
                "bit": 27,
                "description": "4th conversion in the injected sequence\nThese bits are written by software with the channel number (0..19) assigned as the 4th in the injected conversion sequence.\nNote: The software is allowed to write these bits only when JADSTART\u00a0=\u00a00 (which ensures that no injected conversion is ongoing.",
                "width": 5
              }
            },
            "ADC_OFR1": {
              "OFFSET": {
                "bit": 0,
                "description": "Data offset y for the channel programmed into OFFSETy_CH[4:0] bits\nThese bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion).\nWhen OFFSETy[21:0] bitfield is reset, the offset compensation is disabled.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction.\nFor example, if OFFSET1_CH[4:0]\u00a0=\u00a04 and OFFSET2_CH[4:0]\u00a0=\u00a04, this is OFFSET1[25:0] that is subtracted when converting channel 4.",
                "width": 24
              },
              "POSOFF": {
                "bit": 24,
                "description": "offset sign\nThis bit is set and cleared by software to enable the positive offset.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "USAT": {
                "bit": 25,
                "description": "Unsigned saturation enable\nThis bit is written by software to enable or disable the unsigned saturation feature.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "SSAT": {
                "bit": 26,
                "description": "Signed saturation enable\nThis bit is written by software to enable or disable the Signed saturation feature.\n(see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details).\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "OFFSET_CH": {
                "bit": 27,
                "description": "Channel selection for the data offset y\nThese bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.",
                "width": 5
              }
            },
            "ADC_OFR2": {
              "OFFSET": {
                "bit": 0,
                "description": "Data offset y for the channel programmed into OFFSETy_CH[4:0] bits\nThese bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion).\nWhen OFFSETy[21:0] bitfield is reset, the offset compensation is disabled.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction.\nFor example, if OFFSET1_CH[4:0]\u00a0=\u00a04 and OFFSET2_CH[4:0]\u00a0=\u00a04, this is OFFSET1[25:0] that is subtracted when converting channel 4.",
                "width": 24
              },
              "POSOFF": {
                "bit": 24,
                "description": "offset sign\nThis bit is set and cleared by software to enable the positive offset.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "USAT": {
                "bit": 25,
                "description": "Unsigned saturation enable\nThis bit is written by software to enable or disable the unsigned saturation feature.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "SSAT": {
                "bit": 26,
                "description": "Signed saturation enable\nThis bit is written by software to enable or disable the Signed saturation feature.\n(see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details).\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "OFFSET_CH": {
                "bit": 27,
                "description": "Channel selection for the data offset y\nThese bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.",
                "width": 5
              }
            },
            "ADC_OFR3": {
              "OFFSET": {
                "bit": 0,
                "description": "Data offset y for the channel programmed into OFFSETy_CH[4:0] bits\nThese bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion).\nWhen OFFSETy[21:0] bitfield is reset, the offset compensation is disabled.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction.\nFor example, if OFFSET1_CH[4:0]\u00a0=\u00a04 and OFFSET2_CH[4:0]\u00a0=\u00a04, this is OFFSET1[25:0] that is subtracted when converting channel 4.",
                "width": 24
              },
              "POSOFF": {
                "bit": 24,
                "description": "offset sign\nThis bit is set and cleared by software to enable the positive offset.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "USAT": {
                "bit": 25,
                "description": "Unsigned saturation enable\nThis bit is written by software to enable or disable the unsigned saturation feature.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "SSAT": {
                "bit": 26,
                "description": "Signed saturation enable\nThis bit is written by software to enable or disable the Signed saturation feature.\n(see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details).\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "OFFSET_CH": {
                "bit": 27,
                "description": "Channel selection for the data offset y\nThese bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.",
                "width": 5
              }
            },
            "ADC_OFR4": {
              "OFFSET": {
                "bit": 0,
                "description": "Data offset y for the channel programmed into OFFSETy_CH[4:0] bits\nThese bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion).\nWhen OFFSETy[21:0] bitfield is reset, the offset compensation is disabled.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction.\nFor example, if OFFSET1_CH[4:0]\u00a0=\u00a04 and OFFSET2_CH[4:0]\u00a0=\u00a04, this is OFFSET1[25:0] that is subtracted when converting channel 4.",
                "width": 24
              },
              "POSOFF": {
                "bit": 24,
                "description": "offset sign\nThis bit is set and cleared by software to enable the positive offset.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "USAT": {
                "bit": 25,
                "description": "Unsigned saturation enable\nThis bit is written by software to enable or disable the unsigned saturation feature.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "SSAT": {
                "bit": 26,
                "description": "Signed saturation enable\nThis bit is written by software to enable or disable the Signed saturation feature.\n(see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details).\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              },
              "OFFSET_CH": {
                "bit": 27,
                "description": "Channel selection for the data offset y\nThese bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies.\nNote: The software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).\nIf OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.",
                "width": 5
              }
            },
            "ADC_GCOMP": {
              "GCOMPCOEFF": {
                "bit": 0,
                "description": "Gain compensation coefficient\nThese bits are set and cleared by software to program the gain compensation coefficient.\n...\n...\nThe coefficient is divided by 4096 to get the gain factor ranging from 0 to 3.999756.\nNote: This gain compensation is only applied when GCOMP bit of ADCx_CFGR2 register is 1.",
                "width": 14
              },
              "GCOMP": {
                "bit": 31,
                "description": "Gain compensation mode\nThis bit is set and cleared by software to enable the gain compensation mode.\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing)."
              }
            },
            "ADC_JDR1": {
              "JDATA": {
                "bit": 0,
                "description": "Injected data\nThese bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .",
                "width": 32
              }
            },
            "ADC_JDR2": {
              "JDATA": {
                "bit": 0,
                "description": "Injected data\nThese bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .",
                "width": 32
              }
            },
            "ADC_JDR3": {
              "JDATA": {
                "bit": 0,
                "description": "Injected data\nThese bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .",
                "width": 32
              }
            },
            "ADC_JDR4": {
              "JDATA": {
                "bit": 0,
                "description": "Injected data\nThese bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .",
                "width": 32
              }
            },
            "ADC_AWD2CR": {
              "AWD2CH": {
                "bit": 0,
                "description": "Analog watchdog 2 channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 2.\nAWD2CH[i] = 0: ADC analog input channel-i is not monitored by AWD2\nAWD2CH[i] = 1: ADC analog input channel-i is monitored by AWD2\nWhen AWD2CH[19:0] = 000..0, the analog Watchdog 2 is disabled\nNote: The channels selected by AWD2CH must be also selected into the SQRi or JSQRi registers.\nSoftware is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 20
              }
            },
            "ADC_AWD3CR": {
              "AWD3CH": {
                "bit": 0,
                "description": "Analog watchdog 3 channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 3.\nAWD3CH[i] = 0: ADC analog input channel-i is not monitored by AWD3\nAWD3CH[i] = 1: ADC analog input channel-i is monitored by AWD3\nWhen AWD3CH[19:0] = 000..0, the analog Watchdog 3 is disabled\nNote: The channels selected by AWD3CH must be also selected into the SQRi or JSQRi registers.\nThe software is allowed to write these bits only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 20
              }
            },
            "ADC_LTR1": {
              "LTR1": {
                "bit": 0,
                "description": "Analog watchdog 1 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog 1.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              }
            },
            "ADC_HTR1": {
              "HTR1": {
                "bit": 0,
                "description": "Analog watchdog 1 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog 1.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              },
              "AWDFILT1": {
                "bit": 29,
                "description": "Analog watchdog filtering parameter\nThis bit is set and cleared by software.\n...\nNote: The software is allowed to write this bit only when ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (which ensures that no conversion is ongoing).",
                "width": 3
              }
            },
            "ADC_LTR2": {
              "LTR2": {
                "bit": 0,
                "description": "Analog watchdog 2 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog 2.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              }
            },
            "ADC_HTR2": {
              "HTR2": {
                "bit": 0,
                "description": "Analog watchdog 2 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog 2.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              }
            },
            "ADC_LTR3": {
              "LTR3": {
                "bit": 0,
                "description": "Analog watchdog 3 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog 3.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              }
            },
            "ADC_HTR3": {
              "HTR3": {
                "bit": 0,
                "description": "Analog watchdog 3 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog 3.\nRefer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).",
                "width": 25
              }
            },
            "ADC_DIFSEL": {
              "DIFSEL": {
                "bit": 0,
                "description": "Differential mode for channels 19 to 0\nThese bits are set and cleared by software. They allow selecting if a channel is configured as single ended or differential mode.\nDIFSEL[i] = 0: ADC analog input channel-i is configured in single ended mode\nDIFSEL[i] = 1: ADC analog input channel-i is configured in differential mode\nNote: The software is allowed to write these bits only when the ADC is disabled (ADCAL\u00a0=\u00a00, JADSTART\u00a0=\u00a00, JADSTP\u00a0=\u00a00, ADSTART\u00a0=\u00a00, ADSTP\u00a0=\u00a00, ADDIS\u00a0=\u00a00 and ADEN\u00a0=\u00a00).",
                "width": 20
              }
            },
            "ADC_CALFACT": {
              "I_APB_ADDR": {
                "bit": 0,
                "description": "Delayed write access address\nThis bitfield contains the address that is being written during delayed write accesses.",
                "width": 8
              },
              "I_APB_DATA": {
                "bit": 8,
                "description": "Delayed write access data\nThis bitfield contains the data that are being written during delayed write accesses.",
                "width": 8
              },
              "VALIDITY": {
                "bit": 16,
                "description": "Delayed write access status bit\nThis bit indicates the communication status between the ADC digital and analog blocks."
              },
              "LATCH_COEF": {
                "bit": 24,
                "description": "Calibration factor latch enable bit\nThis bit latches the calibration factor in the CALFACT[31:0] bits."
              },
              "CAPTURE_COEF": {
                "bit": 25,
                "description": "Calibration factor capture enable bit\nThis bit enables the internal calibration factor capture."
              }
            },
            "ADC_CALFACT2": {
              "CALFACT": {
                "bit": 0,
                "description": "Linearity or offset calibration factor\nThese bits can be written either by hardware or by software.\nThey contain the 32-bit offset or linearity calibration factor.\nWhen CAPTURE_COEF is set to 1, the calibration factor of the analog block is read back and stored in CALFACT[31:0], indexed by CALINDEX[3:0] bits.\nWhen LATCH_COEF is set to 1, the calibration factor of the analog block is updated with the value programmed in CALFACT[31:0], indexed by CALINDEX[3:0] bits.\nTo read all calibration factors, perform nine accesses to the ADC_CALFACT2 register.\nTo write all calibration factors, perform eight accesses to the ADC_CALFACT2 register.\nNote: The software is allowed to write these bits only when ADEN\u00a0=\u00a01, ADSTART\u00a0=\u00a00 and JADSTART\u00a0=\u00a00 (ADC is enabled and no calibration is ongoing and no conversion is ongoing).",
                "width": 32
              }
            }
          }
        },
        "FMC": {
          "instances": [
            {
              "name": "FMC",
              "base": "0x420D0400",
              "irq": 75
            }
          ],
          "registers": {
            "BCR1": {
              "offset": "0x00",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select control register for bank 1"
            },
            "BCR2": {
              "offset": "0x08",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select control register for bank 2"
            },
            "BCR3": {
              "offset": "0x10",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select control register for bank 3"
            },
            "BCR4": {
              "offset": "0x18",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select control register for bank 4"
            },
            "BTR1": {
              "offset": "0x04",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select timing register for bank 1"
            },
            "BTR2": {
              "offset": "0x0C",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select timing register for bank 2"
            },
            "BTR3": {
              "offset": "0x14",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select timing register for bank 3"
            },
            "BTR4": {
              "offset": "0x1C",
              "size": 32,
              "description": "SRAM/NOR-Flash chip-select timing register for bank 4"
            },
            "BWTR1": {
              "offset": "0x104",
              "size": 32,
              "description": "SRAM/NOR-Flash write timing registers 1"
            },
            "BWTR2": {
              "offset": "0x10C",
              "size": 32,
              "description": "SRAM/NOR-Flash write timing registers 2"
            },
            "BWTR3": {
              "offset": "0x114",
              "size": 32,
              "description": "SRAM/NOR-Flash write timing registers 3"
            },
            "BWTR4": {
              "offset": "0x11C",
              "size": 32,
              "description": "SRAM/NOR-Flash write timing registers 4"
            },
            "PCSCNTR": {
              "offset": "0x20",
              "size": 32,
              "description": "PSRAM chip select counter register"
            },
            "PCR": {
              "offset": "0x80",
              "size": 32,
              "description": "NAND Flash control registers"
            },
            "SR": {
              "offset": "0x84",
              "size": 32,
              "description": "status and interrupt register"
            },
            "PMEM": {
              "offset": "0x88",
              "size": 32,
              "description": "Common memory space timing register"
            },
            "PATT": {
              "offset": "0x8C",
              "size": 32,
              "description": "The FMC_PATT read/write register contains\n          the timing information for NAND Flash memory bank. It is\n          used for 8-bit accesses to the attribute memory space of\n          the NAND Flash for the last address write access if the\n          timing must differ from that of previous accesses (for\n          Ready/Busy management, refer to Section20.8.5: NAND Flash\n          prewait feature)."
            },
            "ECCR": {
              "offset": "0x94",
              "size": 32,
              "description": "This register contain the current error\n          correction code value computed by the ECC computation\n          modules of the FMC NAND controller. When the CPU\n          reads/writes the data from a NAND Flash memory page at\n          the correct address (refer to Section20.8.6: Computation\n          of the error correction code (ECC) in NAND Flash memory),\n          the data read/written from/to the NAND Flash memory are\n          processed automatically by the ECC computation module.\n          When X bytes have been read (according to the ECCPS field\n          in the FMC_PCR registers), the CPU must read the computed\n          ECC value from the FMC_ECC registers. It then verifies if\n          these computed parity data are the same as the parity\n          value recorded in the spare area, to determine whether a\n          page is valid, and, to correct it otherwise. The FMC_ECCR\n          register should be cleared after being read by setting\n          the ECCEN bit to 0. To compute a new data block, the\n          ECCEN bit must be set to 1."
            }
          },
          "bits": {
            "BCR1": {
              "MBKEN": {
                "bit": 0,
                "description": "Memory bank enable bit"
              },
              "MUXEN": {
                "bit": 1,
                "description": "Address/data multiplexing enable bit"
              },
              "MTYP": {
                "bit": 2,
                "description": "Memory type",
                "width": 2
              },
              "MWID": {
                "bit": 4,
                "description": "Memory data bus width",
                "width": 2
              },
              "FACCEN": {
                "bit": 6,
                "description": "Flash access enable"
              },
              "BURSTEN": {
                "bit": 8,
                "description": "Burst enable bit"
              },
              "WAITPOL": {
                "bit": 9,
                "description": "Wait signal polarity bit"
              },
              "WAITCFG": {
                "bit": 11,
                "description": "Wait timing configuration"
              },
              "WREN": {
                "bit": 12,
                "description": "Write enable bit"
              },
              "WAITEN": {
                "bit": 13,
                "description": "Wait enable bit"
              },
              "EXTMOD": {
                "bit": 14,
                "description": "Extended mode enable"
              },
              "ASYNCWAIT": {
                "bit": 15,
                "description": "Wait signal during asynchronous\n              transfers"
              },
              "CPSIZE": {
                "bit": 16,
                "description": "CRAM Page Size",
                "width": 3
              },
              "CBURSTRW": {
                "bit": 19,
                "description": "Write burst enable"
              },
              "CCLKEN": {
                "bit": 20,
                "description": "Continuous clock enable"
              },
              "WFDIS": {
                "bit": 21,
                "description": "Write FIFO disable"
              },
              "NBLSET": {
                "bit": 22,
                "description": "Byte lane (NBL) setup",
                "width": 2
              },
              "FMCEN": {
                "bit": 31,
                "description": "FMC controller enable"
              }
            },
            "BCR2": {
              "MBKEN": {
                "bit": 0,
                "description": "Memory bank enable bit"
              },
              "MUXEN": {
                "bit": 1,
                "description": "Address/data multiplexing enable bit"
              },
              "MTYP": {
                "bit": 2,
                "description": "Memory type",
                "width": 2
              },
              "MWID": {
                "bit": 4,
                "description": "Memory data bus width",
                "width": 2
              },
              "FACCEN": {
                "bit": 6,
                "description": "Flash access enable"
              },
              "BURSTEN": {
                "bit": 8,
                "description": "Burst enable bit"
              },
              "WAITPOL": {
                "bit": 9,
                "description": "Wait signal polarity bit"
              },
              "WAITCFG": {
                "bit": 11,
                "description": "Wait timing configuration"
              },
              "WREN": {
                "bit": 12,
                "description": "Write enable bit"
              },
              "WAITEN": {
                "bit": 13,
                "description": "Wait enable bit"
              },
              "EXTMOD": {
                "bit": 14,
                "description": "Extended mode enable"
              },
              "ASYNCWAIT": {
                "bit": 15,
                "description": "Wait signal during asynchronous\n              transfers"
              },
              "CPSIZE": {
                "bit": 16,
                "description": "CRAM Page Size",
                "width": 3
              },
              "CBURSTRW": {
                "bit": 19,
                "description": "Write burst enable"
              },
              "CCLKEN": {
                "bit": 20,
                "description": "Continuous clock enable"
              },
              "WFDIS": {
                "bit": 21,
                "description": "Write FIFO disable"
              },
              "NBLSET": {
                "bit": 22,
                "description": "Byte lane (NBL) setup",
                "width": 2
              },
              "FMCEN": {
                "bit": 31,
                "description": "FMC controller enable"
              }
            },
            "BCR3": {
              "MBKEN": {
                "bit": 0,
                "description": "Memory bank enable bit"
              },
              "MUXEN": {
                "bit": 1,
                "description": "Address/data multiplexing enable bit"
              },
              "MTYP": {
                "bit": 2,
                "description": "Memory type",
                "width": 2
              },
              "MWID": {
                "bit": 4,
                "description": "Memory data bus width",
                "width": 2
              },
              "FACCEN": {
                "bit": 6,
                "description": "Flash access enable"
              },
              "BURSTEN": {
                "bit": 8,
                "description": "Burst enable bit"
              },
              "WAITPOL": {
                "bit": 9,
                "description": "Wait signal polarity bit"
              },
              "WAITCFG": {
                "bit": 11,
                "description": "Wait timing configuration"
              },
              "WREN": {
                "bit": 12,
                "description": "Write enable bit"
              },
              "WAITEN": {
                "bit": 13,
                "description": "Wait enable bit"
              },
              "EXTMOD": {
                "bit": 14,
                "description": "Extended mode enable"
              },
              "ASYNCWAIT": {
                "bit": 15,
                "description": "Wait signal during asynchronous\n              transfers"
              },
              "CPSIZE": {
                "bit": 16,
                "description": "CRAM Page Size",
                "width": 3
              },
              "CBURSTRW": {
                "bit": 19,
                "description": "Write burst enable"
              },
              "CCLKEN": {
                "bit": 20,
                "description": "Continuous clock enable"
              },
              "WFDIS": {
                "bit": 21,
                "description": "Write FIFO disable"
              },
              "NBLSET": {
                "bit": 22,
                "description": "Byte lane (NBL) setup",
                "width": 2
              },
              "FMCEN": {
                "bit": 31,
                "description": "FMC controller enable"
              }
            },
            "BCR4": {
              "MBKEN": {
                "bit": 0,
                "description": "Memory bank enable bit"
              },
              "MUXEN": {
                "bit": 1,
                "description": "Address/data multiplexing enable bit"
              },
              "MTYP": {
                "bit": 2,
                "description": "Memory type",
                "width": 2
              },
              "MWID": {
                "bit": 4,
                "description": "Memory data bus width",
                "width": 2
              },
              "FACCEN": {
                "bit": 6,
                "description": "Flash access enable"
              },
              "BURSTEN": {
                "bit": 8,
                "description": "Burst enable bit"
              },
              "WAITPOL": {
                "bit": 9,
                "description": "Wait signal polarity bit"
              },
              "WAITCFG": {
                "bit": 11,
                "description": "Wait timing configuration"
              },
              "WREN": {
                "bit": 12,
                "description": "Write enable bit"
              },
              "WAITEN": {
                "bit": 13,
                "description": "Wait enable bit"
              },
              "EXTMOD": {
                "bit": 14,
                "description": "Extended mode enable"
              },
              "ASYNCWAIT": {
                "bit": 15,
                "description": "Wait signal during asynchronous\n              transfers"
              },
              "CPSIZE": {
                "bit": 16,
                "description": "CRAM Page Size",
                "width": 3
              },
              "CBURSTRW": {
                "bit": 19,
                "description": "Write burst enable"
              },
              "CCLKEN": {
                "bit": 20,
                "description": "Continuous clock enable"
              },
              "WFDIS": {
                "bit": 21,
                "description": "Write FIFO disable"
              },
              "NBLSET": {
                "bit": 22,
                "description": "Byte lane (NBL) setup",
                "width": 2
              },
              "FMCEN": {
                "bit": 31,
                "description": "FMC controller enable"
              }
            },
            "BTR1": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "CLKDIV": {
                "bit": 20,
                "description": "Clock divide ratio (for FMC_CLK signal)",
                "width": 4
              },
              "DATLAT": {
                "bit": 24,
                "description": "Data latency for synchronous memory",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BTR2": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "CLKDIV": {
                "bit": 20,
                "description": "Clock divide ratio (for FMC_CLK signal)",
                "width": 4
              },
              "DATLAT": {
                "bit": 24,
                "description": "Data latency for synchronous memory",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BTR3": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "CLKDIV": {
                "bit": 20,
                "description": "Clock divide ratio (for FMC_CLK signal)",
                "width": 4
              },
              "DATLAT": {
                "bit": 24,
                "description": "Data latency for synchronous memory",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BTR4": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "CLKDIV": {
                "bit": 20,
                "description": "Clock divide ratio (for FMC_CLK signal)",
                "width": 4
              },
              "DATLAT": {
                "bit": 24,
                "description": "Data latency for synchronous memory",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BWTR1": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BWTR2": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BWTR3": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "BWTR4": {
              "ADDSET": {
                "bit": 0,
                "description": "Address setup phase duration",
                "width": 4
              },
              "ADDHLD": {
                "bit": 4,
                "description": "Address-hold phase duration",
                "width": 4
              },
              "DATAST": {
                "bit": 8,
                "description": "Data-phase duration",
                "width": 8
              },
              "BUSTURN": {
                "bit": 16,
                "description": "Bus turnaround phase duration",
                "width": 4
              },
              "ACCMOD": {
                "bit": 28,
                "description": "Access mode",
                "width": 2
              },
              "DATAHLD": {
                "bit": 30,
                "description": "Data hold phase duration",
                "width": 2
              }
            },
            "PCSCNTR": {
              "CSCOUNT": {
                "bit": 0,
                "description": "Chip select counter",
                "width": 16
              },
              "CNTB1EN": {
                "bit": 16,
                "description": "Counter Bank 1 enable"
              },
              "CNTB2EN": {
                "bit": 17,
                "description": "Counter Bank 2 enable"
              },
              "CNTB3EN": {
                "bit": 18,
                "description": "Counter Bank 3 enable"
              },
              "CNTB4EN": {
                "bit": 19,
                "description": "Counter Bank 4 enable"
              }
            },
            "PCR": {
              "PWAITEN": {
                "bit": 1,
                "description": "Wait feature enable bit"
              },
              "PBKEN": {
                "bit": 2,
                "description": "NAND Flash memory bank enable bit"
              },
              "PTYP": {
                "bit": 3,
                "description": "Memory type"
              },
              "PWID": {
                "bit": 4,
                "description": "Data bus width",
                "width": 2
              },
              "ECCEN": {
                "bit": 6,
                "description": "ECC computation logic enable bit"
              },
              "TCLR": {
                "bit": 9,
                "description": "CLE to RE delay",
                "width": 4
              },
              "TAR": {
                "bit": 13,
                "description": "ALE to RE delay",
                "width": 3
              },
              "ECCPS": {
                "bit": 17,
                "description": "ECC page size",
                "width": 3
              }
            },
            "SR": {
              "IRS": {
                "bit": 0,
                "description": "Interrupt rising edge status The flag is\n              set by hardware and reset by software. Note: If this\n              bit is written by software to 1 it will be\n              set."
              },
              "ILS": {
                "bit": 1,
                "description": "Interrupt high-level status The flag is\n              set by hardware and reset by software."
              },
              "IFS": {
                "bit": 2,
                "description": "Interrupt falling edge status The flag\n              is set by hardware and reset by software. Note: If\n              this bit is written by software to 1 it will be\n              set."
              },
              "IREN": {
                "bit": 3,
                "description": "Interrupt rising edge detection enable\n              bit"
              },
              "ILEN": {
                "bit": 4,
                "description": "Interrupt high-level detection enable\n              bit"
              },
              "IFEN": {
                "bit": 5,
                "description": "Interrupt falling edge detection enable\n              bit"
              },
              "FEMPT": {
                "bit": 6,
                "description": "FIFO empty. Read-only bit that provides\n              the status of the FIFO"
              }
            },
            "PMEM": {
              "MEMSET": {
                "bit": 0,
                "description": "Common memory x setup time These bits\n              define the number of KCK_FMC (+1) clock cycles to set\n              up the address before the command assertion (NWE,\n              NOE), for NAND Flash read or write access to common\n              memory space:",
                "width": 8
              },
              "MEMWAIT": {
                "bit": 8,
                "description": "Common memory wait time These bits\n              define the minimum number of KCK_FMC (+1) clock\n              cycles to assert the command (NWE, NOE), for NAND\n              Flash read or write access to common memory space.\n              The duration of command assertion is extended if the\n              wait signal (NWAIT) is active (low) at the end of the\n              programmed value of KCK_FMC:",
                "width": 8
              },
              "MEMHOLD": {
                "bit": 16,
                "description": "Common memory hold time These bits\n              define the number of KCK_FMC clock cycles for write\n              accesses and KCK_FMC+1 clock cycles for read accesses\n              during which the address is held (and data for write\n              accesses) after the command is de-asserted (NWE,\n              NOE), for NAND Flash read or write access to common\n              memory space:",
                "width": 8
              },
              "MEMHIZ": {
                "bit": 24,
                "description": "Common memory x data bus Hi-Z time These\n              bits define the number of KCK_FMC clock cycles during\n              which the data bus is kept Hi-Z after the start of a\n              NAND Flash write access to common memory space. This\n              is only valid for write transactions:",
                "width": 8
              }
            },
            "PATT": {
              "ATTSET": {
                "bit": 0,
                "description": "Attribute memory setup time These bits\n              define the number of KCK_FMC (+1) clock cycles to set\n              up address before the command assertion (NWE, NOE),\n              for NAND Flash read or write access to attribute\n              memory space:",
                "width": 8
              },
              "ATTWAIT": {
                "bit": 8,
                "description": "Attribute memory wait time These bits\n              define the minimum number of x KCK_FMC (+1) clock\n              cycles to assert the command (NWE, NOE), for NAND\n              Flash read or write access to attribute memory space.\n              The duration for command assertion is extended if the\n              wait signal (NWAIT) is active (low) at the end of the\n              programmed value of KCK_FMC:",
                "width": 8
              },
              "ATTHOLD": {
                "bit": 16,
                "description": "Attribute memory hold time These bits\n              define the number of KCK_FMC clock cycles during\n              which the address is held (and data for write access)\n              after the command de-assertion (NWE, NOE), for NAND\n              Flash read or write access to attribute memory\n              space:",
                "width": 8
              },
              "ATTHIZ": {
                "bit": 24,
                "description": "Attribute memory data bus Hi-Z time\n              These bits define the number of KCK_FMC clock cycles\n              during which the data bus is kept in Hi-Z after the\n              start of a NAND Flash write access to attribute\n              memory space on socket. Only valid for writ\n              transaction:",
                "width": 8
              }
            },
            "ECCR": {
              "ECC": {
                "bit": 0,
                "description": "ECC result This field contains the value\n              computed by the ECC computation logic. Table167\n              describes the contents of these bit\n              fields.",
                "width": 32
              }
            }
          }
        },
        "RNG": {
          "instances": [
            {
              "name": "RNG",
              "base": "0x420C0800",
              "irq": 94
            },
            {
              "name": "SEC_RNG",
              "base": "0x520C0800"
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "status register"
            },
            "DR": {
              "offset": "0x08",
              "size": 32,
              "description": "data register"
            },
            "HTCR": {
              "offset": "0x10",
              "size": 32,
              "description": "health test control register"
            }
          },
          "bits": {
            "CR": {
              "CONFIGLOCK": {
                "bit": 31,
                "description": "RNG Config Lock"
              },
              "CONDRST": {
                "bit": 30,
                "description": "Conditioning soft reset"
              },
              "RNG_CONFIG1": {
                "bit": 20,
                "description": "RNG configuration 1",
                "width": 6
              },
              "CLKDIV": {
                "bit": 16,
                "description": "Clock divider factor",
                "width": 4
              },
              "RNG_CONFIG2": {
                "bit": 13,
                "description": "RNG configuration 2",
                "width": 3
              },
              "NISTC": {
                "bit": 12,
                "description": "Non NIST compliant"
              },
              "RNG_CONFIG3": {
                "bit": 8,
                "description": "RNG configuration 3",
                "width": 4
              },
              "ARDIS": {
                "bit": 7,
                "description": "Auto reset disable"
              },
              "CED": {
                "bit": 5,
                "description": "Clock error detection"
              },
              "IE": {
                "bit": 3,
                "description": "Interrupt Enable"
              },
              "RNGEN": {
                "bit": 2,
                "description": "True random number generator enable"
              }
            },
            "SR": {
              "SEIS": {
                "bit": 6,
                "description": "Seed error interrupt status"
              },
              "CEIS": {
                "bit": 5,
                "description": "Clock error interrupt status"
              },
              "SECS": {
                "bit": 2,
                "description": "Seed error current status"
              },
              "CECS": {
                "bit": 1,
                "description": "Clock error current status"
              },
              "DRDY": {
                "bit": 0,
                "description": "Data ready"
              }
            },
            "DR": {
              "RNDATA": {
                "bit": 0,
                "description": "Random data",
                "width": 32
              }
            },
            "HTCR": {
              "HTCFG": {
                "bit": 0,
                "description": "health test configuration",
                "width": 32
              }
            }
          }
        },
        "FMAC": {
          "instances": [
            {
              "name": "FMAC",
              "base": "0x40021400",
              "irq": 124
            }
          ],
          "registers": {
            "X1BUFCFG": {
              "offset": "0x00",
              "size": 32,
              "description": "FMAC X1 Buffer Configuration register"
            },
            "X2BUFCFG": {
              "offset": "0x04",
              "size": 32,
              "description": "FMAC X2 Buffer Configuration register"
            },
            "YBUFCFG": {
              "offset": "0x08",
              "size": 32,
              "description": "FMAC Y Buffer Configuration register"
            },
            "PARAM": {
              "offset": "0x0C",
              "size": 32,
              "description": "FMAC Parameter register"
            },
            "CR": {
              "offset": "0x10",
              "size": 32,
              "description": "FMAC Control register"
            },
            "SR": {
              "offset": "0x14",
              "size": 32,
              "description": "FMAC Status register"
            },
            "WDATA": {
              "offset": "0x18",
              "size": 32,
              "description": "FMAC Write Data register"
            },
            "RDATA": {
              "offset": "0x1C",
              "size": 32,
              "description": "FMAC Read Data register"
            }
          },
          "bits": {
            "X1BUFCFG": {
              "X1_BASE": {
                "bit": 0,
                "description": "Base address of X1 buffer",
                "width": 8
              },
              "X1_BUF_SIZE": {
                "bit": 8,
                "description": "Allocated size of X1 buffer in 16-bit words",
                "width": 8
              },
              "FULL_WM": {
                "bit": 24,
                "description": "Watermark for buffer full flag",
                "width": 2
              }
            },
            "X2BUFCFG": {
              "X2_BASE": {
                "bit": 0,
                "description": "Base address of X2 buffer",
                "width": 8
              },
              "X2_BUF_SIZE": {
                "bit": 8,
                "description": "Size of X2 buffer in 16-bit words",
                "width": 8
              }
            },
            "YBUFCFG": {
              "Y_BASE": {
                "bit": 0,
                "description": "Base address of Y buffer",
                "width": 8
              },
              "Y_BUF_SIZE": {
                "bit": 8,
                "description": "Size of Y buffer in 16-bit words",
                "width": 8
              },
              "EMPTY_WM": {
                "bit": 24,
                "description": "Watermark for buffer empty flag",
                "width": 2
              }
            },
            "PARAM": {
              "START": {
                "bit": 31,
                "description": "Enable execution"
              },
              "FUNC": {
                "bit": 24,
                "description": "Function",
                "width": 7
              },
              "R": {
                "bit": 16,
                "description": "Input parameter R",
                "width": 8
              },
              "Q": {
                "bit": 8,
                "description": "Input parameter Q",
                "width": 8
              },
              "P": {
                "bit": 0,
                "description": "Input parameter P",
                "width": 8
              }
            },
            "CR": {
              "RESET": {
                "bit": 16,
                "description": "Reset FMAC unit"
              },
              "CLIPEN": {
                "bit": 15,
                "description": "Enable clipping"
              },
              "DMAWEN": {
                "bit": 9,
                "description": "Enable DMA write channel requests"
              },
              "DMAREN": {
                "bit": 8,
                "description": "Enable DMA read channel requests"
              },
              "SATIEN": {
                "bit": 4,
                "description": "Enable saturation error interrupts"
              },
              "UNFLIEN": {
                "bit": 3,
                "description": "Enable underflow error interrupts"
              },
              "OVFLIEN": {
                "bit": 2,
                "description": "Enable overflow error interrupts"
              },
              "WIEN": {
                "bit": 1,
                "description": "Enable write interrupt"
              },
              "RIEN": {
                "bit": 0,
                "description": "Enable read interrupt"
              }
            },
            "SR": {
              "YEMPTY": {
                "bit": 0,
                "description": "Y buffer empty flag"
              },
              "X1FULL": {
                "bit": 1,
                "description": "X1 buffer full flag"
              },
              "OVFL": {
                "bit": 8,
                "description": "Overflow error flag"
              },
              "UNFL": {
                "bit": 9,
                "description": "Underflow error flag"
              },
              "SAT": {
                "bit": 10,
                "description": "Saturation error flag"
              }
            },
            "WDATA": {
              "WDATA": {
                "bit": 0,
                "description": "Write data",
                "width": 16
              }
            },
            "RDATA": {
              "RDATA": {
                "bit": 0,
                "description": "Read data",
                "width": 16
              }
            }
          }
        },
        "CORDIC": {
          "instances": [
            {
              "name": "CORDIC",
              "base": "0x40021000",
              "irq": 123
            }
          ],
          "registers": {
            "CSR": {
              "offset": "0x00",
              "size": 32,
              "description": "CORDIC Control Status register"
            },
            "WDATA": {
              "offset": "0x04",
              "size": 32,
              "description": "FMAC Write Data register"
            },
            "RDATA": {
              "offset": "0x08",
              "size": 32,
              "description": "FMAC Read Data register"
            }
          },
          "bits": {
            "CSR": {
              "FUNC": {
                "bit": 0,
                "description": "Function",
                "width": 4
              },
              "PRECISION": {
                "bit": 4,
                "description": "Precision required (number of iterations)",
                "width": 4
              },
              "SCALE": {
                "bit": 8,
                "description": "Scaling factor",
                "width": 3
              },
              "IEN": {
                "bit": 16,
                "description": "Enable interrupt"
              },
              "DMAREN": {
                "bit": 17,
                "description": "Enable DMA read channel"
              },
              "DMAWEN": {
                "bit": 18,
                "description": "Enable DMA write channel"
              },
              "NRES": {
                "bit": 19,
                "description": "Number of results in the CORDIC_RDATA register"
              },
              "NARGS": {
                "bit": 20,
                "description": "Number of arguments expected by the CORDIC_WDATA register"
              },
              "RESSIZE": {
                "bit": 21,
                "description": "Width of output data"
              },
              "ARGSIZE": {
                "bit": 22,
                "description": "Width of input data"
              },
              "RRDY": {
                "bit": 31,
                "description": "Result ready flag"
              }
            },
            "WDATA": {
              "ARG": {
                "bit": 0,
                "description": "Function input arguments",
                "width": 32
              }
            },
            "RDATA": {
              "RES": {
                "bit": 0,
                "description": "Function result",
                "width": 32
              }
            }
          }
        },
        "DAC": {
          "instances": [
            {
              "name": "DAC1",
              "base": "0x46021800",
              "irq": 38
            },
            {
              "name": "SEC_DAC1",
              "base": "0x56021800"
            }
          ],
          "registers": {
            "DAC_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "DAC control register"
            },
            "DAC_SWTRGR": {
              "offset": "0x04",
              "size": 32,
              "description": "DAC software trigger register"
            },
            "DAC_DHR12R1": {
              "offset": "0x08",
              "size": 32,
              "description": "DAC channel1 12-bit right-aligned data holding register"
            },
            "DAC_DHR12L1": {
              "offset": "0x0C",
              "size": 32,
              "description": "DAC channel1 12-bit left aligned data holding register"
            },
            "DAC_DHR8R1": {
              "offset": "0x10",
              "size": 32,
              "description": "DAC channel1 8-bit right aligned data holding register"
            },
            "DAC_DHR12R2": {
              "offset": "0x14",
              "size": 32,
              "description": "DAC channel2 12-bit right aligned data holding register"
            },
            "DAC_DHR12L2": {
              "offset": "0x18",
              "size": 32,
              "description": "DAC channel2 12-bit left aligned data holding register"
            },
            "DAC_DHR8R2": {
              "offset": "0x1C",
              "size": 32,
              "description": "DAC channel2 8-bit right-aligned data holding register"
            },
            "DAC_DHR12RD": {
              "offset": "0x20",
              "size": 32,
              "description": "Dual DAC 12-bit right-aligned data holding register"
            },
            "DAC_DHR12LD": {
              "offset": "0x24",
              "size": 32,
              "description": "DUAL DAC 12-bit left aligned data holding register"
            },
            "DAC_DHR8RD": {
              "offset": "0x28",
              "size": 32,
              "description": "DUAL DAC 8-bit right aligned data holding register"
            },
            "DAC_DOR1": {
              "offset": "0x2C",
              "size": 32,
              "description": "DAC channel1 data output register"
            },
            "DAC_DOR2": {
              "offset": "0x30",
              "size": 32,
              "description": "DAC channel2 data output register"
            },
            "DAC_SR": {
              "offset": "0x34",
              "size": 32,
              "description": "DAC status register"
            },
            "DAC_CCR": {
              "offset": "0x38",
              "size": 32,
              "description": "DAC calibration control register"
            },
            "DAC_MCR": {
              "offset": "0x3C",
              "size": 32,
              "description": "DAC mode control register"
            },
            "DAC_SHSR1": {
              "offset": "0x40",
              "size": 32,
              "description": "DAC Sample and Hold sample time register 1"
            },
            "DAC_SHSR2": {
              "offset": "0x44",
              "size": 32,
              "description": "DAC channel2 sample and hold sample time register"
            },
            "DAC_SHHR": {
              "offset": "0x48",
              "size": 32,
              "description": "DAC Sample and Hold hold time register"
            },
            "DAC_SHRR": {
              "offset": "0x4C",
              "size": 32,
              "description": "DAC Sample and Hold refresh time           register"
            },
            "DAC_AUTOCR": {
              "offset": "0x54",
              "size": 32,
              "description": "Autonomous mode control register"
            }
          },
          "bits": {
            "DAC_CR": {
              "EN1": {
                "bit": 0,
                "description": "DAC channel1 enable"
              },
              "TEN1": {
                "bit": 1,
                "description": "DAC channel1 trigger enable"
              },
              "TSEL1": {
                "bit": 2,
                "description": "DAC channel1 trigger selection",
                "width": 4
              },
              "WAVE1": {
                "bit": 6,
                "description": "DAC channel1 noise/triangle wave generation enable",
                "width": 2
              },
              "MAMP1": {
                "bit": 8,
                "description": "DAC channel1 mask/amplitude selector",
                "width": 4
              },
              "DMAEN1": {
                "bit": 12,
                "description": "DAC channel1 DMA enable"
              },
              "DMAUDRIE1": {
                "bit": 13,
                "description": "DAC channel1 DMA Underrun Interrupt enable"
              },
              "CEN1": {
                "bit": 14,
                "description": "DAC channel1 calibration enable"
              },
              "EN2": {
                "bit": 16,
                "description": "DAC channel2 enable"
              },
              "TEN2": {
                "bit": 17,
                "description": "DAC channel2 trigger enable"
              },
              "TSEL2": {
                "bit": 18,
                "description": "DAC channel2 trigger selection",
                "width": 4
              },
              "WAVE2": {
                "bit": 22,
                "description": "DAC channel2 noise/triangle wave generation enable",
                "width": 2
              },
              "MAMP2": {
                "bit": 24,
                "description": "DAC channel2 mask/amplitude selector",
                "width": 4
              },
              "DMAEN2": {
                "bit": 28,
                "description": "DAC channel2 DMA enable"
              },
              "DMAUDRIE2": {
                "bit": 29,
                "description": "DAC channel2 DMA underrun interrupt enable"
              },
              "CEN2": {
                "bit": 30,
                "description": "DAC channel2 calibration enable"
              }
            },
            "DAC_SWTRGR": {
              "SWTRIG1": {
                "bit": 0,
                "description": "DAC channel1 software trigger"
              },
              "SWTRIG2": {
                "bit": 1,
                "description": "DAC channel2 software trigger"
              }
            },
            "DAC_DHR12R1": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 12-bit right-aligned data",
                "width": 12
              },
              "DACC1DHRB": {
                "bit": 16,
                "description": "DAC channel1 12-bit right-aligned data B",
                "width": 12
              }
            },
            "DAC_DHR12L1": {
              "DACC1DHR": {
                "bit": 4,
                "description": "DAC channel1 12-bit left-aligned data",
                "width": 12
              },
              "DACC1DHRB": {
                "bit": 20,
                "description": "DAC channel1 12-bit left-aligned data B",
                "width": 12
              }
            },
            "DAC_DHR8R1": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 8-bit right-aligned data",
                "width": 8
              },
              "DACC1DHRB": {
                "bit": 8,
                "description": "DAC channel1 8-bit right-aligned Sdata",
                "width": 8
              }
            },
            "DAC_DHR12R2": {
              "DACC2DHR": {
                "bit": 0,
                "description": "DAC channel2 12-bit right-aligned data",
                "width": 12
              },
              "DACC2DHRB": {
                "bit": 16,
                "description": "DAC channel2 12-bit right-aligned data",
                "width": 12
              }
            },
            "DAC_DHR12L2": {
              "DACC2DHR": {
                "bit": 4,
                "description": "DAC channel2 12-bit left-aligned data",
                "width": 12
              },
              "DACC2DHRB": {
                "bit": 20,
                "description": "DAC channel2 12-bit left-aligned data B",
                "width": 12
              }
            },
            "DAC_DHR8R2": {
              "DACC2DHR": {
                "bit": 0,
                "description": "DAC channel2 8-bit right-aligned data",
                "width": 8
              },
              "DACC2DHRB": {
                "bit": 8,
                "description": "DAC channel2 8-bit right-aligned data",
                "width": 8
              }
            },
            "DAC_DHR12RD": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 12-bit right-aligned data",
                "width": 12
              },
              "DACC2DHR": {
                "bit": 16,
                "description": "DAC channel2 12-bit right-aligned data",
                "width": 12
              }
            },
            "DAC_DHR12LD": {
              "DACC1DHR": {
                "bit": 4,
                "description": "DAC channel1 12-bit left-aligned data",
                "width": 12
              },
              "DACC2DHR": {
                "bit": 20,
                "description": "DAC channel2 12-bit left-aligned data",
                "width": 12
              }
            },
            "DAC_DHR8RD": {
              "DACC1DHR": {
                "bit": 0,
                "description": "DAC channel1 8-bit right-aligned data",
                "width": 8
              },
              "DACC2DHR": {
                "bit": 8,
                "description": "DAC channel2 8-bit right-aligned data",
                "width": 8
              }
            },
            "DAC_DOR1": {
              "DACC1DOR": {
                "bit": 0,
                "description": "DAC channel1 data output",
                "width": 12
              },
              "DACC1DORB": {
                "bit": 16,
                "description": "DAC channel1 data output",
                "width": 12
              }
            },
            "DAC_DOR2": {
              "DACC2DOR": {
                "bit": 0,
                "description": "DAC channel2 data output",
                "width": 12
              },
              "DACC2DORB": {
                "bit": 16,
                "description": "DAC channel2 data output",
                "width": 12
              }
            },
            "DAC_SR": {
              "DAC1RDY": {
                "bit": 11,
                "description": "DAC channel1 ready status bit"
              },
              "DORSTAT1": {
                "bit": 12,
                "description": "DAC channel1 output register status bit"
              },
              "DMAUDR1": {
                "bit": 13,
                "description": "DAC channel1 DMA underrun flag"
              },
              "CAL_FLAG1": {
                "bit": 14,
                "description": "DAC Channel 1 calibration offset status"
              },
              "BWST1": {
                "bit": 15,
                "description": "DAC Channel 1 busy writing sample time flag"
              },
              "DAC2RDY": {
                "bit": 27,
                "description": "DAC channel 2 ready status bit"
              },
              "DORSTAT2": {
                "bit": 28,
                "description": "DAC channel 2 output register status bit"
              },
              "DMAUDR2": {
                "bit": 29,
                "description": "DAC channel2 DMA underrun flag"
              },
              "CAL_FLAG2": {
                "bit": 30,
                "description": "DAC Channel 2 calibration offset status"
              },
              "BWST2": {
                "bit": 31,
                "description": "DAC Channel 2 busy writing sample time flag"
              }
            },
            "DAC_CCR": {
              "OTRIM1": {
                "bit": 0,
                "description": "DAC Channel 1 offset trimming value",
                "width": 5
              },
              "OTRIM2": {
                "bit": 16,
                "description": "DAC Channel 2 offset trimming value",
                "width": 5
              }
            },
            "DAC_MCR": {
              "MODE1": {
                "bit": 0,
                "description": "DAC Channel 1 mode",
                "width": 3
              },
              "DMADOUBLE1": {
                "bit": 8,
                "description": "DAC Channel1 DMA double data mode"
              },
              "SINFORMAT1": {
                "bit": 9,
                "description": "Enable signed format for DAC channel1"
              },
              "HFSEL": {
                "bit": 14,
                "description": "High frequency interface mode selection",
                "width": 2
              },
              "MODE2": {
                "bit": 16,
                "description": "DAC Channel 2 mode",
                "width": 3
              },
              "DMADOUBLE2": {
                "bit": 24,
                "description": "DAC Channel2 DMA double data mode"
              },
              "SINFORMAT2": {
                "bit": 25,
                "description": "Enable signed format for DAC channel2"
              }
            },
            "DAC_SHSR1": {
              "TSAMPLE1": {
                "bit": 0,
                "description": "DAC Channel 1 sample Time (only valid in               sample &amp; hold mode)",
                "width": 10
              }
            },
            "DAC_SHSR2": {
              "TSAMPLE2": {
                "bit": 0,
                "description": "DAC Channel 2 sample Time (only valid in sample and hold mode)",
                "width": 10
              }
            },
            "DAC_SHHR": {
              "THOLD1": {
                "bit": 0,
                "description": "DAC Channel 1 hold Time (only valid in sample and hold mode)",
                "width": 10
              },
              "THOLD2": {
                "bit": 16,
                "description": "DAC Channel 2 hold time (only valid in sample and hold mode)",
                "width": 10
              }
            },
            "DAC_SHRR": {
              "TREFRESH1": {
                "bit": 0,
                "description": "DAC Channel 1 refresh Time (only valid in sample and hold mode)",
                "width": 8
              },
              "TREFRESH2": {
                "bit": 16,
                "description": "DAC Channel 2 refresh Time (only valid in sample and hold mode)",
                "width": 8
              }
            },
            "DAC_AUTOCR": {
              "AUTOMODE": {
                "bit": 22,
                "description": "DAC Autonomous mode"
              }
            }
          }
        },
        "SDIO": {
          "instances": [
            {
              "name": "SDMMC1",
              "base": "0x420C8000",
              "irq": 78
            },
            {
              "name": "SEC_SDMMC1",
              "base": "0x520C8000"
            },
            {
              "name": "SDMMC2",
              "base": "0x420C8C00",
              "irq": 79
            },
            {
              "name": "SEC_SDMMC2",
              "base": "0x520C8C00"
            }
          ],
          "registers": {
            "POWER": {
              "offset": "0x00",
              "size": 32,
              "description": "power control register"
            },
            "CLKCR": {
              "offset": "0x04",
              "size": 32,
              "description": "clock control register"
            },
            "ARGR": {
              "offset": "0x08",
              "size": 32,
              "description": "argument register"
            },
            "CMDR": {
              "offset": "0x0C",
              "size": 32,
              "description": "command register"
            },
            "RESPCMDR": {
              "offset": "0x10",
              "size": 32,
              "description": "command response register"
            },
            "RESP1": {
              "offset": "0x14",
              "size": 32,
              "description": "response 1 register"
            },
            "RESP2": {
              "offset": "0x18",
              "size": 32,
              "description": "response 2 register"
            },
            "RESP3": {
              "offset": "0x1C",
              "size": 32,
              "description": "response 3 register"
            },
            "RESP4": {
              "offset": "0x20",
              "size": 32,
              "description": "response 4 register"
            },
            "DTIMER": {
              "offset": "0x24",
              "size": 32,
              "description": "data timer register"
            },
            "DLENR": {
              "offset": "0x28",
              "size": 32,
              "description": "data length register"
            },
            "DCTRL": {
              "offset": "0x2C",
              "size": 32,
              "description": "data control register"
            },
            "DCNTR": {
              "offset": "0x30",
              "size": 32,
              "description": "data counter register"
            },
            "STAR": {
              "offset": "0x34",
              "size": 32,
              "description": "status register"
            },
            "ICR": {
              "offset": "0x38",
              "size": 32,
              "description": "interrupt clear register"
            },
            "MASKR": {
              "offset": "0x3C",
              "size": 32,
              "description": "mask register"
            },
            "ACKTIMER": {
              "offset": "0x40",
              "size": 32,
              "description": "acknowledgment timer register"
            },
            "FIFOR0": {
              "offset": "0x80",
              "size": 32,
              "description": "data FIFO register 0"
            },
            "FIFOR1": {
              "offset": "0x84",
              "size": 32,
              "description": "data FIFO register 1"
            },
            "FIFOR2": {
              "offset": "0x88",
              "size": 32,
              "description": "data FIFO register 2"
            },
            "FIFOR3": {
              "offset": "0x8C",
              "size": 32,
              "description": "data FIFO register 3"
            },
            "FIFOR4": {
              "offset": "0x90",
              "size": 32,
              "description": "data FIFO register 4"
            },
            "FIFOR5": {
              "offset": "0x94",
              "size": 32,
              "description": "data FIFO register 5"
            },
            "FIFOR6": {
              "offset": "0x98",
              "size": 32,
              "description": "data FIFO register 6"
            },
            "FIFOR7": {
              "offset": "0x9C",
              "size": 32,
              "description": "data FIFO register 7"
            },
            "FIFOR8": {
              "offset": "0xA0",
              "size": 32,
              "description": "data FIFO register 8"
            },
            "FIFOR9": {
              "offset": "0xA4",
              "size": 32,
              "description": "data FIFO register 9"
            },
            "FIFOR10": {
              "offset": "0xA8",
              "size": 32,
              "description": "data FIFO register 10"
            },
            "FIFOR11": {
              "offset": "0xAC",
              "size": 32,
              "description": "data FIFO register 11"
            },
            "FIFOR12": {
              "offset": "0xB0",
              "size": 32,
              "description": "data FIFO register 12"
            },
            "FIFOR13": {
              "offset": "0xB4",
              "size": 32,
              "description": "data FIFO register 13"
            },
            "FIFOR14": {
              "offset": "0xB8",
              "size": 32,
              "description": "data FIFO register 14"
            },
            "FIFOR15": {
              "offset": "0xBC",
              "size": 32,
              "description": "data FIFO register 15"
            },
            "SDMMC_IDMACTRLR": {
              "offset": "0x50",
              "size": 32,
              "description": "DMA control register"
            },
            "SDMMC_IDMABSIZER": {
              "offset": "0x54",
              "size": 32,
              "description": "buffer size register"
            },
            "SDMMC_IDMABASER": {
              "offset": "0x58",
              "size": 32,
              "description": "buffer base address register"
            },
            "SDMMC_IDMALAR": {
              "offset": "0x64",
              "size": 32,
              "description": "linked list address register"
            },
            "SDMMC_IDMABAR": {
              "offset": "0x68",
              "size": 32,
              "description": "linked list memory base register"
            }
          },
          "bits": {
            "POWER": {
              "PWRCTRL": {
                "bit": 0,
                "description": "SDMMC state control bits",
                "width": 2
              },
              "VSWITCH": {
                "bit": 2,
                "description": "Voltage switch sequence start"
              },
              "VSWITCHEN": {
                "bit": 3,
                "description": "Voltage switch procedure enable"
              },
              "DIRPOL": {
                "bit": 4,
                "description": "Data and command direction signals polarity selection"
              }
            },
            "CLKCR": {
              "SELCLKRX": {
                "bit": 20,
                "description": "Receive clock selection",
                "width": 2
              },
              "BUSSPEED": {
                "bit": 19,
                "description": "Bus speed mode selection between DS, HS, SDR12, SDR25 and SDR50,DDR50, SDR104"
              },
              "DDR": {
                "bit": 18,
                "description": "Data rate signaling selection"
              },
              "HWFC_EN": {
                "bit": 17,
                "description": "HW Flow Control enable"
              },
              "NEGEDGE": {
                "bit": 16,
                "description": "SDIO_CK dephasing selection bit"
              },
              "WIDBUS": {
                "bit": 14,
                "description": "Wide bus mode enable bit",
                "width": 2
              },
              "PWRSAV": {
                "bit": 12,
                "description": "Power saving configuration bit"
              },
              "CLKDIV": {
                "bit": 0,
                "description": "Clock divide factor",
                "width": 10
              }
            },
            "ARGR": {
              "CMDARG": {
                "bit": 0,
                "description": "Command argument",
                "width": 32
              }
            },
            "CMDR": {
              "CMDSUSPEND": {
                "bit": 16,
                "description": "The CPSM treats the command as a Suspend or Resume command and signals interrupt period start/end"
              },
              "BOOTEN": {
                "bit": 15,
                "description": "Enable boot mode procedure"
              },
              "BOOTMODE": {
                "bit": 14,
                "description": "Select the boot mode procedure to be used"
              },
              "DTHOLD": {
                "bit": 13,
                "description": "Hold new data block transmission and reception in the DPSM"
              },
              "CPSMEN": {
                "bit": 12,
                "description": "Command path state machine (CPSM) Enable bit"
              },
              "WAITPEND": {
                "bit": 11,
                "description": "CPSM Waits for ends of data transfer (CmdPend internal signal) from DPSM"
              },
              "WAITINT": {
                "bit": 10,
                "description": "CPSM waits for interrupt request"
              },
              "WAITRESP": {
                "bit": 8,
                "description": "Wait for response bits",
                "width": 2
              },
              "CMDSTOP": {
                "bit": 7,
                "description": "The CPSM treats the command as a Stop Transmission command and signals Abort to the DPSM"
              },
              "CMDTRANS": {
                "bit": 6,
                "description": "The CPSM treats the command as a data transfer command, stops the interrupt period, and signals DataEnable to the DPSM"
              },
              "CMDINDEX": {
                "bit": 0,
                "description": "Command index",
                "width": 6
              }
            },
            "RESPCMDR": {
              "RESPCMD": {
                "bit": 0,
                "description": "Response command index",
                "width": 6
              }
            },
            "RESP1": {
              "CARDSTATUS1": {
                "bit": 0,
                "description": "CARDSTATUS1",
                "width": 32
              }
            },
            "RESP2": {
              "CARDSTATUS2": {
                "bit": 0,
                "description": "CARDSTATUS2",
                "width": 32
              }
            },
            "RESP3": {
              "CARDSTATUS3": {
                "bit": 0,
                "description": "CARDSTATUS3",
                "width": 32
              }
            },
            "RESP4": {
              "CARDSTATUS4": {
                "bit": 0,
                "description": "CARDSTATUS4",
                "width": 32
              }
            },
            "DTIMER": {
              "DATATIME": {
                "bit": 0,
                "description": "Data and R1b busy timeout period",
                "width": 32
              }
            },
            "DLENR": {
              "DATALENGTH": {
                "bit": 0,
                "description": "Data length value",
                "width": 25
              }
            },
            "DCTRL": {
              "FIFORST": {
                "bit": 13,
                "description": "FIFO reset, will flush any remaining data"
              },
              "BOOTACKEN": {
                "bit": 12,
                "description": "Enable the reception of the boot acknowledgment"
              },
              "SDIOEN": {
                "bit": 11,
                "description": "SD I/O enable functions"
              },
              "RWMOD": {
                "bit": 10,
                "description": "Read wait mode"
              },
              "RWSTOP": {
                "bit": 9,
                "description": "Read wait stop"
              },
              "RWSTART": {
                "bit": 8,
                "description": "Read wait start"
              },
              "DBLOCKSIZE": {
                "bit": 4,
                "description": "Data block size",
                "width": 4
              },
              "DTMODE": {
                "bit": 2,
                "description": "Data transfer mode selection",
                "width": 2
              },
              "DTDIR": {
                "bit": 1,
                "description": "Data transfer direction selection"
              },
              "DTEN": {
                "bit": 0,
                "description": "DTEN"
              }
            },
            "DCNTR": {
              "DATACOUNT": {
                "bit": 0,
                "description": "Data count value",
                "width": 25
              }
            },
            "STAR": {
              "IDMABTC": {
                "bit": 28,
                "description": "IDMA buffer transfer complete"
              },
              "IDMATE": {
                "bit": 27,
                "description": "IDMA transfer error"
              },
              "CKSTOP": {
                "bit": 26,
                "description": "SDMMC_CK stopped in Voltage switch procedure"
              },
              "VSWEND": {
                "bit": 25,
                "description": "Voltage switch critical timing section completion"
              },
              "ACKTIMEOUT": {
                "bit": 24,
                "description": "Boot acknowledgment timeout"
              },
              "ACKFAIL": {
                "bit": 23,
                "description": "Boot acknowledgment received (boot acknowledgment check fail)"
              },
              "SDIOIT": {
                "bit": 22,
                "description": "SDIO interrupt received"
              },
              "BUSYD0END": {
                "bit": 21,
                "description": "end of SDMMC_D0 Busy following a CMD response detected"
              },
              "BUSYD0": {
                "bit": 20,
                "description": "Inverted value of SDMMC_D0 line (Busy), sampled at the end of a CMD response and a second time 2 SDMMC_CK cycles after the CMD response"
              },
              "RXFIFOE": {
                "bit": 19,
                "description": "Receive FIFO empty"
              },
              "TXFIFOE": {
                "bit": 18,
                "description": "Transmit FIFO empty"
              },
              "RXFIFOF": {
                "bit": 17,
                "description": "Receive FIFO full"
              },
              "TXFIFOF": {
                "bit": 16,
                "description": "Transmit FIFO full"
              },
              "RXFIFOHF": {
                "bit": 15,
                "description": "Receive FIFO half full"
              },
              "TXFIFOHE": {
                "bit": 14,
                "description": "Transmit FIFO half empty"
              },
              "CPSMACT": {
                "bit": 13,
                "description": "Command path state machine active, i.e. not in Idle state"
              },
              "DPSMACT": {
                "bit": 12,
                "description": "Data path state machine active, i.e. not in Idle state"
              },
              "DABORT": {
                "bit": 11,
                "description": "Data transfer aborted by CMD12"
              },
              "DBCKEND": {
                "bit": 10,
                "description": "Data block sent/received"
              },
              "DHOLD": {
                "bit": 9,
                "description": "Data transfer Hold"
              },
              "DATAEND": {
                "bit": 8,
                "description": "Data transfer ended correctly"
              },
              "CMDSENT": {
                "bit": 7,
                "description": "Command sent (no response required)"
              },
              "CMDREND": {
                "bit": 6,
                "description": "Command response received (CRC check passed, or no CRC)"
              },
              "RXOVERR": {
                "bit": 5,
                "description": "Received FIFO overrun error (masked by hardware when IDMA is enabled)"
              },
              "TXUNDERR": {
                "bit": 4,
                "description": "Transmit FIFO underrun error (masked by hardware when IDMA is enabled)"
              },
              "DTIMEOUT": {
                "bit": 3,
                "description": "Data timeout"
              },
              "CTIMEOUT": {
                "bit": 2,
                "description": "Command response timeout"
              },
              "DCRCFAIL": {
                "bit": 1,
                "description": "Data block sent/received (CRC check failed)"
              },
              "CCRCFAIL": {
                "bit": 0,
                "description": "Command response received (CRC check failed)"
              }
            },
            "ICR": {
              "IDMABTCC": {
                "bit": 28,
                "description": "IDMA buffer transfer complete clear bit"
              },
              "IDMATEC": {
                "bit": 27,
                "description": "IDMA transfer error clear bit"
              },
              "CKSTOPC": {
                "bit": 26,
                "description": "CKSTOP flag clear bit"
              },
              "VSWENDC": {
                "bit": 25,
                "description": "VSWEND flag clear bit"
              },
              "ACKTIMEOUTC": {
                "bit": 24,
                "description": "ACKTIMEOUT flag clear bit"
              },
              "ACKFAILC": {
                "bit": 23,
                "description": "ACKFAIL flag clear bit"
              },
              "SDIOITC": {
                "bit": 22,
                "description": "SDIOIT flag clear bit"
              },
              "BUSYD0ENDC": {
                "bit": 21,
                "description": "BUSYD0END flag clear bit"
              },
              "DABORTC": {
                "bit": 11,
                "description": "DABORT flag clear bit"
              },
              "DBCKENDC": {
                "bit": 10,
                "description": "DBCKEND flag clear bit"
              },
              "DHOLDC": {
                "bit": 9,
                "description": "DHOLD flag clear bit"
              },
              "DATAENDC": {
                "bit": 8,
                "description": "DATAEND flag clear bit"
              },
              "CMDSENTC": {
                "bit": 7,
                "description": "CMDSENT flag clear bit"
              },
              "CMDRENDC": {
                "bit": 6,
                "description": "CMDREND flag clear bit"
              },
              "RXOVERRC": {
                "bit": 5,
                "description": "RXOVERR flag clear bit"
              },
              "TXUNDERRC": {
                "bit": 4,
                "description": "TXUNDERR flag clear bit"
              },
              "DTIMEOUTC": {
                "bit": 3,
                "description": "DTIMEOUT flag clear bit"
              },
              "CTIMEOUTC": {
                "bit": 2,
                "description": "CTIMEOUT flag clear bit"
              },
              "DCRCFAILC": {
                "bit": 1,
                "description": "DCRCFAIL flag clear bit"
              },
              "CCRCFAILC": {
                "bit": 0,
                "description": "CCRCFAIL flag clear bit"
              }
            },
            "MASKR": {
              "IDMABTCIE": {
                "bit": 28,
                "description": "IDMA buffer transfer complete interrupt enable"
              },
              "CKSTOPIE": {
                "bit": 26,
                "description": "Voltage Switch clock stopped interrupt enable"
              },
              "VSWENDIE": {
                "bit": 25,
                "description": "Voltage switch critical timing section completion interrupt enable"
              },
              "ACKTIMEOUTIE": {
                "bit": 24,
                "description": "Acknowledgment timeout interrupt enable"
              },
              "ACKFAILIE": {
                "bit": 23,
                "description": "Acknowledgment Fail interrupt enable"
              },
              "SDIOITIE": {
                "bit": 22,
                "description": "SDIO mode interrupt received interrupt enable"
              },
              "BUSYD0ENDIE": {
                "bit": 21,
                "description": "BUSYD0END interrupt enable"
              },
              "TXFIFOEIE": {
                "bit": 18,
                "description": "Tx FIFO empty interrupt enable"
              },
              "RXFIFOFIE": {
                "bit": 17,
                "description": "Rx FIFO full interrupt enable"
              },
              "RXFIFOHFIE": {
                "bit": 15,
                "description": "Rx FIFO half full interrupt enable"
              },
              "TXFIFOHEIE": {
                "bit": 14,
                "description": "Tx FIFO half empty interrupt enable"
              },
              "DABORTIE": {
                "bit": 11,
                "description": "Data transfer aborted interrupt enable"
              },
              "DBCKENDIE": {
                "bit": 10,
                "description": "Data block end interrupt enable"
              },
              "DHOLDIE": {
                "bit": 9,
                "description": "Data hold interrupt enable"
              },
              "DATAENDIE": {
                "bit": 8,
                "description": "Data end interrupt enable"
              },
              "CMDSENTIE": {
                "bit": 7,
                "description": "Command sent interrupt enable"
              },
              "CMDRENDIE": {
                "bit": 6,
                "description": "Command response received interrupt enable"
              },
              "RXOVERRIE": {
                "bit": 5,
                "description": "Rx FIFO overrun error interrupt enable"
              },
              "TXUNDERRIE": {
                "bit": 4,
                "description": "Tx FIFO underrun error interrupt enable"
              },
              "DTIMEOUTIE": {
                "bit": 3,
                "description": "Data timeout interrupt enable"
              },
              "CTIMEOUTIE": {
                "bit": 2,
                "description": "Command timeout interrupt enable"
              },
              "DCRCFAILIE": {
                "bit": 1,
                "description": "Data CRC fail interrupt enable"
              },
              "CCRCFAILIE": {
                "bit": 0,
                "description": "Command CRC fail interrupt enable"
              }
            },
            "ACKTIMER": {
              "ACKTIME": {
                "bit": 0,
                "description": "Boot acknowledgment timeout period",
                "width": 25
              }
            },
            "FIFOR0": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR1": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR2": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR3": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR4": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR5": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR6": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR7": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR8": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR9": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR10": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR11": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR12": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR13": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR14": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "FIFOR15": {
              "FIFODATA": {
                "bit": 0,
                "description": "Receive and transmit FIFO data",
                "width": 32
              }
            },
            "SDMMC_IDMACTRLR": {
              "IDMAEN": {
                "bit": 0,
                "description": "IDMA enable This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0)."
              },
              "IDMABMODE": {
                "bit": 1,
                "description": "Buffer mode selection. This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0)."
              }
            },
            "SDMMC_IDMABSIZER": {
              "IDMABNDT": {
                "bit": 5,
                "description": "Number of bytes per buffer",
                "width": 12
              }
            },
            "SDMMC_IDMABASER": {
              "IDMABASE": {
                "bit": 0,
                "description": "Buffer memory base address bits [31:2], shall be word aligned (bit [1:0] are always 0 and read only)",
                "width": 32
              }
            },
            "SDMMC_IDMALAR": {
              "ULA": {
                "bit": 31,
                "description": "Update SDMMC_IDMALAR from linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode)"
              },
              "ULS": {
                "bit": 30,
                "description": "Update SDMMC_IDMABSIZE from the next linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode and ULA = 1)"
              },
              "ABR": {
                "bit": 29,
                "description": "Acknowledge linked list buffer ready"
              },
              "IDMALA": {
                "bit": 2,
                "description": "Acknowledge linked list buffer ready",
                "width": 14
              }
            },
            "SDMMC_IDMABAR": {
              "IDMABA": {
                "bit": 2,
                "description": "Word aligned Linked list memory base address",
                "width": 30
              }
            }
          }
        },
        "OPAMP": {
          "instances": [
            {
              "name": "OPAMP",
              "base": "0x46005000"
            }
          ],
          "registers": {
            "OPAMP1_CSR": {
              "offset": "0x00",
              "size": 32,
              "description": "OPAMP1 control/status register"
            },
            "OPAMP1_OTR": {
              "offset": "0x04",
              "size": 32,
              "description": "OPAMP1 offset trimming register in normal mode"
            },
            "OPAMP1_LPOTR": {
              "offset": "0x08",
              "size": 32,
              "description": "OPAMP1 offset trimming register in low-power mode"
            },
            "OPAMP2_CRS": {
              "offset": "0x10",
              "size": 32,
              "description": "OPAMP2 control/status register"
            },
            "OPAMP2_OTR": {
              "offset": "0x14",
              "size": 32,
              "description": "OPAMP2 offset trimming register in normal mode"
            },
            "OPAMP2_LPOTR": {
              "offset": "0x18",
              "size": 32,
              "description": "OPAMP2 offset trimming register in low-power mode"
            }
          },
          "bits": {
            "OPAMP1_CSR": {
              "OPAEN": {
                "bit": 0,
                "description": "OPAMP enable"
              },
              "OPALPM": {
                "bit": 1,
                "description": "OPAMP low-power mode\nThe OPAMP must be disabled to change this configuration."
              },
              "OPAMODE": {
                "bit": 2,
                "description": "OPAMP PGA mode\n00 and 01: internal PGA disabled",
                "width": 2
              },
              "PGA_GAIN": {
                "bit": 4,
                "description": "OPAMP programmable amplifier gain value",
                "width": 2
              },
              "VM_SEL": {
                "bit": 8,
                "description": "Inverting input selection\nThese bits are used only when OPAMODE = 00, 01 or 10.\n1x: inverting input not externally connected",
                "width": 2
              },
              "VP_SEL": {
                "bit": 10,
                "description": "Non-inverted input selection"
              },
              "CALON": {
                "bit": 12,
                "description": "Calibration mode enable"
              },
              "CALSEL": {
                "bit": 13,
                "description": "Calibration selection"
              },
              "USERTRIM": {
                "bit": 14,
                "description": "\u2018factory\u2019 or \u2018user\u2019 offset trimmed values selection\nThis bit is active for normal and low-power modes."
              },
              "CALOUT": {
                "bit": 15,
                "description": "OPAMP calibration output\nDuring the calibration mode, the offset is trimmed when this signal toggles."
              },
              "OPAHSM": {
                "bit": 30,
                "description": "OPAMP high-speed mode\nThis bit is effective for both normal and low-power modes."
              },
              "OPA_RANGE": {
                "bit": 31,
                "description": "OPAMP range setting\nThis bit must be set before enabling the OPAMP and this bit affects all OPAMP instances."
              }
            },
            "OPAMP1_OTR": {
              "TRIMOFFSETN": {
                "bit": 0,
                "description": "Trim for NMOS differential pairs",
                "width": 5
              },
              "TRIMOFFSETP": {
                "bit": 8,
                "description": "Trim for PMOS differential pairs",
                "width": 5
              }
            },
            "OPAMP1_LPOTR": {
              "TRIMLPOFFSETN": {
                "bit": 0,
                "description": "Low-power mode trim for NMOS differential pairs",
                "width": 5
              },
              "TRIMLPOFFSETP": {
                "bit": 8,
                "description": "Low-power mode trim for PMOS differential pairs",
                "width": 5
              }
            },
            "OPAMP2_CRS": {
              "OPAEN": {
                "bit": 0,
                "description": "OPAMP enable"
              },
              "OPALPM": {
                "bit": 1,
                "description": "OPAMP low-power mode\nThe OPAMP must be disabled to change this configuration."
              },
              "OPAMODE": {
                "bit": 2,
                "description": "OPAMP PGA mode\n00 and 01: internal PGA disabled",
                "width": 2
              },
              "PGA_GAIN": {
                "bit": 4,
                "description": "OPAMP programmable amplifier gain value",
                "width": 2
              },
              "VM_SEL": {
                "bit": 8,
                "description": "Inverting input selection\nThese bits are used only when OPAMODE = 00, 01 or 10.\nin PGA mode for filtering)\n1x: inverting input not externally connected",
                "width": 2
              },
              "VP_SEL": {
                "bit": 10,
                "description": "Non inverted input selection"
              },
              "CALON": {
                "bit": 12,
                "description": "Calibration mode enable"
              },
              "CALSEL": {
                "bit": 13,
                "description": "Calibration selection"
              },
              "USERTRIM": {
                "bit": 14,
                "description": "\u2018factory\u2019 or \u2018user\u2019 offset trimmed values selection\nThis bit is active for normal and low-power modes."
              },
              "CALOUT": {
                "bit": 15,
                "description": "OPAMP calibration output\nDuring calibration mode, the offset is trimmed when this signal toggles."
              },
              "OPAHSM": {
                "bit": 30,
                "description": "OPAMP high-speed mode\nThis bit is effective for both normal and high-speed modes."
              }
            },
            "OPAMP2_OTR": {
              "TRIMOFFSETN": {
                "bit": 0,
                "description": "Trim for NMOS differential pairs",
                "width": 5
              },
              "TRIMOFFSETP": {
                "bit": 8,
                "description": "Trim for PMOS differential pairs",
                "width": 5
              }
            },
            "OPAMP2_LPOTR": {
              "TRIMLPOFFSETN": {
                "bit": 0,
                "description": "Low-power mode trim for NMOS differential pairs",
                "width": 5
              },
              "TRIMLPOFFSETP": {
                "bit": 8,
                "description": "Low-power mode trim for PMOS differential pairs",
                "width": 5
              }
            }
          }
        },
        "DLYBOS1": {
          "instances": [
            {
              "name": "DLYBOS1",
              "base": "0x420CF000"
            }
          ],
          "registers": {
            "DLYB_CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "DLYB_CFGR": {
              "offset": "0x04",
              "size": 32,
              "description": "configuration register"
            }
          },
          "bits": {
            "DLYB_CR": {
              "DEN": {
                "bit": 0,
                "description": "Operational amplifier Enable"
              },
              "SEN": {
                "bit": 1,
                "description": "OPALPM"
              }
            },
            "DLYB_CFGR": {
              "SEL": {
                "bit": 0,
                "description": "SEL",
                "width": 4
              },
              "UNIT": {
                "bit": 8,
                "description": "UNIT",
                "width": 7
              },
              "LNG": {
                "bit": 16,
                "description": "LNG",
                "width": 12
              },
              "LNGF": {
                "bit": 31,
                "description": "LNGF"
              }
            }
          }
        },
        "DLYBOS2": {
          "instances": [
            {
              "name": "DLYBOS2",
              "base": "0x420CF400"
            }
          ],
          "registers": {}
        },
        "DLYBSD1": {
          "instances": [
            {
              "name": "DLYBSD1",
              "base": "0x420C8400"
            }
          ],
          "registers": {}
        },
        "DLYBSD2": {
          "instances": [
            {
              "name": "DLYBSD2",
              "base": "0x420C8800"
            }
          ],
          "registers": {}
        },
        "CRYPTO": {
          "instances": [
            {
              "name": "SAES",
              "base": "0x420C0C00",
              "irq": 28
            },
            {
              "name": "SEC_SAES",
              "base": "0x520C0C00"
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "status register"
            },
            "DINR": {
              "offset": "0x08",
              "size": 32,
              "description": "data input register"
            },
            "DOUTR": {
              "offset": "0x0C",
              "size": 32,
              "description": "data output register"
            },
            "KEYR0": {
              "offset": "0x10",
              "size": 32,
              "description": "key register 0"
            },
            "KEYR1": {
              "offset": "0x14",
              "size": 32,
              "description": "key register 1"
            },
            "KEYR2": {
              "offset": "0x18",
              "size": 32,
              "description": "key register 2"
            },
            "KEYR3": {
              "offset": "0x1C",
              "size": 32,
              "description": "key register 3"
            },
            "IVR0": {
              "offset": "0x20",
              "size": 32,
              "description": "initialization vector register 0"
            },
            "IVR1": {
              "offset": "0x24",
              "size": 32,
              "description": "initialization vector register 1"
            },
            "IVR2": {
              "offset": "0x28",
              "size": 32,
              "description": "initialization vector register 2"
            },
            "IVR3": {
              "offset": "0x2C",
              "size": 32,
              "description": "initialization vector register 3"
            },
            "KEYR4": {
              "offset": "0x30",
              "size": 32,
              "description": "key register 4"
            },
            "KEYR5": {
              "offset": "0x34",
              "size": 32,
              "description": "key register 5"
            },
            "KEYR6": {
              "offset": "0x38",
              "size": 32,
              "description": "key register 6"
            },
            "KEYR7": {
              "offset": "0x3C",
              "size": 32,
              "description": "key register 7"
            },
            "DPACFGR": {
              "offset": "0x100",
              "size": 32,
              "description": "configuration register"
            },
            "IER": {
              "offset": "0x300",
              "size": 32,
              "description": "interrupt enable register"
            },
            "ISR": {
              "offset": "0x304",
              "size": 32,
              "description": "interrupt status register"
            },
            "ICR": {
              "offset": "0x308",
              "size": 32,
              "description": "interrupt clear register"
            }
          },
          "bits": {
            "CR": {
              "IPRST": {
                "bit": 31,
                "description": "IPRST"
              },
              "KEYSEL": {
                "bit": 28,
                "description": "KEYSEL",
                "width": 3
              },
              "KSHAREID": {
                "bit": 26,
                "description": "KSHAREID",
                "width": 2
              },
              "KMOD": {
                "bit": 24,
                "description": "KMOD",
                "width": 2
              },
              "KEYPROT": {
                "bit": 19,
                "description": "KEYPROT"
              },
              "KEYSIZE": {
                "bit": 18,
                "description": "KEYSIZE"
              },
              "DMAOUTEN": {
                "bit": 12,
                "description": "DMAOUTEN"
              },
              "DMAINEN": {
                "bit": 11,
                "description": "DMAINEN"
              },
              "CHMOD": {
                "bit": 5,
                "description": "CHMOD",
                "width": 2
              },
              "MODE": {
                "bit": 3,
                "description": "MODE",
                "width": 2
              },
              "DATATYPE": {
                "bit": 1,
                "description": "DATATYPE",
                "width": 2
              },
              "EN": {
                "bit": 0,
                "description": "SAES enable"
              }
            },
            "SR": {
              "KEYVALID": {
                "bit": 7,
                "description": "Key Valid flag"
              },
              "BUSY": {
                "bit": 3,
                "description": "BUSY"
              },
              "WRERR": {
                "bit": 2,
                "description": "Write error flag"
              },
              "RDERR": {
                "bit": 1,
                "description": "Read error flag"
              },
              "CCF": {
                "bit": 0,
                "description": "Computation complete flag"
              }
            },
            "DINR": {
              "DIN": {
                "bit": 0,
                "description": "Input data word",
                "width": 32
              }
            },
            "DOUTR": {
              "DOUT": {
                "bit": 0,
                "description": "Output data word",
                "width": 32
              }
            },
            "KEYR0": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [31:0]",
                "width": 32
              }
            },
            "KEYR1": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [63:32]",
                "width": 32
              }
            },
            "KEYR2": {
              "KEYR": {
                "bit": 0,
                "description": "Cryptographic key, bits [95:64]",
                "width": 32
              }
            },
            "KEYR3": {
              "SAES_KEYR3": {
                "bit": 0,
                "description": "Cryptographic key, bits [127:96]",
                "width": 32
              }
            },
            "IVR0": {
              "IVI": {
                "bit": 0,
                "description": "Initialization vector input, bits [31:0]",
                "width": 32
              }
            },
            "IVR1": {
              "IVI": {
                "bit": 0,
                "description": "Initialization vector input, bits [63:32]",
                "width": 32
              }
            },
            "IVR2": {
              "IVI": {
                "bit": 0,
                "description": "Initialization vector input, bits [95:64]",
                "width": 32
              }
            },
            "IVR3": {
              "IVI": {
                "bit": 0,
                "description": "Initialization vector input, bits [127:96]",
                "width": 32
              }
            },
            "KEYR4": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [159:128]",
                "width": 32
              }
            },
            "KEYR5": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [191:160]",
                "width": 32
              }
            },
            "KEYR6": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [223:192]",
                "width": 32
              }
            },
            "KEYR7": {
              "KEY": {
                "bit": 0,
                "description": "Cryptographic key, bits [255:224]",
                "width": 32
              }
            },
            "DPACFGR": {
              "CONFIGLOCK": {
                "bit": 31,
                "description": "CONFIGLOCK"
              },
              "TRIMCFG": {
                "bit": 3,
                "description": "TRIMCFG",
                "width": 2
              },
              "RESEED": {
                "bit": 2,
                "description": "RESEED"
              },
              "REDCFG": {
                "bit": 1,
                "description": "REDCFG"
              }
            },
            "IER": {
              "RNGEIE": {
                "bit": 3,
                "description": "RNGEIE"
              },
              "KEIE": {
                "bit": 2,
                "description": "Key error interrupt enable"
              },
              "RWEIE": {
                "bit": 1,
                "description": "Read or write error interrupt enable"
              },
              "CCFIE": {
                "bit": 0,
                "description": "Computation complete flag interrupt enable"
              }
            },
            "ISR": {
              "RNGEIF": {
                "bit": 3,
                "description": "RNGEIF"
              },
              "KEIF": {
                "bit": 2,
                "description": "Key error interrupt flag"
              },
              "RWEIF": {
                "bit": 1,
                "description": "Read or write error interrupt flag"
              },
              "CCF": {
                "bit": 0,
                "description": "Computation complete flag"
              }
            },
            "ICR": {
              "RNGEIF": {
                "bit": 3,
                "description": "RNGEIF"
              },
              "KEIF": {
                "bit": 2,
                "description": "Key error interrupt flag clear"
              },
              "RWEIF": {
                "bit": 1,
                "description": "Read or write error interrupt flag clear"
              },
              "CCF": {
                "bit": 0,
                "description": "Computation complete flag clear"
              }
            }
          }
        },
        "OTG": {
          "instances": [
            {
              "name": "OTG_FS",
              "base": "0x42040000",
              "irq": 73
            }
          ],
          "registers": {
            "GOTGCTL": {
              "offset": "0x00",
              "size": 32,
              "description": "The GOTGCTL register controls the behavior and reflects the status of the OTG function of the core."
            },
            "GOTGINT": {
              "offset": "0x04",
              "size": 32,
              "description": "The application reads this register whenever there is an OTG interrupt and clears the bits in this register to clear the OTG interrupt."
            },
            "GAHBCFG": {
              "offset": "0x08",
              "size": 32,
              "description": "This register can be used to configure the core after power-on or a change in mode. This register mainly contains AHB system-related configuration parameters. Do not change this register after the initial programming. The application must program this register before starting any transactions on either the AHB or the USB."
            },
            "GUSBCFG": {
              "offset": "0x0C",
              "size": 32,
              "description": "This register can be used to configure the core after power-on or a changing to host mode or device mode. It contains USB and USB-PHY related configuration parameters. The application must program this register before starting any transactions on either the AHB or the USB. Do not make changes to this register after the initial programming."
            },
            "GRSTCTL": {
              "offset": "0x10",
              "size": 32,
              "description": "The application uses this register to reset various hardware features inside the core."
            },
            "GINTSTS": {
              "offset": "0x14",
              "size": 32,
              "description": "This register interrupts the application for system-level events in the current mode (device mode or host mode). Some of the bits in this register are valid only in host mode, while others are valid in device mode only. This register also indicates the current mode. To clear the interrupt status bits of the rc_w1 type, the application must write 1 into the bit. The FIFO status interrupts are read-only; once software reads from or writes to the FIFO while servicing these interrupts, FIFO interrupt conditions are cleared automatically. The application must clear the GINTSTS register at initialization before unmasking the interrupt bit to avoid any interrupts generated prior to initialization."
            },
            "GINTMSK": {
              "offset": "0x18",
              "size": 32,
              "description": "This register works with the core interrupt register to interrupt the application. When an interrupt bit is masked, the interrupt associated with that bit is not generated. However, the core interrupt (GINTSTS) register bit corresponding to that interrupt is still set."
            },
            "GRXSTSR_DEVICE": {
              "offset": "0x1C",
              "size": 32,
              "description": "This description is for register GRXSTSR in Device mode. A read to the receive status debug read register returns the contents of the top of the receive FIFO. The core ignores the receive status read when the receive FIFO is empty and returns a value of 0x00000000."
            },
            "GRXSTSR_HOST": {
              "offset": "0x1C",
              "size": 32,
              "description": "This description is for register GRXSTSR in Host mode"
            },
            "GRXSTSP_DEVICE": {
              "offset": "0x20",
              "size": 32,
              "description": "This description is for register GRXSTSP in Device mode. Similarly to GRXSTSR (receive status debug read register) where a read returns the contents of the top of the receive FIFO, a read to GRXSTSP (receive status read and pop register) additionally pops the top data entry out of the Rx FIFO. The core ignores the receive status pop/read when the receive FIFO is empty and returns a value of 0x00000000. The application must only pop the receive status FIFO when the receive FIFO non-empty bit of the core interrupt register (RXFLVL bit in GINTSTS) is asserted."
            },
            "GRXSTSP_HOST": {
              "offset": "0x20",
              "size": 32,
              "description": "This description is for register GRXSTSP in HOST mode"
            },
            "GRXFSIZ": {
              "offset": "0x24",
              "size": 32,
              "description": "The application can program the RAM size that must be allocated to the Rx FIFO."
            },
            "HNPTXFSIZ": {
              "offset": "0x28",
              "size": 32,
              "description": "Host mode"
            },
            "HNPTXSTS": {
              "offset": "0x2C",
              "size": 32,
              "description": "In device mode, this register is not valid. This read-only register contains the free space information for the non-periodic Tx FIFO and the non-periodic transmit request queue."
            },
            "GCCFG": {
              "offset": "0x38",
              "size": 32,
              "description": "OTG general core configuration register"
            },
            "CID": {
              "offset": "0x3C",
              "size": 32,
              "description": "This is a register containing the Product ID as reset value."
            },
            "GLPMCFG": {
              "offset": "0x54",
              "size": 32,
              "description": "OTG core LPM configuration register"
            },
            "HPTXFSIZ": {
              "offset": "0x100",
              "size": 32,
              "description": "OTG host periodic transmit FIFO size register"
            },
            "DIEPTXF1": {
              "offset": "0x104",
              "size": 32,
              "description": "OTG device IN endpoint transmit FIFO 1 size register"
            },
            "DIEPTXF2": {
              "offset": "0x108",
              "size": 32,
              "description": "OTG device IN endpoint transmit FIFO 2 size register"
            },
            "DIEPTXF3": {
              "offset": "0x10C",
              "size": 32,
              "description": "OTG device IN endpoint transmit FIFO 3 size register"
            },
            "DIEPTXF4": {
              "offset": "0x110",
              "size": 32,
              "description": "OTG device IN endpoint transmit FIFO 4 size register"
            },
            "DIEPTXF5": {
              "offset": "0x114",
              "size": 32,
              "description": "OTG device IN endpoint transmit FIFO 5 size register"
            },
            "HCFG": {
              "offset": "0x400",
              "size": 32,
              "description": "This register configures the core after power-on. Do not make changes to this register after initializing the host."
            },
            "HFIR": {
              "offset": "0x404",
              "size": 32,
              "description": "This register stores the frame interval information for the current speed to which the OTG controller has enumerated."
            },
            "HFNUM": {
              "offset": "0x408",
              "size": 32,
              "description": "This register indicates the current frame number. It also indicates the time remaining (in terms of the number of PHY clocks) in the current frame."
            },
            "HPTXSTS": {
              "offset": "0x410",
              "size": 32,
              "description": "This read-only register contains the free space information for the periodic Tx FIFO and the periodic transmit request queue."
            },
            "HAINT": {
              "offset": "0x414",
              "size": 32,
              "description": "When a significant event occurs on a channel, the host all channels interrupt register interrupts the application using the host channels interrupt bit of the core interrupt register (HCINT bit in GINTSTS). This is shown in Figure724. There is one interrupt bit per channel, up to a maximum of 16 bits. Bits in this register are set and cleared when the application sets and clears bits in the corresponding host channel-x interrupt register."
            },
            "HAINTMSK": {
              "offset": "0x418",
              "size": 32,
              "description": "The host all channel interrupt mask register works with the host all channel interrupt register to interrupt the application when an event occurs on a channel. There is one interrupt mask bit per channel, up to a maximum of 16 bits."
            },
            "HPRT": {
              "offset": "0x440",
              "size": 32,
              "description": "This register is available only in host mode. Currently, the OTG host supports only one port. A single register holds USB port-related information such as USB reset, enable, suspend, resume, connect status, and test mode for each port. It is shown in Figure724. The rc_w1 bits in this register can trigger an interrupt to the application through the host port interrupt bit of the core interrupt register (HPRTINT bit in GINTSTS). On a port interrupt, the application must read this register and clear the bit that caused the interrupt. For the rc_w1 bits, the application must write a 1 to the bit to clear the interrupt."
            },
            "HCCHAR0": {
              "offset": "0x500",
              "size": 32,
              "description": "OTG host channel 0 characteristics register"
            },
            "HCINT0": {
              "offset": "0x508",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK0": {
              "offset": "0x50C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ0": {
              "offset": "0x510",
              "size": 32,
              "description": "OTG host channel 0 transfer size register"
            },
            "HCCHAR1": {
              "offset": "0x520",
              "size": 32,
              "description": "OTG host channel 1 characteristics register"
            },
            "HCINT1": {
              "offset": "0x528",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK1": {
              "offset": "0x52C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ1": {
              "offset": "0x530",
              "size": 32,
              "description": "OTG host channel 1 transfer size register"
            },
            "HCCHAR2": {
              "offset": "0x540",
              "size": 32,
              "description": "OTG host channel 2 characteristics register"
            },
            "HCINT2": {
              "offset": "0x548",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK2": {
              "offset": "0x54C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ2": {
              "offset": "0x550",
              "size": 32,
              "description": "OTG host channel 2 transfer size register"
            },
            "HCCHAR3": {
              "offset": "0x560",
              "size": 32,
              "description": "OTG host channel 3 characteristics register"
            },
            "HCINT3": {
              "offset": "0x568",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK3": {
              "offset": "0x56C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ3": {
              "offset": "0x570",
              "size": 32,
              "description": "OTG host channel 3 transfer size register"
            },
            "HCCHAR4": {
              "offset": "0x580",
              "size": 32,
              "description": "OTG host channel 4 characteristics register"
            },
            "HCINT4": {
              "offset": "0x588",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK4": {
              "offset": "0x58C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ4": {
              "offset": "0x590",
              "size": 32,
              "description": "OTG host channel 4 transfer size register"
            },
            "HCCHAR5": {
              "offset": "0x5A0",
              "size": 32,
              "description": "OTG host channel 5 characteristics register"
            },
            "HCINT5": {
              "offset": "0x5A8",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK5": {
              "offset": "0x5AC",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ5": {
              "offset": "0x5B0",
              "size": 32,
              "description": "OTG host channel 5 transfer size register"
            },
            "HCCHAR6": {
              "offset": "0x5C0",
              "size": 32,
              "description": "OTG host channel 6 characteristics register"
            },
            "HCINT6": {
              "offset": "0x5C8",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK6": {
              "offset": "0x5CC",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ6": {
              "offset": "0x5D0",
              "size": 32,
              "description": "OTG host channel 6 transfer size register"
            },
            "HCCHAR7": {
              "offset": "0x5E0",
              "size": 32,
              "description": "OTG host channel 7 characteristics register"
            },
            "HCINT7": {
              "offset": "0x5E8",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK7": {
              "offset": "0x5EC",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ7": {
              "offset": "0x5F0",
              "size": 32,
              "description": "OTG host channel 7 transfer size register"
            },
            "HCCHAR8": {
              "offset": "0x600",
              "size": 32,
              "description": "OTG host channel 8 characteristics register"
            },
            "HCINT8": {
              "offset": "0x608",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK8": {
              "offset": "0x60C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ8": {
              "offset": "0x610",
              "size": 32,
              "description": "OTG host channel 8 transfer size register"
            },
            "HCCHAR9": {
              "offset": "0x620",
              "size": 32,
              "description": "OTG host channel 9 characteristics register"
            },
            "HCINT9": {
              "offset": "0x628",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK9": {
              "offset": "0x62C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ9": {
              "offset": "0x630",
              "size": 32,
              "description": "OTG host channel 9 transfer size register"
            },
            "HCCHAR10": {
              "offset": "0x640",
              "size": 32,
              "description": "OTG host channel 10 characteristics register"
            },
            "HCINT10": {
              "offset": "0x648",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK10": {
              "offset": "0x64C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ10": {
              "offset": "0x650",
              "size": 32,
              "description": "OTG host channel 10 transfer size register"
            },
            "HCCHAR11": {
              "offset": "0x660",
              "size": 32,
              "description": "OTG host channel 11 characteristics register"
            },
            "HCINT11": {
              "offset": "0x668",
              "size": 32,
              "description": "This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers."
            },
            "HCINTMSK11": {
              "offset": "0x66C",
              "size": 32,
              "description": "This register reflects the mask for each channel status described in the previous section."
            },
            "HCTSIZ11": {
              "offset": "0x670",
              "size": 32,
              "description": "OTG host channel 11 transfer size register"
            },
            "DCFG": {
              "offset": "0x800",
              "size": 32,
              "description": "This register configures the core in device mode after power-on or after certain control commands or enumeration. Do not make changes to this register after initial programming."
            },
            "DCTL": {
              "offset": "0x804",
              "size": 32,
              "description": "OTG device control register"
            },
            "DSTS": {
              "offset": "0x808",
              "size": 32,
              "description": "This register indicates the status of the core with respect to USB-related events. It must be read on interrupts from the device all interrupts (DAINT) register."
            },
            "DIEPMSK": {
              "offset": "0x810",
              "size": 32,
              "description": "This register works with each of the DIEPINTx registers for all endpoints to generate an interrupt per IN endpoint. The IN endpoint interrupt for a specific status in the DIEPINTx register can be masked by writing to the corresponding bit in this register. Status bits are masked by default."
            },
            "DOEPMSK": {
              "offset": "0x814",
              "size": 32,
              "description": "This register works with each of the DOEPINTx registers for all endpoints to generate an interrupt per OUT endpoint. The OUT endpoint interrupt for a specific status in the DOEPINTx register can be masked by writing into the corresponding bit in this register. Status bits are masked by default."
            },
            "DAINT": {
              "offset": "0x818",
              "size": 32,
              "description": "When a significant event occurs on an endpoint, a DAINT register interrupts the application using the device OUT endpoints interrupt bit or device IN endpoints interrupt bit of the GINTSTS register (OEPINT or IEPINT in GINTSTS, respectively). There is one interrupt bit per endpoint, up to a maximum of 16 bits for OUT endpoints and 16 bits for IN endpoints. For a bidirectional endpoint, the corresponding IN and OUT interrupt bits are used. Bits in this register are set and cleared when the application sets and clears bits in the corresponding device endpoint-x interrupt register (DIEPINTx/DOEPINTx)."
            },
            "DAINTMSK": {
              "offset": "0x81C",
              "size": 32,
              "description": "The DAINTMSK register works with the device endpoint interrupt register to interrupt the application when an event occurs on a device endpoint. However, the DAINT register bit corresponding to that interrupt is still set."
            },
            "DVBUSDIS": {
              "offset": "0x828",
              "size": 32,
              "description": "This register specifies the VBUS discharge time after VBUS pulsing during SRP."
            },
            "DVBUSPULSE": {
              "offset": "0x82C",
              "size": 32,
              "description": "This register specifies the VBUS pulsing time during SRP."
            },
            "DIEPEMPMSK": {
              "offset": "0x834",
              "size": 32,
              "description": "This register is used to control the IN endpoint FIFO empty interrupt generation (TXFE_DIEPINTx)."
            },
            "DIEPCTL0": {
              "offset": "0x900",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT0": {
              "offset": "0x908",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ0": {
              "offset": "0x910",
              "size": 32,
              "description": "The application must modify this register before enabling endpoint 0."
            },
            "DTXFSTS0": {
              "offset": "0x918",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DIEPCTL1": {
              "offset": "0x920",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT1": {
              "offset": "0x928",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ1": {
              "offset": "0x930",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DTXFSTS1": {
              "offset": "0x938",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DIEPCTL2": {
              "offset": "0x940",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT2": {
              "offset": "0x948",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ2": {
              "offset": "0x950",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DTXFSTS2": {
              "offset": "0x958",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DIEPCTL3": {
              "offset": "0x960",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT3": {
              "offset": "0x968",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ3": {
              "offset": "0x970",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DTXFSTS3": {
              "offset": "0x978",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DIEPCTL4": {
              "offset": "0x980",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT4": {
              "offset": "0x988",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ4": {
              "offset": "0x990",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DTXFSTS4": {
              "offset": "0x998",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DIEPCTL5": {
              "offset": "0x9A0",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DIEPINT5": {
              "offset": "0x9A8",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DIEPTSIZ5": {
              "offset": "0x9B0",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DTXFSTS5": {
              "offset": "0x9B8",
              "size": 32,
              "description": "This read-only register contains the free space information for the device IN endpoint Tx FIFO."
            },
            "DOEPCTL0": {
              "offset": "0xB00",
              "size": 32,
              "description": "This section describes the DOEPCTL0 register."
            },
            "DOEPINT0": {
              "offset": "0xB08",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ0": {
              "offset": "0xB10",
              "size": 32,
              "description": "The application must modify this register before enabling endpoint 0."
            },
            "DOEPCTL1": {
              "offset": "0xB20",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DOEPINT1": {
              "offset": "0xB28",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ1": {
              "offset": "0xB30",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DOEPCTL2": {
              "offset": "0xB40",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DOEPINT2": {
              "offset": "0xB48",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ2": {
              "offset": "0xB50",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DOEPCTL3": {
              "offset": "0xB60",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DOEPINT3": {
              "offset": "0xB68",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ3": {
              "offset": "0xB70",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DOEPCTL4": {
              "offset": "0xB80",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DOEPINT4": {
              "offset": "0xB88",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ4": {
              "offset": "0xB90",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "DOEPCTL5": {
              "offset": "0xBA0",
              "size": 32,
              "description": "The application uses this register to control the behavior of each logical endpoint other than endpoint 0."
            },
            "DOEPINT5": {
              "offset": "0xBA8",
              "size": 32,
              "description": "This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers."
            },
            "DOEPTSIZ5": {
              "offset": "0xBB0",
              "size": 32,
              "description": "The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit."
            },
            "PCGCCTL": {
              "offset": "0xE00",
              "size": 32,
              "description": "This register is available in host and device modes."
            }
          },
          "bits": {
            "GOTGCTL": {
              "SRQSCS": {
                "bit": 0,
                "description": "SRQSCS"
              },
              "SRQ": {
                "bit": 1,
                "description": "SRQ"
              },
              "VBVALOEN": {
                "bit": 2,
                "description": "VBVALOEN"
              },
              "VBVALOVAL": {
                "bit": 3,
                "description": "VBVALOVAL"
              },
              "AVALOEN": {
                "bit": 4,
                "description": "AVALOEN"
              },
              "AVALOVAL": {
                "bit": 5,
                "description": "AVALOVAL"
              },
              "BVALOEN": {
                "bit": 6,
                "description": "BVALOEN"
              },
              "BVALOVAL": {
                "bit": 7,
                "description": "BVALOVAL"
              },
              "HNGSCS": {
                "bit": 8,
                "description": "HNGSCS"
              },
              "HNPRQ": {
                "bit": 9,
                "description": "HNPRQ"
              },
              "HSHNPEN": {
                "bit": 10,
                "description": "HSHNPEN"
              },
              "DHNPEN": {
                "bit": 11,
                "description": "DHNPEN"
              },
              "EHEN": {
                "bit": 12,
                "description": "EHEN"
              },
              "CIDSTS": {
                "bit": 16,
                "description": "CIDSTS"
              },
              "DBCT": {
                "bit": 17,
                "description": "DBCT"
              },
              "ASVLD": {
                "bit": 18,
                "description": "ASVLD"
              },
              "BSVLD": {
                "bit": 19,
                "description": "BSVLD"
              },
              "OTGVER": {
                "bit": 20,
                "description": "OTGVER"
              },
              "CURMOD": {
                "bit": 21,
                "description": "CURMOD"
              }
            },
            "GOTGINT": {
              "SEDET": {
                "bit": 2,
                "description": "SEDET"
              },
              "SRSSCHG": {
                "bit": 8,
                "description": "SRSSCHG"
              },
              "HNSSCHG": {
                "bit": 9,
                "description": "HNSSCHG"
              },
              "HNGDET": {
                "bit": 17,
                "description": "HNGDET"
              },
              "ADTOCHG": {
                "bit": 18,
                "description": "ADTOCHG"
              },
              "DBCDNE": {
                "bit": 19,
                "description": "DBCDNE"
              }
            },
            "GAHBCFG": {
              "GINTMSK": {
                "bit": 0,
                "description": "GINTMSK"
              },
              "TXFELVL": {
                "bit": 7,
                "description": "TXFELVL"
              },
              "PTXFELVL": {
                "bit": 8,
                "description": "PTXFELVL"
              }
            },
            "GUSBCFG": {
              "TOCAL": {
                "bit": 0,
                "description": "TOCAL",
                "width": 3
              },
              "PHYSEL": {
                "bit": 6,
                "description": "PHYSEL"
              },
              "SRPCAP": {
                "bit": 8,
                "description": "SRPCAP"
              },
              "HNPCAP": {
                "bit": 9,
                "description": "HNPCAP"
              },
              "TRDT": {
                "bit": 10,
                "description": "TRDT",
                "width": 4
              },
              "FHMOD": {
                "bit": 29,
                "description": "FHMOD"
              },
              "FDMOD": {
                "bit": 30,
                "description": "FDMOD"
              }
            },
            "GRSTCTL": {
              "CSRST": {
                "bit": 0,
                "description": "CSRST"
              },
              "PSRST": {
                "bit": 1,
                "description": "PSRST"
              },
              "FSRST": {
                "bit": 2,
                "description": "FSRST"
              },
              "RXFFLSH": {
                "bit": 4,
                "description": "RXFFLSH"
              },
              "TXFFLSH": {
                "bit": 5,
                "description": "TXFFLSH"
              },
              "TXFNUM": {
                "bit": 6,
                "description": "TXFNUM",
                "width": 5
              },
              "AHBIDL": {
                "bit": 31,
                "description": "AHBIDL"
              }
            },
            "GINTSTS": {
              "CMOD": {
                "bit": 0,
                "description": "CMOD"
              },
              "MMIS": {
                "bit": 1,
                "description": "MMIS"
              },
              "OTGINT": {
                "bit": 2,
                "description": "OTGINT"
              },
              "SOF": {
                "bit": 3,
                "description": "SOF"
              },
              "RXFLVL": {
                "bit": 4,
                "description": "RXFLVL"
              },
              "NPTXFE": {
                "bit": 5,
                "description": "NPTXFE"
              },
              "GINAKEFF": {
                "bit": 6,
                "description": "GINAKEFF"
              },
              "GONAKEFF": {
                "bit": 7,
                "description": "GONAKEFF"
              },
              "ESUSP": {
                "bit": 10,
                "description": "ESUSP"
              },
              "USBSUSP": {
                "bit": 11,
                "description": "USBSUSP"
              },
              "USBRST": {
                "bit": 12,
                "description": "USBRST"
              },
              "ENUMDNE": {
                "bit": 13,
                "description": "ENUMDNE"
              },
              "ISOODRP": {
                "bit": 14,
                "description": "ISOODRP"
              },
              "EOPF": {
                "bit": 15,
                "description": "EOPF"
              },
              "IEPINT": {
                "bit": 18,
                "description": "IEPINT"
              },
              "OEPINT": {
                "bit": 19,
                "description": "OEPINT"
              },
              "IISOIXFR": {
                "bit": 20,
                "description": "IISOIXFR"
              },
              "IPXFR": {
                "bit": 21,
                "description": "IPXFR"
              },
              "RSTDET": {
                "bit": 23,
                "description": "RSTDET"
              },
              "HPRTINT": {
                "bit": 24,
                "description": "HPRTINT"
              },
              "HCINT": {
                "bit": 25,
                "description": "HCINT"
              },
              "PTXFE": {
                "bit": 26,
                "description": "PTXFE"
              },
              "LPMINT": {
                "bit": 27,
                "description": "LPMINT"
              },
              "CIDSCHG": {
                "bit": 28,
                "description": "CIDSCHG"
              },
              "DISCINT": {
                "bit": 29,
                "description": "DISCINT"
              },
              "SRQINT": {
                "bit": 30,
                "description": "SRQINT"
              },
              "WKUPINT": {
                "bit": 31,
                "description": "WKUPINT"
              }
            },
            "GINTMSK": {
              "MMISM": {
                "bit": 1,
                "description": "MMISM"
              },
              "OTGINT": {
                "bit": 2,
                "description": "OTGINT"
              },
              "SOFM": {
                "bit": 3,
                "description": "SOFM"
              },
              "RXFLVLM": {
                "bit": 4,
                "description": "RXFLVLM"
              },
              "NPTXFEM": {
                "bit": 5,
                "description": "NPTXFEM"
              },
              "GINAKEFFM": {
                "bit": 6,
                "description": "GINAKEFFM"
              },
              "GONAKEFFM": {
                "bit": 7,
                "description": "GONAKEFFM"
              },
              "ESUSPM": {
                "bit": 10,
                "description": "ESUSPM"
              },
              "USBSUSPM": {
                "bit": 11,
                "description": "USBSUSPM"
              },
              "USBRST": {
                "bit": 12,
                "description": "USBRST"
              },
              "ENUMDNEM": {
                "bit": 13,
                "description": "ENUMDNEM"
              },
              "ISOODRPM": {
                "bit": 14,
                "description": "ISOODRPM"
              },
              "EOPFM": {
                "bit": 15,
                "description": "EOPFM"
              },
              "IEPINT": {
                "bit": 18,
                "description": "IEPINT"
              },
              "OEPINT": {
                "bit": 19,
                "description": "OEPINT"
              },
              "IISOIXFRM": {
                "bit": 20,
                "description": "IISOIXFRM"
              },
              "IPXFRM": {
                "bit": 21,
                "description": "IPXFRM"
              },
              "RSTDETM": {
                "bit": 23,
                "description": "RSTDETM"
              },
              "PRTIM": {
                "bit": 24,
                "description": "PRTIM"
              },
              "HCIM": {
                "bit": 25,
                "description": "HCIM"
              },
              "PTXFEM": {
                "bit": 26,
                "description": "PTXFEM"
              },
              "LPMINTM": {
                "bit": 27,
                "description": "LPMINTM"
              },
              "CIDSCHGM": {
                "bit": 28,
                "description": "CIDSCHGM"
              },
              "DISCINT": {
                "bit": 29,
                "description": "DISCINT"
              },
              "SRQIM": {
                "bit": 30,
                "description": "SRQIM"
              },
              "WUIM": {
                "bit": 31,
                "description": "WUIM"
              }
            },
            "GRXSTSR_DEVICE": {
              "EPNUM": {
                "bit": 0,
                "description": "EPNUM",
                "width": 4
              },
              "BCNT": {
                "bit": 4,
                "description": "BCNT",
                "width": 11
              },
              "DPID": {
                "bit": 15,
                "description": "DPID",
                "width": 2
              },
              "PKTSTS": {
                "bit": 17,
                "description": "PKTSTS",
                "width": 4
              },
              "FRMNUM": {
                "bit": 21,
                "description": "FRMNUM",
                "width": 4
              },
              "STSPHST": {
                "bit": 27,
                "description": "STSPHST"
              }
            },
            "GRXSTSR_HOST": {
              "CHNUM": {
                "bit": 0,
                "description": "CHNUM",
                "width": 4
              },
              "BCNT": {
                "bit": 4,
                "description": "BCNT",
                "width": 11
              },
              "DPID": {
                "bit": 15,
                "description": "DPID",
                "width": 2
              },
              "PKTSTS": {
                "bit": 17,
                "description": "PKTSTS",
                "width": 4
              }
            },
            "GRXSTSP_DEVICE": {
              "EPNUM": {
                "bit": 0,
                "description": "EPNUM",
                "width": 4
              },
              "BCNT": {
                "bit": 4,
                "description": "BCNT",
                "width": 11
              },
              "DPID": {
                "bit": 15,
                "description": "DPID",
                "width": 2
              },
              "PKTSTS": {
                "bit": 17,
                "description": "PKTSTS",
                "width": 4
              },
              "FRMNUM": {
                "bit": 21,
                "description": "FRMNUM",
                "width": 4
              },
              "STSPHST": {
                "bit": 27,
                "description": "STSPHST"
              }
            },
            "GRXSTSP_HOST": {
              "CHNUM": {
                "bit": 0,
                "description": "CHNUM",
                "width": 4
              },
              "BCNT": {
                "bit": 4,
                "description": "BCNT",
                "width": 11
              },
              "DPID": {
                "bit": 15,
                "description": "DPID",
                "width": 2
              },
              "PKTSTS": {
                "bit": 17,
                "description": "PKTSTS",
                "width": 4
              }
            },
            "GRXFSIZ": {
              "RXFD": {
                "bit": 0,
                "description": "RXFD",
                "width": 16
              }
            },
            "HNPTXFSIZ": {
              "NPTXFSA": {
                "bit": 0,
                "description": "NPTXFSA",
                "width": 16
              },
              "NPTXFD": {
                "bit": 16,
                "description": "NPTXFD",
                "width": 16
              }
            },
            "HNPTXSTS": {
              "NPTXFSAV": {
                "bit": 0,
                "description": "NPTXFSAV",
                "width": 16
              },
              "NPTQXSAV": {
                "bit": 16,
                "description": "NPTQXSAV",
                "width": 8
              },
              "NPTXQTOP": {
                "bit": 24,
                "description": "NPTXQTOP",
                "width": 7
              }
            },
            "GCCFG": {
              "DCDET": {
                "bit": 0,
                "description": "DCDET"
              },
              "PDET": {
                "bit": 1,
                "description": "PDET"
              },
              "SDET": {
                "bit": 2,
                "description": "SDET"
              },
              "PS2DET": {
                "bit": 3,
                "description": "PS2DET"
              },
              "PWRDWN": {
                "bit": 16,
                "description": "PWRDWN"
              },
              "BCDEN": {
                "bit": 17,
                "description": "BCDEN"
              },
              "DCDEN": {
                "bit": 18,
                "description": "DCDEN"
              },
              "PDEN": {
                "bit": 19,
                "description": "PDEN"
              },
              "SDEN": {
                "bit": 20,
                "description": "SDEN"
              },
              "VBDEN": {
                "bit": 21,
                "description": "VBDEN"
              }
            },
            "CID": {
              "PRODUCT_ID": {
                "bit": 0,
                "description": "PRODUCT_ID",
                "width": 32
              }
            },
            "GLPMCFG": {
              "LPMEN": {
                "bit": 0,
                "description": "LPMEN"
              },
              "LPMACK": {
                "bit": 1,
                "description": "LPMACK"
              },
              "BESL": {
                "bit": 2,
                "description": "BESL",
                "width": 4
              },
              "REMWAKE": {
                "bit": 6,
                "description": "REMWAKE"
              },
              "L1SSEN": {
                "bit": 7,
                "description": "L1SSEN"
              },
              "BESLTHRS": {
                "bit": 8,
                "description": "BESLTHRS",
                "width": 4
              },
              "L1DSEN": {
                "bit": 12,
                "description": "L1DSEN"
              },
              "LPMRSP": {
                "bit": 13,
                "description": "LPMRSP",
                "width": 2
              },
              "SLPSTS": {
                "bit": 15,
                "description": "SLPSTS"
              },
              "L1RSMOK": {
                "bit": 16,
                "description": "L1RSMOK"
              },
              "LPMCHIDX": {
                "bit": 17,
                "description": "LPMCHIDX",
                "width": 4
              },
              "LPMRCNT": {
                "bit": 21,
                "description": "LPMRCNT",
                "width": 3
              },
              "SNDLPM": {
                "bit": 24,
                "description": "SNDLPM"
              },
              "LPMRCNTSTS": {
                "bit": 25,
                "description": "LPMRCNTSTS",
                "width": 3
              },
              "ENBESL": {
                "bit": 28,
                "description": "ENBESL"
              }
            },
            "HPTXFSIZ": {
              "PTXSA": {
                "bit": 0,
                "description": "PTXSA",
                "width": 16
              },
              "PTXFSIZ": {
                "bit": 16,
                "description": "PTXFSIZ",
                "width": 16
              }
            },
            "DIEPTXF1": {
              "INEPTXSA": {
                "bit": 0,
                "description": "INEPTXSA",
                "width": 16
              },
              "INEPTXFD": {
                "bit": 16,
                "description": "INEPTXFD",
                "width": 16
              }
            },
            "DIEPTXF2": {
              "INEPTXSA": {
                "bit": 0,
                "description": "INEPTXSA",
                "width": 16
              },
              "INEPTXFD": {
                "bit": 16,
                "description": "INEPTXFD",
                "width": 16
              }
            },
            "DIEPTXF3": {
              "INEPTXSA": {
                "bit": 0,
                "description": "INEPTXSA",
                "width": 16
              },
              "INEPTXFD": {
                "bit": 16,
                "description": "INEPTXFD",
                "width": 16
              }
            },
            "DIEPTXF4": {
              "INEPTXSA": {
                "bit": 0,
                "description": "INEPTXSA",
                "width": 16
              },
              "INEPTXFD": {
                "bit": 16,
                "description": "INEPTXFD",
                "width": 16
              }
            },
            "DIEPTXF5": {
              "INEPTXSA": {
                "bit": 0,
                "description": "INEPTXSA",
                "width": 16
              },
              "INEPTXFD": {
                "bit": 16,
                "description": "INEPTXFD",
                "width": 16
              }
            },
            "HCFG": {
              "FSLSPCS": {
                "bit": 0,
                "description": "FSLSPCS",
                "width": 2
              },
              "FSLSS": {
                "bit": 2,
                "description": "FSLSS"
              }
            },
            "HFIR": {
              "FRIVL": {
                "bit": 0,
                "description": "FRIVL",
                "width": 16
              },
              "RLDCTRL": {
                "bit": 16,
                "description": "RLDCTRL"
              }
            },
            "HFNUM": {
              "FRNUM": {
                "bit": 0,
                "description": "FRNUM",
                "width": 16
              },
              "FTREM": {
                "bit": 16,
                "description": "FTREM",
                "width": 16
              }
            },
            "HPTXSTS": {
              "PTXFSAVL": {
                "bit": 0,
                "description": "PTXFSAVL",
                "width": 16
              },
              "PTXQSAV": {
                "bit": 16,
                "description": "PTXQSAV",
                "width": 8
              },
              "PTXQTOP": {
                "bit": 24,
                "description": "PTXQTOP",
                "width": 8
              }
            },
            "HAINT": {
              "HAINT": {
                "bit": 0,
                "description": "HAINT",
                "width": 16
              }
            },
            "HAINTMSK": {
              "HAINTM": {
                "bit": 0,
                "description": "HAINTM",
                "width": 16
              }
            },
            "HPRT": {
              "PCSTS": {
                "bit": 0,
                "description": "PCSTS"
              },
              "PCDET": {
                "bit": 1,
                "description": "PCDET"
              },
              "PENA": {
                "bit": 2,
                "description": "PENA"
              },
              "PENCHNG": {
                "bit": 3,
                "description": "PENCHNG"
              },
              "POCA": {
                "bit": 4,
                "description": "POCA"
              },
              "POCCHNG": {
                "bit": 5,
                "description": "POCCHNG"
              },
              "PRES": {
                "bit": 6,
                "description": "PRES"
              },
              "PSUSP": {
                "bit": 7,
                "description": "PSUSP"
              },
              "PRST": {
                "bit": 8,
                "description": "PRST"
              },
              "PLSTS": {
                "bit": 10,
                "description": "PLSTS",
                "width": 2
              },
              "PPWR": {
                "bit": 12,
                "description": "PPWR"
              },
              "PTCTL": {
                "bit": 13,
                "description": "PTCTL",
                "width": 4
              },
              "PSPD": {
                "bit": 17,
                "description": "PSPD",
                "width": 2
              }
            },
            "HCCHAR0": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT0": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK0": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ0": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR1": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT1": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK1": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ1": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR2": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT2": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK2": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ2": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR3": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT3": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK3": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ3": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR4": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT4": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK4": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ4": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR5": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT5": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK5": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ5": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR6": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT6": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK6": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ6": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR7": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT7": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK7": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ7": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR8": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT8": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK8": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ8": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR9": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT9": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK9": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ9": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR10": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT10": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK10": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ10": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "HCCHAR11": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "EPNUM": {
                "bit": 11,
                "description": "EPNUM",
                "width": 4
              },
              "EPDIR": {
                "bit": 15,
                "description": "EPDIR"
              },
              "LSDEV": {
                "bit": 17,
                "description": "LSDEV"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "MCNT": {
                "bit": 20,
                "description": "MCNT",
                "width": 2
              },
              "DAD": {
                "bit": 22,
                "description": "DAD",
                "width": 7
              },
              "ODDFRM": {
                "bit": 29,
                "description": "ODDFRM"
              },
              "CHDIS": {
                "bit": 30,
                "description": "CHDIS"
              },
              "CHENA": {
                "bit": 31,
                "description": "CHENA"
              }
            },
            "HCINT11": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "CHH": {
                "bit": 1,
                "description": "CHH"
              },
              "STALL": {
                "bit": 3,
                "description": "STALL"
              },
              "NAK": {
                "bit": 4,
                "description": "NAK"
              },
              "ACK": {
                "bit": 5,
                "description": "ACK"
              },
              "TXERR": {
                "bit": 7,
                "description": "TXERR"
              },
              "BBERR": {
                "bit": 8,
                "description": "BBERR"
              },
              "FRMOR": {
                "bit": 9,
                "description": "FRMOR"
              },
              "DTERR": {
                "bit": 10,
                "description": "DTERR"
              }
            },
            "HCINTMSK11": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "CHHM": {
                "bit": 1,
                "description": "CHHM"
              },
              "STALLM": {
                "bit": 3,
                "description": "STALLM"
              },
              "NAKM": {
                "bit": 4,
                "description": "NAKM"
              },
              "ACKM": {
                "bit": 5,
                "description": "ACKM"
              },
              "TXERRM": {
                "bit": 7,
                "description": "TXERRM"
              },
              "BBERRM": {
                "bit": 8,
                "description": "BBERRM"
              },
              "FRMORM": {
                "bit": 9,
                "description": "FRMORM"
              },
              "DTERRM": {
                "bit": 10,
                "description": "DTERRM"
              }
            },
            "HCTSIZ11": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "DPID": {
                "bit": 29,
                "description": "DPID",
                "width": 2
              },
              "DOPNG": {
                "bit": 31,
                "description": "DOPNG"
              }
            },
            "DCFG": {
              "DSPD": {
                "bit": 0,
                "description": "DSPD",
                "width": 2
              },
              "NZLSOHSK": {
                "bit": 2,
                "description": "NZLSOHSK"
              },
              "DAD": {
                "bit": 4,
                "description": "DAD",
                "width": 7
              },
              "PFIVL": {
                "bit": 11,
                "description": "PFIVL",
                "width": 2
              },
              "ERRATIM": {
                "bit": 15,
                "description": "ERRATIM"
              }
            },
            "DCTL": {
              "RWUSIG": {
                "bit": 0,
                "description": "RWUSIG"
              },
              "SDIS": {
                "bit": 1,
                "description": "SDIS"
              },
              "GINSTS": {
                "bit": 2,
                "description": "GINSTS"
              },
              "GONSTS": {
                "bit": 3,
                "description": "GONSTS"
              },
              "TCTL": {
                "bit": 4,
                "description": "TCTL",
                "width": 3
              },
              "SGINAK": {
                "bit": 7,
                "description": "SGINAK"
              },
              "CGINAK": {
                "bit": 8,
                "description": "CGINAK"
              },
              "SGONAK": {
                "bit": 9,
                "description": "SGONAK"
              },
              "CGONAK": {
                "bit": 10,
                "description": "CGONAK"
              },
              "POPRGDNE": {
                "bit": 11,
                "description": "POPRGDNE"
              },
              "DSBESLRJCT": {
                "bit": 18,
                "description": "DSBESLRJCT"
              }
            },
            "DSTS": {
              "SUSPSTS": {
                "bit": 0,
                "description": "SUSPSTS"
              },
              "ENUMSPD": {
                "bit": 1,
                "description": "ENUMSPD",
                "width": 2
              },
              "EERR": {
                "bit": 3,
                "description": "EERR"
              },
              "FNSOF": {
                "bit": 8,
                "description": "FNSOF",
                "width": 14
              },
              "DEVLNSTS": {
                "bit": 22,
                "description": "DEVLNSTS",
                "width": 2
              }
            },
            "DIEPMSK": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "EPDM": {
                "bit": 1,
                "description": "EPDM"
              },
              "TOM": {
                "bit": 3,
                "description": "TOM"
              },
              "ITTXFEMSK": {
                "bit": 4,
                "description": "ITTXFEMSK"
              },
              "INEPNMM": {
                "bit": 5,
                "description": "INEPNMM"
              },
              "INEPNEM": {
                "bit": 6,
                "description": "INEPNEM"
              },
              "NAKM": {
                "bit": 13,
                "description": "NAKM"
              }
            },
            "DOEPMSK": {
              "XFRCM": {
                "bit": 0,
                "description": "XFRCM"
              },
              "EPDM": {
                "bit": 1,
                "description": "EPDM"
              },
              "STUPM": {
                "bit": 3,
                "description": "STUPM"
              },
              "OTEPDM": {
                "bit": 4,
                "description": "OTEPDM"
              },
              "STSPHSRXM": {
                "bit": 5,
                "description": "STSPHSRXM"
              },
              "OUTPKTERRM": {
                "bit": 8,
                "description": "OUTPKTERRM"
              },
              "BERRM": {
                "bit": 12,
                "description": "BERRM"
              },
              "NAKMSK": {
                "bit": 13,
                "description": "NAKMSK"
              }
            },
            "DAINT": {
              "IEPINT": {
                "bit": 0,
                "description": "IEPINT",
                "width": 16
              },
              "OEPINT": {
                "bit": 16,
                "description": "OEPINT",
                "width": 16
              }
            },
            "DAINTMSK": {
              "IEPM": {
                "bit": 0,
                "description": "IEPM",
                "width": 16
              },
              "OEPM": {
                "bit": 16,
                "description": "OEPM",
                "width": 16
              }
            },
            "DVBUSDIS": {
              "VBUSDT": {
                "bit": 0,
                "description": "VBUSDT",
                "width": 16
              }
            },
            "DVBUSPULSE": {
              "DVBUSP": {
                "bit": 0,
                "description": "DVBUSP",
                "width": 16
              }
            },
            "DIEPEMPMSK": {
              "INEPTXFEM": {
                "bit": 0,
                "description": "INEPTXFEM",
                "width": 16
              }
            },
            "DIEPCTL0": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 2
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT0": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ0": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 7
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 2
              }
            },
            "DTXFSTS0": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DIEPCTL1": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SODDFRM": {
                "bit": 29,
                "description": "SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT1": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ1": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "MCNT": {
                "bit": 29,
                "description": "MCNT",
                "width": 2
              }
            },
            "DTXFSTS1": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DIEPCTL2": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SODDFRM": {
                "bit": 29,
                "description": "SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT2": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ2": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "MCNT": {
                "bit": 29,
                "description": "MCNT",
                "width": 2
              }
            },
            "DTXFSTS2": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DIEPCTL3": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SODDFRM": {
                "bit": 29,
                "description": "SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT3": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ3": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "MCNT": {
                "bit": 29,
                "description": "MCNT",
                "width": 2
              }
            },
            "DTXFSTS3": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DIEPCTL4": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SODDFRM": {
                "bit": 29,
                "description": "SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT4": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ4": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "MCNT": {
                "bit": 29,
                "description": "MCNT",
                "width": 2
              }
            },
            "DTXFSTS4": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DIEPCTL5": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "TXFNUM": {
                "bit": 22,
                "description": "TXFNUM",
                "width": 4
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SODDFRM": {
                "bit": 29,
                "description": "SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DIEPINT5": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "TOC": {
                "bit": 3,
                "description": "TOC"
              },
              "ITTXFE": {
                "bit": 4,
                "description": "ITTXFE"
              },
              "INEPNM": {
                "bit": 5,
                "description": "INEPNM"
              },
              "INEPNE": {
                "bit": 6,
                "description": "INEPNE"
              },
              "TXFE": {
                "bit": 7,
                "description": "TXFE"
              },
              "PKTDRPSTS": {
                "bit": 11,
                "description": "PKTDRPSTS"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              }
            },
            "DIEPTSIZ5": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "MCNT": {
                "bit": 29,
                "description": "MCNT",
                "width": 2
              }
            },
            "DTXFSTS5": {
              "INEPTFSAV": {
                "bit": 0,
                "description": "INEPTFSAV",
                "width": 16
              }
            },
            "DOEPCTL0": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 2
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT0": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ0": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 7
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT"
              },
              "STUPCNT": {
                "bit": 29,
                "description": "STUPCNT",
                "width": 2
              }
            },
            "DOEPCTL1": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SD1PID_SODDFRM": {
                "bit": 29,
                "description": "SD1PID_SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT1": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ1": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "RXDPID_STUPCNT": {
                "bit": 29,
                "description": "RXDPID_STUPCNT",
                "width": 2
              }
            },
            "DOEPCTL2": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SD1PID_SODDFRM": {
                "bit": 29,
                "description": "SD1PID_SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT2": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ2": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "RXDPID_STUPCNT": {
                "bit": 29,
                "description": "RXDPID_STUPCNT",
                "width": 2
              }
            },
            "DOEPCTL3": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SD1PID_SODDFRM": {
                "bit": 29,
                "description": "SD1PID_SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT3": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ3": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "RXDPID_STUPCNT": {
                "bit": 29,
                "description": "RXDPID_STUPCNT",
                "width": 2
              }
            },
            "DOEPCTL4": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SD1PID_SODDFRM": {
                "bit": 29,
                "description": "SD1PID_SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT4": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ4": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "RXDPID_STUPCNT": {
                "bit": 29,
                "description": "RXDPID_STUPCNT",
                "width": 2
              }
            },
            "DOEPCTL5": {
              "MPSIZ": {
                "bit": 0,
                "description": "MPSIZ",
                "width": 11
              },
              "USBAEP": {
                "bit": 15,
                "description": "USBAEP"
              },
              "EONUM_DPIP": {
                "bit": 16,
                "description": "EONUM_DPIP"
              },
              "NAKSTS": {
                "bit": 17,
                "description": "NAKSTS"
              },
              "EPTYP": {
                "bit": 18,
                "description": "EPTYP",
                "width": 2
              },
              "SNPM": {
                "bit": 20,
                "description": "SNPM"
              },
              "STALL": {
                "bit": 21,
                "description": "STALL"
              },
              "CNAK": {
                "bit": 26,
                "description": "CNAK"
              },
              "SNAK": {
                "bit": 27,
                "description": "SNAK"
              },
              "SD0PID_SEVNFRM": {
                "bit": 28,
                "description": "SD0PID_SEVNFRM"
              },
              "SD1PID_SODDFRM": {
                "bit": 29,
                "description": "SD1PID_SODDFRM"
              },
              "EPDIS": {
                "bit": 30,
                "description": "EPDIS"
              },
              "EPENA": {
                "bit": 31,
                "description": "EPENA"
              }
            },
            "DOEPINT5": {
              "XFRC": {
                "bit": 0,
                "description": "XFRC"
              },
              "EPDISD": {
                "bit": 1,
                "description": "EPDISD"
              },
              "AHBERR": {
                "bit": 2,
                "description": "AHBERR"
              },
              "STUP": {
                "bit": 3,
                "description": "STUP"
              },
              "OTEPDIS": {
                "bit": 4,
                "description": "OTEPDIS"
              },
              "STSPHSRX": {
                "bit": 5,
                "description": "STSPHSRX"
              },
              "B2BSTUP": {
                "bit": 6,
                "description": "B2BSTUP"
              },
              "OUTPKTERR": {
                "bit": 8,
                "description": "OUTPKTERR"
              },
              "BNA": {
                "bit": 9,
                "description": "BNA"
              },
              "BERR": {
                "bit": 12,
                "description": "BERR"
              },
              "NAK": {
                "bit": 13,
                "description": "NAK"
              },
              "NYET": {
                "bit": 14,
                "description": "NYET"
              },
              "STPKTRX": {
                "bit": 15,
                "description": "STPKTRX"
              }
            },
            "DOEPTSIZ5": {
              "XFRSIZ": {
                "bit": 0,
                "description": "XFRSIZ",
                "width": 19
              },
              "PKTCNT": {
                "bit": 19,
                "description": "PKTCNT",
                "width": 10
              },
              "RXDPID_STUPCNT": {
                "bit": 29,
                "description": "RXDPID_STUPCNT",
                "width": 2
              }
            },
            "PCGCCTL": {
              "STPPCLK": {
                "bit": 0,
                "description": "STPPCLK"
              },
              "GATEHCLK": {
                "bit": 1,
                "description": "GATEHCLK"
              },
              "PHYSUSP": {
                "bit": 4,
                "description": "PHYSUSP"
              },
              "ENL1GTG": {
                "bit": 5,
                "description": "ENL1GTG"
              },
              "PHYSLEEP": {
                "bit": 6,
                "description": "PHYSLEEP"
              },
              "SUSP": {
                "bit": 7,
                "description": "SUSP"
              }
            }
          }
        },
        "PSSI": {
          "instances": [
            {
              "name": "PSSI",
              "base": "0x4202C400"
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "PSSI control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "PSSI status register"
            },
            "RIS": {
              "offset": "0x08",
              "size": 32,
              "description": "PSSI raw interrupt status register"
            },
            "IER": {
              "offset": "0x0C",
              "size": 32,
              "description": "PSSI interrupt enable register"
            },
            "MIS": {
              "offset": "0x10",
              "size": 32,
              "description": "PSSI masked interrupt status register"
            },
            "ICR": {
              "offset": "0x14",
              "size": 32,
              "description": "PSSI interrupt clear register"
            },
            "DR": {
              "offset": "0x28",
              "size": 32,
              "description": "PSSI data register"
            }
          },
          "bits": {
            "CR": {
              "CKPOL": {
                "bit": 5,
                "description": "Parallel data clock polarity\n\t\tThis bit configures the capture edge of the parallel clock or the edge used for driving outputs, depending on OUTEN."
              },
              "DEPOL": {
                "bit": 6,
                "description": "Data enable (PSSI_DE) polarity\n\t\tThis bit indicates the level on the PSSI_DE pin when the data are not valid on the parallel interface."
              },
              "RDYPOL": {
                "bit": 8,
                "description": "Ready (PSSI_RDY) polarity\n\t\tThis bit indicates the level on the PSSI_RDY pin when the data are not valid on the parallel interface."
              },
              "EDM": {
                "bit": 10,
                "description": "Extended data mode",
                "width": 2
              },
              "ENABLE": {
                "bit": 14,
                "description": "PSSI enable\n\t\tThe contents of the FIFO are flushed when ENABLE is cleared to 0.\n\t\tNote: When ENABLE=1, the content of PSSI_CR must not be changed, except for the ENABLE bit itself. All configuration bits can change as soon as ENABLE changes from 0 to 1.\n\t\tThe DMA controller and all PSSI configuration registers must be programmed correctly before setting the ENABLE bit to 1.\n\t\tThe ENABLE bit and the DCMI ENABLE bit (bit 15 of DCMI_CR) must not be set to 1 at the same time."
              },
              "DERDYCFG": {
                "bit": 18,
                "description": "Data enable and ready configuration\n\t\tWhen the PSSI_RDY function is mapped to the PSSI_DE pin (settings 101 or 111), it is still the RDYPOL bit which determines its polarity. Similarly, when the PSSI_DE function is mapped to the PSSI_RDY pin (settings 110 or 111), it is still the DEPOL bit which determines its polarity.",
                "width": 3
              },
              "DMAEN": {
                "bit": 30,
                "description": "DMA enable bit"
              },
              "OUTEN": {
                "bit": 31,
                "description": "Data direction selection bit"
              }
            },
            "SR": {
              "RTT4B": {
                "bit": 2,
                "description": "RTT4B"
              },
              "RTT1B": {
                "bit": 3,
                "description": "RTT1B"
              }
            },
            "RIS": {
              "OVR_RIS": {
                "bit": 1,
                "description": "OVR_RIS"
              }
            },
            "IER": {
              "OVR_IE": {
                "bit": 1,
                "description": "OVR_IE"
              }
            },
            "MIS": {
              "OVR_MIS": {
                "bit": 1,
                "description": "OVR_MIS"
              }
            },
            "ICR": {
              "OVR_ISC": {
                "bit": 1,
                "description": "OVR_ISC"
              }
            },
            "DR": {
              "BYTE0": {
                "bit": 0,
                "description": "Data byte 0",
                "width": 8
              },
              "BYTE1": {
                "bit": 8,
                "description": "Data byte 1",
                "width": 8
              },
              "BYTE2": {
                "bit": 16,
                "description": "Data byte 2",
                "width": 8
              },
              "BYTE3": {
                "bit": 24,
                "description": "Data byte 3",
                "width": 8
              }
            }
          }
        },
        "OTFDEC1": {
          "instances": [
            {
              "name": "OTFDEC1",
              "base": "0x420C5000",
              "irq": 108
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "OTFDEC control register"
            },
            "PRIVCFGR": {
              "offset": "0x10",
              "size": 32,
              "description": "OTFDEC privileged access control configuration register"
            },
            "R1CFGR": {
              "offset": "0x20",
              "size": 32,
              "description": "OTFDEC region x configuration\n          register"
            },
            "R2CFGR": {
              "offset": "0x50",
              "size": 32,
              "description": "OTFDEC region x configuration\n          register"
            },
            "R3CFGR": {
              "offset": "0x80",
              "size": 32,
              "description": "OTFDEC region x configuration\n          register"
            },
            "R4CFGR": {
              "offset": "0xB0",
              "size": 32,
              "description": "OTFDEC region x configuration\n          register"
            },
            "R1STARTADDR": {
              "offset": "0x24",
              "size": 32,
              "description": "OTFDEC region x start address\n          register"
            },
            "R2STARTADDR": {
              "offset": "0x54",
              "size": 32,
              "description": "OTFDEC region x start address\n          register"
            },
            "R3STARTADDR": {
              "offset": "0x84",
              "size": 32,
              "description": "OTFDEC region x start address\n          register"
            },
            "R4STARTADDR": {
              "offset": "0xB4",
              "size": 32,
              "description": "OTFDEC region x start address\n          register"
            },
            "R1ENDADDR": {
              "offset": "0x28",
              "size": 32,
              "description": "OTFDEC region x end address\n          register"
            },
            "R2ENDADDR": {
              "offset": "0x58",
              "size": 32,
              "description": "OTFDEC region x end address\n          register"
            },
            "R3ENDADDR": {
              "offset": "0x88",
              "size": 32,
              "description": "OTFDEC region x end address\n          register"
            },
            "R4ENDADDR": {
              "offset": "0x8C",
              "size": 32,
              "description": "OTFDEC region x end address\n          register"
            },
            "R1NONCER0": {
              "offset": "0x2C",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          0"
            },
            "R2NONCER0": {
              "offset": "0x5C",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          0"
            },
            "R3NONCER0": {
              "offset": "0x8C",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          0"
            },
            "R4NONCER0": {
              "offset": "0xBC",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          0"
            },
            "R1NONCER1": {
              "offset": "0x30",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          1"
            },
            "R2NONCER1": {
              "offset": "0x60",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          1"
            },
            "R3NONCER1": {
              "offset": "0x90",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          1"
            },
            "R4NONCER1": {
              "offset": "0xC0",
              "size": 32,
              "description": "OTFDEC region x nonce register\n          1"
            },
            "R1KEYR0": {
              "offset": "0x34",
              "size": 32,
              "description": "OTFDEC region x key register 0"
            },
            "R2KEYR0": {
              "offset": "0x64",
              "size": 32,
              "description": "OTFDEC region x key register 0"
            },
            "R3KEYR0": {
              "offset": "0x94",
              "size": 32,
              "description": "OTFDEC region x key register 0"
            },
            "R4KEYR0": {
              "offset": "0xC4",
              "size": 32,
              "description": "OTFDEC region x key register 0"
            },
            "R1KEYR1": {
              "offset": "0x38",
              "size": 32,
              "description": "OTFDEC region x key register 1"
            },
            "R2KEYR1": {
              "offset": "0x68",
              "size": 32,
              "description": "OTFDEC region x key register 1"
            },
            "R3KEYR1": {
              "offset": "0x98",
              "size": 32,
              "description": "OTFDEC region x key register 1"
            },
            "R4KEYR1": {
              "offset": "0xC8",
              "size": 32,
              "description": "OTFDEC region x key register 1"
            },
            "R1KEYR2": {
              "offset": "0x3C",
              "size": 32,
              "description": "OTFDEC region x key register 2"
            },
            "R2KEYR2": {
              "offset": "0x6C",
              "size": 32,
              "description": "OTFDEC region x key register 2"
            },
            "R3KEYR2": {
              "offset": "0x9C",
              "size": 32,
              "description": "OTFDEC region x key register 2"
            },
            "R4KEYR2": {
              "offset": "0xCC",
              "size": 32,
              "description": "OTFDEC region x key register 2"
            },
            "R1KEYR3": {
              "offset": "0x40",
              "size": 32,
              "description": "OTFDEC region x key register 3"
            },
            "R2KEYR3": {
              "offset": "0x70",
              "size": 32,
              "description": "OTFDEC region x key register 3"
            },
            "R3KEYR3": {
              "offset": "0xA0",
              "size": 32,
              "description": "OTFDEC region x key register 3"
            },
            "R4KEYR3": {
              "offset": "0xD0",
              "size": 32,
              "description": "OTFDEC region x key register 3"
            },
            "ISR": {
              "offset": "0x300",
              "size": 32,
              "description": "OTFDEC interrupt status\n          register"
            },
            "ICR": {
              "offset": "0x304",
              "size": 32,
              "description": "OTFDEC interrupt clear\n          register"
            },
            "IER": {
              "offset": "0x308",
              "size": 32,
              "description": "OTFDEC interrupt enable\n          register"
            }
          },
          "bits": {
            "CR": {
              "ENC": {
                "bit": 0,
                "description": "Encryption mode bit"
              }
            },
            "PRIVCFGR": {
              "PRIV": {
                "bit": 0,
                "description": "Encryption mode bit"
              }
            },
            "R1CFGR": {
              "REG_EN": {
                "bit": 0,
                "description": "region on-the-fly decryption\n              enable"
              },
              "CONFIGLOCK": {
                "bit": 1,
                "description": "region config lock"
              },
              "KEYLOCK": {
                "bit": 2,
                "description": "region key lock"
              },
              "MODE": {
                "bit": 4,
                "description": "operating mode",
                "width": 2
              },
              "KEYCRC": {
                "bit": 8,
                "description": "region key 8-bit CRC",
                "width": 8
              },
              "REGx_VERSION": {
                "bit": 16,
                "description": "region firmware version",
                "width": 16
              }
            },
            "R2CFGR": {
              "REG_EN": {
                "bit": 0,
                "description": "region on-the-fly decryption\n              enable"
              },
              "CONFIGLOCK": {
                "bit": 1,
                "description": "region config lock"
              },
              "KEYLOCK": {
                "bit": 2,
                "description": "region key lock"
              },
              "MODE": {
                "bit": 4,
                "description": "operating mode",
                "width": 2
              },
              "KEYCRC": {
                "bit": 8,
                "description": "region key 8-bit CRC",
                "width": 8
              },
              "REGx_VERSION": {
                "bit": 16,
                "description": "region firmware version",
                "width": 16
              }
            },
            "R3CFGR": {
              "REG_EN": {
                "bit": 0,
                "description": "region on-the-fly decryption\n              enable"
              },
              "CONFIGLOCK": {
                "bit": 1,
                "description": "region config lock"
              },
              "KEYLOCK": {
                "bit": 2,
                "description": "region key lock"
              },
              "MODE": {
                "bit": 4,
                "description": "operating mode",
                "width": 2
              },
              "KEYCRC": {
                "bit": 8,
                "description": "region key 8-bit CRC",
                "width": 8
              },
              "REGx_VERSION": {
                "bit": 16,
                "description": "region firmware version",
                "width": 16
              }
            },
            "R4CFGR": {
              "REG_EN": {
                "bit": 0,
                "description": "region on-the-fly decryption\n              enable"
              },
              "CONFIGLOCK": {
                "bit": 1,
                "description": "region config lock"
              },
              "KEYLOCK": {
                "bit": 2,
                "description": "region key lock"
              },
              "MODE": {
                "bit": 4,
                "description": "operating mode",
                "width": 2
              },
              "KEYCRC": {
                "bit": 8,
                "description": "region key 8-bit CRC",
                "width": 8
              },
              "REGx_VERSION": {
                "bit": 16,
                "description": "region firmware version",
                "width": 16
              }
            },
            "R1STARTADDR": {
              "REGx_START_ADDR": {
                "bit": 0,
                "description": "Region AXI start address",
                "width": 32
              }
            },
            "R2STARTADDR": {
              "REGx_START_ADDR": {
                "bit": 0,
                "description": "Region AXI start address",
                "width": 32
              }
            },
            "R3STARTADDR": {
              "REGx_START_ADDR": {
                "bit": 0,
                "description": "Region AXI start address",
                "width": 32
              }
            },
            "R4STARTADDR": {
              "REGx_START_ADDR": {
                "bit": 0,
                "description": "Region AXI start address",
                "width": 32
              }
            },
            "R1ENDADDR": {
              "REGx_END_ADDR": {
                "bit": 0,
                "description": "Region AXI end address",
                "width": 32
              }
            },
            "R2ENDADDR": {
              "REGx_END_ADDR": {
                "bit": 0,
                "description": "Region AXI end address",
                "width": 32
              }
            },
            "R3ENDADDR": {
              "REGx_END_ADDR": {
                "bit": 0,
                "description": "Region AXI end address",
                "width": 32
              }
            },
            "R4ENDADDR": {
              "REGx_END_ADDR": {
                "bit": 0,
                "description": "Region AXI end address",
                "width": 32
              }
            },
            "R1NONCER0": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R2NONCER0": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R3NONCER0": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R4NONCER0": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R1NONCER1": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "Region nonce",
                "width": 32
              }
            },
            "R2NONCER1": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "Region nonce, bits\n              [63:32]REGx_NONCE[63:32]",
                "width": 32
              }
            },
            "R3NONCER1": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R4NONCER1": {
              "REGx_NONCE": {
                "bit": 0,
                "description": "REGx_NONCE",
                "width": 32
              }
            },
            "R1KEYR0": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R2KEYR0": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R3KEYR0": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R4KEYR0": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R1KEYR1": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R2KEYR1": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R3KEYR1": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R4KEYR1": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R1KEYR2": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R2KEYR2": {
              "REGx_KEY_": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R3KEYR2": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R4KEYR2": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R1KEYR3": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R2KEYR3": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R3KEYR3": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "R4KEYR3": {
              "REGx_KEY": {
                "bit": 0,
                "description": "REGx_KEY",
                "width": 32
              }
            },
            "ISR": {
              "SEIF": {
                "bit": 0,
                "description": "Security Error Interrupt Flag\n              status"
              },
              "XONEIF": {
                "bit": 1,
                "description": "Execute-only execute-Never Error\n              Interrupt Flag status"
              },
              "KEIF": {
                "bit": 2,
                "description": "Key Error Interrupt Flag\n              status"
              }
            },
            "ICR": {
              "SEIF": {
                "bit": 0,
                "description": "SEIF"
              },
              "XONEIF": {
                "bit": 1,
                "description": "Execute-only execute-Never Error\n              Interrupt Flag clear"
              },
              "KEIF": {
                "bit": 2,
                "description": "KEIF"
              }
            },
            "IER": {
              "SEIE": {
                "bit": 0,
                "description": "Security Error Interrupt\n              Enable"
              },
              "XONEIE": {
                "bit": 1,
                "description": "XONEIE"
              },
              "KEIE": {
                "bit": 2,
                "description": "KEIE"
              }
            }
          }
        },
        "OTFDEC2": {
          "instances": [
            {
              "name": "OTFDEC2",
              "base": "0x420C5400",
              "irq": 109
            }
          ],
          "registers": {}
        },
        "RAMCFG": {
          "instances": [
            {
              "name": "RAMCFG",
              "base": "0x40026000",
              "irq": 5
            }
          ],
          "registers": {
            "RAM1CR": {
              "offset": "0x00",
              "size": 32,
              "description": "RAMCFG SRAM x control register"
            },
            "RAM1ISR": {
              "offset": "0x08",
              "size": 32,
              "description": "RAMCFG RAMx interrupt status register"
            },
            "RAM1ERKEYR": {
              "offset": "0x28",
              "size": 32,
              "description": "RAMCFG SRAM x erase key register"
            },
            "RAM2CR": {
              "offset": "0x40",
              "size": 32,
              "description": "RAMCFG SRAM x control register"
            },
            "RAM2IER": {
              "offset": "0x44",
              "size": 32,
              "description": "RAMCFG SRAM x interrupt enable register"
            },
            "RAM2ISR": {
              "offset": "0x48",
              "size": 32,
              "description": "RAMCFG RAMx interrupt status register"
            },
            "RAM2SEAR": {
              "offset": "0x4C",
              "size": 32,
              "description": "RAMCFG RAM x ECC single error address register"
            },
            "RAM2DEAR": {
              "offset": "0x50",
              "size": 32,
              "description": "RAMCFG RAM x ECC double error address register"
            },
            "RAM2ICR": {
              "offset": "0x54",
              "size": 32,
              "description": "RAMCFG RAM x interrupt clear register x"
            },
            "RAM2WPR1": {
              "offset": "0x58",
              "size": 32,
              "description": "RAMCFG SRAM2 write protection register 1"
            },
            "RAM2WPR2": {
              "offset": "0x5C",
              "size": 32,
              "description": "RAMCFG SRAM2 write protection register 2"
            },
            "RAM2ECCKEYR": {
              "offset": "0x64",
              "size": 32,
              "description": "RAMCFG SRAM x ECC key register"
            },
            "RAM2ERKEYR": {
              "offset": "0x68",
              "size": 32,
              "description": "RAMCFG SRAM x erase key register"
            },
            "RAM3CR": {
              "offset": "0x80",
              "size": 32,
              "description": "RAMCFG SRAM x control register"
            },
            "RAM3IER": {
              "offset": "0x84",
              "size": 32,
              "description": "RAMCFG SRAM x interrupt enable register"
            },
            "RAM3ISR": {
              "offset": "0x88",
              "size": 32,
              "description": "RAMCFG RAMx interrupt status register"
            },
            "RAM3SEAR": {
              "offset": "0x8C",
              "size": 32,
              "description": "RAMCFG RAM x ECC single error address register"
            },
            "RAM3DEAR": {
              "offset": "0x90",
              "size": 32,
              "description": "RAMCFG RAM x ECC double error address register"
            },
            "RAM3ICR": {
              "offset": "0x94",
              "size": 32,
              "description": "RAMCFG RAM x interrupt clear register x"
            },
            "RAM3ECCKEYR": {
              "offset": "0xA4",
              "size": 32,
              "description": "RAMCFG SRAM x ECC key register"
            },
            "RAM3ERKEYR": {
              "offset": "0xA8",
              "size": 32,
              "description": "RAMCFG SRAM x erase key register"
            },
            "RAM4CR": {
              "offset": "0xC0",
              "size": 32,
              "description": "RAMCFG SRAM x control register"
            },
            "RAM4ISR": {
              "offset": "0xC8",
              "size": 32,
              "description": "RAMCFG RAMx interrupt status register"
            },
            "RAM4ERKEYR": {
              "offset": "0xE8",
              "size": 32,
              "description": "RAMCFG SRAM x erase key register"
            },
            "RAM5CR": {
              "offset": "0x100",
              "size": 32,
              "description": "RAMCFG SRAM x control register"
            },
            "RAM5IER": {
              "offset": "0x104",
              "size": 32,
              "description": "RAMCFG SRAM x interrupt enable register"
            },
            "RAM5ISR": {
              "offset": "0x108",
              "size": 32,
              "description": "RAMCFG RAMx interrupt status register"
            },
            "RAM5SEAR": {
              "offset": "0x10C",
              "size": 32,
              "description": "RAMCFG RAM x ECC single error address register"
            },
            "RAM5DEAR": {
              "offset": "0x110",
              "size": 32,
              "description": "RAMCFG RAM x ECC double error address register"
            },
            "RAM5ICR": {
              "offset": "0x114",
              "size": 32,
              "description": "RAMCFG RAM x interrupt clear register x"
            }
          },
          "bits": {
            "RAM1CR": {
              "ECCE": {
                "bit": 0,
                "description": "ECCE"
              },
              "ALE": {
                "bit": 4,
                "description": "ALE"
              },
              "SRAMER": {
                "bit": 8,
                "description": "SRAMER"
              },
              "WSC": {
                "bit": 16,
                "description": "WSC",
                "width": 3
              }
            },
            "RAM1ISR": {
              "SEDC": {
                "bit": 0,
                "description": "SEDC"
              },
              "DED": {
                "bit": 1,
                "description": "DED"
              },
              "SRAMBUSY": {
                "bit": 8,
                "description": "SRAMBUSY"
              }
            },
            "RAM1ERKEYR": {
              "ERASEKEY": {
                "bit": 0,
                "description": "ERASEKEY",
                "width": 8
              }
            },
            "RAM2CR": {
              "ECCE": {
                "bit": 0,
                "description": "ECCE"
              },
              "ALE": {
                "bit": 4,
                "description": "ALE"
              },
              "SRAMER": {
                "bit": 8,
                "description": "SRAMER"
              },
              "WSC": {
                "bit": 16,
                "description": "WSC",
                "width": 3
              }
            },
            "RAM2IER": {
              "SEIE": {
                "bit": 0,
                "description": "SEIE"
              },
              "DEIE": {
                "bit": 1,
                "description": "DEIE"
              },
              "ECCNMI": {
                "bit": 3,
                "description": "ECCNMI"
              }
            },
            "RAM2ISR": {
              "SEDC": {
                "bit": 0,
                "description": "SEDC"
              },
              "DED": {
                "bit": 1,
                "description": "DED"
              },
              "SRAMBUSY": {
                "bit": 8,
                "description": "SRAMBUSY"
              }
            },
            "RAM2SEAR": {
              "ESEA": {
                "bit": 0,
                "description": "ESEA",
                "width": 32
              }
            },
            "RAM2DEAR": {
              "EDEA": {
                "bit": 0,
                "description": "EDEA",
                "width": 32
              }
            },
            "RAM2ICR": {
              "CSEDC": {
                "bit": 0,
                "description": "CSEDC"
              },
              "CDED": {
                "bit": 1,
                "description": "CDED"
              }
            },
            "RAM2WPR1": {
              "P0WP": {
                "bit": 0,
                "description": "P0WP"
              },
              "P1WP": {
                "bit": 1,
                "description": "P1WP"
              },
              "P2WP": {
                "bit": 2,
                "description": "P2WP"
              },
              "P3WP": {
                "bit": 3,
                "description": "P3WP"
              },
              "P4WP": {
                "bit": 4,
                "description": "P4WP"
              },
              "P5WP": {
                "bit": 5,
                "description": "P5WP"
              },
              "P6WP": {
                "bit": 6,
                "description": "P6WP"
              },
              "P7WP": {
                "bit": 7,
                "description": "P7WP"
              },
              "P8WP": {
                "bit": 8,
                "description": "P8WP"
              },
              "P9WP": {
                "bit": 9,
                "description": "P9WP"
              },
              "P10WP": {
                "bit": 10,
                "description": "P10WP"
              },
              "P11WP": {
                "bit": 11,
                "description": "P11WP"
              },
              "P12WP": {
                "bit": 12,
                "description": "P12WP"
              },
              "P13WP": {
                "bit": 13,
                "description": "P13WP"
              },
              "P14WP": {
                "bit": 14,
                "description": "P14WP"
              },
              "P15WP": {
                "bit": 15,
                "description": "P15WP"
              },
              "P16WP": {
                "bit": 16,
                "description": "P16WP"
              },
              "P17WP": {
                "bit": 17,
                "description": "P17WP"
              },
              "P18WP": {
                "bit": 18,
                "description": "P18WP"
              },
              "P19WP": {
                "bit": 19,
                "description": "P19WP"
              },
              "P20WP": {
                "bit": 20,
                "description": "P20WP"
              },
              "P21WP": {
                "bit": 21,
                "description": "P21WP"
              },
              "P22WP": {
                "bit": 22,
                "description": "P22WP"
              },
              "P23WP": {
                "bit": 23,
                "description": "P23WP"
              },
              "P24WP": {
                "bit": 24,
                "description": "P24WP"
              },
              "P25WP": {
                "bit": 25,
                "description": "P25WP"
              },
              "P26WP": {
                "bit": 26,
                "description": "P26WP"
              },
              "P27WP": {
                "bit": 27,
                "description": "P27WP"
              },
              "P28WP": {
                "bit": 28,
                "description": "P28WP"
              },
              "P29WP": {
                "bit": 29,
                "description": "P29WP"
              },
              "P30WP": {
                "bit": 30,
                "description": "P30WP"
              },
              "P31WP": {
                "bit": 31,
                "description": "P31WP"
              }
            },
            "RAM2WPR2": {
              "P32WP": {
                "bit": 0,
                "description": "P32WP"
              },
              "P33WP": {
                "bit": 1,
                "description": "P33WP"
              },
              "P34WP": {
                "bit": 2,
                "description": "P34WP"
              },
              "P35WP": {
                "bit": 3,
                "description": "P35WP"
              },
              "P36WP": {
                "bit": 4,
                "description": "P36WP"
              },
              "P37WP": {
                "bit": 5,
                "description": "P37WP"
              },
              "P38WP": {
                "bit": 6,
                "description": "P38WP"
              },
              "P39WP": {
                "bit": 7,
                "description": "P39WP"
              },
              "P40WP": {
                "bit": 8,
                "description": "P40WP"
              },
              "P41WP": {
                "bit": 9,
                "description": "P41WP"
              },
              "P42WP": {
                "bit": 10,
                "description": "P42WP"
              },
              "P43WP": {
                "bit": 11,
                "description": "P43WP"
              },
              "P44WP": {
                "bit": 12,
                "description": "P44WP"
              },
              "P45WP": {
                "bit": 13,
                "description": "P45WP"
              },
              "P46WP": {
                "bit": 14,
                "description": "P46WP"
              },
              "P47WP": {
                "bit": 15,
                "description": "P47WP"
              },
              "P48WP": {
                "bit": 16,
                "description": "P48WP"
              },
              "P49WP": {
                "bit": 17,
                "description": "P49WP"
              },
              "P50WP": {
                "bit": 18,
                "description": "P50WP"
              },
              "P51WP": {
                "bit": 19,
                "description": "P51WP"
              },
              "P52WP": {
                "bit": 20,
                "description": "P52WP"
              },
              "P53WP": {
                "bit": 21,
                "description": "P53WP"
              },
              "P54WP": {
                "bit": 22,
                "description": "P54WP"
              },
              "P55WP": {
                "bit": 23,
                "description": "P55WP"
              },
              "P56WP": {
                "bit": 24,
                "description": "P56WP"
              },
              "P57WP": {
                "bit": 25,
                "description": "P57WP"
              },
              "P58WP": {
                "bit": 26,
                "description": "P58WP"
              },
              "P59WP": {
                "bit": 27,
                "description": "P59WP"
              },
              "P60WP": {
                "bit": 28,
                "description": "P60WP"
              },
              "P61WP": {
                "bit": 29,
                "description": "P61WP"
              },
              "P62WP": {
                "bit": 30,
                "description": "P62WP"
              },
              "P63WP": {
                "bit": 31,
                "description": "P63WP"
              }
            },
            "RAM2ECCKEYR": {
              "ECCKEY": {
                "bit": 0,
                "description": "ECCKEY",
                "width": 8
              }
            },
            "RAM2ERKEYR": {
              "ERASEKEY": {
                "bit": 0,
                "description": "ERASEKEY",
                "width": 8
              }
            },
            "RAM3CR": {
              "ECCE": {
                "bit": 0,
                "description": "ECCE"
              },
              "ALE": {
                "bit": 4,
                "description": "ALE"
              },
              "SRAMER": {
                "bit": 8,
                "description": "SRAMER"
              },
              "WSC": {
                "bit": 16,
                "description": "WSC",
                "width": 3
              }
            },
            "RAM3IER": {
              "SEIE": {
                "bit": 0,
                "description": "SEIE"
              },
              "DEIE": {
                "bit": 1,
                "description": "DEIE"
              },
              "ECCNMI": {
                "bit": 3,
                "description": "ECCNMI"
              }
            },
            "RAM3ISR": {
              "SEDC": {
                "bit": 0,
                "description": "SEDC"
              },
              "DED": {
                "bit": 1,
                "description": "DED"
              },
              "SRAMBUSY": {
                "bit": 8,
                "description": "SRAMBUSY"
              }
            },
            "RAM3SEAR": {
              "ESEA": {
                "bit": 0,
                "description": "ESEA",
                "width": 32
              }
            },
            "RAM3DEAR": {
              "EDEA": {
                "bit": 0,
                "description": "EDEA",
                "width": 32
              }
            },
            "RAM3ICR": {
              "CSEDC": {
                "bit": 0,
                "description": "CSEDC"
              },
              "CDED": {
                "bit": 1,
                "description": "CDED"
              }
            },
            "RAM3ECCKEYR": {
              "ECCKEY": {
                "bit": 0,
                "description": "ECCKEY",
                "width": 8
              }
            },
            "RAM3ERKEYR": {
              "ERASEKEY": {
                "bit": 0,
                "description": "ERASEKEY",
                "width": 8
              }
            },
            "RAM4CR": {
              "ECCE": {
                "bit": 0,
                "description": "ECCE"
              },
              "ALE": {
                "bit": 4,
                "description": "ALE"
              },
              "SRAMER": {
                "bit": 8,
                "description": "SRAMER"
              },
              "WSC": {
                "bit": 16,
                "description": "WSC",
                "width": 3
              }
            },
            "RAM4ISR": {
              "SEDC": {
                "bit": 0,
                "description": "SEDC"
              },
              "DED": {
                "bit": 1,
                "description": "DED"
              },
              "SRAMBUSY": {
                "bit": 8,
                "description": "SRAMBUSY"
              }
            },
            "RAM4ERKEYR": {
              "ERASEKEY": {
                "bit": 0,
                "description": "ERASEKEY",
                "width": 8
              }
            },
            "RAM5CR": {
              "ECCE": {
                "bit": 0,
                "description": "ECCE"
              },
              "ALE": {
                "bit": 4,
                "description": "ALE"
              },
              "SRAMER": {
                "bit": 8,
                "description": "SRAMER"
              },
              "WSC": {
                "bit": 16,
                "description": "WSC",
                "width": 3
              }
            },
            "RAM5IER": {
              "SEIE": {
                "bit": 0,
                "description": "SEIE"
              },
              "DEIE": {
                "bit": 1,
                "description": "DEIE"
              },
              "ECCNMI": {
                "bit": 3,
                "description": "ECCNMI"
              }
            },
            "RAM5ISR": {
              "SEDC": {
                "bit": 0,
                "description": "SEDC"
              },
              "DED": {
                "bit": 1,
                "description": "DED"
              },
              "SRAMBUSY": {
                "bit": 8,
                "description": "SRAMBUSY"
              }
            },
            "RAM5SEAR": {
              "ESEA": {
                "bit": 0,
                "description": "ESEA",
                "width": 32
              }
            },
            "RAM5DEAR": {
              "EDEA": {
                "bit": 0,
                "description": "EDEA",
                "width": 32
              }
            },
            "RAM5ICR": {
              "CSEDC": {
                "bit": 0,
                "description": "CSEDC"
              },
              "CDED": {
                "bit": 1,
                "description": "CDED"
              }
            }
          }
        },
        "DCMI": {
          "instances": [
            {
              "name": "DCMI",
              "base": "0x4202C000",
              "irq": 119
            }
          ],
          "registers": {
            "CR": {
              "offset": "0x00",
              "size": 32,
              "description": "control register"
            },
            "SR": {
              "offset": "0x04",
              "size": 32,
              "description": "status register"
            },
            "RIS": {
              "offset": "0x08",
              "size": 32,
              "description": "raw interrupt status register"
            },
            "IER": {
              "offset": "0x0C",
              "size": 32,
              "description": "interrupt enable register"
            },
            "MIS": {
              "offset": "0x10",
              "size": 32,
              "description": "masked interrupt status register"
            },
            "ICR": {
              "offset": "0x14",
              "size": 32,
              "description": "interrupt clear register"
            },
            "ESCR": {
              "offset": "0x18",
              "size": 32,
              "description": "background offset register"
            },
            "ESUR": {
              "offset": "0x1C",
              "size": 32,
              "description": "embedded synchronization unmask register"
            },
            "CWSTRT": {
              "offset": "0x20",
              "size": 32,
              "description": "crop window start"
            },
            "CWSIZE": {
              "offset": "0x24",
              "size": 32,
              "description": "crop window size"
            },
            "DR": {
              "offset": "0x28",
              "size": 32,
              "description": "data register"
            }
          },
          "bits": {
            "CR": {
              "OELS": {
                "bit": 20,
                "description": "Odd/Even Line Select (Line Select Start)"
              },
              "LSM": {
                "bit": 19,
                "description": "Line Select mode"
              },
              "OEBS": {
                "bit": 18,
                "description": "Odd/Even Byte Select (Byte Select Start)"
              },
              "BSM": {
                "bit": 16,
                "description": "Byte Select mode",
                "width": 2
              },
              "ENABLE": {
                "bit": 14,
                "description": "DCMI enable"
              },
              "EDM": {
                "bit": 10,
                "description": "Extended data mode",
                "width": 2
              },
              "FCRC": {
                "bit": 8,
                "description": "Frame capture rate control",
                "width": 2
              },
              "VSPOL": {
                "bit": 7,
                "description": "Vertical synchronization polarity"
              },
              "HSPOL": {
                "bit": 6,
                "description": "Horizontal synchronization polarity"
              },
              "PCKPOL": {
                "bit": 5,
                "description": "Pixel clock polarity"
              },
              "ESS": {
                "bit": 4,
                "description": "Embedded synchronization select"
              },
              "JPEG": {
                "bit": 3,
                "description": "JPEG format"
              },
              "CROP": {
                "bit": 2,
                "description": "Crop feature"
              },
              "CM": {
                "bit": 1,
                "description": "Capture mode"
              },
              "CAPTURE": {
                "bit": 0,
                "description": "Capture enable"
              }
            },
            "SR": {
              "FNE": {
                "bit": 2,
                "description": "FIFO not empty"
              },
              "VSYNC": {
                "bit": 1,
                "description": "Vertical synchronization"
              },
              "HSYNC": {
                "bit": 0,
                "description": "Horizontal synchronization"
              }
            },
            "RIS": {
              "LINE_RIS": {
                "bit": 4,
                "description": "Line raw interrupt status"
              },
              "VSYNC_RIS": {
                "bit": 3,
                "description": "DCMI_VSYNC raw interrupt status"
              },
              "ERR_RIS": {
                "bit": 2,
                "description": "Synchronization error raw interrupt status"
              },
              "OVR_RIS": {
                "bit": 1,
                "description": "Overrun raw interrupt status"
              },
              "FRAME_RIS": {
                "bit": 0,
                "description": "Capture complete raw interrupt status"
              }
            },
            "IER": {
              "LINE_IE": {
                "bit": 4,
                "description": "Line interrupt enable"
              },
              "VSYNC_IE": {
                "bit": 3,
                "description": "DCMI_VSYNC interrupt enable"
              },
              "ERR_IE": {
                "bit": 2,
                "description": "Synchronization error interrupt enable"
              },
              "OVR_IE": {
                "bit": 1,
                "description": "Overrun interrupt enable"
              },
              "FRAME_IE": {
                "bit": 0,
                "description": "Capture complete interrupt enable"
              }
            },
            "MIS": {
              "LINE_MIS": {
                "bit": 4,
                "description": "Line masked interrupt status"
              },
              "VSYNC_MIS": {
                "bit": 3,
                "description": "VSYNC masked interrupt status"
              },
              "ERR_MIS": {
                "bit": 2,
                "description": "Synchronization error masked interrupt status"
              },
              "OVR_MIS": {
                "bit": 1,
                "description": "Overrun masked interrupt status"
              },
              "FRAME_MIS": {
                "bit": 0,
                "description": "Capture complete masked interrupt status"
              }
            },
            "ICR": {
              "LINE_ISC": {
                "bit": 4,
                "description": "line interrupt status clear"
              },
              "VSYNC_ISC": {
                "bit": 3,
                "description": "Vertical Synchronization interrupt status clear"
              },
              "ERR_ISC": {
                "bit": 2,
                "description": "Synchronization error interrupt status clear"
              },
              "OVR_ISC": {
                "bit": 1,
                "description": "Overrun interrupt status clear"
              },
              "FRAME_ISC": {
                "bit": 0,
                "description": "Capture complete interrupt status clear"
              }
            },
            "ESCR": {
              "FEC": {
                "bit": 24,
                "description": "Frame end delimiter code",
                "width": 8
              },
              "LEC": {
                "bit": 16,
                "description": "Line end delimiter code",
                "width": 8
              },
              "LSC": {
                "bit": 8,
                "description": "Line start delimiter code",
                "width": 8
              },
              "FSC": {
                "bit": 0,
                "description": "Frame start delimiter code",
                "width": 8
              }
            },
            "ESUR": {
              "FEU": {
                "bit": 24,
                "description": "Frame end delimiter unmask",
                "width": 8
              },
              "LEU": {
                "bit": 16,
                "description": "Line end delimiter unmask",
                "width": 8
              },
              "LSU": {
                "bit": 8,
                "description": "Line start delimiter unmask",
                "width": 8
              },
              "FSU": {
                "bit": 0,
                "description": "Frame start delimiter unmask",
                "width": 8
              }
            },
            "CWSTRT": {
              "VST": {
                "bit": 16,
                "description": "Vertical start line count",
                "width": 13
              },
              "HOFFCNT": {
                "bit": 0,
                "description": "Horizontal offset count",
                "width": 14
              }
            },
            "CWSIZE": {
              "VLINE": {
                "bit": 16,
                "description": "Vertical line count",
                "width": 14
              },
              "CAPCNT": {
                "bit": 0,
                "description": "Capture count",
                "width": 14
              }
            },
            "DR": {
              "BYTE3": {
                "bit": 24,
                "description": "Data byte 3",
                "width": 8
              },
              "BYTE2": {
                "bit": 16,
                "description": "Data byte 2",
                "width": 8
              },
              "BYTE1": {
                "bit": 8,
                "description": "Data byte 1",
                "width": 8
              },
              "BYTE0": {
                "bit": 0,
                "description": "Data byte 0",
                "width": 8
              }
            }
          }
        },
        "DCB": {
          "instances": [
            {
              "name": "DCB",
              "base": "0xE000EE08"
            }
          ],
          "registers": {
            "DSCSR": {
              "offset": "0x00",
              "size": 32,
              "description": "Debug Security Control and Status Register"
            }
          },
          "bits": {
            "DSCSR": {
              "CDS": {
                "bit": 16,
                "description": "Current domain Secure"
              }
            }
          }
        }
      },
      "interrupts": {
        "count": 150,
        "vectors": [
          {
            "number": 0,
            "name": "Initial_SP"
          },
          {
            "number": 1,
            "name": "Reset_Handler"
          },
          {
            "number": 2,
            "name": "NMI_Handler"
          },
          {
            "number": 3,
            "name": "HardFault_Handler"
          },
          {
            "number": 4,
            "name": "MemManage_Handler"
          },
          {
            "number": 5,
            "name": "BusFault_Handler"
          },
          {
            "number": 6,
            "name": "UsageFault_Handler"
          },
          {
            "number": 11,
            "name": "SVC_Handler"
          },
          {
            "number": 12,
            "name": "DebugMon_Handler"
          },
          {
            "number": 14,
            "name": "PendSV_Handler"
          },
          {
            "number": 15,
            "name": "SysTick_Handler"
          },
          {
            "number": 16,
            "name": "WWDG_IRQHandler"
          },
          {
            "number": 17,
            "name": "PVD_PVM_IRQHandler"
          },
          {
            "number": 18,
            "name": "RTC_IRQHandler"
          },
          {
            "number": 19,
            "name": "RTC_S_IRQHandler"
          },
          {
            "number": 20,
            "name": "TAMP_IRQHandler"
          },
          {
            "number": 21,
            "name": "RAMCFG_IRQHandler"
          },
          {
            "number": 22,
            "name": "FLASH_IRQHandler"
          },
          {
            "number": 23,
            "name": "FLASH_S_IRQHandler"
          },
          {
            "number": 25,
            "name": "RCC_IRQHandler"
          },
          {
            "number": 26,
            "name": "RCC_S_IRQHandler"
          },
          {
            "number": 27,
            "name": "EXTI0_IRQHandler"
          },
          {
            "number": 28,
            "name": "EXTI1_IRQHandler"
          },
          {
            "number": 29,
            "name": "EXTI2_IRQHandler"
          },
          {
            "number": 30,
            "name": "EXTI3_IRQHandler"
          },
          {
            "number": 31,
            "name": "EXTI4_IRQHandler"
          },
          {
            "number": 32,
            "name": "EXTI5_IRQHandler"
          },
          {
            "number": 33,
            "name": "EXTI6_IRQHandler"
          },
          {
            "number": 34,
            "name": "EXTI7_IRQHandler"
          },
          {
            "number": 35,
            "name": "EXTI8_IRQHandler"
          },
          {
            "number": 36,
            "name": "EXTI9_IRQHandler"
          },
          {
            "number": 37,
            "name": "EXTI10_IRQHandler"
          },
          {
            "number": 38,
            "name": "EXTI11_IRQHandler"
          },
          {
            "number": 39,
            "name": "EXTI12_IRQHandler"
          },
          {
            "number": 40,
            "name": "EXTI13_IRQHandler"
          },
          {
            "number": 41,
            "name": "EXTI14_IRQHandler"
          },
          {
            "number": 42,
            "name": "EXTI15_IRQHandler"
          },
          {
            "number": 44,
            "name": "SAES_IRQHandler"
          },
          {
            "number": 45,
            "name": "GPDMA1_CH0_IRQHandler"
          },
          {
            "number": 46,
            "name": "GPDMA1_CH1_IRQHandler"
          },
          {
            "number": 47,
            "name": "GPDMA1_CH2_IRQHandler"
          },
          {
            "number": 48,
            "name": "GPDMA1_CH3_IRQHandler"
          },
          {
            "number": 49,
            "name": "GPDMA1_CH4_IRQHandler"
          },
          {
            "number": 50,
            "name": "GPDMA1_CH5_IRQHandler"
          },
          {
            "number": 51,
            "name": "GPDMA1_CH6_IRQHandler"
          },
          {
            "number": 52,
            "name": "GPDMA1_CH7_IRQHandler"
          },
          {
            "number": 53,
            "name": "ADC1_IRQHandler"
          },
          {
            "number": 54,
            "name": "DAC1_IRQHandler"
          },
          {
            "number": 55,
            "name": "FDCAN1_IT0_IRQHandler"
          },
          {
            "number": 56,
            "name": "FDCAN1_IT1_IRQHandler"
          },
          {
            "number": 57,
            "name": "TIM1_BRK_IRQHandler"
          },
          {
            "number": 58,
            "name": "TIM1_UP_IRQHandler"
          },
          {
            "number": 59,
            "name": "TIM1_TRG_COM_IRQHandler"
          },
          {
            "number": 60,
            "name": "TIM1_CC_IRQHandler"
          },
          {
            "number": 61,
            "name": "TIM2_IRQHandler"
          },
          {
            "number": 62,
            "name": "TIM3_IRQHandler"
          },
          {
            "number": 63,
            "name": "TIM4_IRQHandler"
          },
          {
            "number": 64,
            "name": "TIM5_IRQHandler"
          },
          {
            "number": 65,
            "name": "TIM6_IRQHandler"
          },
          {
            "number": 66,
            "name": "TIM7_IRQHandler"
          },
          {
            "number": 67,
            "name": "TIM8_BRK_IRQHandler"
          },
          {
            "number": 68,
            "name": "TIM8_UP_IRQHandler"
          },
          {
            "number": 69,
            "name": "TIM8_TRG_COM_IRQHandler"
          },
          {
            "number": 70,
            "name": "TIM8_CC_IRQHandler"
          },
          {
            "number": 71,
            "name": "I2C1_EV_IRQHandler"
          },
          {
            "number": 72,
            "name": "I2C1_ER_IRQHandler"
          },
          {
            "number": 73,
            "name": "I2C2_EV_IRQHandler"
          },
          {
            "number": 74,
            "name": "I2C2_ER_IRQHandler"
          },
          {
            "number": 75,
            "name": "SPI1_IRQHandler"
          },
          {
            "number": 76,
            "name": "SPI2_IRQHandler"
          },
          {
            "number": 77,
            "name": "USART1_IRQHandler"
          },
          {
            "number": 78,
            "name": "USART2_IRQHandler"
          },
          {
            "number": 79,
            "name": "USART3_IRQHandler"
          },
          {
            "number": 80,
            "name": "UART4_IRQHandler"
          },
          {
            "number": 81,
            "name": "UART5_IRQHandler"
          },
          {
            "number": 82,
            "name": "LPUART1_IRQHandler"
          },
          {
            "number": 83,
            "name": "LPTIM1_IRQHandler"
          },
          {
            "number": 84,
            "name": "LPTIM2_IRQHandler"
          },
          {
            "number": 85,
            "name": "TIM15_IRQHandler"
          },
          {
            "number": 86,
            "name": "TIM16_IRQHandler"
          },
          {
            "number": 87,
            "name": "TIM17_IRQHandler"
          },
          {
            "number": 88,
            "name": "COMP_IRQHandler"
          },
          {
            "number": 89,
            "name": "OTG_FS_IRQHandler"
          },
          {
            "number": 90,
            "name": "CRS_IRQHandler"
          },
          {
            "number": 91,
            "name": "FMC_IRQHandler"
          },
          {
            "number": 92,
            "name": "OCTOSPI1_IRQHandler"
          },
          {
            "number": 93,
            "name": "PWR_S3WU_IRQHandler"
          },
          {
            "number": 94,
            "name": "SDMMC1_IRQHandler"
          },
          {
            "number": 95,
            "name": "SDMMC2_IRQHandler"
          },
          {
            "number": 96,
            "name": "GPDMA1_CH8_IRQHandler"
          },
          {
            "number": 97,
            "name": "GPDMA1_CH9_IRQHandler"
          },
          {
            "number": 98,
            "name": "GPDMA1_CH10_IRQHandler"
          },
          {
            "number": 99,
            "name": "GPDMA1_CH11_IRQHandler"
          },
          {
            "number": 100,
            "name": "GPDMA1_CH12_IRQHandler"
          },
          {
            "number": 101,
            "name": "GPDMA1_CH13_IRQHandler"
          },
          {
            "number": 102,
            "name": "GPDMA1_CH14_IRQHandler"
          },
          {
            "number": 103,
            "name": "GPDMA1_CH15_IRQHandler"
          },
          {
            "number": 104,
            "name": "I2C3_EV_IRQHandler"
          },
          {
            "number": 105,
            "name": "I2C3_ER_IRQHandler"
          },
          {
            "number": 106,
            "name": "SAI1_IRQHandler"
          },
          {
            "number": 107,
            "name": "SAI2_IRQHandler"
          },
          {
            "number": 108,
            "name": "TSC_IRQHandler"
          },
          {
            "number": 110,
            "name": "RNG_IRQHandler"
          },
          {
            "number": 111,
            "name": "FPU_IRQHandler"
          },
          {
            "number": 112,
            "name": "HASH_IRQHandler"
          },
          {
            "number": 113,
            "name": "PKA_IRQHandler"
          },
          {
            "number": 114,
            "name": "LPTIM3_IRQHandler"
          },
          {
            "number": 115,
            "name": "SPI3_IRQHandler"
          },
          {
            "number": 116,
            "name": "I2C4_ER_IRQHandler"
          },
          {
            "number": 117,
            "name": "I2C4_EV_IRQHandler"
          },
          {
            "number": 118,
            "name": "MDF1_FLT0_IRQHandler"
          },
          {
            "number": 119,
            "name": "MDF1_FLT1_IRQHandler"
          },
          {
            "number": 120,
            "name": "MDF1_FLT2_IRQHandler"
          },
          {
            "number": 121,
            "name": "MDF1_FLT3_IRQHandler"
          },
          {
            "number": 122,
            "name": "UCPD1_IRQHandler"
          },
          {
            "number": 123,
            "name": "ICACHE_IRQHandler"
          },
          {
            "number": 124,
            "name": "OTFDEC1_IRQHandler"
          },
          {
            "number": 125,
            "name": "OTFDEC2_IRQHandler"
          },
          {
            "number": 126,
            "name": "LPTIM4_IRQHandler"
          },
          {
            "number": 127,
            "name": "DCACHE_IRQHandler"
          },
          {
            "number": 128,
            "name": "ADF1_FLT0_IRQHandler"
          },
          {
            "number": 129,
            "name": "ADC4_IRQHandler"
          },
          {
            "number": 130,
            "name": "LPDMA1_CH0_IRQHandler"
          },
          {
            "number": 131,
            "name": "LPDMA1_CH1_IRQHandler"
          },
          {
            "number": 132,
            "name": "LPDMA1_CH2_IRQHandler"
          },
          {
            "number": 133,
            "name": "LPDMA1_CH3_IRQHandler"
          },
          {
            "number": 134,
            "name": "DMA2D_IRQHandler"
          },
          {
            "number": 135,
            "name": "DCMI_IRQHandler"
          },
          {
            "number": 136,
            "name": "OCTOSPI2_IRQHandler"
          },
          {
            "number": 137,
            "name": "MDF1_FLT4_IRQHandler"
          },
          {
            "number": 138,
            "name": "MDF1_FLT5_IRQHandler"
          },
          {
            "number": 139,
            "name": "Cordic_IRQHandler"
          },
          {
            "number": 140,
            "name": "FMAC_IRQHandler"
          },
          {
            "number": 141,
            "name": "LSECSSD_IRQHandler"
          },
          {
            "number": 148,
            "name": "GPU2D_IRQ_IRQHandler"
          },
          {
            "number": 149,
            "name": "GPU2D_IRQSYS_IRQHandler"
          }
        ]
      }
    }
  }
}